<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on</title><link>https://jethughes.github.io/notes/</link><description>Recent content in Notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jethughes.github.io/notes/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://jethughes.github.io/notes/cheatsheets/bash-tricks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/cheatsheets/bash-tricks/</guid><description>#cheatsheet
**Busy waiting
1 2 3 while sleep 0.5; do //do something done</description></item><item><title/><link>https://jethughes.github.io/notes/Chocolate-sauce/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/Chocolate-sauce/</guid><description>Tbsp butter Tbsp cocoa Melt
Add water/milk Optional sugar</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/1/</guid><description>[[notes/daily-notes]]
2022-03-31 Never deny a diagnosis but do deny the negative verdict that may go with it. — Norman Cousins task e time r time 203 writeup 2hr 201 assignment 2hr 1 Todo&amp;rsquo;s 13:00 Info201 Lecture 2 Lecture/Labs 11:00 Cosc202 Lecture 12:00 Cosc201 Lab 16:00 Info201 Lecture 3 Assignments 5pm 1st April ⇒ cosc 201 assignment 1hr Question 1 45min Question 2 30min Question 3 5pm 1st April ⇒ info 203 assignment 2 120mins write up 3.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-07/</guid><description>[[notes/daily-notes]]
TODO mark off cosc202 lab cosc 202 lecture cosc 201 lab 201 lecture 3 cosc 202 lab book info 201 tiddlywiki</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-08/</guid><description>[[notes/daily-notes]]
TODO cosc 201 lecture info 203 lecture info 201 lecture 202 lab (help with grep for {) stocks notes review look at flats fixes for polish 2,4,5, fixes for polish 6 review 201 lecture notes cosc 202 lab book info 201 tiddlywiki</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-09/</guid><description>[[notes/daily-notes]]
TODO 203 Lecture module 08 swedish fix polishes fixes 7 8 10 14 203 tutorial 201 tutorial copy key post long point vids / send to leeto start cosc201 lab03 cosc 202 lab book info 201 tiddlywiki</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-10/</guid><description>[[notes/daily-notes]]
TODO copy key 3 examples for 203 assignment polish fixes 202 lecture cosc 201 lab info 201 lecture get out meat refactor 201 notes cosc 201 lecture cosc 202 lab book info 201 tiddlywiki</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-11/</guid><description>[[notes/daily-notes]]
2022-03-11 Todo&amp;rsquo;s work on norwegian modules or polish fixes 30 min typing 202 lab info 201 lecture info 201 lab Stocks Daily metrics typing time: 27</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-12/</guid><description>[[notes/daily-notes]]
2022-03-12 Todo&amp;rsquo;s &amp;hellip; Stocks brief notes
Daily metrics typing time:
typing avg:</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-14/</guid><description>[[notes/daily-notes]]
2022-03-14 Todo&amp;rsquo;s review notes from saturday sunday and toaday 202 lecture at 11:00 201 lab upload module 03 and fix 08 4th example for 203 What is Usability put hdmi cable back add git usage note start 201 assignment 1 watch 203 videos 1-2 Links cosc 202 lab book info 201 tiddlywiki !</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-15/</guid><description>[[notes/daily-notes]]
2022-03-15 Todo&amp;rsquo;s refactor git notes watch 203 videos call dad spending review 203 lecture 201 lecture info 201 lecture 202 lab norwegian modules review notes for today refactor 203 notes 201 lab part 1, 2 review dropping info 201/202 Daily Laws Mind &amp;lsquo;Cause all that&amp;rsquo;s gonna do really is accelerate the anxieties that I wish I could alleviate I&amp;rsquo;m ready to lose my mind, but instead I use my mind</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-16/</guid><description>[[notes/daily-notes]]
2022-03-16 Reminders investigate python position python ai weekly review Todo&amp;rsquo;s Norwegian 4 Lecture 203 tut 203 tut 201 review notes review dropping 201 spending review refactor 203 notes learn about heading links 203 assignment task e time r time no 4 2hrs 1hr40 review notes 0.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-17/</guid><description>[[notes/daily-notes]]
2022-03-17i Reminders investigate python position python ai weekly review my own password manager Todos 203 assignment 201 assignment typing norwegian 05, 06 lecture 202 lab cosc 201 lecture info 201 info201 lecture notes use case diagrams review notes task e time r time norwegian 05 04 2.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-18/</guid><description>[[notes/daily-notes]]
2022-03-18i Reminders python ai weekly review my own password manager Todo&amp;rsquo;s 203 assignment 201 assignment norwegian 05, 06 info201 lecture notes use case diagrams 202 brightness 202 add comments task e time r time 202 brightness 2hr 2hr 202 add comments 15min norwegian 4 5 6 7 4hr 201 lecture notes 1hr Daily Laws Mind &amp;lsquo;Cause all that&amp;rsquo;s gonna do really is accelerate the anxieties that I wish I could alleviate I&amp;rsquo;m ready to lose my mind, but instead I use my mind</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-19/</guid><description>[[notes/daily-notes]]
↑
2022-03-19 Reminders Todo&amp;rsquo;s task e time r time Daily Laws Mind &amp;lsquo;Cause all that&amp;rsquo;s gonna do really is accelerate the anxieties that I wish I could alleviate I&amp;rsquo;m ready to lose my mind, but instead I use my mind</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-20/</guid><description>[[notes/daily-notes]]
2022-03-20i Reminders Todo&amp;rsquo;s task e time r time Daily Laws Mind &amp;lsquo;Cause all that&amp;rsquo;s gonna do really is accelerate the anxieties that I wish I could alleviate I&amp;rsquo;m ready to lose my mind, but instead I use my mind</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-21/</guid><description>[[notes/daily-notes]]
2022-03-21 task e time r time info 201 assignment 1hr info 201 lab 1.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-22/</guid><description>[[notes/daily-notes]]
2022-03-22 task e time r time Lectures and labs 5hr 3hr Norwegian 13 14 2.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-23/</guid><description>[[notes/daily-notes]]
2022-03-23 But man is not made for defeat. A man can be destroyed but not defeated. — Ernest Hemingway task e time r time norwegian 17 16 2hr 1hr info 201 transc 30m 1.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-24/</guid><description>[[notes/daily-notes]]
2022-03-24 When deeds and words are in accord, the whole world is transformed. — Zhuang Zhou task e time r time Norwegian 15 01 2hr Functional reqs 3hr Non Functional reqs 2hr Review Notes 30m 1hr Todo&amp;rsquo;s Lecture/Labs 11:00 Cosc202 Lecture 12:00 Cosc201 Lab 16:00 Info201 Lecture Assignments 5pm 1st April ⇒ cosc 201 assignment 60mins write up 5pm 25th March ⇒ info 201 milestone 1 120mins functional requirements 30mins non functional requirements 15mins glossary 30mins follow-up checklist 5pm 1st April ⇒ info 203 assignment 2 Find group 30mins heuristic evaulations 120mins write up Cosc 202 tasks https://trello.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-25/</guid><description>[[notes/daily-notes]]
2022-03-25 He who has imagination without learning has wings but no feet. — Joseph Joubert task e time r time Review notes 15m 15min 1 Todo&amp;rsquo;s 11:00 Cosc202 Lecture (debugging) 12:00 Cosc201 Lab 16:00 Info201 Lecture (advanced data modelling - patterns) 2 Lecture/Labs 09:00 Cosc202 Lab 11:00 Cosc201 Lecture (mergesort 2) 12:00 Info201 Lab (use case diagrams) 3 Assignments 5pm 1st April ⇒ cosc 201 assignment 60mins write up 5pm 25th March ⇒ info 201 milestone 1 120mins functional requirements 30mins non functional requirements 15mins glossary 30mins follow-up checklist 5pm 1st April ⇒ info 203 assignment 2 Find group 30mins heuristic evaulations 120mins write up 3.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-27/</guid><description>[[notes/daily-notes]]
2022-03-27 Be glad of life because it gives you the chance to love, to work, to play, and to look up at the stars.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-28/</guid><description>[[notes/daily-notes]]
2022-03-28 Everything that happens as it should, and if you observe carefully, you will find this to be so.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-29/</guid><description>[[notes/daily-notes]]
2022-03-29 Be as you wish to seem. — Socrates task e time r time past lectures 2h Norwegian 15 1.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-30/</guid><description>[[notes/daily-notes]]
2022-03-30 Get busy living or get busy dying. — Stephen King task e time r time norwegian 15 2hr 2hr review notes 5min Todo&amp;rsquo;s 12:00 Info201 Lab (use case diagrams) 11:00 Cosc201 Lecture 13:00 Info201 Lecture Lecture/Labs 10:00 Info203 Lecture 14:00 Info203 Tutorial 16:00 Cosc201 Tutorial Assignments 5pm 1st April ⇒ cosc 201 assignment 1hr Question 1 45min Question 2 30min Question 3 5pm 1st April ⇒ info 203 assignment 2 3hr heuristic evaluations ohyay discord 120mins write up Cosc 202 tasks https://trello.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-03-31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-03-31/</guid><description>[[notes/daily-notes]]
2022-03-31 If you think you can, you can. And if you think you can&amp;rsquo;t, you&amp;rsquo;re right. — Henry Ford task e time r time 1 Todo&amp;rsquo;s 13:00 Info201 Lecture 16:00 Cosc201 Tutorial 2 Lecture/Labs 11:00 Cosc202 Lecture 12:00 Cosc201 Lab 16:00 Info201 Lecture 3 Assignments 5pm 1st April ⇒ cosc 201 assignment 1hr Question 1 45min Question 2 30min Question 3 5pm 1st April ⇒ info 203 assignment 2 120mins write up 3.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-01/</guid><description>[[notes/daily-notes]]
2022-04-01 I will give you a definition of a proud man: he is a man who has neither vanity nor wisdom one filled with hatreds cannot be vain, neither can he be wise.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-02/</guid><description>[[notes/daily-notes]]
2022-04-02 We all live with the objective of being happy; our lives are all different and yet the same.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-03/</guid><description>[[notes/daily-notes]]
2022-04-03 I&amp;rsquo;m not interested in age. People who tell me their age are silly. You&amp;rsquo;re as old as you feel.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-04/</guid><description>[[notes/daily-notes]]
2022-04-04 If you light a lamp for somebody, it will also brighten your path. — Buddha task e time r time 1 Todo&amp;rsquo;s 2 Lecture/Labs 11:00 Cosc202 Lecture 12:00 Cosc201 lab 3 Assignments 3.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-05/</guid><description>[[notes/daily-notes]]
2022-04-05 If you smile when no one else is around, you really mean it. — Andy Rooney # task P A e time r time 2 201 Lecture 2 2 3 One no fix 1 1 Cosc 201 Lab 3 SCORE: 33%</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-06/</guid><description>[[notes/daily-notes]]
2022-04-06 Raw Power - The Stooges - spotify:album:6mxbG8KrOTZIxlP4gzaliM
# task P A e time r time 1 one norwegian fix 2 1hr 202 work 3 decide about 203 ass 4 5 6 7 8 SCORE:</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-07/</guid><description>[[notes/daily-notes]]
1 2022-04-07 Screamadelica - Primal Scream - spotify:album:3Kkocxhs4Ek537j67DFNd7
1.1 Todos 12:00 Cosc201 lab 12:00 Info201 Lab 11:00 Cosc201 Lecture 14:00 Info203 Tutorial 16:00 Cosc201 Tutorial Add review meta data to new vault inquire about dataview in quartz 1.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-08/</guid><description>[[notes/daily-notes]]
1 2022-04-08 Autobahn - Kraftwerk - spotify:album:0DzC0tyowMi2O9QfkDRvfJ
1.1 Todos Info201 Lab 05 info 201 lab 04 Cosc201 Lecture Cosc201 Tutorial inquire about dataview in quartz Cosc201 Lab Shuffle Assignment 3 Decide individual or not 1.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-09/</guid><description>[[notes/daily-notes]]
1 2022-04-09 Toys In The Attic - Aerosmith - spotify:album:36IxIOGEBAXVozDSiVs09B
1.1 Todos Cosc201 Lecture 11
Cosc201 Lecture 12</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-10/</guid><description>[[notes/daily-notes]]
2022-04-10 Bryter Layter - Nick Drake - spotify:album:7w9Og10Tdkh3nqrVD1D5IW
Todos info 201 lab 04 info 201 lab 06 Cosc201 Lab Shuffle work through 202 labs 04 05 06 Lecture/Labs Assignments Projects python ai weekly review my own password manager Timetable !</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-11/</guid><description>[[notes/daily-notes]]
2022-04-11 Layla And Other Assorted Love Songs - Derek &amp;amp; The Dominos - spotify:album:5iIWnMgvSM8uEBwXKsPcXM
Todos info 201 lab 04 info 201 lab 06 Cosc201 Lab Shuffle change testing of contrast and brightness andie work through 202 labs 04 05 06 Lecture/Labs 11:00 Cosc202 Lecture 12:00 Cosc201 lab Assignments Mobile app Brainstorming Projects python ai weekly review CI notes site my own password manager Timetable !</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-12/</guid><description>[[notes/daily-notes]]
2022-04-12 Synchronicity - The Police - spotify:album:28eOriEfl7IGbQDNvWIWXK
Todos remote desktop for IT work info 201 lab 04 info 201 lab 06 change testing of contrast and brightness andie upload 203 notes for disability services work through 202 labs 04 05 06 Lecture/Labs 10:00 Info203 Lecture 11:00 Cosc201 Lecture 13:00 Info201 Lecture 14:00 Cosc202 Lab Assignments Mobile app Brainstorming Projects python ai weekly review CI notes site my own password manager Timetable !</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-13/</guid><description>[[notes/daily-notes]]
2022-04-13 Listen Without Prejudice Vol. 1 - George Michael - spotify:album:4lGS8HxU3NYaQxfU0wx2r1
Todos remote desktop for IT work info 201 lab 04 info 201 lab 06 change testing of contrast and brightness andie work through 202 labs 04 05 06 Lecture/Labs 10:00 Info203 Lecture 14:00 Info203 Tutorial 16:00 Cosc201 Tutorial Assignments Mobile app Brainstorming Projects python ai weekly review CI notes site my own password manager Timetable !</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-14/</guid><description>[[notes/daily-notes]]
2022-04-14 Happy Sad - Tim Buckley - spotify:album:20CYfxjKvqXkCXBhAgOE39
Todos remote desktop for IT work info 201 lab 04 info 201 lab 06 change testing of contrast and brightness andie work through 202 labs 04 05 06 14:00 Info203 Tutorial 16:00 Cosc201 Tutorial Lecture/Labs 11:00 Cosc202 Lecture 12:00 Cosc201 Lab 16:00 Info201 Lecture Assignments Mobile app Brainstorming Projects python ai weekly review CI notes site my own password manager Timetable !</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-15/</guid><description>[[notes/daily-notes]]
2022-04-15 Smile - Brian Wilson - spotify:album:4Uc6YCjpfyjj02rZfg2EUv
Todos remote desktop for IT work info 201 lab 04 info 201 lab 06 change testing of contrast and brightness andie work through 202 labs 04 05 06 14:00 Info203 Tutorial 16:00 Cosc201 Tutorial 11:00 Cosc202 Lecture 12:00 Cosc201 Lab 16:00 Info201 Lecture Lecture/Labs Assignments Mobile app Brainstorming Projects python ai weekly review CI notes site my own password manager Timetable !</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-16/</guid><description>[[notes/daily-notes]]
2022-04-16 No Sleep &amp;lsquo;Til Hammersmith (Live) - Mot�rhead - spotify:album:6DJEPyUk9Vqvq5Rh8HD7D8
Todos remote desktop for IT work info 201 lab 04 info 201 lab 06 change testing of contrast and brightness andie work through 202 labs 04 05 06 14:00 Info203 Tutorial 16:00 Cosc201 Tutorial 11:00 Cosc202 Lecture 12:00 Cosc201 Lab 16:00 Info201 Lecture Lecture/Labs Assignments Mobile app Brainstorming Projects python ai weekly review CI notes site my own password manager Timetable !</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-18/</guid><description>[[notes/daily-notes]]
2022-04-18 Tonight&amp;rsquo;s The Night - Neil Young - spotify:album:5FTx6W84UUU14n29QV4saY
Todos remote desktop for IT work info 201 lab 04 info 201 lab 06 change testing of contrast and brightness andie work through 202 labs 04 05 06 14:00 Info203 Tutorial 16:00 Cosc201 Tutorial 11:00 Cosc202 Lecture 12:00 Cosc201 Lab 16:00 Info201 Lecture Lecture/Labs 11:00 Cosc202 Lecture 12:00 Cosc201 lab Assignments Mobile app Brainstorming Projects bug-tracker Timetable !</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-19/</guid><description>2022-04-18 &amp;laquo; [[notes/daily-notes]] &amp;raquo; 2022-04-20
2022-04-19 Giant Steps - The Boo Radleys - spotify:album:6347aGYak5Dsi0hwPMMpmj
Todos info 201 lab 04 info 201 lab 06 work through 202 labs 04 05 06 16:00 Cosc201 Tutorial Lecture/Labs Assignments Mobile app Brainstorming Projects python ai weekly review CI notes site my own password manager Timetable !</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-20/</guid><description>2022-04-19 &amp;laquo; [[notes/daily-notes]] &amp;raquo; 2022-04-21
2022-04-20 Giant Steps - The Boo Radleys - spotify:album:6347aGYak5Dsi0hwPMMpmj
Todos info 201 lab 04 info 201 lab 06 work through 202 labs 04 05 06 16:00 Cosc201 Tutorial Lecture/Labs Assignments Mobile app Brainstorming Projects python ai weekly review CI notes site my own password manager Timetable !</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-21/</guid><description>t&amp;laquo; daily-notes &amp;raquo; 2022-04-24
23-04-22 John Barleycorn Must Die - Traffic - spotify:album:2TjodugH6rA5ZHPsWVErmw
Todos Lecture/Labs Assignments Mobile app Brainstorming Projects python ai weekly review CI notes site my own password manager Timetable Links cosc 202 lab book</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-23/</guid><description>t&amp;laquo; daily-notes &amp;raquo; 2022-04-24
2022-04-23 Todos Lecture/Labs Assignments Mobile app Brainstorming Projects python ai weekly review CI notes site my own password manager Timetable !</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-24/</guid><description>t &amp;laquo; daily-notes &amp;raquo; 2022-04-24
23-04-22 John Barleycorn Must Die - Traffic - spotify:album:2TjodugH6rA5ZHPsWVErmw
Todos Lecture/Labs Assignments Mobile app Brainstorming Projects python ai weekly review CI notes site my own password manager Timetable Links cosc 202 lab book</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-25/</guid><description>2022-04-25 &amp;laquo; daily-notes &amp;raquo; 2022-04-27
26-04-22 Selected Ambient Works 85-92 - Aphex Twin - spotify:album:7aNclGRxTysfh6z0d8671k
Todos Lecture/Labs 10:00 Info203 Lecture 11:00 Cosc201 Lecture 13:00 Info201 Lecture 14:00 Cosc202 Lab Assignments Mobile app Brainstorming Projects python ai weekly review CI notes site my own password manager Links cosc 202 lab book</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-26/</guid><description>2022-04-24 &amp;laquo; daily-notes &amp;raquo; 2022-04-27
26-04-22 Selected Ambient Works 85-92 - Aphex Twin - spotify:album:7aNclGRxTysfh6z0d8671k
Todos book (or not) flights for holiday watch 203 videos Plan Lecture/Labs 10:00 Info203 Lecture 11:00 Cosc201 Lecture 13:00 Info201 Lecture 14:00 Cosc202 Lab Assignments Mobile app Brainstorming Projects python ai weekly review CI notes site my own password manager Links cosc 202 lab book</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-27/</guid><description>2022-04-26 &amp;laquo; daily-notes &amp;raquo; 2022-04-28
27-04-22 Cee-Lo Green&amp;hellip; Is The Soul Machine - Cee Lo Green - spotify:album:0wdleLMeNmGUHChsmx9svt</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-28/</guid><description>2022-04-27 &amp;laquo; daily-notes &amp;raquo; 2022-04-29
28-04-22 Dr. Octagonecologyst - Dr. Octagon - spotify:album:23DJ3KNE5JXi61G31T2Kni
Todos 14:00 Cosc202 Lab use 1001 albums api Lecture/Labs 11:00 Cosc202 Lecture 12:00 Cosc201 Lab 16:00 Info201 Lecture Assignments Mobile app Brainstorming Projects python ai weekly review Links cosc 202 lab book</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-29/</guid><description>2022-04-28 &amp;laquo; daily-notes &amp;raquo; 2022-04-30
29-04-22 A Hard Day&amp;rsquo;s Night - Beatles - spotify:album:6wCttLq0ADzkPgtRnUihLV
Todos 14:00 Cosc202 Lab use 1001 albums api Lecture/Labs 09:00 Cosc202 Lab 11:00 Cosc201 Lecture 12:00 Info201 Lab Assignments Mobile app Brainstorming Projects python ai weekly review Links cosc 202 lab book</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-04-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-04-30/</guid><description>2022-04-29 &amp;laquo; daily-notes &amp;raquo; 2022-05-01
30-04-22 american dream - LCD Soundsystem - spotify:album:4AF1M7bGCFL3LHCtXUUXw5
Todos 14:00 Cosc202 Lab use 1001 albums api 09:00 Cosc202 Lab 11:00 Cosc201 Lecture 12:00 Info201 Lab Lecture/Labs Assignments Mobile app Brainstorming Projects python ai weekly review Links cosc 202 lab book</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-01/</guid><description> 2022-05-08 &amp;laquo; daily-notes &amp;raquo; 2022-05-10
01-05-22</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-02/</guid><description>2022-05-01 &amp;laquo; daily-notes &amp;raquo; 2022-05-03
02-05-22 Who&amp;rsquo;s Next - The Who - spotify:album:5MqyhhHbT13zsloD3uHhlQ
Todos use 1001 albums api 11:00 Cosc201 Lecture 12:00 Info201 Lab 8 Lecture/Labs 11:00 Cosc202 Lecture 12:00 Cosc201 lab Assignments Mobile app Brainstorming Projects python ai weekly review Links cosc 202 lab book</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-03/</guid><description>2022-05-02 &amp;laquo; daily-notes &amp;raquo; 2022-05-04
03-05-22 Led Zeppelin III - Led Zeppelin - spotify:album:6P5QHz4XtxOmS5EuiGIPut
Todos use 1001 albums api 11:00 Cosc201 Lecture 12:00 Info201 Lab 8 Lecture/Labs 10:00 Info203 Lecture 11:00 Cosc201 Lecture 13:00 Info201 Lecture 14:00 Cosc202 Lab Assignments Mobile app Brainstorming Projects python ai weekly review Links cosc 202 lab book</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-04/</guid><description>2022-05-03 &amp;laquo; daily-notes &amp;raquo; 2022-05-05
04-05-22 Meat Is Murder - The Smiths - spotify:album:5DM1qCdgGt2zbknnsVn1Ca
Todos use 1001 albums api 11:00 Cosc201 Lecture 12:00 Info201 Lab 8 13:00 Info201 Lecture Lecture/Labs 10:00 Info203 Lecture 14:00 Info203 Tutorial 16:00 Cosc201 Tutorial Assignments Mobile app Brainstorming Projects python ai weekly review Links cosc 202 lab book</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-05/</guid><description>2022-05-04 &amp;laquo; daily-notes &amp;raquo; 2022-05-06
05-05-22 The Notorious Byrd Brothers - The Byrds - spotify:album:5UI2X5VAmgu9xrlXDd5U7B
Todos use 1001 albums api 11:00 Cosc201 Lecture 12:00 Info201 Lab 8 13:00 Info201 Lecture Lecture/Labs 11:00 Cosc202 Lecture 12:00 Cosc201 Lab 12:00 Info203 Tutorial 16:00 Info201 Lecture Assignments Mobile app Brainstorming Projects python ai weekly review Links cosc 202 lab book</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-06/</guid><description> 2022-05-05 &amp;laquo; daily-notes &amp;raquo; 2022-05-07
06-05-22 Planet Rock: The Album - Afrika Bambaataa
Todos use 1001 albums api 11:00 Cosc201 Lecture 12:00 Info201 Lab 8 13:00 Info201 Lecture 16:00 Info201 Lecture info 202 api&amp;rsquo;s lecture Lecture/Labs 09:00 Cosc202 Lab 7yhbn ,9 11:00 Cosc201 Lecture 12:00 Info201 Lab Projects python ai weekly review spotify clone Links 202 lab book i201 cousework i201 Assignments</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-07/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-07/</guid><description> 2022-05-06 &amp;laquo; daily-notes &amp;raquo; 2022-05-08
07-05-22 Pump - Aerosmith - spotify:album:4VWobt8JHr24Gq2qUZK7DB
Todos use 1001 albums api 11:00 Cosc201 Lecture 12:00 Info201 Lab 8 13:00 Info201 Lecture 16:00 Info201 Lecture info 202 api&amp;rsquo;s lecture 09:00 Cosc202 Lab 7 11:00 Cosc201 Lecture Lecture/Labs Projects python ai weekly review spotify clone Links 202 lab book i201 cousework i201 Assignments</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-08/</guid><description> 2022-05-07 &amp;laquo; daily-notes &amp;raquo; 2022-05-09
08-05-22 Pump - Aerosmith Hey! No running in the back-arc basin!
Todos use 1001 albums api 11:00 Cosc201 Lecture 12:00 Info201 Lab 8 Info201 Lecture 14 Info201 Lecture 18 info 202 api&amp;rsquo;s lecture 11:00 Cosc201 18 Lecture/Labs Projects python ai weekly review spotify clone Links 202 lab book i201 cousework i201 Assignments</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-09/</guid><description> 2022-05-08 &amp;laquo; daily-notes &amp;raquo; 2022-05-10
09-05-22 Dog Man Star - Suede Todos 12:00 Info201 Lab 8 Info201 Lecture 14 Info201 Lecture 18 info 202 api&amp;rsquo;s lecture 11:00 Cosc201 18 Lecture/Labs 11:00 Cosc202 Lecture 12:00 Cosc201 lab Projects python ai weekly review spotify clone Links 202 lab book i201 cousework i201 Assignments</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-10/</guid><description> 2022-05-09 &amp;laquo; daily-notes &amp;raquo; 2022-05-11
10-05-22 The Modern Lovers - The Modern Lovers Todos 12:00 Info201 Lab 8 Info201 Lecture 14 Info201 Lecture 18 info 202 api&amp;rsquo;s lecture 11:00 Cosc202 Lecture 12:00 Cosc201 lab Lecture/Labs 10:00 Info203 Lecture 11:00 Cosc201 Lecture 13:00 Info201 Lecture 14:00 Cosc202 Lab Projects python ai weekly review spotify clone Links 202 lab book i201 cousework i201 Assignments</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-11/</guid><description> 2022-05-10 &amp;laquo; daily-notes &amp;raquo; 2022-05-12
11-05-22 Rising Above Bedlam - Jah Wobble&amp;rsquo;s Invaders Of The Heart Todos 12:00 Info201 Lab 8 Info201 Lecture 14 Info201 Lecture 18 info 202 api&amp;rsquo;s lecture 11:00 Cosc202 Lecture 12:00 Cosc201 lab 10:00 Info203 Lecture 13:00 Info201 Lecture 14:00 Cosc202 Lab Lecture/Labs 10:00 Info203 Lecture 16:00 Cosc201 Tutorial Projects python ai weekly review spotify clone Links 202 lab book i201 cousework i201 Assignments</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-12/</guid><description> 2022-05-11 &amp;laquo; daily-notes &amp;raquo; 2022-05-13
12-05-22 Darklands - The Jesus And Mary Chain Todos 12:00 Info201 Lab 8 Info201 Lecture 14 Info201 Lecture 18 info 202 api&amp;rsquo;s lecture 11:00 Cosc202 Lecture 12:00 Cosc201 lab 10:00 Info203 Lecture 13:00 Info201 Lecture 14:00 Cosc202 Lab 10:00 Info203 Lecture 16:00 Cosc201 Tutorial Lecture/Labs 11:00 Cosc202 Lecture 12:00 Cosc201 Lab 12:00 Info203 Tutorial 16:00 Info201 Lecture Projects python ai weekly review spotify clone Links 202 lab book i201 cousework i201 Assignments</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-13/</guid><description> 2022-05-12 &amp;laquo; daily-notes &amp;raquo; 2022-05-14
13-05-22 Darkness on the Edge of Town - Bruce Springsteen Todos Cosc201 lab Cosc201 Lab Info203 Lecture Info203 Lecture Info201 Lab 8 Info201 Lecture Info201 Lecture 14 Info201 Lecture Cosc202 Lecture cosc 202 api&amp;rsquo;s lecture Cosc202 Lecture Lecture/Labs 09:00 Cosc202 Lab 11:00 Cosc201 Lecture 12:00 Info201 Lab Projects python ai weekly review spotify clone Links 202 lab book i201 cousework i201 Assignments</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-14/</guid><description> 2022-05-13 &amp;laquo; daily-notes &amp;raquo; 2022-05-15
14-05-22 The Who Sell Out - The Who Todos Cosc201 lab Cosc201 Lab Info203 Lecture Info203 Lecture Info201 Lab 8 Info201 Lecture Info201 Lecture 14 Info201 Lecture cosc 202 api&amp;rsquo;s lecture Cosc202 Lecture 11:00 Cosc201 Lecture 12:00 Info201 Lab Lecture/Labs Projects python ai weekly review spotify clone Links 202 lab book i201 cousework i201 Assignments</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-15/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-15/</guid><description> 2022-05-14 &amp;laquo; daily-notes &amp;raquo; 2022-05-16
15-05-22 Rust Never Sleeps - Neil Young &amp;amp; Crazy Horse Todos Cosc201 lab Cosc201 Lab Info203 Lecture Info203 Lecture Info201 Lab 8 Info201 Lecture Info201 Lecture 14 Info201 Lecture cosc 202 api&amp;rsquo;s lecture Cosc202 Lecture 11:00 Cosc201 Lecture 12:00 Info201 Lab Lecture/Labs Projects python ai weekly review spotify clone Links 202 lab book i201 cousework i201 Assignments</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-16/</guid><description>2022-05-15 &amp;laquo; daily-notes &amp;raquo; 2022-05-17
16-05-22 The Specials - The Specials Today Cosc201 lab 11 11:00 Cosc201 Lecture graphs Info201 Lab 9 Info201 Lab 8 Info201 Lecture 19 sql part 2 Info203 Lecture Info203 Lecture 1hr 203 work 100%</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-17/</guid><description> 2022-05-16 &amp;laquo; daily-notes &amp;raquo; 2022-05-18
17-05-22 Black Sabbath - Black Sabbath Today 10:00 Info203 Lecture 1hr ass work 11:00 Cosc201 Lecture Cosc201 Lab 12 Info201 Lecture 20 database Info201 Lab 10 Cosc202 Lecture some 202 work Review 1 list from #lecture where sr-due = date(today) Backlog 13:00 Info201 Lecture 14:00 Cosc202 Lab Info201 Lab 3 Info201 Lab 4 Info201 Lab 7 Info201 Lab 11 Info201 Lecture 14 activity and state diagrams Cosc 202 api&amp;rsquo;s lecture Cosc202 Lab 19 Cosc201 lab 13 Projects python ai weekly review spotify clone Links 202 lab book i201 cousework i201 Assignments</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-18/</guid><description> 2022-05-17 &amp;laquo; daily-notes &amp;raquo; 2022-05-19
18-05-22 Floodland - Sisters Of Mercy Today 10:00 Info203 Lecture 10:00 Info203 Lectur vc dbe Cosc201 Lecture Cosc 202 api&amp;rsquo;s lecture Info201 Lab 3 1hr ass work review today review extra Review 1 list from #lecture where sr-due = date(today) Backlog Cosc201 Lab 12 Cosc201 lab 13 13:00 Info201 Lecture Info201 Lab 4 Info201 Lab 7 Info201 Lab 11 Info201 Lecture 14 activity and state diagrams 14:00 Cosc202 Lab Cosc202 Lab 19 Projects python ai weekly review spotify clone weather api in daily note drop shipping site Links 202 lab book i201 cousework i201 Assignments</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-19/</guid><description> 2022-05-18 &amp;laquo; daily-notes &amp;raquo; 2022-05-20
19-05-22 New York Dolls - New York Dolls Today 11:00 Cosc202 Lecture 12:00 Cosc201 Lab Info201 Lecture 21 Cosc 202 api&amp;rsquo;s lecture Info201 Lab 4 review 202 work 10:00 Info203 Lecture 2 hr ass work Review 1 list from #lecture where sr-due = date(today) Backlog Info203 Lectures x2 Info201 Lecture 22 Cosc201 Lab 12 Info201 Lab 7 Info201 Lecture 14 activity and state diagrams Cosc202 Lab 19 Projects python ai weekly review spotify clone Links 202 lab book i201 cousework i201 Assignments</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-20/</guid><description>2022-05-19 &amp;laquo; daily-notes &amp;raquo; 2022-05-21
20-05-22 Highway to Hell - AC/DC AAPL : 137.44 SP500 : 3900.79 TSLA : 709.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-21/</guid><description>2022-05-20 &amp;laquo; daily-notes &amp;raquo; 2022-05-22
21-05-22 The Age Of The Understatement - The Last Shadow Puppets AAPL : 137.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-22/</guid><description>2022-05-21 &amp;laquo; daily-notes &amp;raquo; 2022-05-23
22-05-22 - AAPL : 137.59 SP500 : 3901.36 TSLA : 663.9</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-23/</guid><description>2022-05-22 &amp;laquo; daily-notes &amp;raquo; 2022-05-24
23-05-22 Q: Are We Not Men? A: We Are Devo - Devo AAPL : 137.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-24/</guid><description>2022-05-23 &amp;laquo; daily-notes &amp;raquo; 2022-05-25
24-05-22 Q: Are We Not Men? A: We Are Devo - Devo AAPL : 143.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-25/</guid><description>2022-05-24 &amp;laquo; daily-notes &amp;raquo; 2022-05-26
25-05-22 Playing With Fire - Spacemen 3 AAPL : 140.48 SP500 : 3941.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-26/</guid><description>2022-05-25 &amp;laquo; daily-notes &amp;raquo; 2022-05-27
26-05-22 Sweet Baby James - James Taylor AAPL : 140.38 SP500 : 3978.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-27/</guid><description>2022-05-26 &amp;laquo; daily-notes &amp;raquo; 2022-05-28
27-05-22 Exile On Main Street - The Rolling Stones AAPL : 143.75 SP500 : 4057.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-29/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-29/</guid><description>2022-05-28 &amp;laquo; daily-notes &amp;raquo; 2022-05-30
29-05-22 Mermaid Avenue - Billy Bragg AAPL : 149.61 SP500 : 4158.24 TSLA : 759.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-30/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-30/</guid><description>2022-05-29 &amp;laquo; daily-notes &amp;raquo; 2022-05-31
30-05-22 Selling England By The Pound - Genesis AAPL : 149.61 SP500 : 4158.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-05-31/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-05-31/</guid><description>2022-05-30 &amp;laquo; daily-notes &amp;raquo; 2022-06-01
31-05-22 Eagles - Eagles AAPL : 149.61 SP500 : 4158.24 TSLA : 759.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-06-01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-06-01/</guid><description>2022-05-31 &amp;laquo; daily-notes &amp;raquo; 2022-06-02
01-06-22 New Wave - The Auteurs AAPL : 149.61 SP500 : 4132.15 TSLA : 758.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-06-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-06-02/</guid><description>2022-06-01 &amp;laquo; daily-notes &amp;raquo; 2022-06-03
02-06-22 Pink Moon - Nick Drake AAPL : 149.61 SP500 : 4101.23 TSLA : 740.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-06-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-06-03/</guid><description>2022-06-02 &amp;laquo; daily-notes &amp;raquo; 2022-06-04
03-06-22 Here Are the Sonics - The Sonics AAPL : 149.61 SP500 : 4176.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-06-05/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-06-05/</guid><description>2022-06-04 &amp;laquo; daily-notes &amp;raquo; 2022-06-06
05-06-22 All That You Can&amp;rsquo;t Leave Behind - U2 AAPL : 149.61 SP500 : 4108.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-06-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-06-08/</guid><description>2022-06-07 &amp;laquo; daily-notes &amp;raquo; 2022-06-09
08-06-22 Little Earthquakes - Tori Amos AAPL : 148.62 SP500 : 4160.68 TSLA : 716.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-06-09/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-06-09/</guid><description>2022-06-08 &amp;laquo; daily-notes &amp;raquo; 2022-06-10
09-06-22 Little Earthquakes - Tori Amos AAPL : 147.95 SP500 : 4115.77 TSLA : 725.</description></item><item><title/><link>https://jethughes.github.io/notes/daily_notes/2022-06-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/daily_notes/2022-06-10/</guid><description>2022-06-09 &amp;laquo; daily-notes &amp;raquo; 2022-06-11
10-06-22 Bad Company - Bad Company AAPL : 142.67 SP500 : 4017.82 TSLA : 719.</description></item><item><title/><link>https://jethughes.github.io/notes/notes/2022-10-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/2022-10-16/</guid><description>2022-10-15 &amp;laquo; daily-notes &amp;raquo; 2022-10-17
16-10-22 &amp;ldquo;Sorry, doctor, I&amp;rsquo;m going to have to come in on a different day&amp;ndash;I have another appointment that would be really hard to move, in terms of the kinetic energy requirements.</description></item><item><title/><link>https://jethughes.github.io/notes/notes/ass03-security-flaws-essay/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/ass03-security-flaws-essay/</guid><description>Security Flaws Essay Jet Hughes 9474308
The Articles Mat Honan - Wired 2012 This article 1, written by Mat Honan for Wired magazine in 2012, gives a detailed account of how Honan&amp;rsquo;s digital life was torn apart.</description></item><item><title/><link>https://jethughes.github.io/notes/notes/brainstorming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/brainstorming/</guid><description>#info203
Concept 1 - Snowboard trick generator. This will be a mobile app that snowboarders can use to automatically generate random tricks.</description></item><item><title/><link>https://jethughes.github.io/notes/notes/ethics-essay/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/ethics-essay/</guid><description>Misinformation and the Wellington Protests Jet Hughes 9474308
Intro As members of society, we must consider the ethical implications of our actions and inactions.</description></item><item><title/><link>https://jethughes.github.io/notes/notes/hypotheticals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/hypotheticals/</guid><description>title: &amp;ldquo;hypotheticals&amp;rdquo; aliases: tags:
Is it immoral to keep free will from people if you had the power to grant it.</description></item><item><title/><link>https://jethughes.github.io/notes/notes/idea/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/idea/</guid><description>#info203
Snowboard coaching app goals daily/manual/weekly trick generator Album of the day generator from besteveralbums.</description></item><item><title/><link>https://jethughes.github.io/notes/notes/inital-ui-designs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/inital-ui-designs/</guid><description> mobile-app-ass-03
Core features
Customisable Generator Daily Trick Link with friends</description></item><item><title/><link>https://jethughes.github.io/notes/notes/initial-ideas-mind-map/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/initial-ideas-mind-map/</guid><description>map customisable trick generator trick lists &amp;ndash;&amp;gt; users can create lists for the generator to choose a trick from some built in lists share lists with friends options trick types jump rail pipe butters flips spins grabs spin direction bring back or not stance regular goofy daily trick same for all users?</description></item><item><title/><link>https://jethughes.github.io/notes/notes/reflective-statement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/reflective-statement/</guid><description>COSC202 Reflective Statement - Jet Hughes 9474308 Intro I was honestly not expecting this paper to be as interesting as it was.</description></item><item><title/><link>https://jethughes.github.io/notes/notes/renter-cover-letter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/renter-cover-letter/</guid><description>To whom it may concern,
My name is Jet Hughes and I have a keen interest in renting the apartment you have available at 128 Forth St.</description></item><item><title/><link>https://jethughes.github.io/notes/notes/veracity-week01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/veracity-week01/</guid><description>15/11 where to start? pretty overwhelmed with this whole blockchain thing. Not really sure where this project is going. At the moment what I understand is that I&amp;rsquo;m looking to a more open version of a closed blockchain.</description></item><item><title/><link>https://jethughes.github.io/notes/notes/veracity-week02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/veracity-week02/</guid><description>21/11 On friday I tried to get haydens hypderledge iroha code from last year to work here and here. I was unable to.</description></item><item><title/><link>https://jethughes.github.io/notes/notes/veracity-week03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/veracity-week03/</guid><description>28/11 Week Review.
Got four hypderleger iroha nodes working, and connected to them from a python script I wasn&amp;rsquo;t able to get the SWIPL notebook to work.</description></item><item><title/><link>https://jethughes.github.io/notes/notes/veracity-week04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/veracity-week04/</guid><description>5/12 Week Review
Got the prolog notebook to work. Read some interesting papers, tethering to public chain, reciprocal hyribd on/off chain governance thought about some scenarios kick out participant add new participant mistakently add senstitive data to chain one participant finds a security bug This week</description></item><item><title/><link>https://jethughes.github.io/notes/shirt-ideas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/shirt-ideas/</guid><description>Skaters just want to be held
NOMFP</description></item><item><title/><link>https://jethughes.github.io/notes/Shopping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/Shopping/</guid><description>Indian Pork chops Pork noodles
Rice Milk Chips Tomatoes Tim plus fresh Mushroom
Sun, venison pasta Mon chops Tue nachos Wed pork noodle Thur sausages Fri curry</description></item><item><title>01-basic-html</title><link>https://jethughes.github.io/notes/notes/01-basic-html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/01-basic-html/</guid><description>slides
html
3 Main parts
html - structure css - styles javascript - interactivity HTML Element:</description></item><item><title>01-bits-and-bytes</title><link>https://jethughes.github.io/notes/notes/01-bits-and-bytes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/01-bits-and-bytes/</guid><description>memory unicode characters digital-data
What is data A fact — a piece of information corresponds to discreete facts about phenomena from which we gain information abou the world The concept of a value is fundamental to data e.</description></item><item><title>01-information-assurance</title><link>https://jethughes.github.io/notes/notes/01-information-assurance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/01-information-assurance/</guid><description>information-security mccumber-cube access-security-tradeoff cia-triad In the news Axie hack Why info sec more interconnected more exposure software devs need to know about security often security is an afterthought this is bad IS proatects the ability of an organisation to function also protects reputation What is security protecting assets from harm or damage related concepts nation security (political security) safety (health) environmental security (clean environement) information security economic security (stability of ecomony) What is information secuity focus of protecting information assets data, systems, equipment, infrastructure intentional and accidental risks &amp;ldquo;The preservation of confidentiality, integrity and availability of information; in addition, other properties such as authenticity, accountability, non-repudiation and reliability can also be involved.</description></item><item><title>02-basic-css</title><link>https://jethughes.github.io/notes/notes/02-basic-css/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/02-basic-css/</guid><description> slides</description></item><item><title>02-combinatorial-logic</title><link>https://jethughes.github.io/notes/notes/02-combinatorial-logic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/02-combinatorial-logic/</guid><description>slides
transistors
combinatorial-logic
boolean-equations
logic-gates</description></item><item><title>02-concepts-and-roles</title><link>https://jethughes.github.io/notes/notes/02-concepts-and-roles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/02-concepts-and-roles/</guid><description>slides News more personal email scams They have more knowledge about your personal information deakin university attack staff credentials were leaked and acces to students information was gathered rusian hackers attack lithuania attacks against india retbleed attack affects AMD and Intel CPUs (spectre-based speculative-execution attacks) Vulnerabilities a potential weakness in an asset or in its defense security control e.</description></item><item><title>02-nietzsche-wilil-to-power</title><link>https://jethughes.github.io/notes/notes/091-nietzsche-wilil-to-power/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/091-nietzsche-wilil-to-power/</guid><description>Why do we do things: usually to be happy. some might say — no i life my life to serve i sacrifice i volunteer etc — but this still on some level, brings them happiness.</description></item><item><title>02-version-control-system</title><link>https://jethughes.github.io/notes/notes/02-version-control-system/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/02-version-control-system/</guid><description>git
VCS</description></item><item><title>03-agile-methodologies</title><link>https://jethughes.github.io/notes/notes/03-agile-methodologies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/03-agile-methodologies/</guid><description>guilding philosphy to develop info systems in unkown, rapidly changing evnironments
&amp;ldquo;Chaordic&amp;rdquo;
The agile manifesto
1 scrum Development is split into many short (~30 day) &amp;ldquo;sprints&amp;rdquo; of intense focus where the entire team is involved</description></item><item><title>03-more-css</title><link>https://jethughes.github.io/notes/notes/03-more-css/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/03-more-css/</guid><description>slides</description></item><item><title>03-sequential-logic-circuits</title><link>https://jethughes.github.io/notes/notes/03-sequential-logic-circuits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/03-sequential-logic-circuits/</guid><description>comb log. circuits always produce the same output with the same inputs
Sequential logic circuit output depends not only on the inputs but also past history (memory)</description></item><item><title>03-threats-social-engineering-and-failures</title><link>https://jethughes.github.io/notes/notes/03-threats-social-engineering-and-failures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/03-threats-social-engineering-and-failures/</guid><description>News kiwis urged to get new passwords by government cybersecurity agency (&amp;ldquo;big password energy&amp;rdquo;) ukraine cyber agency reports cyber attack surge plymouth households hit by clarion housing cyber attack facebook &amp;ldquo;unintentionally uploaded&amp;rdquo; 1.</description></item><item><title>04-authentication-authorisation-passwords</title><link>https://jethughes.github.io/notes/notes/04-authentication-authorisation-passwords/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/04-authentication-authorisation-passwords/</guid><description>authorisation authentication passwords Authentication proof of identity need to be sure a user is who they say they are before you can trust them usually done via a unique identifier unique username and a secret that is only known by the authorised user password biometrics 2fa code MFA many secrets protects user/system in the case that a password is disclosed additional secrets generated at the time of use.</description></item><item><title>04-computer-architecture</title><link>https://jethughes.github.io/notes/notes/04-computer-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/04-computer-architecture/</guid><description>memory
control-unit
bus
CPU
ALU</description></item><item><title>04-evaluation-methods-birth-of-hci</title><link>https://jethughes.github.io/notes/notes/04-evaluation-methods-birth-of-hci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/04-evaluation-methods-birth-of-hci/</guid><description>evaluating-designs birth-of-hci Possible exam questions
Define User Experience! Difference User Experience - Usability Describe applications where the subject’s satisfaction is of less importance than effectiveness and efficiency Compare the advantages and disadvantages of a laboratory based and a field based evaluation of a user interface?</description></item><item><title>04-requirements</title><link>https://jethughes.github.io/notes/notes/04-requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/04-requirements/</guid><description>requirements</description></item><item><title>040-superstition</title><link>https://jethughes.github.io/notes/notes/040-superstition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/040-superstition/</guid><description>&amp;ldquo;falsely attributing somet cause to some affect&amp;rdquo;
e.g., apple is preventing me from going to doctor
more common than commonly thought</description></item><item><title>05-6809-assembly</title><link>https://jethughes.github.io/notes/notes/05-6809-assembly/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/05-6809-assembly/</guid><description>6809 Warnings different CPU architectures have their own machine codes and their own assembly languages assembly language programs are not portable across CPU architectures (e.</description></item><item><title>05-cryptography</title><link>https://jethughes.github.io/notes/notes/05-cryptography/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/05-cryptography/</guid><description>news zodiac killer code cracked twitter leak Brief history study of secret messages confidentiality of cia-triad also small role in integrity (authentication of message, and sender) history of cyprtopgraphy is interwined with information technology Language use for communication seems to be part of human nature: perhaps the use of covert lanuage is too</description></item><item><title>05-javascript</title><link>https://jethughes.github.io/notes/notes/05-javascript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/05-javascript/</guid><description>Javascript DOM JS can access and change all the elements of an HTML document When a webpage is loaded, the browser creates a DOM of the page The HTML DOM model is contructed as a tree of Objects JS can:</description></item><item><title>054-hume-on-art</title><link>https://jethughes.github.io/notes/notes/054-hume-on-art/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/054-hume-on-art/</guid><description>Tastemaker:
strong sense able to see and experience the art (i.e., not blind, deaf etc) delicate taste (perceptive of delicate sentiment) should be able to see what makes a piece of art good practice free of prejudice Nostalgia Novelty Complexity And more comparison There is something consistent about art.</description></item><item><title>06-6809-programming</title><link>https://jethughes.github.io/notes/notes/06-6809-programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/06-6809-programming/</guid><description>difficult
no variables GOTO not loops only compare ints and bytes not really routines all vars global case sensitive Hello World need a routine that given a string will print each chracter one at a time need to know how to print Routines 1 2 routine: rts no params no local vars calling routine</description></item><item><title>06-async-javascript</title><link>https://jethughes.github.io/notes/notes/06-async-javascript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/06-async-javascript/</guid><description>Async programming allows you to start a potentially long running task have still be able to interact while it it running</description></item><item><title>06-business-functions-and-use-cases</title><link>https://jethughes.github.io/notes/notes/06-business-functions-and-use-cases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/06-business-functions-and-use-cases/</guid><description>approaches-to-systems-development
What are the two main approaches to systems development and how do they differ object oriented - system is a collection of objects tranditional - system is a collectin of processes business-functions</description></item><item><title>06-hashing-binary-public-key-cryptography</title><link>https://jethughes.github.io/notes/notes/06-hashing-binary-public-key-cryptography/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/06-hashing-binary-public-key-cryptography/</guid><description>news pegasus project cutting internet cables Hash function yields a small, districtive value (hash or digest) from an arbitrarily sized input.</description></item><item><title>065-mary-woolstonecraft</title><link>https://jethughes.github.io/notes/notes/065-mary-woolstonecraft/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/065-mary-woolstonecraft/</guid><description>royal humane society - resusitation
saved mary woolstone craft from the river thames and resusitated after attempted suicide
suicide is crazy - all our intellect decides the only way is to end it all</description></item><item><title>07-6809-advanced</title><link>https://jethughes.github.io/notes/notes/07-6809-advanced/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/07-6809-advanced/</guid><description>addressing modes implied inca immediate lda #$00 extended LDA $31FE extended indirect LDA [$31FE] or LDA [HERE] points to a memory location which specifies another memory location direct LDA $ff or lda &amp;lt;HERE register trf X,Y indexed LDA $311E, X use memory location that is the sum of the operands LDA ,X LDA $23,X etc indexed indirect LDA [$10, X] relative BEQ HERE BEQ does a short branch LBEQ does a long branch the value is relative to HERE program counter relative LDA TABLE,PCR ; A = the value stored at TABLE if all memory references are relative, then the program cna be loaded anywhere is memory, and will still work.</description></item><item><title>07-business-process-modelling</title><link>https://jethughes.github.io/notes/notes/07-business-process-modelling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/07-business-process-modelling/</guid><description> understand core conepts related to business process mondelling learn about commonly used business process modelling notations understand the elemeents of a UML activity diagram What is a business process business-process business-process-model business-process-model-and-notation unified-modelling-language</description></item><item><title>07-cryptography-applications</title><link>https://jethughes.github.io/notes/notes/07-cryptography-applications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/07-cryptography-applications/</guid><description>interest doesn&amp;rsquo;t have low level security
this would decrease compatibility easier to add this at hosts and software layer Layer model each layer of network hides information about lower levels and adds information for higher levels\ transmission is only at physical layer OSI model - more complicated but most common</description></item><item><title>07-heuristic-evaluation-cont</title><link>https://jethughes.github.io/notes/notes/07-heuristic-evaluation-cont/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/07-heuristic-evaluation-cont/</guid><description>heuristic-evaluation</description></item><item><title>07-js-server-vs-client-side</title><link>https://jethughes.github.io/notes/notes/07-js-server-vs-client-side/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/07-js-server-vs-client-side/</guid><description/></item><item><title>07-mergesort-1</title><link>https://jethughes.github.io/notes/notes/07-mergesort-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/07-mergesort-1/</guid><description>mergesort
quicksort
divide-and-conquer</description></item><item><title>07-testing</title><link>https://jethughes.github.io/notes/notes/07-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/07-testing/</guid><description>testing
test-driven-development
unit-testing
understand that testing is useful for detecting bugs</description></item><item><title>077-marx-and-kierkegaard-religion-pt1</title><link>https://jethughes.github.io/notes/notes/077-marx-and-kierkegaard-religion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/077-marx-and-kierkegaard-religion/</guid><description>something changes when you an actual photo of a philosopher. they become people, not enigmas (e.g., socrates).
Marx &amp;ldquo;religion is the opiate of the masses&amp;rdquo;.</description></item><item><title>078-marx-and-kierkegaard-religion-pt2</title><link>https://jethughes.github.io/notes/notes/078-marx-and-kierkegaard-religion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/078-marx-and-kierkegaard-religion/</guid><description>Kierkegaard disagreed with marx. said progress is a conglomeration of individuals.
thought it was likely that a world would emerge where people were no longer individuals.</description></item><item><title>079-kierkegaard-anxiety</title><link>https://jethughes.github.io/notes/notes/079-kierkegaard-anxiety/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/079-kierkegaard-anxiety/</guid><description>&amp;ldquo;anxiety is the dizziness of freedom&amp;rdquo;
the biggest danger in this life is the loss of yourself. you might not realise you are in this situation.</description></item><item><title>08-business-patterns</title><link>https://jethughes.github.io/notes/notes/08-business-patterns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/08-business-patterns/</guid><description>entity-relationship-diagrams</description></item><item><title>08-debugging</title><link>https://jethughes.github.io/notes/notes/08-debugging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/08-debugging/</guid><description>debugging</description></item><item><title>08-intro-to-c</title><link>https://jethughes.github.io/notes/notes/08-intro-to-c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/08-intro-to-c/</guid><description>Developed 1972 for Unix
widely used compilers esxist for most OSs and architectiures diverse use OSs, device drivers, protocol stacks less so for application software low level language features map to CPU features not Object Oriented no classes etc “C is an imperative procedural language supporting structured programming, lexical variable scope, and recursion, with a static type system.</description></item><item><title>08-mergesort-2</title><link>https://jethughes.github.io/notes/notes/08-mergesort-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/08-mergesort-2/</guid><description>mergesort</description></item><item><title>08-personas-and-scenarios</title><link>https://jethughes.github.io/notes/notes/08-personas-and-scenarios/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/08-personas-and-scenarios/</guid><description> personas-and-scenarios storyboards</description></item><item><title>08-web-frameworks</title><link>https://jethughes.github.io/notes/notes/08-web-frameworks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/08-web-frameworks/</guid><description>slides</description></item><item><title>083-henry-david-thoreau</title><link>https://jethughes.github.io/notes/notes/083-henry-david-thoreau/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/083-henry-david-thoreau/</guid><description>trancendentalist
graduated harvard, got a job as a school teacher. He was against corporal punishment and quit. opponent of slavery, conservationist.</description></item><item><title>09-data-modelling-and-normalisation</title><link>https://jethughes.github.io/notes/notes/09-data-modelling-and-normalisation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/09-data-modelling-and-normalisation/</guid><description>redundancy-and-anomalies dependencies wia functional dependecy::when some attribute has exactly one associated other attribute wia transitive dependency:: A→B, B→C Transitive dependency wia partial dependency:: when a subset of the left determines the rightwia multivalued dependency::when something has a set of associated values of another attribute</description></item><item><title>09-documentation</title><link>https://jethughes.github.io/notes/notes/09-documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/09-documentation/</guid><description>documentation</description></item><item><title>09-intro-to-c-2</title><link>https://jethughes.github.io/notes/notes/09-intro-to-c-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/09-intro-to-c-2/</guid><description>Variables and Pointers 1 2 3 va memory[3] *va memory[memory[3]] **va memory[memory[memory[3]]] * is known as dereferncing ** is known as double-dereferncing</description></item><item><title>09-paper-prototypes-wiz-of-oz-video-prototypes</title><link>https://jethughes.github.io/notes/notes/09-paper-prototypes-wiz-of-oz-video-prototypes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/09-paper-prototypes-wiz-of-oz-video-prototypes/</guid><description>wizard-of-oz video-prototyping storyboards-mockups-paper-prototypes Paper protoypes brainstorming. e.g., refinement of design and communicating ideas. e.</description></item><item><title>09-stacks-queues-heaps</title><link>https://jethughes.github.io/notes/notes/09-stacks-queues-heaps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/09-stacks-queues-heaps/</guid><description> dynamic-linear-datatype Stack Queue priority-queue heap</description></item><item><title>09-web-databases-networks</title><link>https://jethughes.github.io/notes/notes/09-web-databases-networks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/09-web-databases-networks/</guid><description>slides</description></item><item><title>092-nietzsche-pt3-thus-spole-zarathustra</title><link>https://jethughes.github.io/notes/notes/092-nietzsche-pt3-thus-spole-zarathustra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/092-nietzsche-pt3-thus-spole-zarathustra/</guid><description>In this episode nietzsche talks about the &amp;ldquo;overman&amp;rdquo;. How there are three stages of life
the camel where we carry other people burdens and dont question why the lion where we rebel and stop doing things for other people, questioning why the child where we realise we dont have to reject everything, and we become like &amp;ldquo;a child at play&amp;rdquo; then after these three there is the overman which is like an infinitely perfect person.</description></item><item><title>093-nietzsche-pt4-love</title><link>https://jethughes.github.io/notes/notes/093-nietzsche-pt4-love/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/093-nietzsche-pt4-love/</guid><description>This episode is about love. We talked about the idea of love from platos symposium
he says love is like a ladder with 6 steps</description></item><item><title>094-a-look-at-suffering</title><link>https://jethughes.github.io/notes/notes/094-a-look-at-suffering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/094-a-look-at-suffering/</guid><description>niel degrasse tyson said two things to live your life by
know more today than you did yesterday limit the suffering of others Is the second one something we should all do?</description></item><item><title>095-are-we-living-in-a-simulation</title><link>https://jethughes.github.io/notes/notes/095-are-we-living-in-a-simulation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/095-are-we-living-in-a-simulation/</guid><description>This question is becoming more and more popular.
breif note about descartes &amp;ldquo;cogito ergo sum&amp;rdquo;. I think before I am. He systematically doubted everything and realised that the only thing he couldn&amp;rsquo;t doubt was that since he was able to doubt, and he was thinking, he must exist.</description></item><item><title>098-schopenhauer-metaphysics-and-love</title><link>https://jethughes.github.io/notes/notes/098-schopenhauer-metaphysics-and-love/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/098-schopenhauer-metaphysics-and-love/</guid><description>Agreed with Kant (sorta)
Thought that things have a &amp;ldquo;true form&amp;rdquo;. But unlike kant thought that everything</description></item><item><title>10-continuous-integration-1</title><link>https://jethughes.github.io/notes/notes/10-continuous-integration-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/10-continuous-integration-1/</guid><description> continuous-integration
explain the term continuous integration describe different purposes for CI indicate how CI jobs are usually triggered understand implications of CI running asynchronously Exlplain how to manage output from CI jobs describe role of stages and jobs within gitlab pipelines indicate how CI specifications are stored</description></item><item><title>10-design-heuristics-1</title><link>https://jethughes.github.io/notes/notes/10-design-heuristics-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/10-design-heuristics-1/</guid><description>1 Wizard of OZ wizard-of-oz simulating machine behavior with human operators
2 Video prototyping video-prototyping
3 Creating and comparing alternatives create multiple ideas in parallel rather than one after the other</description></item><item><title>10-heaps-and-heapsort</title><link>https://jethughes.github.io/notes/notes/10-heaps-and-heapsort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/10-heaps-and-heapsort/</guid><description>heapsort
1 Overview [[notes/heap]]
2 Operations 2.1 Add element Assumptions
access first vacant position set (or find) the value $H.</description></item><item><title>10-intro-to-c-arrays-malloc-free</title><link>https://jethughes.github.io/notes/notes/10-intro-to-c-arrays-malloc-free/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/10-intro-to-c-arrays-malloc-free/</guid><description>Arrays must declare with size 1 2 3 4 uint32_t array[10]; float matrix[5][6]; double balance[5] = {1000.0, 2.</description></item><item><title>10-oop-concepts-and-uml</title><link>https://jethughes.github.io/notes/notes/10-oop-concepts-and-uml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/10-oop-concepts-and-uml/</guid><description> what is the concept of encapsulation and how is it enforced for objects how does and object refernce differ from a relational foreign key give an example of how difference UML diagram types can be linked when modelling a system object unified-modelling-language</description></item><item><title>10-routes-controllers</title><link>https://jethughes.github.io/notes/notes/10-routes-controllers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/10-routes-controllers/</guid><description>slides
Routes and controllers MVC model design pattern used in ios development routes - foward requests to appropriate controller functions controller functions - get data from models, create html, display data, and return to view views (templates) - used by controllers to render data</description></item><item><title>11-class-diagrams</title><link>https://jethughes.github.io/notes/notes/11-class-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/11-class-diagrams/</guid><description>class-diagrams</description></item><item><title>11-continuous-integration-2</title><link>https://jethughes.github.io/notes/notes/11-continuous-integration-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/11-continuous-integration-2/</guid><description>Appreciate that GitLab is a complex software Understand where CI jobs scripts get run explain why repository servers can host websites Understand how gitblab dternmimines awhen a CI script failed Describe a way in which CI scripts scan handle secrets Outline uses of local git hook scripts continuous integration</description></item><item><title>11-design-heuristics-2</title><link>https://jethughes.github.io/notes/notes/11-design-heuristics-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/11-design-heuristics-2/</guid><description> Show System Status Familiar Metaphors And Language User Freedom And Control</description></item><item><title>11-sets-maps-trees</title><link>https://jethughes.github.io/notes/notes/11-sets-maps-trees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/11-sets-maps-trees/</guid><description>A set is :: a collection of elements with no repetition allowed A hash-map is :: a set of key value pairs A tree is :: a general concept of a way of organising data.</description></item><item><title>11-struct-and-union</title><link>https://jethughes.github.io/notes/notes/11-struct-and-union/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/11-struct-and-union/</guid><description>Struct not a calss
class like composite data type called struct POD plain old data declare 1 2 3 4 5 6 7 8 9 struct &amp;lt;name&amp;gt;{ &amp;lt;type&amp;gt;&amp;lt;name&amp;gt;; &amp;lt;type&amp;gt;&amp;lt;name&amp;gt;; } &amp;lt;variable&amp;gt;; struct point_2d { double x;e double y; } point; typically an anonymous struct is declared and then given a name with typedef</description></item><item><title>11-view-templates</title><link>https://jethughes.github.io/notes/notes/11-view-templates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/11-view-templates/</guid><description>slides
view templates pug pug is a view engine.
1 2 app.set(&amp;#39;views&amp;#39;, path.join(__dirname, &amp;#39;views&amp;#39;)) app.set(&amp;#39;view engine&amp;#39;, &amp;#39;pug&amp;#39;) a pug file</description></item><item><title>12-automation</title><link>https://jethughes.github.io/notes/notes/12-automation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/12-automation/</guid><description>links: cosc-202-lectures, slides
automation
Garbage notes The use of automatic equipment in a production process. We desire to remove repetive work within software development</description></item><item><title>12-binary-search-tree-operations</title><link>https://jethughes.github.io/notes/notes/12-binary-search-tree-operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/12-binary-search-tree-operations/</guid><description>Recall binary-search-tree
binary search tree operations</description></item><item><title>12-design-heuristics-3</title><link>https://jethughes.github.io/notes/notes/12-design-heuristics-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/12-design-heuristics-3/</guid><description> Consistency And Standards Error Prevention Recognition Over Recall flexibility-and-efficiency Aesthetic and Minimalist Design</description></item><item><title>12-ethics-and-computing</title><link>https://jethughes.github.io/notes/notes/12-ethics-and-computing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/12-ethics-and-computing/</guid><description>what is ethics concerned with the fundamental issues of practical decision making. what actions should we take or not take?</description></item><item><title>12-modelling-behaviour</title><link>https://jethughes.github.io/notes/notes/12-modelling-behaviour/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/12-modelling-behaviour/</guid><description>slides
modelling-behaviour
method signatures inheritance of behaviour lower level sequencing and flow of control compartmentalisation into &amp;ldquo;subsystems&amp;rdquo; Compare and contrast the two typical approaches to inheriting behaviour in OO systems.</description></item><item><title>12-pen-testing</title><link>https://jethughes.github.io/notes/notes/12-pen-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/12-pen-testing/</guid><description>News DOC mt cook ransomware Pen Testing intrustion detection, system monitoring, penetration testing
prevention detection analysis some ovelap with forensices IT interesting in prevention and detection security specialists more interesting in analysis Terminology hacker was originially positive - enthusism etc became negative through public media (wargames 1983, Hackers 1984) cracking can mean bad hacking white hat - good black hat - bad others: grey hat - may violate laws to discover vulnerabilites for good reasons script kiddie - uses ready made exploits hacktivist - hacks for political/social causes (e.</description></item><item><title>12-pointers-to-routines</title><link>https://jethughes.github.io/notes/notes/12-pointers-to-routines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/12-pointers-to-routines/</guid><description>compiler ⇒ converts high level language description of program into assembly description of the program assembler ⇒ converts assebly language description into machine code description loader ⇒ loads program into memory, loaded at $4000</description></item><item><title>13-bst-traversals-and-balance</title><link>https://jethughes.github.io/notes/notes/13-bst-traversals-and-balance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/13-bst-traversals-and-balance/</guid><description>tree-traversal balancing-binary-search-trees</description></item><item><title>13-code-librarires</title><link>https://jethughes.github.io/notes/notes/13-code-librarires/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/13-code-librarires/</guid><description> software library
Explain what a software library is Describe reasons for/against using libraries Understand transitive dependencies in libraries Appreciate your obligations from using libraries Outline considerations when writing libraries Highlight features of the Java standard libraries</description></item><item><title>13-databases-1</title><link>https://jethughes.github.io/notes/notes/13-databases-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/13-databases-1/</guid><description>What is a database an integrated collection of data implicit properties represents some aspect of th real world, called miniworld is a coherent collection of data with inherent meaning is designed built and populated with data for a specific purpose DBMS a software system designed to store, manage, and facilitate access to the database Oracle, SQL erver, MySQL, MonogDB Application program a program that provides access to the dtabase by sending queries and requests for data to the DBMS This course modelling and design of DBs programming (SQL + appliation development) DBMS implementation specifiically relational databases</description></item><item><title>13-design-heuristics-4</title><link>https://jethughes.github.io/notes/notes/13-design-heuristics-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/13-design-heuristics-4/</guid><description>aesthetic-and-minimalist-design help-and-documentation recognise-and-recover-from-errors anti-design-heristics dark-patterns</description></item><item><title>13-OS-intro</title><link>https://jethughes.github.io/notes/notes/13-OS-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/13-OS-intro/</guid><description>why learn OS security optimisation wierd bugs &amp;ldquo;crown of programming&amp;rdquo; understand hardware better embedded sys and IoT co-design of hardware and software what is an OS a program (also called OS kernel) loaded onto RAM first when pc is turned on OS kernel (in kernel space) has highest privilege and can access any hardware directly user programs (in user space) cannot acces hardware unless permitted otherwise by the OS kernel via service request (sys call) a program (OS kernel) that manages the different aspects of the opereration of the machine and runs with the highest privilege in a protected domain</description></item><item><title>13-pen-testing-2</title><link>https://jethughes.github.io/notes/notes/13-pen-testing-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/13-pen-testing-2/</guid><description>Intrusion detection cont. Auditing a thorough prces of investiagtina nd analaysing aa system for vilnerabilities
e.g., pen testing Firewalls protect aginst network intrusions</description></item><item><title>13-UML-sequence-diagrams</title><link>https://jethughes.github.io/notes/notes/13-UML-sequence-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/13-UML-sequence-diagrams/</guid><description>sequence-diagrams</description></item><item><title>14-apis</title><link>https://jethughes.github.io/notes/notes/14-apis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/14-apis/</guid><description>purpose of apis apis vs code libraries why web technologies assist API development REST apis in cloud mircoservices building APIs maintenance of APIs application-programming-interface</description></item><item><title>14-balancing-bsts</title><link>https://jethughes.github.io/notes/notes/14-balancing-bsts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/14-balancing-bsts/</guid><description> balancing-binary-search-trees
avl-tree red-black-tree treap</description></item><item><title>14-direct-manipulation-and-mental-models</title><link>https://jethughes.github.io/notes/notes/14-direct-manipulation-and-mental-models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/14-direct-manipulation-and-mental-models/</guid><description>Command line vs UI table
Object action models object action model: user selects an object then selects the action to perform on the objct</description></item><item><title>14-processes-and-system-calls</title><link>https://jethughes.github.io/notes/notes/14-processes-and-system-calls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/14-processes-and-system-calls/</guid><description>heirarchical structure in software systems system calls and interrupts representing process in OSs overview of process scheduling Heirarchical structure software systems have modularity</description></item><item><title>15-containers</title><link>https://jethughes.github.io/notes/notes/15-containers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/15-containers/</guid><description>containers
Describe what software containers are basically lightweight virtual machines Explain why containers are useful Encapsulate a computing environment Outline the role of container registries Store and share images E.</description></item><item><title>15-file-systems</title><link>https://jethughes.github.io/notes/notes/15-file-systems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/15-file-systems/</guid><description>what is a file (LINUX) an interface of OS to users
os manages files just as files - it doesn&amp;rsquo;t care what type of file it is - they are all bytes arranges logically in sequence.</description></item><item><title>15-from-models-to-code-and-back</title><link>https://jethughes.github.io/notes/notes/15-from-models-to-code-and-back/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/15-from-models-to-code-and-back/</guid><description> UML to Java Foward Engineering round-trip-engineering</description></item><item><title>15-mental-models-representation-matters-distributing-cognition</title><link>https://jethughes.github.io/notes/notes/15-mental-models-representation-matters-distributing-cognition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/15-mental-models-representation-matters-distributing-cognition/</guid><description>doors are simple. But they are still done wrong very often. Incorrect labelling can give the user a wrong mental model - widening the &amp;ldquo;gulf of execution&amp;rdquo;.</description></item><item><title>15-policies-standards-practices</title><link>https://jethughes.github.io/notes/notes/15-policies-standards-practices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/15-policies-standards-practices/</guid><description>news apple securit flaw for iphones ipads and macs chrome patch actively exloited zero day github blighted by researcher who created thousands of malicious projects russian cyber attacks of lockheed martin armed forces hack into HIMARS Policies Defn: a plan or course of action to influence and determine decisions</description></item><item><title>16-c201-archive</title><link>https://jethughes.github.io/notes/notes/16-c201-archive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/16-c201-archive/</guid><description>In a perfect world keys from a class k, valuyes from a class v there are only 4000 possible keys each key, k, has a unique four digit identifier than we can obtain in constant time as k.</description></item><item><title>16-cloud-security</title><link>https://jethughes.github.io/notes/notes/16-cloud-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/16-cloud-security/</guid><description>what is cloud computing what is service virtualisation security issues what is cloud largely a marketing term vague - doesn&amp;rsquo;t mean much slowly replacing the word &amp;lsquo;web&amp;rsquo; implies</description></item><item><title>16-compilers</title><link>https://jethughes.github.io/notes/notes/16-compilers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/16-compilers/</guid><description>describe what it is and what is does
compilers vs interpreters
compile stages
why java is atypical of compiled languages</description></item><item><title>16-device-drivers</title><link>https://jethughes.github.io/notes/notes/16-device-drivers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/16-device-drivers/</guid><description>Device controller and driver driver Defn: a special kernel module that contrls the operations of a device with the device specific information controller Defn: a hardware unit on a device that can know and control a devices status or behaviour, which communicates with the CPU via a driver</description></item><item><title>16-distributing-cognition-and-visual-design-typography</title><link>https://jethughes.github.io/notes/notes/16-distributing-cognition-and-visual-design-typography/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/16-distributing-cognition-and-visual-design-typography/</guid><description> representation-and-distributing-cognition typography visual-design</description></item><item><title>16-hasing-maps-sets</title><link>https://jethughes.github.io/notes/notes/16-hasing-maps-sets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/16-hasing-maps-sets/</guid><description>Hash functions Collisions Chaining open addressing basic implementation</description></item><item><title>16-networks</title><link>https://jethughes.github.io/notes/notes/16-networks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/16-networks/</guid><description>Types of devices everything is connected
hosts - the end systems which run network apps</description></item><item><title>16-reverse engineering</title><link>https://jethughes.github.io/notes/notes/16-reverse-engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/16-reverse-engineering/</guid><description>uml-java-reverse-engineering</description></item><item><title>17-app-layer</title><link>https://jethughes.github.io/notes/notes/17-app-layer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/17-app-layer/</guid><description>Client-server vs peer to peer social network email multi player games video streaming P2P file sharing voice over IP e.</description></item><item><title>17-collision-resolution-probing</title><link>https://jethughes.github.io/notes/notes/17-collision-resolution-probing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/17-collision-resolution-probing/</guid><description>linear-probing</description></item><item><title>17-data-access</title><link>https://jethughes.github.io/notes/notes/17-data-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/17-data-access/</guid><description> data-access
file-based-storage database-based-storage data-access-object java-database-connectibity</description></item><item><title>17-dynamic-programming</title><link>https://jethughes.github.io/notes/notes/15-dynamic-programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/15-dynamic-programming/</guid><description/></item><item><title>17-grids-grouping-alignment-reading-and-navigation</title><link>https://jethughes.github.io/notes/notes/17-grids-grouping-alignment-reading-and-navigation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/17-grids-grouping-alignment-reading-and-navigation/</guid><description> layout closure grouping similarity color reading-and-navigating</description></item><item><title>17-linkers-and-loaders</title><link>https://jethughes.github.io/notes/notes/17-linkers-and-loaders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/17-linkers-and-loaders/</guid><description>Appreciate kernel / userspace distinction
Sketch what OS loaders need to achieve
Contrast running Java versus C code</description></item><item><title>17-ML-in-IA-1</title><link>https://jethughes.github.io/notes/notes/17-ML-in-IA-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/17-ML-in-IA-1/</guid><description>traditional approaches
hand crafted and curated based on intuition not evidence (e.g., password criteria example) static and difficult to scale and adapt Everything we do generates data.</description></item><item><title>17-processes-communication</title><link>https://jethughes.github.io/notes/notes/17-processes-communication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/17-processes-communication/</guid><description>cooperating processes defn: coop process - execution of one process can affect the execution of another. e.e.g, processes for aprallel computing, threads for multithreading.</description></item><item><title>171-the-society-of-the-spectacle</title><link>https://jethughes.github.io/notes/notes/171-the-society-of-the-spectable/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/171-the-society-of-the-spectable/</guid><description>Notes Economicly driven religion
Life is an immense accumulation of spectacles
Modern conditions of production - not comparable to Marx era capitalism</description></item><item><title>18-advanced-SQL</title><link>https://jethughes.github.io/notes/notes/18-advanced-sql-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/18-advanced-sql-1/</guid><description>varchar usually bigger than you think
CRUD insert adds a row select retrieves rows from the table ouput can be &amp;ldquo;saved&amp;rdquo; as a view changes to the underlying table also chagnes the view update modifies rows delete removes rows test as a select statement first SQL DAO programming We want to miniminse load on sql as connecting to database is expensive.</description></item><item><title>18-build-tools</title><link>https://jethughes.github.io/notes/notes/18-build-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/18-build-tools/</guid><description>understnad the purpose of build tools automate the construction of software sketch how make&amp;rsquo;s rules (re)build software has a set of taget and a set of sources checks whether targets are older than sources a MakeFile contains a list of commands that build the tager from the source builds in the correct order (topologically) e.</description></item><item><title>18-ethics-in-hci</title><link>https://jethughes.github.io/notes/notes/18-ethics-in-hci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/18-ethics-in-hci/</guid><description>hci-ethics</description></item><item><title>18-hash-examples</title><link>https://jethughes.github.io/notes/notes/18-hash-examples/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/18-hash-examples/</guid><description/></item><item><title>18-ML-in-IA-2</title><link>https://jethughes.github.io/notes/notes/18-ML-in-IA-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/18-ML-in-IA-2/</guid><description>nefarious uses of ml password guessing normally based on heuristics that are designed by humans biased may not match true distributions of passwords leaked data can be used to &amp;ldquo;learn&amp;rdquo; what to guess gain insight into what users use as passwords alternative - PassGan use statistical distribution of passwords then use this to generate guesses can generate passwords that are likely to be used</description></item><item><title>18-processes-sharing-and-threads</title><link>https://jethughes.github.io/notes/notes/18-processes-sharing-and-threads/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/18-processes-sharing-and-threads/</guid><description>Shared memory for processes Can&amp;rsquo;t assume all variables are initally zero. OS decide which process maps who which physical address</description></item><item><title>18-transport-layer</title><link>https://jethughes.github.io/notes/notes/18-transport-layer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/18-transport-layer/</guid><description>chapter 3
service provided by transport layer services
process to process communication logical communication between application processes multi and demulti plexing communication for multiple applications of the same host flow control ensure production reate &amp;lt;= consuption rate congestion control too many sender, sending too fast protocols</description></item><item><title>19-advanced-sql-2</title><link>https://jethughes.github.io/notes/notes/19-advanced-sql-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/19-advanced-sql-2/</guid><description>CASE basically a switch statement
derived valye where calcyulation isnt simple standardising values e.g., booleans: t/f, y/n, 0/1 flipping between row and col orientation (privoting) all students vs all on one students papers Set operators relations are sets of tuples ⇒ we can use set operators</description></item><item><title>19-cpu-scheduling</title><link>https://jethughes.github.io/notes/notes/19-cpu-scheduling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/19-cpu-scheduling/</guid><description>why shedule?
keep cpu busy (cpu utilisation) so processed dont hae to spend time waithing for the CPU even if cpu is always busy executing processses in different orders can change the average time spent in queue cpu burst (diagram is old the timing will have changed) between burst - waiting for io so that interactive processes respond quickly time spent waiting in total average time between visits to CPU criteria</description></item><item><title>19-deepfakes</title><link>https://jethughes.github.io/notes/notes/19-deepfakes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/19-deepfakes/</guid><description>what, origins, how issue with trust politics etc
essentially better face swapping
replaces traditional studio artist with ML</description></item><item><title>19-graphs</title><link>https://jethughes.github.io/notes/notes/19-graphs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/19-graphs/</guid><description>graphs</description></item><item><title>19-network-layer-data-plane</title><link>https://jethughes.github.io/notes/notes/19-network-layer-data-plane/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/19-network-layer-data-plane/</guid><description>transport layer messages are divided into segments passed to network layer sender: encapsulates segments into IP packets, passes to link layer reciever: deliver segments to tranport layer protocol sender and reciever are connected by multple routers routers examine header fields in all IP packets passing through it moves IP packers from input ports to output ports to transfer packets along end-end path network layer protocols IP internet control message protocol (ICMP) use for troubleshooting type things Forwarding forwarding</description></item><item><title>19-security</title><link>https://jethughes.github.io/notes/notes/19-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/19-security/</guid><description>why cybersecurity is a growing concern more software ∴ more dependecies ∴ more complex ∴ more &amp;ldquo;surface area&amp;rdquo; of risk of vulnerability sketch confidentiality, integrity, and avalability security confidentiality - protecting data from being stolen integrity - attacks on data with the aim to decieve users avalability - e.</description></item><item><title>20-data-integrity</title><link>https://jethughes.github.io/notes/notes/20-data-integrity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/20-data-integrity/</guid><description>Data Integrity GIGO
Types of error
ennecessary duplication of data missing information (expecially nulls) referential integrity problems: broken links, &amp;ldquo;orhpan&amp;rdquo; records (foreign keys) data entry errors: typos/keying errors, value in wrong field invalid/nonsensical data, e.</description></item><item><title>20-graphs-2</title><link>https://jethughes.github.io/notes/notes/20-graphs-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/20-graphs-2/</guid><description>Graph drawing is its own problem.
One easy way is to draw the vertices is clockwise order and draw edges between them</description></item><item><title>20-network-layer-control-plane</title><link>https://jethughes.github.io/notes/notes/20-network-layer-control-plane/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/20-network-layer-control-plane/</guid><description>slides
per-router control vs SDN per router each router runs a routing algorithm router communicate with each other and creates a forwarding table SDN software defined networking a remote controller computes, and install fowarding tables in routers</description></item><item><title>20-SE-in-IA</title><link>https://jethughes.github.io/notes/notes/20-SE-in-IA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/20-SE-in-IA/</guid><description>why apps for IoT devices contain security flaws smart home security breaches kindles vulnerable libraries lead to vulnerable devices software helps us to use hardware need to make the software secure overview combines computer science, engineering, and maths to make software</description></item><item><title>20-software-licensing</title><link>https://jethughes.github.io/notes/notes/20-software-licensing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/20-software-licensing/</guid><description>pdf
what does it mean for people to use your software. What responsitilities do you have
Understand the default protection of code authors copyright Contrast ‘libre’ free and ‘gratis’ free libre: free as in freedom gratis: free as in no cost Define what makes open source software floss - free libre open source software Contrast copyleft and more permissive licences copyleft &amp;ldquo;viral licensing&amp;rdquo; usage of copyleft software required your software be copyleft also derivative must &amp;ldquo;copy&amp;rdquo; the same license others e.</description></item><item><title>20-sync-deadlock</title><link>https://jethughes.github.io/notes/notes/20-sync-deadlock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/20-sync-deadlock/</guid><description>Bounded buffer problem producer consumer problem
issues
no data in buffe: consumer has nothing to consume: data race buffer is full: no space for producer to produce: busy waiting private vars</description></item><item><title>203-exam-prep</title><link>https://jethughes.github.io/notes/notes/203-exam-prep/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/203-exam-prep/</guid><description>example questions
https://blackboard.otago.ac.nz/bbcswebdav/pid-2827524-dt-content-rid-18670180_1/courses/INFO203_S1DNIE_2022/2022/INFO203_Lecture25.pdf</description></item><item><title>204-exam</title><link>https://jethughes.github.io/notes/notes/204-exam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/204-exam/</guid><description>Will be examined
hardware
what is a computer combinatorial logic sequetial sr latch D, t, jk flip flop, state transition diagrama archtecture memory, busses, alu, control unit, registers, instructions assembly</description></item><item><title>204-questions</title><link>https://jethughes.github.io/notes/notes/204-questions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/204-questions/</guid><description> in read and write system calls why is the buffer const in write and not in read</description></item><item><title>21-data-link-layer</title><link>https://jethughes.github.io/notes/notes/21-data-link-layer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/21-data-link-layer/</guid><description>data link layer services transfer datgram from one node to physically adjacent node over a link terminology hosts and routers: node communication channels between adjacent nodes: links wired wireless LANs layer-2 packet: frame, encapsulates datagram services</description></item><item><title>21-memory-management</title><link>https://jethughes.github.io/notes/notes/21-memory-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/21-memory-management/</guid><description>storage heirachy primary storage - cache and main memory secondaryy - hard drive
as we move from secondary to primary:</description></item><item><title>21-SE-in-IA-2</title><link>https://jethughes.github.io/notes/notes/21-SE-in-IA-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/21-SE-in-IA-2/</guid><description>need in all phases often overlooked in feasability stages security requirements not defined built without thinking about security tests do not take security into account without security evolution can become cumbersome more costly to fix bug in development than in design</description></item><item><title>21-software-architecture-and-templates</title><link>https://jethughes.github.io/notes/notes/21-software-architecture-and-templates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/21-software-architecture-and-templates/</guid><description>software-architectures
system-templates</description></item><item><title>22-digital-preservation</title><link>https://jethughes.github.io/notes/notes/22-digital-preservation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/22-digital-preservation/</guid><description>how long will data survive?
data rot
eveything wears out digital media degrades unreadable media damaged files backups may help hardware and software becomes obsolete cloud service shut down os no longer exists no device to read media no software to read files format documentation non-existent or missing file system changes - lost metadata Dark ages 2 preservation of digital material continuous format migration</description></item><item><title>22-LAN-physical-layer</title><link>https://jethughes.github.io/notes/notes/22-LAN-physical-layer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/22-LAN-physical-layer/</guid><description>LAN vs WAN Local area network
a network connecting computers within a limited geographic area e.g., building, school, home etc wired or wireless Wide Area network</description></item><item><title>22-open-source-software</title><link>https://jethughes.github.io/notes/notes/22-open-source-software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/22-open-source-software/</guid><description>Describe Origination how do floss projects get created forking an existing open source project mangement of existig project &amp;ldquo;run out of steam&amp;rdquo; users decide to take development of themselves some decides to apply an open source licence e.</description></item><item><title>22-performance-and-security</title><link>https://jethughes.github.io/notes/notes/22-performance-and-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/22-performance-and-security/</guid><description>Performance requirements e.g., credit card system functional reqs sales authorised only for valid cards generate monthly statements performance requirements cards are validated quickly statements are accurate and generated on time quickly, accurate, and on time need to be operationalised, measured, and tested.</description></item><item><title>22-trends-in-hci</title><link>https://jethughes.github.io/notes/notes/22-trends-in-hci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/22-trends-in-hci/</guid><description>[slides]( https://blackboard.otago.ac.nz/bbcswebdav/pid-2827522-dt-content-rid-18612267_1/courses/INFO203_S1DNIE_2022/2022/INFO203_Lecture23.pdf how the the methodology of HCI used.)
Theory vs practice. There is a lot of work being done t improve the methodology</description></item><item><title>22-virtual-memory</title><link>https://jethughes.github.io/notes/notes/22-virtual-memory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/22-virtual-memory/</guid><description>Swapping and virtual memory swapping
if there is not enough physical memory we need to sawp processes out of the main ememory to the secondary storage e.</description></item><item><title>23-digital-forensics</title><link>https://jethughes.github.io/notes/notes/23-digital-forensics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/23-digital-forensics/</guid><description>assit in legal/criminal proceedings
ICT in application to the law
requires broad range of technical knowledge
computers everywhere
IoT, PCs, severs/cloud, smart devices, network routers and storage devices, other embedded systems can all hold forensically significant data types of evidence direct evidence evidence which a witness can provide a direct account of in their testimony circumstansial evidence relates less directly to the facts of the case, requireing some analysis or inference suggests or indicates by seldom proves corroborating evidence supports or is consistent with other circumstantial evidence forensic evidence a kind of circumstantial evidence, usually submitte by an expert witness digital forensic principles needs to be valildated physical forensics such as fingerprinting and DNA are the same chain of custody, is vital and must be unbroken necessitates proper procedures and handling &amp;ldquo;everything leaves a trace&amp;rdquo; some provisos i the digital domain maintain neutrality and objectivity good understanding of stats and probability can be vital ethos search for truth appreciate limits of certainty no bias or prejudice can work for either side but only one at a time document everything defend demonstrate and duplicate methods computers as a witness good at storing info, with great reliability.</description></item><item><title>23-IO-systems</title><link>https://jethughes.github.io/notes/notes/23-IO-systems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/23-IO-systems/</guid><description>interactive between device drivers and IO devices
Hardware
IO device linked to machine via Port link is a set of wires called a Bus as each end of the link is a device controller (basically a process) device controller registers</description></item><item><title>23-wireless-mobile</title><link>https://jethughes.github.io/notes/notes/23-wireless-mobile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/23-wireless-mobile/</guid><description>More wireless phones that wired phones. More mobile broadband than fixed broadband
two different challenges
communication over wireless link mobility: handling the mobile user to changes point of attachment elements</description></item><item><title>24-network-security</title><link>https://jethughes.github.io/notes/notes/24-network-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/24-network-security/</guid><description>what is it? confidentiality only sender and reciver should understand message contents encryption authentication sender and reciever want to confirm identity of each other message integrity sender and reciever want to ensure message not altered (in transit, or afterwards) without detection access and availablility services must be accessible and availble to users sender and recieves:</description></item><item><title>24-protection-of-file-systems</title><link>https://jethughes.github.io/notes/notes/24-protection-of-file-systems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/24-protection-of-file-systems/</guid><description>protection model file system shared by many users
users should be able to keep them private need to define</description></item><item><title>24-trends-in-hci-2</title><link>https://jethughes.github.io/notes/notes/24-trends-in-hci-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/24-trends-in-hci-2/</guid><description>Dark patterns Designing for elderlies the familiarity of local church in full size was good.
Digital fabrication 3d printing, interfaces which allow you to 3d print etc.</description></item><item><title>25-advanced-topics</title><link>https://jethughes.github.io/notes/notes/25-advanced-topics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/25-advanced-topics/</guid><description>Datacenter networks 10&amp;rsquo;s to 100&amp;rsquo;s of thousands of hosts, often closely coupled, in close proximity e-business :(e.g., amazon) content servers: youtube etc search engines, data mining (e.</description></item><item><title>25-cost-benefit-analysis</title><link>https://jethughes.github.io/notes/notes/25-cost-benefit-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/25-cost-benefit-analysis/</guid><description>justifying a project of difficult to prove justification three criteria need funds strong will deciding whether to pursue a project what the project address a problem opportunity directive time frame overall priority what options do you have Case study Feasability analysis should we build it (organisational) nature and strength of need strategic alignment?</description></item><item><title>25-network-security-2</title><link>https://jethughes.github.io/notes/notes/25-network-security-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/25-network-security-2/</guid><description>TLS security protocol above transport layer.
supported by most browsers prvides, confidentaility, integrity, authentication replaced SSL</description></item><item><title>412-lectures</title><link>https://jethughes.github.io/notes/notes/412-lectures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/412-lectures/</guid><description>Lecture 7 copmuter security
physical software (authenticity correctness) information (CIA/ IAS octave) network cryptography can be bad because</description></item><item><title>6809</title><link>https://jethughes.github.io/notes/notes/6809/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/6809/</guid><description>cheatsheet lessons Routines All variables are global so there is no params or local vars.
There are three way to &amp;ldquo;Branch&amp;rdquo; to a subroutine.</description></item><item><title>6809-addressing-modes</title><link>https://jethughes.github.io/notes/notes/6809-addressing-modes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/6809-addressing-modes/</guid><description> name example description implied inca 0immediate lda #$00 extended lda $31FE extended indirect lda [$31FE] direct lda $FF$ or lda &amp;lt;HERE register trf X,Y indexed lda #311E, X sta 0,X indexed relative lda [$10, X] relative beq HERE pr lda TABLE,PCR</description></item><item><title>8-application-security-1</title><link>https://jethughes.github.io/notes/notes/8-application-security-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/8-application-security-1/</guid><description>application development security
human error policy failure physical access network access social engineering software flaws third party created by you 10 immuntable laws of security If a bad guy can persuade you to run his program on your computer, it’s not your computer anymore.</description></item><item><title>A novel framework for policy based on-chain governance of blockchain networks</title><link>https://jethughes.github.io/notes/notes/A-novel-framework-for-policy-based-on-chain-governance-of-blockchain-networks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/A-novel-framework-for-policy-based-on-chain-governance-of-blockchain-networks/</guid><description>Summary Extracts Related</description></item><item><title>A renewable energy microgrids trading management platform based on permissioned blockchain</title><link>https://jethughes.github.io/notes/notes/A-renewable-energy-microgrids-trading-management-platform-based-on-permissioned-blockchain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/A-renewable-energy-microgrids-trading-management-platform-based-on-permissioned-blockchain/</guid><description>Summary Extracts Related</description></item><item><title>A review on blockchain governance</title><link>https://jethughes.github.io/notes/notes/A-review-on-blockchain-governance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/A-review-on-blockchain-governance/</guid><description>link: https://doi.org/10.22495/cgtapp23
Summary A very short basic overview of some blockchain governance from a business/economic perspective. Comes to a conclusion that a hybrid approach between on and off chain governance and exogenous and endogenous rules should be incorporated</description></item><item><title>a systematic literature review on blockchain governance</title><link>https://jethughes.github.io/notes/notes/a-systematic-literature-review-on-blockchain-governance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/a-systematic-literature-review-on-blockchain-governance/</guid><description>link: https://arxiv.org/pdf/2105.05460.pdf
Summary As the title states, this paper is a systematic literature review on blockchain governance. It address six main questions (listed below).</description></item><item><title>access-security-tradeoff</title><link>https://jethughes.github.io/notes/notes/access-security-tradeoff/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/access-security-tradeoff/</guid><description>This is the concept that &amp;ldquo;perfect&amp;rdquo; security is impossible to attain.
The &amp;ldquo;perfectly&amp;rdquo; secure system is one that allowed access to nobody.</description></item><item><title>activity-diagrams</title><link>https://jethughes.github.io/notes/notes/activity-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/activity-diagrams/</guid><description>3.4 Activites and transitions
activities
take place over some pariod of time linked by transitions (arrows) only one starting point potentaily many ending conditions Transitions</description></item><item><title>aesthetic-and-minimalist-design</title><link>https://jethughes.github.io/notes/notes/aesthetic-and-minimalist-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/aesthetic-and-minimalist-design/</guid><description> signal to noise
what are you core functionality how can you best use your screen space</description></item><item><title>ALU</title><link>https://jethughes.github.io/notes/notes/ALU/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/ALU/</guid><description>part of the CPU
performs arithmetic add, subtract, etc. logical operations and, or, shift, etc subunits lofical operations addition multiplication and dividion shifting comparison logical tests (if, &amp;gt;0, &amp;lt;0, =0, &amp;lt;=0, etc)</description></item><item><title>An Overview of Forks and Coordination in Blockchain Development</title><link>https://jethughes.github.io/notes/notes/An-Overview-of-Forks-and-Coordination-in-Blockchain-Development/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/An-Overview-of-Forks-and-Coordination-in-Blockchain-Development/</guid><description>link: https://arxiv.org/abs/2102.10006
Summary Extracts Notes Related</description></item><item><title>analysis-of-recursive-algorithms</title><link>https://jethughes.github.io/notes/notes/analysis-of-recursive-algorithms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/analysis-of-recursive-algorithms/</guid><description>induction and recursion are linked inductive approach is esential for understanding time-complexity of resursive algorithms 1 Proof by induction induction Find a (positive integer) parameter that gets smaller in all recursive calls Prove inductively that &amp;ldquo;for all values of the parameter, the result computed is correct&amp;rdquo; To do that:</description></item><item><title>analyzing-experiments</title><link>https://jethughes.github.io/notes/notes/analyzing-experiments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/analyzing-experiments/</guid><description>3 questions what does my data look like graphs, plots, differnent summary plots what are the overall numbers aggregate stats e.</description></item><item><title>anatomyofahack</title><link>https://jethughes.github.io/notes/notes/anatomyofahack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/anatomyofahack/</guid><description>david was careful -2fa etc
used mail.com address which fowarded to another
someone broke in and stopped the fowarding, added a phone number,</description></item><item><title>answered-questions</title><link>https://jethughes.github.io/notes/notes/answered-questions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/answered-questions/</guid><description>Answered
What is Sharding? breaking blockchain into smaller pieces (not sure how or how) to increase scalability Even if a farm says they didn&amp;rsquo;t use some chemical, how does the blockchain verify that.</description></item><item><title>anti-design-heristics</title><link>https://jethughes.github.io/notes/notes/anti-design-heristics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/anti-design-heristics/</guid><description/></item><item><title>anti-govt-protest-china</title><link>https://jethughes.github.io/notes/notes/anti-govt-protest-china/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/anti-govt-protest-china/</guid><description>China used facial recognition to identofy protesters
these protesters used masks and toppled lamposts to thwart this infrastructure</description></item><item><title>Application of Blockchain and Internet of Things to Ensure Tamper-Proof Data Availability for Food Safety</title><link>https://jethughes.github.io/notes/notes/Application-of-Blockchain-and-Internet-of-Things-to-Ensure-Tamper-Proof-Data-Availability-for-Food-Safety/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Application-of-Blockchain-and-Internet-of-Things-to-Ensure-Tamper-Proof-Data-Availability-for-Food-Safety/</guid><description>Summary Extracts Related</description></item><item><title>Application-Layer</title><link>https://jethughes.github.io/notes/notes/Application-Layer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Application-Layer/</guid><description/></item><item><title>application-programming-interface</title><link>https://jethughes.github.io/notes/notes/application-programming-interface/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/application-programming-interface/</guid><description>Allows code (and people) to interact with other people applications. They define interactions points (endpoints) within the code, where data is retrieved (GET) or inserted (POST).</description></item><item><title>approaches-to-systems-development</title><link>https://jethughes.github.io/notes/notes/approaches-to-systems-development/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/approaches-to-systems-development/</guid><description>regardless of the approach, the concept of the model is import for analysis, design, and modelling paradigms
1 traditional system is a collection of process function programming processes interact with data processes accept inputs and produce ouputs</description></item><item><title>ass01-security-audit</title><link>https://jethughes.github.io/notes/notes/ass01-security-audit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/ass01-security-audit/</guid><description>Security Audit for Awesome Web Site Jet Hughes - 9474308
Summary of system Function This system is a simple website for a store called Things &amp;amp; Co.</description></item><item><title>assigning-participants</title><link>https://jethughes.github.io/notes/notes/assigning-participants/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/assigning-participants/</guid><description>Methods Between Subjects The participants are split into equal groups, each which reviews one of the alternatives
Within Subjects The participants are split into two grops, one group review the first alternative first, the other review the seconds alternative first.</description></item><item><title>assigning-participants-video</title><link>https://jethughes.github.io/notes/notes/assigning-participants-video/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/assigning-participants-video/</guid><description>assigning-participants</description></item><item><title>Assignment 02</title><link>https://jethughes.github.io/notes/notes/assignment-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/assignment-02/</guid><description>1 Introduction 1.1 Setup This report will discuss various strategies for managing a warehouse . A warehouse will be simulated as follows:</description></item><item><title>asymptotic-notation</title><link>https://jethughes.github.io/notes/notes/aymptotic-notation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/aymptotic-notation/</guid><description>Asymptotic notations are used in computer science to classify algorithms based how its space and time requirements grow as the input grows.</description></item><item><title>authentication</title><link>https://jethughes.github.io/notes/notes/authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/authentication/</guid><description>Authentication proof of identity need to be sure a user is who they say they are before you can trust them usually done via a unique identifier unique username and a secret that is only known by the authorised user password biometrics 2fa code MFA many secrets protects user/system in the case that a password is disclosed additional secrets generated at the time of use.</description></item><item><title>authorisation</title><link>https://jethughes.github.io/notes/notes/authorisation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/authorisation/</guid><description>Authorisation verifying that a user is allowed to access the operation that they are attempting to access requires explicit check in the system for restricted operatons some code that check if the roles assigned to the authenticaed user intersect the roles required for the current operation use is assigned a role that defines the operations they are allowed to perform e.</description></item><item><title>automation</title><link>https://jethughes.github.io/notes/notes/automation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/automation/</guid><description>Automatation is the use of automatic equipment in a productions process. The goal is to remove repetitive tasks. Automation can be built within a tool, or it can be a tool that controls other tools.</description></item><item><title>avl-tree</title><link>https://jethughes.github.io/notes/notes/avl-tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/avl-tree/</guid><description>AVL tree most basic and obvious.
each node contains some extra information: the difference between the height of its right and left subtee.</description></item><item><title>backend</title><link>https://jethughes.github.io/notes/notes/backend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/backend/</guid><description>Static vs Dynamic Sites Static
Load pre-created files to a web serve Client requests these files from the server and displays them on the browser Dynamic</description></item><item><title>balancing-binary-search-trees</title><link>https://jethughes.github.io/notes/notes/balancing-binary-search-trees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/balancing-binary-search-trees/</guid><description>the height of a BST is the length of its longest chain. Most operations are $O(n)$ where n is the height of the tree.</description></item><item><title>behaviour-driven-development</title><link>https://jethughes.github.io/notes/notes/behaviour-driven-development/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/behaviour-driven-development/</guid><description>Models should be created with the users needs in mind. Required bahaviour determines acceptance criteria This is called Behaviour Driven Development</description></item><item><title>big-picture</title><link>https://jethughes.github.io/notes/notes/big-picture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/big-picture/</guid><description>HCI is the cycle of design, implementation, evaluation of user interfaces
&amp;ldquo;fail fast so you can succeed sooner&amp;rdquo;</description></item><item><title>binary-search-tree</title><link>https://jethughes.github.io/notes/notes/binary-search-tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/binary-search-tree/</guid><description>code
bst-operations
a collection of nodes with one distinguished node called the root
rules:
the node data contains a key which comes from some ordered type e.</description></item><item><title>birth-of-hci</title><link>https://jethughes.github.io/notes/notes/birth-of-hci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/birth-of-hci/</guid><description>ENIAC (one of the first programmable, electronic computers) 1946, and the first six programmers: Kay McNulty, Betty Jennings, Betty Snyder, Marlyn Meltzer, Fran Bilas, and Ruth Lichterman</description></item><item><title>bishop-berkely</title><link>https://jethughes.github.io/notes/notes/bishop-berkely/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/bishop-berkely/</guid><description>monist, imperisist, immaterial idealist
Superstition 040-superstition
Bishop Berkely wanted to abolish superstitions concerning the senses.
There was a common idea that there is a &amp;ldquo;true reality&amp;rdquo; that is hidden behind a &amp;ldquo;veil of perception&amp;rdquo;.</description></item><item><title>bitcoin</title><link>https://jethughes.github.io/notes/notes/bitcoin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/bitcoin/</guid><description>whitepaper: bitcoin.org/bitcoin.pdf
Governance &amp;ldquo;Bitcoin governance is the process by which a set of transaction and block verification rules are decided upon, implemented, and enforced, such that individuals adopt these rules for verifying that payments they received in transactions and blocks fit their subjective definition of “Bitcoin”.</description></item><item><title>Blockchain Based Wine Supply Chain Traceability System</title><link>https://jethughes.github.io/notes/notes/Blockchain-Based-Wine-Supply-Chain-Traceability-System/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Blockchain-Based-Wine-Supply-Chain-Traceability-System/</guid><description>Summary Extracts Related</description></item><item><title>Blockchain Governance Challenges — Beyond Libertarianism</title><link>https://jethughes.github.io/notes/notes/Blockchain-Governance-Challenges-Beyond-Libertarianism/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Blockchain-Governance-Challenges-Beyond-Libertarianism/</guid><description>link: https://doi.org/10.1017/aju.2021.65
Summary Extracts Notes Related</description></item><item><title>Blockchain Governance—A New Way of Organizing Collaborations</title><link>https://jethughes.github.io/notes/notes/Blockchain-GovernanceA-New-Way-of-Organizing-Collaborations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Blockchain-GovernanceA-New-Way-of-Organizing-Collaborations/</guid><description>link: https://doi.org/10.1287/orsc.2020.1379
Summary Focuses on governance of organisation by means of a blockchain. They compare governance using a blockchain to relational and contractual governance.</description></item><item><title>Blockchain Technology and Decentralized Governance – Is the State Still Necessary</title><link>https://jethughes.github.io/notes/notes/Blockchain-Technology-and-Decentralized-Governance-Is-the-State-Still-Necessary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Blockchain-Technology-and-Decentralized-Governance-Is-the-State-Still-Necessary/</guid><description>Summary Extracts Related</description></item><item><title>Blockchain — The operating system of smart cities</title><link>https://jethughes.github.io/notes/notes/Blockchain-The-operating-system-of-smart-cities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Blockchain-The-operating-system-of-smart-cities/</guid><description>link: https://doi.org/10.1016/j.cities.2021.103104
Summary Blockchain within smart cities.
Extracts Notes Related</description></item><item><title>Blockchain-based smart contracts as new governance tools for the sharing economy</title><link>https://jethughes.github.io/notes/notes/Blockchain-based-smart-contracts-as-new-governance-tools-for-the-sharing-economy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Blockchain-based-smart-contracts-as-new-governance-tools-for-the-sharing-economy/</guid><description>link: https://doi.org/10.1016/j.cities.2021.103325
Summary Explores use of blockchain management systems (BMSs) in the sharing economy for things like uber, airbnb, and wework.</description></item><item><title>blockchain-terms</title><link>https://jethughes.github.io/notes/notes/blockchain-terms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/blockchain-terms/</guid><description>Hyperledger: An organisation made up of industry leaders who are helping to develop various permissioned blockchain framworks
Smart Contracts: Within ethereum a smart contract is a type of account which had storage and code, and executes the code when it recieves a message.</description></item><item><title>boolean-equations</title><link>https://jethughes.github.io/notes/notes/boolean-equations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/boolean-equations/</guid><description>Often used to describe/define combinatorial-logic
Precedence Precedence
NOT is unary, so it has the highest precedence AND is mulitply, so it comes next OR is like plus, to it comes last Creating boolean equations Creating boolean equations:</description></item><item><title>branch</title><link>https://jethughes.github.io/notes/notes/branch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/branch/</guid><description>Split current dev path into two to work on e.g., a bug or a feature
1 Overview allows users to work independently development continues independently along each branch can easily switch between branches can push a branch without affecting others branches can be merged back into the original always at least one main branch (usually master, main, trunk) 2 Default branch used to be called master now called main 3 Methodologies 3.</description></item><item><title>brutalist-architecture</title><link>https://jethughes.github.io/notes/notes/brutalist-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/brutalist-architecture/</guid><description>no just about aesthetic - also intent and morals
became popular in the 60s. mass concrete started in the 20s. cheap, interesting shapes.</description></item><item><title>bst-operations</title><link>https://jethughes.github.io/notes/notes/bst-operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/bst-operations/</guid><description>Search operation We want to search in a BST for a key k returning true if it is found and false if it is not</description></item><item><title>bug-tracker</title><link>https://jethughes.github.io/notes/notes/bug-tracker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/bug-tracker/</guid><description>link: https://youtu.be/oC483DTjRXU
potential employer needs to now i
need to target toward the dev/hiring manager. built wha the need/want to see.</description></item><item><title>build-tools</title><link>https://jethughes.github.io/notes/notes/build-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/build-tools/</guid><description>Build tools Tools that automate the construction of software,.
C if you recompile C you get an object file which can be linked.</description></item><item><title>bus</title><link>https://jethughes.github.io/notes/notes/bus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/bus/</guid><description>data bus
address bus
control bus
conmmunicate between parts of the computer</description></item><item><title>business-analyst</title><link>https://jethughes.github.io/notes/notes/business-analyst/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/business-analyst/</guid><description/></item><item><title>business-functions</title><link>https://jethughes.github.io/notes/notes/business-functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/business-functions/</guid><description>what the business ought to be doing not who, how, stucture, tech each business function becomes a set of features within an info system</description></item><item><title>business-process</title><link>https://jethughes.github.io/notes/notes/business-process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/business-process/</guid><description>A sequence of tasks or steps required to carry out a particular business function e.g.,: pocure new assets apply for leave process and orer enrol a student paper and or computer based processes processes can have sub-processes ⇒ nested hierarchy terminology business processes are also know as workflows activity usually means the same thing as tasl example: processing an order</description></item><item><title>business-process-model</title><link>https://jethughes.github.io/notes/notes/business-process-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/business-process-model/</guid><description> graphical depiction fo one ormore business proccesses some variant of a flowchart many different approaches BPMN UML activity-diagrams data flow diagrams DFDs good for security business process execution language BPEL programm how a process with go can be executed subject oriented business process mangement (s-BPM) and many more may be execultable developed alongside data models ( ERDs, class-diagrams etc)</description></item><item><title>business-process-model-and-notation</title><link>https://jethughes.github.io/notes/notes/business-process-model-and-notation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/business-process-model-and-notation/</guid><description>BPMN
graphical diagramming language free international vendor standard developed by the object management group shows only the order of activites when, not under what conditions do not: detail the activites describe how it is informed 1 Components 1.</description></item><item><title>C-language</title><link>https://jethughes.github.io/notes/notes/C-language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/C-language/</guid><description>“C is an imperative procedural language supporting structured programming, lexical variable scope, and recursion, with a static type system. It was designed to be compiled to provide low-level access to memory and language constructs that map efficiently to machine instructions, all with minimal runtime support.</description></item><item><title>characters</title><link>https://jethughes.github.io/notes/notes/characters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/characters/</guid><description>Characters A written symbol.
In english are represented as a single byte, (other languages use 2 bytes or more)</description></item><item><title>cheat-sheets</title><link>https://jethughes.github.io/notes/notes/cheat-sheets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cheat-sheets/</guid><description> bash-tricks git-cheat-sheet latex-cheat-sheet puml-cheat-sheet</description></item><item><title>cia-triad</title><link>https://jethughes.github.io/notes/notes/cia-triad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cia-triad/</guid><description>Security had been split into three main areas
Confidentiality -&amp;gt; Information should be protected from exposure Integrity -&amp;gt; Information should not be corrupted Availability -&amp;gt; Information should be available users without obstacles</description></item><item><title>class-diagrams</title><link>https://jethughes.github.io/notes/notes/class-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/class-diagrams/</guid><description>General example ERD vs class diagram
1 Stereotypes add further meaning to fields and methods
e.g., &amp;laquo; unique &amp;raquo;, &amp;laquo; abstrat &amp;raquo;, &amp;laquo; interface &amp;raquo;, 2 Packages group classes together break system to logical chunks package diagram, a class diagram with nothing but packages</description></item><item><title>cmoc</title><link>https://jethughes.github.io/notes/notes/cmoc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cmoc/</guid><description>CMOC is a 6809 c compiler.
it compiles c code into 6809 assembly
callling conventions
A routine must preserve Y, U, S and DP</description></item><item><title>color</title><link>https://jethughes.github.io/notes/notes/color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/color/</guid><description>Color design grayscale first. keep luminance values from grayscale when moving to color use color harmonisers about 5-8% of men are colorblind (red-green, blue–yellow, total color blindness)</description></item><item><title>combinatorial-logic</title><link>https://jethughes.github.io/notes/notes/combinatorial-logic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/combinatorial-logic/</guid><description>[!Definition] Combinatorial Logic Circuit is a circuit whose digital outputs are dependent only on its digital inputs They can be described using logic expressions and therefore logic gates.</description></item><item><title>commom-pool-resources</title><link>https://jethughes.github.io/notes/notes/common-pool-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/common-pool-resources/</guid><description>def: a natural or man made resource system that benefits a group of people, but which provides diminished benefits to everyone if each individual pursues their own-self interest.</description></item><item><title>comp-210</title><link>https://jethughes.github.io/notes/notes/comp-210/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/comp-210/</guid><description>Assignments No final exam
assignment 1 assingment 3 myepichacking anatomyofahack Notes information-security mccumber-cube access-security-tradeoff cia-triad cryptography randomness authorisation authentication passwords Lectures 01-information-assurance 02-concepts-and-roles 03-threats-social-engineering-and-failures 04-authentication-authorisation-passwords 05-cryptography 06-hashing-binary-public-key-cryptography 07-cryptography-applications 8-application-security-1 12-pen-testing 13-pen-testing-2 15-policies-standards-practices 16-cloud-security 17-ML-in-IA-1 18-ML-in-IA-2 19-deepfakes 20-SE-in-IA 21-SE-in-IA-2 22-digital-preservation</description></item><item><title>compiler</title><link>https://jethughes.github.io/notes/notes/compiler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/compiler/</guid><description>What are they/what do they do used to build stored programs usually program are written in a high level compiled language C, C++, Java, C#, etc Output machine code in binary This can be loaded and run by hardware Traditional Stages of Compilation lexing: This is the step where the source code is converted into tokens.</description></item><item><title>computer-architecture</title><link>https://jethughes.github.io/notes/notes/computer-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/computer-architecture/</guid><description>Stored program computer made up of:
CPU memory etc Von Neumann Architecture three key concepts data and instructions are stored in a single read-write memory contents of memory are addressable by location, without regard to the type of data contained execution occurs in a sequential fashion, unless explicitly altered, from one instuction to the next programs and data are the same thing and so its possible to write soure code (data) and comile them into executables (programs) that can be loaded as data and then executed as programs Early computers</description></item><item><title>conceptual-vs-ipmlementation-models</title><link>https://jethughes.github.io/notes/notes/conceptual-vs-ipmlementation-models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/conceptual-vs-ipmlementation-models/</guid><description>Models like ERDs are used to represent a high level conceptual overview of a system, or to as a lower level specification that can drive the implementation of the database.</description></item><item><title>consensus</title><link>https://jethughes.github.io/notes/notes/consensus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/consensus/</guid><description>The consensus algorithm takes care of the transaction verification within the network. Different blockchain systems implement different consensus algorithms which can benefit the miners directly or indirectly.</description></item><item><title>consistency-and-standards</title><link>https://jethughes.github.io/notes/notes/consistency-and-standards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/consistency-and-standards/</guid><description>good and bad
standards (user interface guidelines) are always chaning differ between platforms evolve over time
e.g., menus</description></item><item><title>consoles-terminals-shells</title><link>https://jethughes.github.io/notes/notes/consoles-terminals-shells/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/consoles-terminals-shells/</guid><description>console -&amp;gt; io device which is part of a computer (physical terminal) console is the device: -&amp;gt; terminal is program inside that device terminal -&amp;gt; text input output environment (can be remote) windows terminal [[notes/shell]] -&amp;gt; program which the terminal/console sends input to which sends command to the OS [[notes/unix-shell]] powershell cmd bash, fish, zsh, ksh, sh, tsch 0.</description></item><item><title>containers</title><link>https://jethughes.github.io/notes/notes/containers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/containers/</guid><description>What are (software) containers? Containers encapsulate a computing environment Facilitates portable and reproducible use of software Can wrap up application code and data, and much of OS Containers are lightweight virtual machines You need to boot them up, as for any OS .</description></item><item><title>continuous-integration</title><link>https://jethughes.github.io/notes/notes/continuous-integration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/continuous-integration/</guid><description>1 Overview Continuous integration (CI) is the practice of automating the integration of code changes from multiple contributors into a single software project - atlassian .</description></item><item><title>control-unit</title><link>https://jethughes.github.io/notes/notes/control-unit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/control-unit/</guid><description>Control unit coordinates the operation of the computer generates control signals connect registers to the bus control the function of the ALU provides timing signals to the system allso associated with the decoding and executuion of instructions in a pipelined system</description></item><item><title>cool-websites"</title><link>https://jethughes.github.io/notes/notes/cool-websites/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cool-websites/</guid><description> https://www.seedclub.xyz https://www.lapa.ninja/tag/seedclub/</description></item><item><title>cosc-201</title><link>https://jethughes.github.io/notes/notes/cosc-201/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc-201/</guid><description>Assignments [[notes/assignment-02]] Analysis aymptotic-notation induction analysis-of-recursive-algorithms Paradigms divide-and-conquer unite-and-conquer dynamic-programming memoization Data Structues union-find priority-queue dynamic-linear-datatype Stack Queue heap treap hash-map linear-probing set tree binary-search-tree balancing-binary-search-trees red-black-tree avl-tree bst-operations tree-traversal graphs Algorithms mergesort heapsort [ quicksort] Lectures 07-mergesort-1 08-mergesort-2 09-stacks-queues-heaps 10-heaps-and-heapsort 11-sets-maps-trees 12-binary-search-tree-operations 13-bst-traversals-and-balance 14-balancing-bsts 15-dynamic-programming 16-hasing-maps-sets 17-collision-resolution-probing 18-hash-examples 19-graphs 20-graphs-2 Archive 16-c201-archive</description></item><item><title>cosc-202</title><link>https://jethughes.github.io/notes/notes/cosc-202/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc-202/</guid><description>Assignment reflective-statement-plan reflective-statement Outline consoles-terminals-shells git ethics-in-cs integrated-development-environments branch testing test-driven-development unit-testing debugging imperative programming documentation continuous-integration automation software library application-programming-interface containers linker loaders operating-system software-licensing [ security] Lectures 07-testing 08-debugging 09-documentation 10-continuous-integration-1 11-continuous-integration-2 12-automation 13-code-librarires 14-apis 15-containers 16-compilers 17-linkers-and-loaders 18-build-tools 19-security 20-software-licensing 22-open-source-software</description></item><item><title>cosc-203</title><link>https://jethughes.github.io/notes/notes/cosc-203/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc-203/</guid><description>page labs html validator Assignments front end project back end project ethics essay Labs cosc203-lab16 cosc203-lab17 cosc203-lab18 cosc203-lab19 cosc203-lab20 cosc203-lab24 cosc203-lab25 Notes dns</description></item><item><title>cosc-204</title><link>https://jethughes.github.io/notes/notes/cosc-204/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc-204/</guid><description>page
Notes characters digital-data memory boolean-equations combinatorial-logic logic-gates transistors demultiplexor sequential-circuits bus control-unit CPU ALU computer-architecture 6809-addressing-modes 6809 Lectures 01-bits-and-bytes 02-combinatorial-logic 03-sequential-logic-circuits 04-computer-architecture 05-6809-assembly 06-6809-programming 07-6809-advanced 08-intro-to-c 09-intro-to-c-2 10-intro-to-c-arrays-malloc-free 11-struct-and-union 12-pointers-to-routines 13-OS-intro 14-processes-and-system-calls 15-file-systems 16-device-drivers 17-processes-communication 18-processes-sharing-and-threads 19-cpu-scheduling 20-sync-deadlock 21-memory-management 22-virtual-memory 23-IO-systems 24-protection-of-file-systems Info By completion of this paper students are expected to: - Understand how programs are executed on computer hardware - Demonstrate an ability to read and write assembly language programs - Understand the fundamental principles and structure of an operating system - Be able to construct programs in C and understand its role as a systems programming language - Understand core operating systems algorithms such as process scheduling and resource allocation and management - Be aware of the importance of efficient use of resources from computational, economic, and environmental viewpoints</description></item><item><title>cosc203-lab16</title><link>https://jethughes.github.io/notes/notes/cosc203-lab16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc203-lab16/</guid><description>VISIT(doctor_id, patient_id, patient_name, date_time, diagnosis, treat_code, charge)
No PATIENT(patient_id, patient_name) VISIT(patient_id, doctor_id, date_time, diagnosis, treat_code, charge)
No TREATMENT(treat_code, charge) PATIENT(patient_id, patient_name) VISIT(patient_id, doctor_id, date_time, diagnosis, treat_code)</description></item><item><title>cosc203-lab17</title><link>https://jethughes.github.io/notes/notes/cosc203-lab17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc203-lab17/</guid><description>TCP, HTTP, SSL .004 seconds subtract the time it was sent from time the response was recieved addresses mine: 10.</description></item><item><title>cosc203-lab18</title><link>https://jethughes.github.io/notes/notes/cosc203-lab18/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc203-lab18/</guid><description>http 1.1 does not say
200 does not say
775 conversation completeness no if-modified-since.</description></item><item><title>cosc203-lab19</title><link>https://jethughes.github.io/notes/notes/cosc203-lab19/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc203-lab19/</guid><description>DNS request protocol is UDP The ports of the DNS queries are:
dest of query: 53 source of response: 53 There were 12 dns queries.</description></item><item><title>cosc203-lab20</title><link>https://jethughes.github.io/notes/notes/cosc203-lab20/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc203-lab20/</guid><description>header
4 fields source port dest port length checksum each field is 2 bytes payload is 980 bytes</description></item><item><title>cosc203-lab25</title><link>https://jethughes.github.io/notes/notes/cosc203-lab25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc203-lab25/</guid><description>frame number 1 before - to establish a connection for the tls messsages to be sent through v 1.</description></item><item><title>CPR-governance</title><link>https://jethughes.github.io/notes/notes/CPR-governance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/CPR-governance/</guid><description>from [Ostrom1990]
1.a) User boundaries: Clear boundaries between legitimate users and nonusers must be clearly defined.
1.b) Resource boundaries: Clear boundaries are present that define a resource system and separate it from the larger surrounding environment.</description></item><item><title>CPU</title><link>https://jethughes.github.io/notes/notes/CPU/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/CPU/</guid><description>The CPU controls the computer. It is the main component.
A CPU is made of many components including
Registers control-unit ALU data is transeferred betwen these components and memory through data buses</description></item><item><title>cryptography</title><link>https://jethughes.github.io/notes/notes/cryptography/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cryptography/</guid><description>Crytography arises from the need for confidentiality. Some people say
&amp;ldquo;if you have nothing to fear you have nothing to hide&amp;rdquo;.</description></item><item><title>css</title><link>https://jethughes.github.io/notes/notes/css/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/css/</guid><description>Structure 1 2 3 4 h1(selector) { color(property): red(value/function); \ font-size: 5em; / - declarations } Selectors Types</description></item><item><title>daily-notes</title><link>https://jethughes.github.io/notes/notes/daily-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/daily-notes/</guid><description>daily-notes</description></item><item><title>dApps</title><link>https://jethughes.github.io/notes/notes/dApps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/dApps/</guid><description>decentralized apps.
mostly run on the ethereum blockchain</description></item><item><title>dark-patterns</title><link>https://jethughes.github.io/notes/notes/dark-patterns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/dark-patterns/</guid><description>turniing patterns against the user. all the dsign heuristics can be used against the user
: defaults to a recurring payment : additional product is automatically included hard to cancel facebook account who is the customer of free products like tiktik, facebook, instagram.</description></item><item><title>data-access</title><link>https://jethughes.github.io/notes/notes/data-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/data-access/</guid><description>Most infosystems require persistent data. e.g.,
save to file save to database Some systems require several persistent data stores. e.</description></item><item><title>data-access-object</title><link>https://jethughes.github.io/notes/notes/data-access-object/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/data-access-object/</guid><description>Designing DAOs general rule: one DAO per &amp;ldquo;logical unit&amp;rdquo; of data access many DAOs are just for one class e.</description></item><item><title>Data-Link-Layer</title><link>https://jethughes.github.io/notes/notes/Data-Link-Layer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Data-Link-Layer/</guid><description/></item><item><title>database-based-storage</title><link>https://jethughes.github.io/notes/notes/database-based-storage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/database-based-storage/</guid><description>managed by DBMS usually SQL based also noSQL for unstructured big data advantages multi user support transactions (failure recovery) (centralised) constraints and referntial integrity flexible and ad-hoc querying manage large data Database APIS APIs #unfinished</description></item><item><title>databases</title><link>https://jethughes.github.io/notes/notes/databases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/databases/</guid><description>Modelling Database: integrated collection of data
meaning specific purpose ER Diagram Schemas
Relational Model Two parts
Relation Schema Domain Constraints</description></item><item><title>david-hume</title><link>https://jethughes.github.io/notes/notes/david-hume/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/david-hume/</guid><description>Art 054-hume-on-art
In his essay the standard of taste Hume sets out to determine how we can arrive at a universal standard of taste</description></item><item><title>debugging</title><link>https://jethughes.github.io/notes/notes/debugging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/debugging/</guid><description>removing technical faults isolaing and remove technical faults a human process
requires creativity/disipline/knowledge deepr understanding of code debuggers are tools to help debugging</description></item><item><title>Decentralized Network Governance — Blockchain Technology and the Future of Regulation</title><link>https://jethughes.github.io/notes/notes/Decentralized-Network-Governance-Blockchain-Technology-and-the-Future-of-Regulation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Decentralized-Network-Governance-Blockchain-Technology-and-the-Future-of-Regulation/</guid><description>link: https://doi.org/10.3389/fbloc.2020.00012
Summary Extracts Notes Related</description></item><item><title>decentralized-autonomous-organization</title><link>https://jethughes.github.io/notes/notes/decentralized-autonomous-organization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/decentralized-autonomous-organization/</guid><description>In general terms, DAOs are member-owned communities without centralized leadership. A commitment to share value with a community.
they seek to</description></item><item><title>Decision Problems in Blockchain Governance — Old Wine in New Bottles or Walking in Someone Elses Shoes</title><link>https://jethughes.github.io/notes/notes/Decision-Problems-in-Blockchain-Governance-Old-Wine-in-New-Bottles-or-Walking-in-Someone-Elses-Shoes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Decision-Problems-in-Blockchain-Governance-Old-Wine-in-New-Bottles-or-Walking-in-Someone-Elses-Shoes/</guid><description>link: https://doi.org/10.1080/07421222.2020.1759974
Summary Examines 6 problems in blockchain
Demand management Data management system design and architecture membership ownership disputes transaction reversal They came up with four main areas that &amp;ldquo;characterise blockchain governance&amp;rdquo;</description></item><item><title>DeFi</title><link>https://jethughes.github.io/notes/notes/DeFi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/DeFi/</guid><description>Decentralised finance - an umbrella term for financial services on public blockchains
expands of the basic premise of bitcoin and creates an entire alternative to wall street</description></item><item><title>Defining Blockchain Governance — A Framework for Analysis and Comparison</title><link>https://jethughes.github.io/notes/notes/Defining-Blockchain-Governance-A-Framework-for-Analysis-and-Comparison/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Defining-Blockchain-Governance-A-Framework-for-Analysis-and-Comparison/</guid><description>link: https://doi.org/10.1080/10580530.2020.1720046
Summary Extracts Notes Related</description></item><item><title>demultiplexor</title><link>https://jethughes.github.io/notes/notes/demultiplexor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/demultiplexor/</guid><description>Demultiplexor Mutli way swtich where the address determines which output recieves the input</description></item><item><title>dependencies-among-attributes</title><link>https://jethughes.github.io/notes/notes/dependencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/dependencies/</guid><description>Functional Depenencies (FDs) If for any given value of attribute A there is exactly one associated value of attribute B, then A functionally determines B (loosely)</description></item><item><title>design-heuristics</title><link>https://jethughes.github.io/notes/notes/design-heuristics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/design-heuristics/</guid><description>show-system-status familiar-metaphors-and-language consistency-and-standards user-freedom-and-control error-prevention recognition-over-recall flexibility-and-efficiency aesthetic-and-minimalist-design help-and-documentation recognise-and-recover-from-errors anti-design-heristics dark-patterns</description></item><item><title>designing-studies</title><link>https://jethughes.github.io/notes/notes/designing-studies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/designing-studies/</guid><description>Need to be more specific than &amp;ldquo;Do you like my interface&amp;rdquo;. Need to avoid experimenter bias
Terms Comparison: What is good &amp;ldquo;Yark stick&amp;rdquo; Baserate: how often does Y occur requires measurin Y Correlation: Do X and Y co-vary Requires measuring X and Y Causes: Does X cause Y Requires measuring X and Y and manipulating X Manipulations: Indepenedent variables Measures: Dependent variables e.</description></item><item><title>designing-studies-video</title><link>https://jethughes.github.io/notes/notes/designing-studies-video/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/designing-studies-video/</guid><description>designing-studies</description></item><item><title>developer</title><link>https://jethughes.github.io/notes/notes/developer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/developer/</guid><description/></item><item><title>digital-data</title><link>https://jethughes.github.io/notes/notes/digital-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/digital-data/</guid><description>What is data A fact — a piece of information corresponds to discreete facts about phenomena from which we gain information abou the world The concept of a value is fundamental to data e.</description></item><item><title>direct-manipulation-video</title><link>https://jethughes.github.io/notes/notes/direct-manipulation-video/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/direct-manipulation-video/</guid><description>e.g., better measuring cup
ford qquote about faster horse
four insights
both transit and cookware simply asking doesn&amp;rsquo;t work find out by going into the field bring protoypes with you listen to peoples own designs two steps each has success or failure</description></item><item><title>divide-and-conquer</title><link>https://jethughes.github.io/notes/notes/divide-and-conquer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/divide-and-conquer/</guid><description>Divide an conquer algorithms have three parts:
pre ⇒ break apartinto two or more smaller problems whose size add up to at most n Rec ⇒ solve those problems recursively post ⇒ combine solutions into a solution of the original problem</description></item><item><title>dns</title><link>https://jethughes.github.io/notes/notes/dns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/dns/</guid><description>record has four fields
name value type ttl meaning of name an value are dependent on type
Types</description></item><item><title>docker-containers</title><link>https://jethughes.github.io/notes/notes/docker-containers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/docker-containers/</guid><description>link:https://www.youtube.com/watch?v=eGz9DS-aIeY
where virtual machines virtualise hardware, docker virtualises OSs. Each of the containers uses the same underlying kernel. This is why its so fast.</description></item><item><title>documentation</title><link>https://jethughes.github.io/notes/notes/documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/documentation/</guid><description>1 Who, what where Audience users other devs your team members anyone trying to understand you software your future self Locations source code project repo emebedding in program hosted separately User expectations evolving towards software that facilitates experimentation No help docs =&amp;gt; everything is self-explanatory high usability users familar with many abstractions e.</description></item><item><title>domain-driven-design</title><link>https://jethughes.github.io/notes/notes/domain-driven-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/domain-driven-design/</guid><description>A method of designing software by designing models of the domain and creating software which conforms to those models</description></item><item><title>dynamic-linear-datatype</title><link>https://jethughes.github.io/notes/notes/dynamic-linear-datatype/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/dynamic-linear-datatype/</guid><description>Both are Dynamic linear data types (interface)
An abstraction of a collection of data organised &amp;ldquo;in a line&amp;rdquo; which supprts addition of new elements and the removal of (some) old elements</description></item><item><title>dynamic-programming</title><link>https://jethughes.github.io/notes/notes/dynamic-programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/dynamic-programming/</guid><description>A method of designing algorithms, where a higher amount of space is used, in order to gain reduction in time. This usually done by remembering previous calculations.</description></item><item><title>Enhanced immutability of permissioned blockchain networks by tethering provenance with a public blockchain network</title><link>https://jethughes.github.io/notes/notes/Enhanced-immutability-of-permissioned-blockchain-networks-by-tethering-provenance-with-a-public-blockchain-network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Enhanced-immutability-of-permissioned-blockchain-networks-by-tethering-provenance-with-a-public-blockchain-network/</guid><description>Summary This paper notes that existing permissioned blockchains are susceptible to an attack where some of the permissioned participants collude to rewrite the chain.</description></item><item><title>entity-relationship-diagrams</title><link>https://jethughes.github.io/notes/notes/entity-relationship-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/entity-relationship-diagrams/</guid><description>cardinality identifying vs non identifying relationship
labels are important - but not always needed
associative entity =&amp;gt; changes many to many relationship with additional relationship</description></item><item><title>ER-Diagram</title><link>https://jethughes.github.io/notes/notes/ER-Diagram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/ER-Diagram/</guid><description>Entity: a thing in the real world with independent existence (phsyical e.g., person or conceptual e.g., job) Entity type: A collection of entities</description></item><item><title>error-prevention</title><link>https://jethughes.github.io/notes/notes/error-prevention/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/error-prevention/</guid><description>2.1 Bad input correct human errors auto completion
2.2 helpful constraints 2.3 Suggestions and autocorrection heavily abused by industry</description></item><item><title>eth-governance</title><link>https://jethughes.github.io/notes/notes/eth-governance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/eth-governance/</guid><description>note: may be out of date after the merge
governance are the systems that allow decisions to be made e.</description></item><item><title>ethereum</title><link>https://jethughes.github.io/notes/notes/ethereum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/ethereum/</guid><description>ethereum whitepaper
a new version of blockchain which has better internal scripting the state of ethereum is made up account objects.</description></item><item><title>ethics-in-cs</title><link>https://jethughes.github.io/notes/notes/ethics-in-cs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/ethics-in-cs/</guid><description>1 Case studies [[notes/facial-recognition-in-US-riots-2021-01-06]] [[notes/anti-govt-protest-china]] [[notes/how-is-safe-enough-for-autonomous-vehicles]] 1.1 Differences 1 vs 2 Govt vs vigilante
my judgements contain additionl context e.</description></item><item><title>evaluating-designs</title><link>https://jethughes.github.io/notes/notes/evaluating-designs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/evaluating-designs/</guid><description>#unfinished
Why to evaluate using &amp;lsquo;outside&amp;rsquo; people:
how do we know if a prototye is good designer/developers are not &amp;lsquo;fresh&amp;rsquo; -&amp;gt; they already have experience with the product designer/developers don&amp;rsquo;t know what real users will do Issues to consider Reliability/precision how accurate is your study?</description></item><item><title>extreme-programming</title><link>https://jethughes.github.io/notes/notes/extreme-programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/extreme-programming/</guid><description>take current industry practices to the extreme
focus of proven industry practices combine them innovatively to get better results 1 Values and principles communication, simplicity, feedback, courage.</description></item><item><title>facial-recognition-in-US-riots-2021-01-06</title><link>https://jethughes.github.io/notes/notes/facial-recognition-in-US-riots-2021-01-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/facial-recognition-in-US-riots-2021-01-06/</guid><description>capital riots occured on 2021-01-06
there was video from the riots which contained faces
facial recognition acquired a pic of each person faces were uploaded to a website</description></item><item><title>familiar-metaphors-and-language</title><link>https://jethughes.github.io/notes/notes/familiar-metaphors-and-language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/familiar-metaphors-and-language/</guid><description> imitating familiar real life
Categories
good bad</description></item><item><title>file-based-storage</title><link>https://jethughes.github.io/notes/notes/file-based-storage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/file-based-storage/</guid><description>doesn&amp;rsquo;t scale well
demlimited text e.g., CSV TSV easy to create and process portable lowest common denominator structured text e.</description></item><item><title>finite-state-machine</title><link>https://jethughes.github.io/notes/notes/finite-state-machine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/finite-state-machine/</guid><description>A finite state machine is a program which has a number of states called nodes with transition edges between them. You then move the state of the program to a particular state by navigating through the edges.</description></item><item><title>Fire-And-Fury</title><link>https://jethughes.github.io/notes/notes/Fire-And-Fury/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Fire-And-Fury/</guid><description>damien de ment
&amp;ldquo;super spreader&amp;rdquo; banned from twitter 2021 for tweets promiting similar acts to the insurgence at the white house &amp;ldquo;nz politician will fear for their lives, and rightfully so&amp;rdquo; came together out of necessity for a common purpose.</description></item><item><title>flexibility-and-efficiency</title><link>https://jethughes.github.io/notes/notes/flexibility-and-efficiency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/flexibility-and-efficiency/</guid><description>4.1 Choices something with immediate effect can use switch good defaults
4.2 shortcuts and advanced options
ambient information</description></item><item><title>food-manufacturing</title><link>https://jethughes.github.io/notes/notes/food-manufacturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/food-manufacturing/</guid><description>Link between agricultural producer and consumers. Process raw food into finished goods read for grocer/wholesaler
Industry segment Employment Establishments Total 100.</description></item><item><title>Fork-free hybrid consensus with flexible Proof-of-Activity</title><link>https://jethughes.github.io/notes/notes/Fork-free-hybrid-consensus-with-flexible-Proof-of-Activity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Fork-free-hybrid-consensus-with-flexible-Proof-of-Activity/</guid><description>Summary Extracts Related</description></item><item><title>front-end-project</title><link>https://jethughes.github.io/notes/notes/front-end-project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/front-end-project/</guid><description> spec
Links to sites:
https://jethughes.github.io/nzbirds/ https://cosc-203.cspages.otago.ac.nz/assignment-01/ Links to repos:
https://github.com/JetHughes/nzbirds https://altitude.otago.ac.nz/cosc-203/assignment-01 Features marks x Display: all photos by default 2 x Display: each bird’s name in both Māori and English 2 x Display: each bird’s conservation status in both text and colour 2 x Display: credit for each photo 1 x Form: search filtering 3 x Form: category filtering 3 x Form: Handle special characters (diacritics) 1 x Correctness: pass the W3C Validator 1 x Correctness: correct use of form and semantic elements 1 x Style: Responsive design 1 Style: looks nice 1 x Extra feature(s) bonus marks</description></item><item><title>furps</title><link>https://jethughes.github.io/notes/notes/furps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/furps/</guid><description>The furps framwork defines a robust way of defining and categorising requirements and constraints. Requirements are split into the following five categories:</description></item><item><title>gifts</title><link>https://jethughes.github.io/notes/notes/gifts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/gifts/</guid><description>All gifts should contain an element of surprise Respect the gifting Holy Trinity: NICE MADE THOUGHTFUL Made gifts should not be bigger than one&amp;rsquo;s hand Dating and/or Monogramming a gift gives it extra power Know what flowers your girl likes.</description></item><item><title>git</title><link>https://jethughes.github.io/notes/notes/git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/git/</guid><description>Git is a tool to track changes to sets of file It is the most commonly used [[notes/02-version-control-system]] 1 Team git protocols you can develop a team protocol for Git use</description></item><item><title>git-cheat-sheet</title><link>https://jethughes.github.io/notes/cheatsheets/git-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/cheatsheets/git-cheat-sheet/</guid><description>1 Commands Clone -&amp;gt; create local copy of remote repo Commit -&amp;gt; save changes to local repo Packages logically related collection of changes and save the permanently is repos history Each commit should address single well defined task Commits should be small and regular Should contain a brief, informative, message one line -&amp;gt; &amp;lt;50 (commit needing more than this are likely too large) multi line -&amp;gt; &amp;lt;72 well defined, shared terminology consider what other devs need to know Stash -&amp;gt; temporarily store uncommited changes Push -&amp;gt; Upload changes from local repo to remote Pull -&amp;gt; Download and merge changes from remote repo into local repo (fetch + merge) Merge -&amp;gt; Merge changes from one brach into another merge when: pulling changes from remote into your repo merging from branch into main codebase Can merge any branch into any other branch good idea to regularly rebase specialised persistent branches to keep them in sync with the more general main codebase rebase topic branches before merging into main helps to deal with merge conflicts only branch is broken if you mess up can test for breakage before merging to main Merging is usually automatic sometimes merge algorithm can&amp;rsquo;t resolve conflicting changes to the same code e.</description></item><item><title>governance</title><link>https://jethughes.github.io/notes/notes/governance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/governance/</guid><description>A structure through which a participant or user of a system agrees to use the system
There are three key elements of governance: Rulers, Rules and Participants.</description></item><item><title>Governance in the Blockchain Economy — A Framework and Research Agenda</title><link>https://jethughes.github.io/notes/notes/Governance-in-the-Blockchain-Economy-A-Framework-and-Research-Agenda/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Governance-in-the-Blockchain-Economy-A-Framework-and-Research-Agenda/</guid><description>Summary This paper proposed a new type of economic system – the blockchain economy. These examined Swarm City as a case study.</description></item><item><title>graphs</title><link>https://jethughes.github.io/notes/notes/graphs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/graphs/</guid><description>Represents a set of things with relationships between them.
a set of vertices some edges between them edges on some graphs have weights edges on some graphs are directed Some graphs are named e.</description></item><item><title>grouping</title><link>https://jethughes.github.io/notes/notes/grouping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/grouping/</guid><description>Gestaltkriterien “Gestalt Principles��? - Law of Proximity
Our brain is trying to help us understand the world. For example we look for eye contact.</description></item><item><title>hash-map</title><link>https://jethughes.github.io/notes/notes/hash-map/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/hash-map/</guid><description>In compsci a map is a comprised of a set of keys and values. (&amp;lt;K, V&amp;gt;). For example &amp;lt;String, Integer&amp;gt;</description></item><item><title>hci-ethics</title><link>https://jethughes.github.io/notes/notes/hci-ethics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/hci-ethics/</guid><description>Ethics steve mann example - too far?
hypocratic oath - do no harm
should there be one like this in computing?</description></item><item><title>heap</title><link>https://jethughes.github.io/notes/notes/heap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/heap/</guid><description>A tree where:
every elements should be greater than ites children the structure should be filled from top to bottom and left to right To remove an element</description></item><item><title>heaps-and-heapsort</title><link>https://jethughes.github.io/notes/notes/heapsort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/heapsort/</guid><description>3 Heap Sort In place and ϴ(n lg n)
start with array using itself as a heap, add the elements one at a time until all been added Then remove them one at a time - the largest elements gets removed first and the place where is needs to be put gets freed from the map 4 Heap sort vs Merge sort heap &amp;ndash;&amp;gt; in place, ϴ(n lg n) merge &amp;ndash;&amp;gt; not in place, Ο(n lg n)</description></item><item><title>help-and-documentation</title><link>https://jethughes.github.io/notes/notes/help-and-documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/help-and-documentation/</guid><description>guide the way and show steps online help transition from built in help to links to online help sometimes users dont have an internet connection e.</description></item><item><title>heuristic-evaluation</title><link>https://jethughes.github.io/notes/notes/heuristic-evaluation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/heuristic-evaluation/</guid><description>&amp;ldquo;Heuristics are strategies derived from previous experiences with similar problems&amp;rdquo; jacob nielsen and rolf molich
help find usability problems small set of 3-5 evaluators examine UI independently check for compliance with usability principles different evaluators will find different problems evaluators only communicate afterwaards findings are aggregated at the end when?</description></item><item><title>hi-fi-development</title><link>https://jethughes.github.io/notes/notes/hi-fi-development/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/hi-fi-development/</guid><description>Firstly I converted the lo-fi prototypes into Adobe XD designs.
I decided I wanted to make some chagnes to the design here so I saved this as version 1.</description></item><item><title>holochain"</title><link>https://jethughes.github.io/notes/notes/holochain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/holochain/</guid><description>link: https://www.holochain.org/
Open source framework for creating p2p apps.
Possible downsides of peer to peer apps
not great with synchronisation large app size requires wifi or cell coverage Whitepaper link: https://github.</description></item><item><title>how-is-safe-enough-for-autonomous-vehicles</title><link>https://jethughes.github.io/notes/notes/how-is-safe-enough-for-autonomous-vehicles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/how-is-safe-enough-for-autonomous-vehicles/</guid><description>How safe is safe enough? its impossible to be perfect discalimer about driving assistant in teslas Not driving youself massively reduces reaction time</description></item><item><title>html</title><link>https://jethughes.github.io/notes/notes/html/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/html/</guid><description>Structure Element: `Hello!Example:
1 2 3 4 5 6 7 8 9 10 11 12 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Boy&amp;lt;/title&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34; /&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt; Hello World!</description></item><item><title>HW2</title><link>https://jethughes.github.io/notes/notes/HW2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/HW2/</guid><description>Assignment 2 Jet Hughes 9474308
1. Let $V = P_2(\mathbb{R})$ with the ususal vector addition and scalar multiplication. For each of the following subsets of $V$, either prove that it is a basis of $V$ or explain why it is not a basis of $V$ .</description></item><item><title>hyperledger</title><link>https://jethughes.github.io/notes/notes/hyperledger/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/hyperledger/</guid><description>https://www.hyperledger.org/use/fabric
One of the projects within hyperledger.
From their website
&amp;ldquo;Hyperledger Fabric is intended as a foundation for developing applications or solutions with a modular architecture.</description></item><item><title>imperative-programming</title><link>https://jethughes.github.io/notes/notes/imperative-programming-language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/imperative-programming-language/</guid><description>wikipedia article
Imperative programming is a paradigm in which code specifiec a series of commands which a computer executes to change a programs state</description></item><item><title>independent-learning</title><link>https://jethughes.github.io/notes/notes/independent-learning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/independent-learning/</guid><description>Topics Networks Stand Alone Notes propagation-of-ideas model-view-controller-pattern .NET programatic-evolution behaviour-driven-development brutalist-architecture</description></item><item><title>induction</title><link>https://jethughes.github.io/notes/notes/induction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/induction/</guid><description>Induction 1 PECS Phases of argument by induction
Preparation -&amp;gt; most important Execution -&amp;gt; becomes routine if prep is good Checking -&amp;gt; second most important Satisfaction 1.</description></item><item><title>info-201</title><link>https://jethughes.github.io/notes/notes/info-201/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/info-201/</guid><description> coursework tiddlywiki assignments tiddlywiki Outline version control system stakeholders business-analyst developer models systems-development-life-cycle agile-development scrum predictive-adaptive-spectrum domain-driven-design behaviour-driven-development requirements requirements-document requirements-guidelines requirements-engineering requirements-elicitation approaches-to-systems-development business-functions business-process business-process-model business-process-model-and-notation unified-modelling-language sequence-diagrams use-case-diagrams what-are-uml-diagrams use-case-diagrams entity-relationship-diagrams class-diagrams modelling behaviour conceptual-vs-ipmlementation-models redundancy-and-anomalies dependencies normalisation round-trip-engineering uml-java-forward-engineering data-access data-access-object java-database-connectibity SQL Lectures 02-version-control-system 04-requirements 06-business-functions-and-use-cases 07-business-process-modelling 08-business-patterns 09-data-modelling-and-normalisation 10-oop-concepts-and-uml 11-class-diagrams 12-modelling-behaviour 13-UML-sequence-diagrams 15-from-models-to-code-and-back 16-reverse engineering 17-data-access 18-advanced-sql-1 19-advanced-sql-2 20-data-integrity 21-software-architecture-and-templates</description></item><item><title>info-203</title><link>https://jethughes.github.io/notes/notes/info-203/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/info-203/</guid><description>links: _index
mobile-app-ass-03 Assignments Mobile App pdf idea brainstorming personas-final mood-board Outline big-picture birth-of-hci user-experience usbability prototyping evaluating-designs Design Heuristics help-and-documentation error-prevention flexibility-and-efficiency aesthetic-and-minimalist-design consistency-and-standards recognition-over-recall user-freedom-and-control familiar-metaphors-and-language show-system-status recognise-and-recover-from-errors anti-design-heristics needfinding participant-observation interviewing storyboards personas-and-scenarios mental-models representation-and-distributing-cognition visual-design typography layout closure grouping similarity color reading-and-navigating hci-ethics designing-studies assigning-participants Videos heuristic-evaluation storyboards-mockups-paper-prototypes wizard-of-oz video-prototyping direct-manipulation-video mental-models-video visual-design-video designing-studies-video assigning-participants-video running-in-person-experiments running-web-experiments analyzing-experiments Lectures 04-evaluation-methods-birth-of-hci 07-heuristic-evaluation-cont 08-personas-and-scenarios 09-paper-prototypes-wiz-of-oz-video-prototypes 10-design-heuristics-1 11-design-heuristics-2 12-design-heuristics-3 13-design-heuristics-4 14-direct-manipulation-and-mental-models 15-mental-models-representation-matters-distributing-cognition 16-distributing-cognition-and-visual-design-typography 17-grids-grouping-alignment-reading-and-navigation 18-ethics-in-hci 22-trends-in-hci 24-trends-in-hci-2</description></item><item><title>information-security</title><link>https://jethughes.github.io/notes/notes/information-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/information-security/</guid><description>Information security is the science of protecting information assets. These include data, systems, equipment, and infrastructure.
[!Definition] &amp;ldquo;The preservation of confidentiality, integrity and availability of information; in addition, other properties such as authenticity, accountability, non-repudiation and reliability can also be involved.</description></item><item><title>integrated-development-environments</title><link>https://jethughes.github.io/notes/notes/integrated-development-environments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/integrated-development-environments/</guid><description>1 Types 1.1 Source code editors editor applications to help software development provide features that help editing code auto indent, bracket matching, syntax hl, auto completion, rapid navigation run/test code 1.</description></item><item><title>interpreter</title><link>https://jethughes.github.io/notes/notes/interpreter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/interpreter/</guid><description>What are they/what do they do &amp;ldquo;Interactive&amp;rdquo; tool to run high level interpreted languages. pythonm ruby, shell, R, js, PHP The interpreter program runs on CPU and executes program line by ine</description></item><item><title>interviewing</title><link>https://jethughes.github.io/notes/notes/interviewing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/interviewing/</guid><description>1 Use Cases evaluating-designs requirements-elicitation needfinding 2 Overview direct and stuctured semi structured usually top down effective for high level interface evaluation need careful planning, experts, difficult to analyse not a controlled experiment technique 3 Conducting an interview 3.</description></item><item><title>into-the-wild</title><link>https://jethughes.github.io/notes/notes/into-the-wild/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/into-the-wild/</guid><description>happiness is only real when shared.
henry david 083-henry-david-thoreau</description></item><item><title>isolated scenarios</title><link>https://jethughes.github.io/notes/notes/isolated-scenarios/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/isolated-scenarios/</guid><description>Adding a new member Within an existing closed BC with 10 participants. say we wanted to add another participant as a validator node.</description></item><item><title>japanese</title><link>https://jethughes.github.io/notes/notes/japanese/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/japanese/</guid><description>My plan Misc Notes [[japanese-words]] [[nope-threshold]] [[stages of learning]] Grammar sort of SOV e.g., I sushi eat. (english is SVO i eat sushi)</description></item><item><title>japanese-words</title><link>https://jethughes.github.io/notes/notes/japanese-words/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/japanese-words/</guid><description>mora: syllable yabai: sick!</description></item><item><title>java-database-connectibity</title><link>https://jethughes.github.io/notes/notes/java-database-connectibity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/java-database-connectibity/</guid><description/></item><item><title>javascript</title><link>https://jethughes.github.io/notes/notes/javascript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/javascript/</guid><description>An dynamically typed interpreted scripting language to dynamically control websites.
HTML DOM (Document object model)
JS can access and alter html elements When a page loads it creates the DOM as a tree of objects Using js Add inline, external or internal (script tags) js</description></item><item><title>karl-marx</title><link>https://jethughes.github.io/notes/notes/karl-marx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/karl-marx/</guid><description>Marx &amp;ldquo;religion is the opiate of the masses&amp;rdquo;.
lived in the era after the enlightenment. Dividends of these ideas are being paid.</description></item><item><title>LACChain Framework for Permissioned Public Blockchain Networks – From Blockchain Technology to Blockchain Networks</title><link>https://jethughes.github.io/notes/notes/LACChain-Framework-for-Permissioned-Public-Blockchain-Networks-From-Blockchain-Technology-to-Blockchain-Networks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/LACChain-Framework-for-Permissioned-Public-Blockchain-Networks-From-Blockchain-Technology-to-Blockchain-Networks/</guid><description>Summary Extracts Related</description></item><item><title>latex-cheat-sheet</title><link>https://jethughes.github.io/notes/cheatsheets/latex-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/cheatsheets/latex-cheat-sheet/</guid><description>https://wch.github.io/latexsheet/latexsheet-0.png https://wch.github.io/latexsheet/latexsheet-1.png
$\theta$
$\leq \geq$</description></item><item><title>law-of-closure</title><link>https://jethughes.github.io/notes/notes/law-of-closure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/law-of-closure/</guid><description>Another law is the law of closure. Where our brain tries to &amp;ldquo;autocomplete&amp;rdquo; things</description></item><item><title>law-of-similarity</title><link>https://jethughes.github.io/notes/notes/law-of-similarity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/law-of-similarity/</guid><description>Another law is the law of similarty. Things with similar appearance are grouped by our brains.</description></item><item><title>layout</title><link>https://jethughes.github.io/notes/notes/layout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/layout/</guid><description>Techniques such as, similarity, grouping and (to a lesser extent) closure, can be used to organise and groupu our interfaces. Often the grouping and layout is done before the rest of the design.</description></item><item><title>libraries</title><link>https://jethughes.github.io/notes/notes/libraries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/libraries/</guid><description>what is a software library collections of potentailly useful code.
implement comon fuunctionality so you dont have to</description></item><item><title>linear-probing</title><link>https://jethughes.github.io/notes/notes/linear-probing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/linear-probing/</guid><description>animation demo
A method of collision resolution for hash-maps. In this scheme, each cell of the map contains a single key-value pair.</description></item><item><title>linker</title><link>https://jethughes.github.io/notes/notes/linker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/linker/</guid><description>Linkers facilitate use of code in multiple languages, e.g. use C for programming speed of developer; use Assembly language for running speed of code But these days: often hard to beat optimising compilers!</description></item><item><title>loader</title><link>https://jethughes.github.io/notes/notes/loader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/loader/</guid><description>An executable file e.g., greet has to be loaded and run by your OS. Depending on your OS and your harwdare this might need to be done differently</description></item><item><title>logic-gates</title><link>https://jethughes.github.io/notes/notes/logic-gates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/logic-gates/</guid><description>Logic Gates NOT AND OR NAND NOR XOR/EOR</description></item><item><title>low-fidelity-prototypes</title><link>https://jethughes.github.io/notes/notes/low-fidelity-prototypes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/low-fidelity-prototypes/</guid><description>Inital Designs Navigation The first thing I wanted to was get a clear picture of how each screen should interact with the others.</description></item><item><title>management-of-file-systems</title><link>https://jethughes.github.io/notes/notes/management-of-file-systems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/management-of-file-systems/</guid><description>A file is a collection of related data. They can be thought of as artifacts of the dialogue between the user and the OS</description></item><item><title>mary-woolstonecraft</title><link>https://jethughes.github.io/notes/notes/mary-woolstonecraft/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/mary-woolstonecraft/</guid><description>Known as the &amp;ldquo;original feminist&amp;rdquo;
Lived during the renaissance with other such as voltaire and burke. She was born into a conservative household, with a drunk wifebeater for a dad.</description></item><item><title>math-202</title><link>https://jethughes.github.io/notes/notes/math-202/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/math-202/</guid><description> site syllabus</description></item><item><title>mccumber-cube</title><link>https://jethughes.github.io/notes/notes/mccumber-cube/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/mccumber-cube/</guid><description>The mccumber cube is way of thinking about how to protect information
It is a map that can be used to find &amp;ldquo;holes&amp;rdquo; within systems.</description></item><item><title>media</title><link>https://jethughes.github.io/notes/notes/media/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/media/</guid><description>Books 2022 The diamond age The Story of Man The Art of War The Friar and the Cipher The Island of sea women, lisa see Reminiscences of a stock operator Out of the flames, lawrence and nancy goldstone Talking to strangers, malcolm gladwell The overstory, richard powers Ligeia, edgar allan poe The stranger, albert camus What if?</description></item><item><title>meet and greet</title><link>https://jethughes.github.io/notes/notes/meet-and-greet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/meet-and-greet/</guid><description>infor about each company in a note
some interesting things recent articles about them try to bring these up when talking abt urself</description></item><item><title>memoization</title><link>https://jethughes.github.io/notes/notes/memoization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/memoization/</guid><description>A method of designing algorithms which is similar to dynamic programming in that previously calculated answers are stored in memory</description></item><item><title>memory</title><link>https://jethughes.github.io/notes/notes/memory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/memory/</guid><description>Computer memory is a series of switches (similar to the switchboard in a house). Each switch is identified by a number and is either on or off.</description></item><item><title>mental-models</title><link>https://jethughes.github.io/notes/notes/mental-models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/mental-models/</guid><description>mental models are created by experience, metaphors, and analogical reasoning these models are developed further through interaction with the system designers (wrongly) often expect the users model to be the same as theirs A mental model mistach leads to:</description></item><item><title>mental-models-video</title><link>https://jethughes.github.io/notes/notes/mental-models-video/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/mental-models-video/</guid><description>The users mental model is how the user thinks the interface works.
for example the fridge with two dials, or the doors.</description></item><item><title>mergesort</title><link>https://jethughes.github.io/notes/notes/mergesort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/mergesort/</guid><description>Mergesort is a divide-and-conquer algorithm. It works by recursively splitting the array in half then merging the two (sorted) halfs together .</description></item><item><title>Milestone 3</title><link>https://jethughes.github.io/notes/notes/full-assignment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/full-assignment/</guid><description>Brain Storming Concept 1 - Snowboard trick generator. This will be a mobile app that snowboarders can use to automatically generate random tricks.</description></item><item><title>mobile-app-ass-03</title><link>https://jethughes.github.io/notes/notes/mobile-app-ass-03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/mobile-app-ass-03/</guid><description> full-assignment
pdf
idea initial-ideas-mind-map brainstorming personas-development personas-final hi-fi-development
brainstorming brainstorming Personas and scenarios Development personas-development Primary Primary Casual Kyle Secondary Secondary Logan the learner Storyboard Low-fi Prototypes low-fidelity-prototypes drawings stage 1 drawing stage 2 more alternatives for navigation diagram more intial designs document add references to design heuristics Hi-fi Prototype Presentation</description></item><item><title>model-view-controller-pattern</title><link>https://jethughes.github.io/notes/notes/model-view-controller-pattern/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/model-view-controller-pattern/</guid><description>Model: An object carrying data
handles data logiv interacts with database View: The visualisation of the data that model contains</description></item><item><title>modelling-behaviour</title><link>https://jethughes.github.io/notes/notes/modelling-behaviour/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/modelling-behaviour/</guid><description>relevant slides, lecture recording, relevant article
Modelling behaviour is more complex than modelling the structure of OOP systems (e.g., class-diagrams.</description></item><item><title>models</title><link>https://jethughes.github.io/notes/notes/models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/models/</guid><description>&amp;ldquo;A model is an informative representation of an object, person or system&amp;rdquo;
Software is made up of models. It is not only &amp;ldquo;code&amp;rdquo; Models can be high level (mockups etc) or low level (code) Models can be executable (code, ec) or not (diagrams)</description></item><item><title>money</title><link>https://jethughes.github.io/notes/notes/poppys-hottips-for-money/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/poppys-hottips-for-money/</guid><description>diversify/split up money do all reasearch on benfits of job before you start working make sure you dont get fucked and end up with a pension easy ways to get around having money in different countries, and get around exchanges, with credit cards and stuff buy a house in dubai to rent out (bank in dubai) live in nz dont send money back to nz, use a international credit card pretty much anywhere very simple money is not really money – its something we decided to value money in bank does not exists a means of exchange get a job in the healthcare system</description></item><item><title>mood-board</title><link>https://jethughes.github.io/notes/notes/mood-board/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/mood-board/</guid><description>Mood board Black and white maybe an accent color
sharp edges
capital letters
minimal</description></item><item><title>movie-list</title><link>https://jethughes.github.io/notes/notes/movie-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/movie-list/</guid><description>Top movies
yojimbo le samourai akira rashomon ikiru perfect blue in the mood for love cure taxi driver good the bad the ugly ghost in the shell annihilation To watch</description></item><item><title>music-theory</title><link>https://jethughes.github.io/notes/notes/music-theory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/music-theory/</guid><description>What is it &amp;ldquo;the language behind music&amp;rdquo;
tools to understand communicate and interpret music.
understands chords notes melodies etc.
trying to get be &amp;ldquo;fluent&amp;rdquo;</description></item><item><title>myepichacking</title><link>https://jethughes.github.io/notes/notes/myepichacking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/myepichacking/</guid><description>guy got hacked amazon - apple - gmail - twitter could have been prevented with 2fa on google ultimate goal twitter should have used backups for devices was his fault but also security flaws in apple and amazon final four digits shared by amazon are required by apple disconnect exposes flaws in tech industry foreshadows issues in era of cloud and connected devices password based systems are no longer suffice 5pm</description></item><item><title>needfinding</title><link>https://jethughes.github.io/notes/notes/needfinding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/needfinding/</guid><description>how to start imporving or designing inerface how to identify the gap or use interface issues
needdfinding tries to identify issues, often through observational studies (qualitative)</description></item><item><title>network</title><link>https://jethughes.github.io/notes/notes/network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/network/</guid><description>Overview Physical Media
TP cable two wired twisted together surrounded by a shield signal and ground reference short range (100meters) phone, DSL, ethernet lan Coaxial inner conductor insulator outer conductor (shield) insulator plastic cover long distance high speed: cable tv ethernet lan fibre optic light within glass high speed low error Application Layer [Application Layer](notes/Application Layer)</description></item><item><title>Network-Layer</title><link>https://jethughes.github.io/notes/notes/Network-Layer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Network-Layer/</guid><description/></item><item><title>networks</title><link>https://jethughes.github.io/notes/notes/networks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/networks/</guid><description> docker-containers virtual-machines SSH</description></item><item><title>nope-threshold</title><link>https://jethughes.github.io/notes/notes/nope-threshold/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/nope-threshold/</guid><description>there is a point in point at which consuing content in a ntoher language become feasable — the &amp;ldquo;nope threshold&amp;rdquo;. this varies from person to person.</description></item><item><title>Normal-Forms</title><link>https://jethughes.github.io/notes/notes/Normal-Forms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Normal-Forms/</guid><description>1 NF atomic attributes no multivalue/composite/nested relations 2 NF no nonprime attributes that are partially functionally dependent on primary key 3 NF remove nonprime attributes that are transitively dependent on primary key BCNF</description></item><item><title>normalisation</title><link>https://jethughes.github.io/notes/notes/normalisation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/normalisation/</guid><description>formal process of eliminanting unnecessary redundancy in relations by splitting relations into smaller chunks
bottom up approach
functional dependencies ⇒ normalised relations requirements ⇒ conceptual ≫ logical is &amp;ldquo;top down&amp;rdquo; use normalisation to verify your logical design to ensure you haven&amp;rsquo;t missed anything 1 Pros and cons frees from anomalies separates data the belong to different entities reduces data redundancy doesn&amp;rsquo;t bias db design infaour of certain queries at the expense of others more relations required more complex queries can imply slower performance in some DBMSs 2 Normal forms 1NF ⇒ Single valued attributes only 2NF ⇒ all on-key attibutes fully dependent on PK (i.</description></item><item><title>Now the Code Runs Itself — On-Chain and Off- Chain Governance-of- Blockchain Technologies</title><link>https://jethughes.github.io/notes/notes/Now-the-Code-Runs-Itself-On-Chain-and-Off-Chain-Governance-of-Blockchain-Technologies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Now-the-Code-Runs-Itself-On-Chain-and-Off-Chain-Governance-of-Blockchain-Technologies/</guid><description>link: https://doi.org/10.1007/s11245-018-9626-5
Summary This paper examines blockchain governance from a legal philosophy perspective by relating on-chain govenance to an ongoing debate about the construction of a positivist legal order.</description></item><item><title>object</title><link>https://jethughes.github.io/notes/notes/object/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/object/</guid><description>Objects an abastraction of somethin gin a problem domain, reflecting the capabilities of the system to keep information about it interact with it or both</description></item><item><title>operating-system</title><link>https://jethughes.github.io/notes/notes/operating-system/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/operating-system/</guid><description>Userspace This is where applications run. Computer resources are isolated in compute and data
cannot access memory belonging to another process cannot directly access hardware cannot occupy all of the CPUs time on one application Kernal space &amp;ldquo;all seeing and all powerful&amp;rdquo; The kernel sits below the userspace and manages resource allocation and directly controls harware.</description></item><item><title>Other Layer</title><link>https://jethughes.github.io/notes/notes/Networks-Other/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Networks-Other/</guid><description/></item><item><title>Parallel Governance for Decentralized Autonomous Organizations enabled by Blockchain and Smart Contracts</title><link>https://jethughes.github.io/notes/notes/Parallel-Governance-for-Decentralized-Autonomous-Organizations-enabled-by-Blockchain-and-Smart-Contracts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Parallel-Governance-for-Decentralized-Autonomous-Organizations-enabled-by-Blockchain-and-Smart-Contracts/</guid><description>link: https://doi.org/10.1109/DTPI52967.2021.9540069
Summary Proposes a system of running a simulated blockchain in alongside the real one and using it to test out ideas.</description></item><item><title>participant-observation</title><link>https://jethughes.github.io/notes/notes/participant-observation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/participant-observation/</guid><description>1 Techniques think-aloud co-operative evaulation paper and pencil protocol audio recording video recording computer logging user notebooks post-talk walkthroughs 2 Disadvantages observation bias exists coding schemes laborioua and difficult experts needed, training needed often a mix of multiple techniques automatic protocol analysis tools available (esp.</description></item><item><title>passwords</title><link>https://jethughes.github.io/notes/notes/passwords/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/passwords/</guid><description>Passwords not good lots of bad advice we are lazy &amp;ldquo;safe&amp;rdquo; passwords are difficult to enter on touch screen devices to many accouts entropy amount of randomness measure of the number of guesse an attacker would need to brute foarce $E = log_2(A^L)$ A = size of alphabet L = length of password E = entropy in bits 80 bits is &amp;ldquo;safe&amp;rdquo; would take decades 6 digits passoword - 29 bits (took 4 seconds to brute force) uppercase and numbers - 36 bits</description></item><item><title>Permissionless and Permissioned, Technology-Focused and Business Needs-Driven — Understanding the Hybrid Opportunity in Blockchain Through a Case Study of Insolar</title><link>https://jethughes.github.io/notes/notes/Permissionless-and-Permissioned-Technology-Focused-and-Business-Needs-Driven-Understanding-the-Hybrid-Opportunity-in-Blockchain-Through-a-Case-Study-of-Insolar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Permissionless-and-Permissioned-Technology-Focused-and-Business-Needs-Driven-Understanding-the-Hybrid-Opportunity-in-Blockchain-Through-a-Case-Study-of-Insolar/</guid><description>doi 10.1109/TEM.2020.300356
Summary Extracts Related</description></item><item><title>personas-and-scenarios</title><link>https://jethughes.github.io/notes/notes/personas-and-scenarios/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/personas-and-scenarios/</guid><description>1 Personas The goals of a personas is their expectation of an end condition
not features, functions, taskss, activities A tool to documnet who the users are.</description></item><item><title>personas-development</title><link>https://jethughes.github.io/notes/notes/personas-development/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/personas-development/</guid><description>Inital Ideas kyle the casual (primary maybe secondary) age 23 skill advanced focus: tricks aaron the coach (seconday maybe primary) age 30 skill used to be pro, now advanced focus teaching tricks logan the learner (seconday persona) age 16 skill intermediate focus not sure yet, beginning to experiement with tricks mac the professional (seconday persona) age 20 skill pro focus tricks, uses the app occaionaly with friends karen the parent (negative persona) age 45 skill intermediate focus, groomed runs, some backcountry phil the powder hound (supplementary persona) age 40 skill advanced (not with tricks just in general) focus off piste/backcountry, sometimes goes into park with friends/kids Final choices Primary: Kyle the casual Secondary: Logan the learner</description></item><item><title>personas-final</title><link>https://jethughes.github.io/notes/notes/personas-final/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/personas-final/</guid><description>Primary: Casual Kyle Age: 23 Gender: Male Skill Level: Advanced (Not proffessional) Focus: Terrian Park Goals Experience goals wants a quick easy, no hassle, minimal effort experience.</description></item><item><title>persons-apparently-dead</title><link>https://jethughes.github.io/notes/notes/persons-apparently-dead/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/persons-apparently-dead/</guid><description>delayed acceptance of discovery is always a factor in science.
e.g.,
miroscope invented 1668 - germ theory ignored until 1850 1754 citrus cures scurvy - was not widely used until 50 years later before ww1 penicillin discovered - rediscovered 1928 1902 surturing of blood vessels - not used until 1967 resuscitation.</description></item><item><title>philosophize-this</title><link>https://jethughes.github.io/notes/notes/philosophize-this/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/philosophize-this/</guid><description>Episodes 040-superstition 054-hume-on-art 065-mary-woolstonecraft 077-marx-and-kierkegaard-religion 078-marx-and-kierkegaard-religion 079-kierkegaard-anxiety 083-henry-david-thoreau 090-nietzsche-god-is-dead 091-nietzsche-wilil-to-power 092-nietzsche-pt3-thus-spole-zarathustra 093-nietzsche-pt4-love 094-a-look-at-suffering 095-are-we-living-in-a-simulation [[171-the-society-of-the-spectable]] [[]]</description></item><item><title>philosophy</title><link>https://jethughes.github.io/notes/notes/philosophy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/philosophy/</guid><description>People [[soren-kiekegaard]] [[karl-marx]] [[henry-david-thoreau]] mary-woolstonecraft [[david-hume]] [[voltaire]] [[bishop-berkely]] [[socrates]]</description></item><item><title>Physical-Layer</title><link>https://jethughes.github.io/notes/notes/Physical-Layer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Physical-Layer/</guid><description/></item><item><title>polymesh</title><link>https://jethughes.github.io/notes/notes/polymesh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/polymesh/</guid><description>Links
https://polymesh.network/permissioned-blockchain https://polymath.network/polymesh-whitepaper Public permissioned crypto blockchain
focused on: condifentialitty, identify, governance, compliance,
uses nominated proof of stake</description></item><item><title>predictive-adaptive-spectrum</title><link>https://jethughes.github.io/notes/notes/predictive-adaptive-spectrum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/predictive-adaptive-spectrum/</guid><description/></item><item><title>priority-queue</title><link>https://jethughes.github.io/notes/notes/priority-queue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/priority-queue/</guid><description>A dynamic linear data type that supports addition and removal on entrie each entry hase a value and a priority (key) removal returns the item with the greatest priority Implementation stores items and priorities in an array.</description></item><item><title>programatic-evolution</title><link>https://jethughes.github.io/notes/notes/programatic-evolution/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/programatic-evolution/</guid><description>5 condiditons for evolution
self-replication blueprint &amp;ldquo;genome&amp;rdquo; stored in us in DNA and RNA inherit blueprint mutation selection whatever reproduces, reproduces whatever doesn&amp;rsquo;t, doesn&amp;rsquo;t</description></item><item><title>prompts</title><link>https://jethughes.github.io/notes/notes/prompts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/prompts/</guid><description>What is your interpretation of one of your recent dreams? What does death teach us about life? When you look at an elderly person&amp;rsquo;s hands what do you see?</description></item><item><title>Propagation of Ideas</title><link>https://jethughes.github.io/notes/notes/propagation-of-ideas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/propagation-of-ideas/</guid><description>link:https://ase.tufts.edu/cogstud/dennett/papers/memeimag.htm
The david and miriam mandel lecture american society for aesthetics oct 27 1989
How (or whether) are promotes human evolution or development</description></item><item><title>prototyping</title><link>https://jethughes.github.io/notes/notes/prototyping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/prototyping/</guid><description>Prototyping Quickly creating a minimal, functioning approximate version of an idea, which reveals potential issues(feedback) that may be hard to predict(unknown unknows) otherwise</description></item><item><title>public-permissioned-as-CPRs</title><link>https://jethughes.github.io/notes/notes/public-permissioned-as-CPRs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/public-permissioned-as-CPRs/</guid><description>link
note: written by the CTO of alastria which was supposedly the pioneer of this model
This paper proposed a new type of blockchain, a Public Permissioned Blockchain.</description></item><item><title>public-private-permissioned-chains</title><link>https://jethughes.github.io/notes/notes/blockchain-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/blockchain-types/</guid><description>public vs private blockchains https://www.forbes.com/sites/forbestechcouncil/2019/06/11/public-vs-private-permissioned-ledgers-and-blockchain-standards/?sh=39aaa258550b &amp;ldquo;It&amp;rsquo;s important to note that permissioned does not mean private &amp;ndash; some of the public networks like Stellar and Sovrin are public permissioned networks&amp;rdquo;.</description></item><item><title>puml-cheat-sheet</title><link>https://jethughes.github.io/notes/cheatsheets/puml-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/cheatsheets/puml-cheat-sheet/</guid><description> activity diagram docs use case diagram docs</description></item><item><title>quadratic voting"</title><link>https://jethughes.github.io/notes/notes/quadratic-voting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/quadratic-voting/</guid><description>Quadratic voting is a voting system in which individuals have a certain number of votes that they can distribute among options in any way they choose, but the number of votes required to support an option increases quadratically as the option becomes more popular.</description></item><item><title>quicksort</title><link>https://jethughes.github.io/notes/notes/quicksort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/quicksort/</guid><description>pre ⇒ select pivot and split the array
rec ⇒ apply quicksort to the partitions
post ⇒ not much
designeds when sorting inplace was important</description></item><item><title>randomness</title><link>https://jethughes.github.io/notes/notes/randomness/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/randomness/</guid><description>a lack of predicability no patterns stochastic (can be analysed but not predcted) vs deterministic used for
one time pad generating key-pairs generating salts for password hashing seeding pesudo random number generators humans are not good at randomness</description></item><item><title>reading-and-navigating</title><link>https://jethughes.github.io/notes/notes/reading-and-navigating/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/reading-and-navigating/</guid><description>Reading and navigating Information scent
how to represent things so people can find what they want do they realize their options can they figue out how to get what they want How to find Poor scent flailing (loss of orientation, reported or observed) low confidence (in what link with will do or where it will go) (measured before and after using a web link) back button (count usage of back button) Low scent navigation</description></item><item><title>reading-papers</title><link>https://jethughes.github.io/notes/notes/reading-papers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/reading-papers/</guid><description>Read a survey paper first
Abstract Intro Conclusion Related Works Check for good papers using Core rankings. Maybe keep a WTF terms note</description></item><item><title>recognise-and-recover-from-errors</title><link>https://jethughes.github.io/notes/notes/recognise-and-recover-from-errors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/recognise-and-recover-from-errors/</guid><description> make the problem clear e.g., username or password is wrong vs username is wrong provide a solution and inform users (treat the users as adults</description></item><item><title>recognition-over-recall</title><link>https://jethughes.github.io/notes/notes/recognition-over-recall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/recognition-over-recall/</guid><description>3.1 avoid codes 3.2 Recognition with previews or icons 3.3 use icons that promote recognition</description></item><item><title>red-black-tree</title><link>https://jethughes.github.io/notes/notes/red-black-tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/red-black-tree/</guid><description>Red Black trees most used current one. Used in java treemap
each node is either red or black
the rules are:</description></item><item><title>redundancy-and-anomalies</title><link>https://jethughes.github.io/notes/notes/redundancy-and-anomalies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/redundancy-and-anomalies/</guid><description>Redundancy when values are stored repetitively in database relations
usually in poorly designed relations potential for anomalous data to be stored e.</description></item><item><title>reflective-statement</title><link>https://jethughes.github.io/notes/notes/reflective-statement-plan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/reflective-statement-plan/</guid><description>202 Reflective statement Intro
What is the project who was the team Overall of: Communication Time/Project Mangement Main Issues Main Non-Issues Communication</description></item><item><title>representation-and-distributing-cognition</title><link>https://jethughes.github.io/notes/notes/representation-and-distributing-cognition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/representation-and-distributing-cognition/</guid><description>use representation that does not require user to memorise things.
&amp;ldquo;solving a problem simply means representing it so as to make the solution transparent&amp;rdquo; - Herbert Simon, The sciences of the Artificial</description></item><item><title>requirements</title><link>https://jethughes.github.io/notes/notes/requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/requirements/</guid><description>1 What are they “…descriptions of how the system should behave, application domain information, constraints on the system’s operation, or specifications of a system property or attribute.</description></item><item><title>requirements-document</title><link>https://jethughes.github.io/notes/notes/requirements-document/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/requirements-document/</guid><description>The requirements document is used to keep track of the requirements of a system. It hold information such as: constraints, the environment of the system, information about the domain of the system, and constraints</description></item><item><title>requirements-elicitation</title><link>https://jethughes.github.io/notes/notes/requirements-elicitation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/requirements-elicitation/</guid><description>A process by which analysts gather information on what the system should do, from as many sources as possible. All methods are effective but some are more efficient than others.</description></item><item><title>requirements-engineering</title><link>https://jethughes.github.io/notes/notes/requirements-engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/requirements-engineering/</guid><description>“…to cover all of the activities involved in discovering, documenting, and maintaining a set of requirements for a computer-based system.</description></item><item><title>requirements-guidelines</title><link>https://jethughes.github.io/notes/notes/requirements-guidelines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/requirements-guidelines/</guid><description>understandable by all stakeholders including the users non prescriptive i.e., should define what, and not how correct as judged by user complete.</description></item><item><title>research-on-the-reciprocal-mechanism-of-hybrid-governance-in-blockchain</title><link>https://jethughes.github.io/notes/notes/research-on-the-reciprocal-mechanism-of-hybrid-governance-in-blockchain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/research-on-the-reciprocal-mechanism-of-hybrid-governance-in-blockchain/</guid><description>link: https://doi.org/10.47363/JESMR/2021(2)121
Summary This paper investigates the idea of reciprocal blockchain governance. It identifies two major processes of blockchain governance:</description></item><item><title>River-Of-Filth</title><link>https://jethughes.github.io/notes/notes/River-Of-Filth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/River-Of-Filth/</guid><description>&amp;lsquo;its not going to be complusory&amp;rsquo;
then
border workers and at MIQ must be vaccinated workers in health and disability school and early learning staff then</description></item><item><title>round-trip-engineering</title><link>https://jethughes.github.io/notes/notes/round-trip-engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/round-trip-engineering/</guid><description>This is the process of translating models into code, or vice versa. For example, ERDs to SQL, or UML to Java.</description></item><item><title>running-in-person-experiments</title><link>https://jethughes.github.io/notes/notes/running-in-person-experiments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/running-in-person-experiments/</guid><description>in person
planning execution analyzing higher &amp;ldquo;bandwitdh&amp;rdquo; of engagement
Make clear goals scope purpose what you hope to learn hypothesis make a prediction schedule and location use an approprate and relevant location participants scenarios Plan out steps questions data to be collected set up roles e.</description></item><item><title>running-web-experiments</title><link>https://jethughes.github.io/notes/notes/running-web-experiments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/running-web-experiments/</guid><description>randomly split traffic to website between two versions.
then collection metrics about each version
web makes it easier to try out something new, and test if it is effective.</description></item><item><title>Schemas</title><link>https://jethughes.github.io/notes/notes/Schemas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Schemas/</guid><description/></item><item><title>scrum</title><link>https://jethughes.github.io/notes/notes/scrum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/scrum/</guid><description>Intense effort involving entire team for defined period of time Product backlog - prioritied list of requirements Product owner - cllient stakeholder who controls backlog Scrum master - project manager</description></item><item><title>security</title><link>https://jethughes.github.io/notes/notes/security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/security/</guid><description>Growing concern since there is more software, dependencies, and they are getting increaingly complex the &amp;ldquo;surface area&amp;rdquo; of risk is growing.</description></item><item><title>Security Layer</title><link>https://jethughes.github.io/notes/notes/Network-Security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Network-Security/</guid><description/></item><item><title>selenium</title><link>https://jethughes.github.io/notes/notes/selenium/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/selenium/</guid><description>Webdriver: implements web based tests
IDE: record/playback interactions with web browsers
You can mix automated and interactive options.</description></item><item><title>sequence-diagrams</title><link>https://jethughes.github.io/notes/notes/sequence-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/sequence-diagrams/</guid><description>equence diagrams document a sequence of particpant interactions required to carry out a use case
actor &amp;lt;-&amp;gt; object actors are outside the system objects are otside the system via a method call might get a result object &amp;lt;-&amp;gt; object lifetime of interactions and objects when they are created updated destroyed time is a key aspect use-case-diagrams dont have order These diagrams are:</description></item><item><title>sequential-circuits</title><link>https://jethughes.github.io/notes/notes/sequential-circuits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/sequential-circuits/</guid><description>combinatorial-logic-circuits always produce the same outputs given the same input. Sequential curcuits on the other hand, produce different outputs depending on past history and the inputs.</description></item><item><title>set</title><link>https://jethughes.github.io/notes/notes/set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/set/</guid><description>links: java docs for set interface
A collection of items with no repetition allowed
How do we want to be able to use them?</description></item><item><title>shell</title><link>https://jethughes.github.io/notes/notes/shell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/shell/</guid><description> start and stop OS processes used to control OS connect output of one OS process to input of another process -&amp;gt; this is the idea of Unix pipes manage environment variables: pass params to programs parse and evaluate command line instructions from user</description></item><item><title>show-system-status</title><link>https://jethughes.github.io/notes/notes/show-system-status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/show-system-status/</guid><description>This is the first of neilsens ten usability heuristics. fr
feedback depends on response time
&amp;lt;1s just show outcome ~1s feedback that activity is underway 1s show fractional progress time</description></item><item><title>smart-contracts</title><link>https://jethughes.github.io/notes/notes/smart-contracts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/smart-contracts/</guid><description>Code than can be executed automatically on the blockchain.</description></item><item><title>software-architectures</title><link>https://jethughes.github.io/notes/notes/software-architectures/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/software-architectures/</guid><description># of pieces?
one integrated piece a few distinct components many distict components does it run:
on one machine spread across multiple machines in the cloud these consdier ations dtermine the structure of the software we create</description></item><item><title>software-licensing</title><link>https://jethughes.github.io/notes/notes/software-licensing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/software-licensing/</guid><description>What does it mean for people to use your software. What responsitilities do you have
common perception: open source versus commercial</description></item><item><title>soren-kiekegaard</title><link>https://jethughes.github.io/notes/notes/soren-kiekegaard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/soren-kiekegaard/</guid><description>Father of existentialism
&amp;ldquo;Anxiety is the dizziness of freedom&amp;rdquo;
Religion 078-marx-and-kierkegaard-religion
The function of religion is to organise a commitment to a particular way of life</description></item><item><title>SQL</title><link>https://jethughes.github.io/notes/notes/SQL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/SQL/</guid><description/></item><item><title>ssh</title><link>https://jethughes.github.io/notes/notes/ssh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/ssh/</guid><description>What is it telnet was a set of protocols for one xomputer to control another. This was not secure
Telnet then spawned secure shell (SSH).</description></item><item><title>stages of learning</title><link>https://jethughes.github.io/notes/notes/stages-of-learning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/stages-of-learning/</guid><description>Stage one Dont know anything. cant learn independently. any activity is unbearable. lots of study and memorisation. trying to pass the [[nope-threshold]].</description></item><item><title>stakeholders</title><link>https://jethughes.github.io/notes/notes/stakeholders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/stakeholders/</guid><description>People with interest in successful implementation
three primary groups
users clients -&amp;gt; pay for and own systems technical staff -&amp;gt; ensure system operation other classifications</description></item><item><title>storyboards</title><link>https://jethughes.github.io/notes/notes/storyboards/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/storyboards/</guid><description>mockup of user scenarios
problem with sketches
hard to capture dynamics of interation over times= captures user interface not user behaviour a good storyboard should tell a story short and concise low fidelity not about pretty picures.</description></item><item><title>storyboards-mockups-paper-prototypes</title><link>https://jethughes.github.io/notes/notes/storyboards-mockups-paper-prototypes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/storyboards-mockups-paper-prototypes/</guid><description>Fidelity will increase over time. Storyboarding focus on the task communicate flow not about pretty pictures use timelimits ≈10 mins</description></item><item><title>sybil-problem</title><link>https://jethughes.github.io/notes/notes/sybil-problem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/sybil-problem/</guid><description>wikipedia article
The Sybil attack in computer security (especially in blockchain systems) is an attack wherein a reputation systems is subverted by creating multiple identities.</description></item><item><title>system-templates</title><link>https://jethughes.github.io/notes/notes/system-templates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/system-templates/</guid><description>&amp;lt;% tp.file.cursor(4) %&amp;gt;
System templates some standard patterns is system design
especially with respect to structural requirements
database domain classes names of entites/classes may vary but pattern is the same broadly similar structures for similar problem domains</description></item><item><title>systems-development-life-cycle</title><link>https://jethughes.github.io/notes/notes/systems-development-life-cycle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/systems-development-life-cycle/</guid><description>Provides overall framework for managing the systems There are many methodologies to help guide us through this cycle Each methodology sits on the predictive-adaptive-spectrum A very common methodology at the moment is agile-development</description></item><item><title>templates</title><link>https://jethughes.github.io/notes/notes/templates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/templates/</guid><description> [[templates/Day]] [[templates/note-header]] [[templates/course]] [[templates/post]] date-day DailyTemplate induction-proof-template</description></item><item><title>terminology</title><link>https://jethughes.github.io/notes/notes/terminology/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/terminology/</guid><description>rank: the number of dimensions in the output of a transformation or the number of dimensions in the columce space column space: the set of all possible outputs Av is the column space of A full rank: When the rank equals the number of columns null space/kernel: the space of all vectors that become null following a transformation span: a set of all linear combination of two vectors linear combination: an expression constructed from a set of terms by multiplying each term by a constant and adding the results</description></item><item><title>test-driven-development</title><link>https://jethughes.github.io/notes/notes/test-driven-development/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/test-driven-development/</guid><description>tests are developed before the code
are a spec of what the code should do
first they fail ⇒ as you develop, they pass</description></item><item><title>testing</title><link>https://jethughes.github.io/notes/notes/testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/testing/</guid><description>most software will contain bugs bug severity if not always equivalent to bug priority testing is seeking out bugs some test types unit tests integration tests ⇒ check units work together end-to-end tests ⇒ check behaviour of whole program 1 Limitations testing every code path is impossible</description></item><item><title>The Generic Blockchain Ecosystem and its Strategic Implications</title><link>https://jethughes.github.io/notes/notes/The-Generic-Blockchain-Ecosystem-and-its-Strategic-Implications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/The-Generic-Blockchain-Ecosystem-and-its-Strategic-Implications/</guid><description>link: https://www.researchgate.net/publication/325677489_The_Generic_Blockchain_Ecosystem_and_its_Strategic_Implications
Summary Extracts Notes Related</description></item><item><title>the-art-of-war</title><link>https://jethughes.github.io/notes/notes/the-art-of-war/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/the-art-of-war/</guid><description>1 Estimates</description></item><item><title>The-Friar-and-the-Cipher</title><link>https://jethughes.github.io/notes/notes/The-Friar-and-the-Cipher/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/The-Friar-and-the-Cipher/</guid><description>The Friar and the Cipher outlines the social context surround the creation of the Voynich manuscript, and the man who wrote it — Roger Bacon.</description></item><item><title>the-story-of-man</title><link>https://jethughes.github.io/notes/notes/the-story-of-man/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/the-story-of-man/</guid><description>African Origins The Peopling of the Earth Putting down roots 4000 BC The Invention of the State</description></item><item><title>think-writing</title><link>https://jethughes.github.io/notes/notes/think-writing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/think-writing/</guid><description>[[veracity-week01]] [[veracity-week02]] [[veracity-week03]] [[veracity-week04]] 12/12 https://doi.org/10.1109/DTPI52967.2021.9540069 [[Parallel Governance for Decentralized Autonomous Organizations enabled by Blockchain and Smart Contracts]]</description></item><item><title>Toward an Interoperability Architecture for Blockchain Autonomous Systems</title><link>https://jethughes.github.io/notes/notes/Toward-an-Interoperability-Architecture-for-Blockchain-Autonomous-Systems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Toward-an-Interoperability-Architecture-for-Blockchain-Autonomous-Systems/</guid><description>Summary Extracts Related</description></item><item><title>transaction-finality</title><link>https://jethughes.github.io/notes/notes/transaction-finality/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/transaction-finality/</guid><description>https://smithandcrown.com/glossary/transaction-finality-probabilisticdeterministic/
Generally, transaction finality refers to the moment when parties involved in a transaction can consider the transaction to be completed.</description></item><item><title>transistors</title><link>https://jethughes.github.io/notes/notes/transistors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/transistors/</guid><description>Transistors B: Base ⇒ A swtich connecting C to E open (C is disconnected from E) when supplied 0v closed (C is connected to E) by applying +5V C: Collector E: Emitter Possible to create NAND gate using just transistors ∴ possible to create all logic gates using only transistors [^3]</description></item><item><title>Transport-Layer</title><link>https://jethughes.github.io/notes/notes/Transport-Layer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Transport-Layer/</guid><description/></item><item><title>treap</title><link>https://jethughes.github.io/notes/notes/treap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/treap/</guid><description>Treaps Link betwen heaps and trees that uses randomisation
I we are added items to a bst in random order then an unbalanced situation would be possible but highly unlikely.</description></item><item><title>tree</title><link>https://jethughes.github.io/notes/notes/tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/tree/</guid><description>not so much a data type. More of a data concept of a way in which data can be organised</description></item><item><title>tree-traversal</title><link>https://jethughes.github.io/notes/notes/tree-traversal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/tree-traversal/</guid><description>Visit each node in the tree once. So we need to visit n, all the nodes in L, and all the nodes in R.</description></item><item><title>typography</title><link>https://jethughes.github.io/notes/notes/typography/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/typography/</guid><description>most common fonts
gill sans helvetica calibri arial times three types of fonts
serif sans serif handwritten point size leading depends on the font and the user setting but usually is 20% of the font x height depends on the font.</description></item><item><title>uml-java-forward-engineering</title><link>https://jethughes.github.io/notes/notes/uml-java-forward-engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/uml-java-forward-engineering/</guid><description>similar to ERD to sql.
use case diagrams - more about system structure and features **class diagram - java class</description></item><item><title>uml-java-reverse-engineering</title><link>https://jethughes.github.io/notes/notes/uml-java-reverse-engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/uml-java-reverse-engineering/</guid><description>Java -&amp;gt; UML reverse engineering reverse of uml-java-forward-engineering
parse java docs and generate corresponding uml diagrams useful to generate models of existing systems code usually has more detail than can be represented in diagrams automated diagram layout likely to be ugly ⇒ manual clean up some language specific features may not translate</description></item><item><title>uni-notes</title><link>https://jethughes.github.io/notes/notes/uni-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/uni-notes/</guid><description>2022 S1 cosc-201 cosc-202 info-201 info-203 2022 s2 cosc-203 cosc-204 comp-210 math-202</description></item><item><title>unified-modelling-language</title><link>https://jethughes.github.io/notes/notes/unified-modelling-language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/unified-modelling-language/</guid><description> what-are-uml-diagrams use-case-diagrams class-diagrams entity relationship diagram activity-diagrams</description></item><item><title>unified-processes</title><link>https://jethughes.github.io/notes/notes/unified-processes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/unified-processes/</guid><description>oop development uses UML for modelling four phase life cycle
inception elaboration construction transition best practices develop iteratively define and mange system requirements effectively managing changes in requirements use component architectures create visual models (UML) verify quality Control changes Values and principles Values:</description></item><item><title>union-find</title><link>https://jethughes.github.io/notes/notes/union-find/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/union-find/</guid><description>1 Example We have 12 &amp;lsquo;objects&amp;rsquo; Some pairs have been connected Nodes with a sequence of edges between them form a group e.</description></item><item><title>unit-testing</title><link>https://jethughes.github.io/notes/notes/unit-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/unit-testing/</guid><description>divide code into units ⇒ test those units
consider appropriate scale
depends on type of code project as well as language object oriented: classes?</description></item><item><title>unite-and-conquer</title><link>https://jethughes.github.io/notes/notes/unite-and-conquer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/unite-and-conquer/</guid><description>5 | 8 | 2 | 3 | 4 | 1 | 7 | 6
5 8 | 2 3 | 1 4 | 6 7</description></item><item><title>unix-shell</title><link>https://jethughes.github.io/notes/notes/unix-shell/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/unix-shell/</guid><description>most common command shell (macOS, linux, android, ios) bash is another common shell windows shells: cmd.exe (legacy) powershell (more powerful than bash) many ways to run bash 1 Unix shell good/bad good embodies unix principle: separation of concerns minimal -&amp;gt; shell just manages interaction of other small tools highly programmable; supports complex automation bad has quirkiness that can trip everyone up tradeoffs Shell can be perfect to some tasks; terrible for others extremely powerful however also difficult to learn to use shells are in cosc202 as lowest-level, common means for controlling computers during software development</description></item><item><title>Untitled"</title><link>https://jethughes.github.io/notes/CIP/CIP-Documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/CIP/CIP-Documentation/</guid><description>File Structure . └── 01 Definition ├── Animation ├── Assets │ ├── Audio │ ├── Audio_Translate │ └── PDF ├── Output Files ├── Output_Translate ├── Premiere ├── Story Files └── Story Files_Translate</description></item><item><title>usbability</title><link>https://jethughes.github.io/notes/notes/usbability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/usbability/</guid><description>The extent to which a product cn be used by specifies users to achieve specified goals with effectivenesss, efficiency, and satisfaction in a specified context of use.</description></item><item><title>use-case-diagrams</title><link>https://jethughes.github.io/notes/notes/use-case-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/use-case-diagrams/</guid><description>specifies the participants (actors) and the relationships between them high level view of what a system does (not how) and who uses it represent users perspective of a system used mainly in requirements specification and early system dev effectively a todo list 1 pros informal,flexible, easy to construct easily understood improve communication between users and developers can be used to confirm requirements provide overview link analysis to design can be used to inform subsequent dev tasks derive test cases prioritise imlementation tasks help clarify new feature requests or bug reports 2 Notation 2.</description></item><item><title>user-experience</title><link>https://jethughes.github.io/notes/notes/user-experience/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/user-experience/</guid><description>&amp;ldquo;encompasses all aspects of the end users interaction with the company, its services, and its products&amp;rdquo; - Jakob Nielsen and Don Normann</description></item><item><title>user-freedom-and-control</title><link>https://jethughes.github.io/notes/notes/user-freedom-and-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/user-freedom-and-control/</guid><description>want to give the user the feeling they can freely explore the app and the freedomto control it
general flow undo/redo e.</description></item><item><title>Veracity</title><link>https://jethughes.github.io/notes/notes/veracity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/veracity/</guid><description>Abstract Blockchain technology falls into two distinct classes: open (permissionless) blockchains such as those underlying bitcoin, Ethereum and Cardano; and closed (permissioned) blockchains such as implemented in the Hyperledger Fabric project.</description></item><item><title>veracity-chain</title><link>https://jethughes.github.io/notes/notes/veracity-chain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/veracity-chain/</guid><description>I just started this to get some basic structure down.
Overview Stakeholders Main Authority e.g., govt Other Participants Agriculture Large Corporations Small/Family owned Food-Manufacturing Retail/Marketing Shipping?</description></item><item><title>version-control-systems</title><link>https://jethughes.github.io/notes/notes/version-control-systems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/version-control-systems/</guid><description>VCSs (version control systems) Are systems to keep track of changes to a set of files E.g., [[git]]
0.1 Goals allow collaboration track changes restoring previous versions finding out origins of issues backups not restrict workflow 0.</description></item><item><title>video-prototyping</title><link>https://jethughes.github.io/notes/notes/video-prototyping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/video-prototyping/</guid><description>1 benefits cheap and fast great communication can serve as spec for devs ties interface design to tasks 2 fidelity low-fi 2-5min brainstorm mid-fi 1-4 paper prtotypes video hi-fi slick +fancy for investors/management</description></item><item><title>virtual-machines</title><link>https://jethughes.github.io/notes/notes/virtual-machines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/virtual-machines/</guid><description>link: https://www.youtube.com/watch?v=wX75Z-4MEoM
What is a virtual Machine A computer inside a computer. A computer contains hardware, cpu, ram , storage, etc.</description></item><item><title>visual-design</title><link>https://jethughes.github.io/notes/notes/visual-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/visual-design/</guid><description>combine text and graphics. how to represent?
whitespace for grouping size contrasts for heiarchy variable scale and weight colors three goals</description></item><item><title>visual-design-video</title><link>https://jethughes.github.io/notes/notes/visual-design-video/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/visual-design-video/</guid><description>whitespace conveys grouping
size contrasts indicate heirarchy
try to make informatio that matters conme through clearly
guide - convery structure, relative importanct relatiosnhps pace - draw people in, help orient, provide hooks to dive deep mesage - express meaning and style, breathe life into the content.</description></item><item><title>voltaire</title><link>https://jethughes.github.io/notes/notes/voltaire/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/voltaire/</guid><description>Superstition 040-superstition
Rejected Religion of his time. Believed in cosmological god.</description></item><item><title>Vulnerabilities on Hyperledger Fabric</title><link>https://jethughes.github.io/notes/notes/Vulnerabilities-on-Hyperledger-Fabric/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Vulnerabilities-on-Hyperledger-Fabric/</guid><description>link: https://doi.org/10.1016/j.pmcj.2019.101050
Summary Identified two security vulnerabilities in hypderledger fabric, examined their effects, and proposed two solutions.
Extracts &amp;ldquo;First, the identity of an endorser is known to all members within a channel, which opens a gateway for DoS attack on endorsers in order to either block transaction pertaining to a client, or to degrade network efficiency.</description></item><item><title>web</title><link>https://jethughes.github.io/notes/notes/web/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/web/</guid><description>HTML html
CSS css
JavaScipt javascript
Back End backend</description></item><item><title>what-are-uml-diagrams</title><link>https://jethughes.github.io/notes/notes/what-are-uml-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/what-are-uml-diagrams/</guid><description>A standard set of constructs and notation defined by the object management group for creating models
specify what not how</description></item><item><title>Wireless Layer</title><link>https://jethughes.github.io/notes/notes/Wireless-Networks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/Wireless-Networks/</guid><description/></item><item><title>wizard-of-oz</title><link>https://jethughes.github.io/notes/notes/wizard-of-oz/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/wizard-of-oz/</guid><description>making interactive app quickly with minimal code
simulate interactive behaviour with human operators
make interactive app without much code front end interface remote wizard controls user interface makes sense with is faster/cheaper/easier than making the real thing get feedback from users people hi-fi users think its more real low-fi: more license to suggest changes 1 making wizard protoypes find scenarios to protoypes create UI skeleton develop hooks for wizard input decide where and how the wizard will provide input remember not to fake stuff that it not feasible in real life rehearse wizard rile with colleague 2 running wizard protoypes practivce with friend</description></item><item><title>world-planning</title><link>https://jethughes.github.io/notes/notes/world-planning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/world-planning/</guid><description> anthropocene capitalocene solarpunk eco-modernism degrowth eco-socialism library economy eco anarchism post civilization indigenous sovereignty permablitzing permaculture</description></item><item><title>YAC — BFT Consensus Algorithm for Blockchain</title><link>https://jethughes.github.io/notes/notes/YAC-BFT-Consensus-Algorithm-for-Blockchain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/YAC-BFT-Consensus-Algorithm-for-Blockchain/</guid><description>link: https://doi.org/10.48550/arXiv.1809.00554
Summary This is the algorthm used in Hyperledger Iroha.
Extracts A client forms a transaction with commands and signs it with their private key.</description></item><item><title>YAC"</title><link>https://jethughes.github.io/notes/notes/YAC/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/YAC/</guid><description>paper: [[YAC — BFT Consensus Algorithm for Blockchain]] use in: [[hyperledger#Iroha]]
A client forms a transaction with commands and signs it with their private key.</description></item><item><title>zkCrowd — A Hybrid Blockchain-Based Crowdsourcing Platform</title><link>https://jethughes.github.io/notes/notes/zkCrowd-A-Hybrid-Blockchain-Based-Crowdsourcing-Platform/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/zkCrowd-A-Hybrid-Blockchain-Based-Crowdsourcing-Platform/</guid><description>Summary Extracts Related</description></item><item><title>zuck</title><link>https://jethughes.github.io/notes/notes/zuck/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/zuck/</guid><description>a friend of yours had a reaction to something so you might be interested in it too.
try to mute angry reactions</description></item></channel></rss>