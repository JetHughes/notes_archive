{"/":{"title":"Jet's Notes","content":"\nHello there, I'm Jet! I am a undergraduate student at the University of Otago and this is my personal collection of notes, slash my portfolio.\n\nThese are very rough, work-in-progress notes. I would not expect them to be very useful to anyone besides myself.\n\nThis is a very clickky note on how to use jets keyboard the quick brown fox jumps over the lazy dogaksdjhfkhjl 123\n\n\n## Notes\n1) [Uni Notes](notes/uni-notes.md)\n2) [Cheat Sheets](notes/cheat-sheets.md)\n3) [Philosophy](notes/philosophy.md)\n4) [Media](notes/media.md)\n5) [Independent Learning](notes/independent-learning.md)\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/cheatsheets/bash-tricks":{"title":"","content":"#cheatsheet \n\n**Busy waiting\n\n```\nwhile sleep 0.5; do\n\t//do something\ndone\n```\n\n\n\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/cheatsheets/git-cheat-sheet":{"title":"git-cheat-sheet","content":"\n## 1 Commands\n- Clone -\u003e create local copy of remote repo\n- Commit -\u003e save changes to local repo\n\t- Packages logically related collection of changes and save the permanently is repos history\n\t- Each commit should address single well defined task\n\t- Commits should be small and regular\n\t-  Should contain a brief, informative, message\n\t\t- one line -\u003e \u003c50 (commit needing more than this are likely too large)\n\t\t- multi line -\u003e \u003c72\n\t\t- well defined, shared terminology\n\t\t- consider what other devs need to know\n- Stash -\u003e temporarily store uncommited changes\n- Push -\u003e Upload changes from local repo to remote\n- Pull -\u003e Download and merge changes from remote repo into local repo (fetch + merge)\n- Merge -\u003e Merge changes from one brach into another\n\t- merge when:\n\t\t- pulling changes from remote into your repo\n\t\t- merging from branch into main codebase\n\t- Can merge any branch into any other branch\n\t- good idea to regularly rebase specialised persistent branches to keep them in sync with the more general main codebase\n\t- rebase topic branches before merging into main\n\t\t- helps to deal with merge conflicts\n\t\t- only branch is broken if you mess up\n\t\t- can test for breakage before merging to main \n\t- Merging is usually automatic\n\t\t- sometimes merge algorithm can't resolve conflicting changes to the same code\n\t\t\t- e.g., two devs  change the same method at the same time\n\t\t\t- conflict must then be manually resolved\n\t\t- All VCS will check that your repo is up to date before pushing, and force you to push if not \n- Tag -\u003e name a particular commit e.g., for a release\n\n## 2 Terms\n- Head -\u003e most recent commit on Current branch\n- [[branch]] -\u003e Split current dev path into two to work on e.g., a bug or a feature\n- Repository -\u003e Where the codebase/file are stored\n\t- Contains meta-data about the previous vesions etc\n- Merge commit -\u003e commits which are derived from multiple parent commits\n- Git tag -\u003e e.g., v 1.0\n\t- cannot be move by commits\n\t- record metadata","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/cheatsheets/latex-cheat-sheet":{"title":"latex-cheat-sheet","content":"\nhttps://wch.github.io/latexsheet/latexsheet-0.png\nhttps://wch.github.io/latexsheet/latexsheet-1.png\n\n\n$\\theta$\n\n$\\leq \\geq$\n\n\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/cheatsheets/puml-cheat-sheet":{"title":"puml-cheat-sheet","content":"\n- [activity diagram docs](https://plantuml.com/activity-diagram-beta)\n- [use case diagram docs](https://plantuml.com/use-case-diagram)\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/1":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-31\n\u003e Never deny a diagnosis but do deny the negative verdict that may go with it.\n\u003e — \u003ccite\u003eNorman Cousins\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| 203 writeup              | 2hr    |        |\n| 201 assignment           | 2hr    |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## 1 Todo's\n- [x] 13:00 Info201 Lecture\n\n## 2 Lecture/Labs\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [x] 16:00 Info201 Lecture\n\n## 3 Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 1hr Question 1\n\t- [ ] 45min Question 2\n\t- [ ] 30min Question 3\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [ ] 120mins write up\n\t\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n- [ ] save open file state\n\n## 4 Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n## 5 Timetable\n![](https://i.imgur.com/86a1hDy.png)\n\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n\n\n\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-07":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n#### TODO\n- [x] mark off cosc202 lab\n- [x] cosc 202 lecture\n- [x] cosc 201 lab\n- [x] 201 lecture 3\n\n\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-08":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n#### TODO\n- [x] cosc 201 lecture\n- [x] info 203 lecture\n- [ ] info 201 lecture\n- [x] 202 lab (help with grep for {)\n- [x] stocks notes\n- [x] review\n- [x] look at flats\n- [x] fixes for polish 2,4,5,\n- [x] fixes for polish 6 \n- [x] review 201 lecture notes\n\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-09":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n#### TODO\n- [x] 203 Lecture\n- [x] module 08 swedish fix\n- [x] polishes fixes 7 8 10 14 \n- [x] 203 tutorial\n- [x] 201 tutorial\n- [ ] copy key\n- [x] post long point vids / send to leeto\n- [x] start cosc201 lab03\n\n\n\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-10":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n#### TODO\n- [ ] copy key\n- [x] 3 examples for 203 assignment\n- [x] polish fixes\n- [x] 202 lecture\n- [x] cosc 201 lab\n- [x] info 201 lecture\n- [x] get out meat\n- [x] refactor 201 notes\n- [x] cosc 201 lecture\n\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-11":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-11\n## Todo's\n- [ ] work on norwegian modules or polish fixes\n- [x] 30 min typing\n- [x] 202 lab\n- [x] info 201 lecture\n- [x] info 201 lab\n\n## Stocks\n\n\n## Daily metrics\n- typing time: 27\n- typing avg: 57\n\n- work time: 0\n\n- [x] exercise\n- [x] surf\n- [x] leave house\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n\n![[ ]]","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-12":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-12\n## Todo's\n- [ ] ...\n## Stocks\nbrief notes\n\n## Daily metrics\n- typing time: \n- typing avg: \n\n- work time: \n\n- [x] exercise\n- [x] surf\n- [x] leave house\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-14":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-14\n## Todo's\n- [x] review notes from saturday sunday and toaday\n- [x] 202 lecture at 11:00\n- [x] 201 lab\n- [x] upload module 03 and fix 08\n- [x] 4th example for 203 What is Usability\n- [x] put hdmi cable back\n- [ ] add git usage note\n- [x] start 201 assignment 1\n- [ ] watch 203 videos 1-2\n\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-15":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-15\n## Todo's\n- [x] refactor git notes\n- [ ] watch 203 videos\n- [x] call dad\n- [ ] spending review\n- [x] 203 lecture\n- [x] 201 lecture\n- [x] info 201 lecture\n- [x] 202 lab\n- [ ] norwegian modules\n- [x] review notes for today\n- [x] refactor 203 notes\n- [x] 201 lab part 1, 2\n- [ ] review dropping info 201/202\n\n# Daily Laws\n## Mind\n\u003e 'Cause all that's gonna do really is accelerate the anxieties that I wish I could alleviate\n\u003e I'm ready to lose my mind, but instead I use my mind\n\n## Body\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#:)\n![[ ]]","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-16":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-16\n## Reminders\n- [ ] investigate python position \n- [ ] python ai weekly review\n\n## Todo's\n- [x] Norwegian 4\n- [x] Lecture 203\n- [x] tut 203\n- [x] tut 201\n- [x] review notes\n- [x] review dropping 201\n- [x] spending review\n- [x] refactor 203 notes\n- [x] learn about heading links\n- [ ] 203 assignment\n\n| task                      | e time | r time |\n| --------------------------| ------ | -------|\n| no   4                    | 2hrs   | 1hr40  |\n| review notes              | 0.5hr  | 28mins |\n| review 201                | 0.5hr  | 11mins |\n| spending review           | 0.5hr  | 1.5hrs |\n| refactor 203 notes        | 0.5hr  | 2hrs   |\n| learn about heading links | 15min  | 3mins  |\n\n# Daily Laws\n## Mind\n\u003e 'Cause all that's gonna do really is accelerate the anxieties that I wish I could alleviate\n\u003e I'm ready to lose my mind, but instead I use my mind\n\n## Body\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-17":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-17i\n## Reminders\n- [x] investigate python position \n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Todos\n- [ ] 203 assignment\n- [ ] 201 assignment\n- [x] typing\n- [ ] norwegian 05, 06\n- [x] lecture 202\n- [x] lab cosc 201\n- [x] lecture info 201 \n- [ ] info201 lecture notes use case diagrams\n- [x] review notes\n \n| task                     | e time | r time |\n| -------------------------| ------ | -------|\n| norwegian 05 04          | 2.5hr  |        |\n| typing                   | 0.5hr  | 0.5hr  |\n| 203 ass                  | 2hr    | 4hr    |\n| cosc 201 ass             | 1hr    |        |\n| lecture 202              | 1hr    | 1hr    |\n| lab cosc 201             | 1hr    | 0mins  |\n| lecture info 201         | 1hr    | 1hr    |\n| python job               | 0.5hr  | 10mins |\n| review notes             | 0.5hr  | 5mins  |\n\n# Daily Laws\n## Mind\n\u003e 'Cause all that's gonna do really is accelerate the anxieties that I wish I could alleviate\n\u003e I'm ready to lose my mind, but instead I use my mind\n\n## Body\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-18":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-18i\n## Reminders\n- [ ] python ai weekly review\n- [ ] my own password manager\n- [ ] \n\n## Todo's\n- [ ] 203 assignment\n- [ ] 201 assignment\n- [ ] norwegian 05, 06\n- [ ] info201 lecture notes use case diagrams\n- [x] 202 brightness\n- [ ] 202 add comments \n\n| task                     | e time | r time |\n| -------------------------| ------ | -------|\n| 202 brightness           | 2hr    | 2hr    |\n| 202 add comments         | 15min  |        |\n| norwegian 4 5 6 7        | 4hr    |        |\n| 201 lecture notes        | 1hr    |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n\n# Daily Laws\n## Mind\n\u003e 'Cause all that's gonna do really is accelerate the anxieties that I wish I could alleviate\n\u003e I'm ready to lose my mind, but instead I use my mind\n\n## Body\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-19":{"title":"","content":"[[notes/daily-notes]]\n\n---\n↑\n\n# 2022-03-19\n## Reminders\n- [ ] \n## Todo's\n- [ ] \n\n| task                     | e time | r time |\n| -------------------------| ------ | -------|\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n\n# Daily Laws\n## Mind\n\u003e 'Cause all that's gonna do really is accelerate the anxieties that I wish I could alleviate\n\u003e I'm ready to lose my mind, but instead I use my mind\n\n## Body\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]\n- [ ] python ai weekly review\n- [ ] my own password manager\n- [ ] \n- [ ] 203 assignment\n- [ ] 201 assignment\n- [ ] norwegian 05, 06\n- [ ] info201 lecture notes use case diagrams\n- [ ] 202 add comments ","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-20":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-20i\n## Reminders\n- [ ] \n## Todo's\n- [ ] \n\n| task                     | e time | r time |\n| -------------------------| ------ | -------|\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n\n# Daily Laws\n## Mind\n\u003e 'Cause all that's gonna do really is accelerate the anxieties that I wish I could alleviate\n\u003e I'm ready to lose my mind, but instead I use my mind\n\n## Body\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]\n- [ ] \n- [ ] \n- [ ] python ai weekly review\n- [ ] my own password manager\n- [ ] \n- [ ] 203 assignment\n- [ ] 201 assignment\n- [ ] norwegian 05, 06\n- [ ] info201 lecture notes use case diagrams\n- [ ] 202 add comments ","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-21":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-21\n| task                     | e time | r time |\n| -------------------------| ------ | -------|\n| info 201 assignment      | 1hr    |        |\n| info 201 lab             | 1.5hr  | 1hr    |\n| cosc 201 assignment      | 1hr    | 3hr    |\n|                          |        |        |\n|                          |        |        |\n| norwegian 12             | 1.25hr | 1.5hr  |\n|                          |        |        |\n|                          |        |        |\n\n\n## Assignments\n- [ ] 5pm 21st March ⇒ 201 assignment\n- [ ] 5pm 1st April      ⇒ info 201 assigment\n\n### Cosc 202 tasks\n\n## Todo's\n- [ ] info 201 lab\n- [ ] \n\n## Lectures/labs\n- [x] 202 lecture @ 11:00\n- [x] cosc 201 lab @ 12:00\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\ninfo 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n![[ ]]\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-22":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-22\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| Lectures and labs        | 5hr    | 3hr    |               \n| Norwegian 13 14          | 2.5hr  | 3hr    |\n| Info 201 Assignment      | 1.5hr  | 0hr    |\n| Review notes             | 1hr    | 1hr    |\n\n## Assignments\n- [ ] 5pm 1st April            ⇒ cosc 201 assignment\n\t- [ ] 60mins write up\n- [ ] 5pm 25th March      ⇒ info 201 milestone 1\n\t- [ ] 30mins process transcript\n\t- [ ] 30mins summary and scope\n\t- [ ] 120mins functional requirements\n\t- [ ] 30mins non functional requirements\n\t- [ ] 15mins glossary\n\t- [ ] 30mins follow-up checklist\n- [ ] 5pm 1st April            ⇒ info 203 assignment 2\n\t- [ ] Find group\n\t- [ ] 30mins heuristic evaulations\n\t- [ ] 120mins write up\n\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n## Todo's\n- [ ] info 201 lab\n- [x] Norwegian 13 14\n- [x] review notes for today\n\n## Lecture/Labs\n- [x] 10:00 Info203 Lecture\n- [x] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [x] 14:00 Cosc202 Lab\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-23":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-23\n\u003e But man is not made for defeat. A man can be destroyed but not defeated.\n\u003e — \u003ccite\u003eErnest Hemingway\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| norwegian 17 16          | 2hr    | 1hr    |\n| info 201  transc         | 30m    | 1.5hr  |\n| info 201 summary and sc  | 30m    | 1hr15  |\n| info 201 functional reqs | 1.5hr  | -      |\n| review notes             | 15min  |  15m   |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## Todo's\n- [x] info 201 lab 3pm\n- [x] review notes\n\n## Lecture/Labs\n- [x] 13:00 Info201 Lecture\n- [x] 10:00 Info203 Lecture\n- [x] 14:00 Info203 Tutorial\n- [-] 16:00 Cosc201 Tutorial\n\n## Assignments\n- [ ] 5pm 1st April            ⇒ cosc 201 assignment\n\t- [ ] 60mins write up\n- [ ] 5pm 25th March      ⇒ info 201 milestone 1\n\t- [x] 30mins process transcript\n\t- [x] 30mins summary and scope\n\t- [ ] 120mins functional requirements\n\t- [ ] 30mins non functional requirements\n\t- [ ] 15mins glossary\n\t- [ ] 30mins follow-up checklist\n- [ ] 5pm 1st April            ⇒ info 203 assignment 2\n\t- [ ] Find group\n\t- [ ] 30mins heuristic evaulations\n\t- [ ] 120mins write up\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n- [ ] \n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-24":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-24\n\u003e When deeds and words are in accord, the whole world is transformed.\n\u003e — \u003ccite\u003eZhuang Zhou\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| Norwegian 15 01          | 2hr    |        |\n| Functional reqs          | 3hr    |        |\n| Non Functional reqs      | 2hr    |        |\n| Review Notes             | 30m    | 1hr    |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## Todo's\n- [ ] \n\n## Lecture/Labs\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 16:00 Info201 Lecture\n\n## Assignments\n- [ ] 5pm 1st April            ⇒ cosc 201 assignment\n\t- [ ] 60mins write up\n- [ ] 5pm 25th March      ⇒ info 201 milestone 1\n\t- [ ] 120mins functional requirements\n\t- [ ] 30mins non functional requirements\n\t- [ ] 15mins glossary\n\t- [ ] 30mins follow-up checklist\n- [ ] 5pm 1st April            ⇒ info 203 assignment 2\n\t- [ ] Find group\n\t- [ ] 30mins heuristic evaulations\n\t- [ ] 120mins write up\n\t\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-25":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-25\n\u003e He who has imagination without learning has wings but no feet. — \u003ccite\u003eJoseph Joubert\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| Review notes             | 15m    | 15min  |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n\n## 1 Todo's\n- [ ] 11:00 Cosc202 Lecture (debugging)\n- [x] 12:00 Cosc201 Lab\n- [ ] 16:00 Info201 Lecture (advanced data modelling - patterns)\n\n## 2 Lecture/Labs\n- [x] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture (mergesort 2)\n- [ ] 12:00 Info201 Lab (use case diagrams)\n\n## 3 Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 60mins write up\n- [x] 5pm 25th March      ⇒ info 201 milestone 1\n\t- [x] 120mins functional requirements\n\t- [x] 30mins non functional requirements\n\t- [x] 15mins glossary\n\t- [x] 30mins follow-up checklist\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [ ] Find group\n\t- [ ] 30mins heuristic evaulations\n\t- [ ] 120mins write up\n\t\n### 3.1 Cosc 202 tasks\n- [ ] save open file state\n- https://trello.com/b/Fk7lAfEG/andie\n\n## 4 Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-27":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-27\n\u003e Be glad of life because it gives you the chance to love, to work, to play, and to look up at the stars.\n\u003e — \u003ccite\u003eHenry van Dyke Jr.\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## Todo's\n- [ ] 11:00 Cosc202 Lecture (debugging)\n- [ ] 16:00 Info201 Lecture (advanced data modelling - patterns)\n- [ ] 11:00 Cosc201 Lecture (mergesort 2)\n- [ ] 12:00 Info201 Lab (use case diagrams)\n\n## Lecture/Labs\n\n## Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 60mins write up\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [ ] Find group\n\t- [ ] 30mins heuristic evaulations\n\t- [ ] 120mins write up\n\t\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n- [ ] \n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-28":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-28\n\u003e Everything that happens as it should, and if you observe carefully, you will find this to be so.\n\u003e — \u003ccite\u003eMarcus Aurelius\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| Past Lectures            | 4hr    |        |\n| Today's lectures         | 2hr    | 2:20   |\n| Cosc 201 assignment      | 1hr    | 1hr    |\n| Info 203 assignment      | 1hr    |        |\n| Review notes             | 30min  | 15min  |\n| Norwegian 1 15           | 2hr    | 1h14   |\n| 202 work                 | 1hr    | 1hr    |\n## Todo's\n- [x] andie work\n- [ ] 11:00 Cosc202 Lecture (debugging)\n- [x] 16:00 Info201 Lecture (advanced data modelling - patterns)\n- [ ] 11:00 Cosc201 Lecture (mergesort 2)\n- [ ] 12:00 Info201 Lab (use case diagrams)\n\n## Lecture/Labs\n- [x] 11:00 Cosc202 Lecture\n- [x] 12:00 Cosc201 lab\n\n## Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 1hr Question 1\n\t- [ ] 45min Question 2\n\t- [ ] 30min Question 3\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [x] Find group\n\t- [ ] 1hr heuristic evaluations\n\t- [ ] 120mins write up\n- [ ] save open file state\n\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-29":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-29\n\u003e Be as you wish to seem.\n\u003e — \u003ccite\u003eSocrates\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| past lectures            | 2h     |        |\n| Norwegian 15             | 1.5h   |        |\n| todays lectures          | 3hr    |        |\n| heruistic evals          | 3hr    |        |\n| review notes             | 5min   | 5min   |\n|                          |        |        |\n\n## Todo's\n- [x] 11:00 Cosc202 Lecture (debugging)\n- [x] 11:00 Cosc201 Lecture (mergesort 2)\n- [ ] 12:00 Info201 Lab (use case diagrams)\n\n## Lecture/Labs\n- [x] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [x] 14:00 Cosc202 Lab\n\n## Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 1hr Question 1\n\t- [ ] 45min Question 2\n\t- [ ] 30min Question 3\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [ ] 3hr heuristic evaluations\n\t\t- [ ] ohyay\n\t\t- [x] skype\n\t\t- [ ] discord\n\t- [ ] 120mins write up\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-30":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-30\n\u003e Get busy living or get busy dying.\n\u003e — \u003ccite\u003eStephen King\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| norwegian 15             | 2hr    | 2hr    |\n| review notes             |  5min  |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## Todo's\n- [ ] 12:00 Info201 Lab (use case diagrams)\n- [x] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n\n## Lecture/Labs\n- [x] 10:00 Info203 Lecture\n- [x] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n\n## Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 1hr Question 1\n\t- [ ] 45min Question 2\n\t- [ ] 30min Question 3\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [x] 3hr heuristic evaluations\n\t\t- [x] ohyay\n\t\t- [x] discord\n\t- [ ] 120mins write up\n\t\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-03-31":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-31\n\u003e If you think you can, you can. And if you think you can't, you're right.\n\u003e — \u003ccite\u003eHenry Ford\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## 1 Todo's\n- [x] 13:00 Info201 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n\n## 2 Lecture/Labs\n- [x] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [x] 16:00 Info201 Lecture\n\n## 3 Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 1hr Question 1\n\t- [ ] 45min Question 2\n\t- [ ] 30min Question 3\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [ ] 120mins write up\n\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n\n## 4 Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-04-01":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-01\n\u003e I will give you a definition of a proud man: he is a man who has neither vanity nor wisdom one filled with hatreds cannot be vain, neither can he be wise.\n\u003e — \u003ccite\u003eJohn Keats\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| 203 Assignment           | 3hr    | 3hr    |\n| review notes             | 30min  | 30min  |\n| 201 Assignment           | 3hr    |        |\n| Swedish fixes            | ?      |        |\n| 202 Work                 | 1hr    |        |\n\n## 1 Todo's\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 12:00 Cosc201 Lab\n\n## 2 Lecture/Labs\n- [r] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n## 3 Assignments\n- [ ] 12pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 1hr Question 1\n\t- [ ] 45min Question 2\n\t- [ ] 30min Question 3\n- [x] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [x] 120mins write up\n\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n\n## 4 Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-04-02":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-02\n\u003e We all live with the objective of being happy; our lives are all different and yet the same.\n\u003e — \u003ccite\u003eAnne Frank\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## 1 Todo's\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 12:00 Cosc201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n## 2 Lecture/Labs\n\n\n## 3 Assignments\n\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n\n## 4 Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-04-03":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-03\n\u003e I'm not interested in age. People who tell me their age are silly. You're as old as you feel.\n\u003e — \u003ccite\u003eElizabeth Arden\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## 1 Todo's\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 12:00 Cosc201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n## 2 Lecture/Labs\n\n\n## 3 Assignments\n\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n\n## 4 Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n\n\n","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-04-04":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-04\n\u003e If you light a lamp for somebody, it will also brighten your path.\n\u003e — \u003ccite\u003eBuddha\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## 1 Todo's\n\n## 2 Lecture/Labs\n- [x] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n## 3 Assignments\n\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n\n## 4 Projects\n- continuously integrate obsidian notes to website\n\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 12:00 Cosc201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n- [ ] save open file state\n- [ ] python ai weekly review\n- [ ] my own password manager","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-04-05":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-05\n\u003e If you smile when no one else is around, you really mean it.\n\u003e — \u003ccite\u003eAndy Rooney\u003c/cite\u003e\n\n| # | task                                        | P | A | e time | r time |\n|---|---------------------------------------------|---|---|--------|--------|\n| 2 | 201 Lecture                                 | 2 | 2 |        |        |\n| 3 | One no fix                                  | 1 |   |        |        |\n| 1 | Cosc 201 Lab                                | 3 |   |        |        |\n|   |                                             |   |   |        |        |\n|   |                                             |   |   |        |        |\n|   |                                             |   |   |        |        |\n|   |                                             |   |   |        |        |\n|   |                                             |   |   |        |        |\n\n\u003e SCORE: 33%\n\n## 1 Todos\n- [ ] 12:00 Cosc201 lab\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n## 2 Lecture/Labs\n- [x] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [x] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## 3 Assignments\n\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n## 4 Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## 5 Timetable\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.082085922Z","tags":null},"/daily_notes/2022-04-06":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-06\nRaw Power - The Stooges - spotify:album:6mxbG8KrOTZIxlP4gzaliM\n\n| # | task                    | P | A | e time | r time |\n|---| ------------------------|---|---|--------| ------ |\n| 1 | one norwegian fix       |   |   |        |        |\n| 2 | 1hr 202 work            |  |   |        |        |\n| 3 | decide about 203 ass    |  |   |        |        |\n| 4 |                         |  |   |        |        |\n| 5 |                         |  |   |        |        |\n| 6 |                         |  |   |        |        |\n| 7 |                         |  |   |        |        |\n| 8 |                         |  |   |        |        |\n\n\n\u003e SCORE: \n\n## 1 Todos\n- [ ] 12:00 Cosc201 lab\n- [x] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## 2 Lecture/Labs\n- [x] 10:00 Info203 Lecture\n- [ ] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n\n## 3 Assignments\n\n## 4 Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-07":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 1 2022-04-07\n\nScreamadelica - Primal Scream - spotify:album:3Kkocxhs4Ek537j67DFNd7\n\n## 1.1 Todos\n- [x] 12:00 Cosc201 lab\n- [ ] 12:00 Info201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [x] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n- [x] Add review meta data to new vault\n- [ ] inquire about dataview in quartz\n\n## 1.2 Lecture/Labs\n\n- [x] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [x] 16:00 Info201 Lecture\n\n## 1.3 Assignments\n\n- [ ] 203 Assignment 3\n\t- [ ] Decide individual or not\n\n## 1.4 Projects\n\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## 1.5 Links\n### 1.5.1 cosc 202\n- [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 1.5.2 info 201\n\n- [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#\n- [Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-08":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 1 2022-04-08\n\nAutobahn - Kraftwerk - spotify:album:0DzC0tyowMi2O9QfkDRvfJ\n\n## 1.1 Todos\n- [x] Info201 Lab 05\n- [ ] info 201 lab 04\n- [ ] Cosc201 Lecture\n- [ ] Cosc201 Tutorial\n- [ ] inquire about dataview in quartz\n- [ ] Cosc201 Lab Shuffle\n- [ ] Assignment 3\n- [x] Decide individual or not\n\n## 1.2 Lecture/Labs\n\n- [x] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 06\n\n## 1.3 Assignments\n\n## 1.4 Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## 1.5 Timetable\n\n![[ ]]\n\n## 1.6 Links\n\n### 1.6.1 cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 1.6.2 info 201\n\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-09":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 1 2022-04-09\n\nToys In The Attic - Aerosmith - spotify:album:36IxIOGEBAXVozDSiVs09B\n\n## 1.1 Todos\n- [x] Cosc201 Lecture 11\n- [x] Cosc201 Lecture 12\n- [x] info 201 lab 05\n- [ ] info 201 lab 05\n- [ ] 12:00 Info201 Lab 06\n- [ ] Start Assignment 3\n- [x] Cosc201 Tutorial\n- [ ] inquire about dataview in quartz\n- [x] review notes\n\n- [ ] Cosc201 Lab Shuffle\n## 1.2 Lecture/Labs\n\n\n\n## 1.3 Assignments\n- Start - keep notes\n\n## 1.4 Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## 1.5 Timetable\n\n![[ ]]\n\n## 1.6 Links\n\n### 1.6.1 cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 1.6.2 info 201\n\n[coursework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-10":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-10\n\nBryter Layter - Nick Drake - spotify:album:7w9Og10Tdkh3nqrVD1D5IW\n\n## Todos\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] Cosc201 Lab Shuffle\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n\n## Lecture/Labs\n\n\n## Assignments\n\n\n## Projects\n- python ai weekly review\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n- [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n- [coursework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-11":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-11\n\nLayla And Other Assorted Love Songs - Derek \u0026amp; The Dominos - spotify:album:5iIWnMgvSM8uEBwXKsPcXM\n\n## Todos\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [x] Cosc201 Lab Shuffle\n- [ ] change testing of contrast and brightness andie\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n\n## Lecture/Labs\n\n- [x] 11:00 Cosc202 Lecture\n- [x] 12:00 Cosc201 lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-12":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-12\n\nSynchronicity - The Police - spotify:album:28eOriEfl7IGbQDNvWIWXK\n\n## Todos\n- [ ] remote desktop for IT work\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] change testing of contrast and brightness andie\n- [x] upload 203 notes for disability services\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n\n## Lecture/Labs\n\n- [x] 10:00 Info203 Lecture\n- [x] 11:00 Cosc201 Lecture\n- [x] 13:00 Info201 Lecture\n- [x] 14:00 Cosc202 Lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-13":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-13\n\nListen Without Prejudice Vol. 1 - George Michael - spotify:album:4lGS8HxU3NYaQxfU0wx2r1\n\n## Todos\n- [ ] remote desktop for IT work\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] change testing of contrast and brightness andie\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n\n## Lecture/Labs\n\n- [x] 10:00 Info203 Lecture\n- [ ] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-14":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-14\n\nHappy Sad - Tim Buckley - spotify:album:20CYfxjKvqXkCXBhAgOE39\n\n## Todos\n- [ ] remote desktop for IT work\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] change testing of contrast and brightness andie\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n- [ ] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n\n## Lecture/Labs\n\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 16:00 Info201 Lecture\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-15":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-15\n\nSmile - Brian Wilson - spotify:album:4Uc6YCjpfyjj02rZfg2EUv\n\n## Todos\n- [ ] remote desktop for IT work\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] change testing of contrast and brightness andie\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n- [ ] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 16:00 Info201 Lecture\n\n## Lecture/Labs\n\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-16":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-16\n\nNo Sleep 'Til Hammersmith (Live) - Mot�rhead - spotify:album:6DJEPyUk9Vqvq5Rh8HD7D8\n\n## Todos\n- [ ] remote desktop for IT work\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] change testing of contrast and brightness andie\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n- [ ] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 16:00 Info201 Lecture\n\n## Lecture/Labs\n\n\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-18":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-18\n\nTonight's The Night - Neil Young - spotify:album:5FTx6W84UUU14n29QV4saY\n\n## Todos\n- [ ] remote desktop for IT work\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] change testing of contrast and brightness andie\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n- [ ] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 16:00 Info201 Lecture\n\n## Lecture/Labs\n\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- bug-tracker\n\t- \n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-19":{"title":"","content":"[2022-04-18](daily_notes/2022-04-18) \u003c\u003c [[notes/daily-notes]] \u003e\u003e [2022-04-20](daily_notes/2022-04-20)\n\n---\n\n# 2022-04-19\n\nGiant Steps - The Boo Radleys - spotify:album:6347aGYak5Dsi0hwPMMpmj\n\n## Todos\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n- [ ] 16:00 Cosc201 Tutorial\n\n## Lecture/Labs\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-20":{"title":"","content":"[2022-04-19](daily_notes/2022-04-19) \u003c\u003c [[notes/daily-notes]] \u003e\u003e [2022-04-21](daily_notes/2022-04-21)\n\n---\n\n# 2022-04-20\n\nGiant Steps - The Boo Radleys - spotify:album:6347aGYak5Dsi0hwPMMpmj\n\n## Todos\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n- [ ] 16:00 Cosc201 Tutorial\n\n## Lecture/Labs\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-21":{"title":"","content":" t\u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-24](daily_notes/2022-04-24)\n\n---\n\n# 23-04-22\n\nJohn Barleycorn Must Die - Traffic - spotify:album:2TjodugH6rA5ZHPsWVErmw\n\n## Todos\n\n## Lecture/Labs\n\n\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-23":{"title":"","content":"t\u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-24](daily_notes/2022-04-24)\n\n---\n\n# 2022-04-23\n\n## Todos\n\n## Lecture/Labs\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-24":{"title":"","content":"t \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-24](daily_notes/2022-04-25)\n\n---\n\n# 23-04-22\n\nJohn Barleycorn Must Die - Traffic - spotify:album:2TjodugH6rA5ZHPsWVErmw\n\n## Todos\n\n## Lecture/Labs\n\n\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-25":{"title":"","content":"[2022-04-25](daily_notes/2022-04-25) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-27](daily_notes/2022-04-27)\n\n---\n\n# 26-04-22\n\nSelected Ambient Works 85-92 - Aphex Twin - spotify:album:7aNclGRxTysfh6z0d8671k\n\n## Todos\n\n## Lecture/Labs\n\n- [ ] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-26":{"title":"","content":"[2022-04-24](daily_notes/2022-04-24) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-27](daily_notes/2022-04-27)\n\n---\n\n# 26-04-22\n\nSelected Ambient Works 85-92 - Aphex Twin - spotify:album:7aNclGRxTysfh6z0d8671k\n\n## Todos\n- book (or not) flights for holiday\n- watch 203 videos\n- [Plan](private/Plan.md)\n\n## Lecture/Labs\n\n- [x] 10:00 Info203 Lecture\n- [x] 11:00 Cosc201 Lecture\n- [x] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-27":{"title":"","content":"[2022-04-26](daily_notes/2022-04-26) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-28](daily_notes/2022-04-28)\n\n---\n\n# 27-04-22\n\nCee-Lo Green... Is The Soul Machine - Cee Lo Green - spotify:album:0wdleLMeNmGUHChsmx9svt\n\n## Todos\n- [ ] 14:00 Cosc202 Lab\n- [ ] use 1001 albums api\n\n## Lecture/Labs\n\n- [x] 10:00 Info203 Lecture\n- [x] 14:00 Info203 Tutorial\n- [x] 16:00 Cosc201 Tutorial\n\n## Assignments\n- Mobile app\n* c201 ass\n* i201 ass\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-28":{"title":"","content":"[2022-04-27](daily_notes/2022-04-27) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-29](daily_notes/2022-04-29)\n\n---\n\n# 28-04-22\n\nDr. Octagonecologyst - Dr. Octagon - spotify:album:23DJ3KNE5JXi61G31T2Kni\n\n## Todos\n- [ ] 14:00 Cosc202 Lab\n- [ ] use 1001 albums api\n\n## Lecture/Labs\n\n- [x] 11:00 Cosc202 Lecture\n- [x] 12:00 Cosc201 Lab\n- [x] 16:00 Info201 Lecture\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-29":{"title":"","content":"[2022-04-28](daily_notes/2022-04-28) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-30](daily_notes/2022-04-30)\n\n---\n\n# 29-04-22\n\nA Hard Day's Night - Beatles - spotify:album:6wCttLq0ADzkPgtRnUihLV\n\n## Todos\n- [ ] 14:00 Cosc202 Lab\n- [ ] use 1001 albums api\n\n## Lecture/Labs\n\n- [ ] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-04-30":{"title":"","content":"[2022-04-29](daily_notes/2022-04-29) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-01](daily_notes/2022-05-01)\n\n---\n\n# 30-04-22\n\namerican dream - LCD Soundsystem - spotify:album:4AF1M7bGCFL3LHCtXUUXw5\n\n## Todos\n- [ ] 14:00 Cosc202 Lab\n- [ ] use 1001 albums api\n- [ ] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n## Lecture/Labs\n\n\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-01":{"title":"","content":"[2022-05-08](daily_notes/2022-04-30) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-10](daily_notes/2022-05-02)\n\n---\n# 01-05-22\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-02":{"title":"","content":"[2022-05-01](daily_notes/2022-05-01) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-03](daily_notes/2022-05-03)\n\n---\n\n# 02-05-22\n\nWho's Next - The Who - spotify:album:5MqyhhHbT13zsloD3uHhlQ\n\n## Todos\n- [ ] use 1001 albums api\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n\n## Lecture/Labs\n\n- [x] 11:00 Cosc202 Lecture\n- [x] 12:00 Cosc201 lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-03":{"title":"","content":"[2022-05-02](daily_notes/2022-05-02) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-04](daily_notes/2022-05-04)\n\n---\n\n# 03-05-22\n\nLed Zeppelin III - Led Zeppelin - spotify:album:6P5QHz4XtxOmS5EuiGIPut\n\n## Todos\n- [ ] use 1001 albums api\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n\n## Lecture/Labs\n\n- [x] 10:00 Info203 Lecture\n- [x] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [x] 14:00 Cosc202 Lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-04":{"title":"","content":"[2022-05-03](daily_notes/2022-05-03) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-05](daily_notes/2022-05-05)\n\n---\n\n# 04-05-22\n\nMeat Is Murder - The Smiths - spotify:album:5DM1qCdgGt2zbknnsVn1Ca\n\n## Todos\n- [ ] use 1001 albums api\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n- [ ] 13:00 Info201 Lecture\n\n## Lecture/Labs\n\n- [x] 10:00 Info203 Lecture\n- [x] 14:00 Info203 Tutorial\n- [x] 16:00 Cosc201 Tutorial\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-05":{"title":"","content":"[2022-05-04](daily_notes/2022-05-04) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-06](daily_notes/2022-05-06)\n\n---\n\n# 05-05-22\n\nThe Notorious Byrd Brothers - The Byrds - spotify:album:5UI2X5VAmgu9xrlXDd5U7B\n\n## Todos\n- [ ] use 1001 albums api\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n- [x] 13:00 Info201 Lecture\n\n## Lecture/Labs\n\n- [x] 11:00 Cosc202 Lecture\n- [x] 12:00 Cosc201 Lab\n- [x] 12:00 Info203 Tutorial\n- [ ] 16:00 Info201 Lecture\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-06":{"title":"","content":"[2022-05-05](daily_notes/2022-05-05) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-07](daily_notes/2022-05-07)\n\n---\n# 06-05-22\n[Planet Rock: The Album - Afrika Bambaataa](spotify:album:3qX0GugLujpIodkT6r06hf)\n\n## Todos\n- [ ] use 1001 albums api\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n- [ ] 13:00 Info201 Lecture\n- [ ] 16:00 Info201 Lecture\n- [ ] info 202 api's lecture\n\n## Lecture/Labs\n- [ ] 09:00 Cosc202 Lab 7yhbn ,9 \n- [ ] 11:00 Cosc201 Lecture\n- [x] 12:00 Info201 Lab\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-07":{"title":"","content":"[2022-05-06](daily_notes/2022-05-06) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-08](daily_notes/2022-05-08)\n\n---\n# 07-05-22\nPump - Aerosmith - spotify:album:4VWobt8JHr24Gq2qUZK7DB\n\n## Todos\n- [ ] use 1001 albums api\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n- [ ] 13:00 Info201 Lecture\n- [ ] 16:00 Info201 Lecture\n- [ ] info 202 api's lecture\n- [ ] 09:00 Cosc202 Lab 7\n- [ ] 11:00 Cosc201 Lecture\n\n## Lecture/Labs\n\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-08":{"title":"","content":"[2022-05-07](daily_notes/2022-05-07) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-09](daily_notes/2022-05-09)\n\n---\n# 08-05-22\n[Pump - Aerosmith](spotify:album:4VWobt8JHr24Gq2qUZK7DB)\n[Hey! No running in the back-arc basin!](https://imgs.xkcd.com/comics/deep_end.png)\n\n\n## Todos\n- [x] use 1001 albums api\n- [x] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture 18\n- [ ] info 202 api's lecture\n- [ ] 11:00 Cosc201 18\n\n## Lecture/Labs\n\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-09":{"title":"","content":"[2022-05-08](daily_notes/2022-05-08) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-10](daily_notes/2022-05-10)\n\n---\n# 09-05-22\n[Dog Man Star - Suede](spotify:album:1LgpJjBJIRQhkJ01oZR3Cn)\n![Hey! No running in the back-arc basin!](https://imgs.xkcd.com/comics/deep_end.png)\n\n\n## Todos\n- [ ] 12:00 Info201 Lab 8\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture 18\n- [ ] info 202 api's lecture\n- [x] 11:00 Cosc201 18\n\n## Lecture/Labs\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-10":{"title":"","content":"[2022-05-09](daily_notes/2022-05-09) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-11](daily_notes/2022-05-11)\n\n---\n# 10-05-22\n[The Modern Lovers - The Modern Lovers](spotify:album:5BPCP7WSGBG4br2o4WRmd8)\n![Hey! No running in the back-arc basin!](https://imgs.xkcd.com/comics/deep_end.png)\n\n\n## Todos\n- [ ] 12:00 Info201 Lab 8\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture 18\n- [ ] info 202 api's lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n\n## Lecture/Labs\n- [ ] 10:00 Info203 Lecture\n- [x] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-11":{"title":"","content":"[2022-05-10](daily_notes/2022-05-10) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-12](daily_notes/2022-05-12)\n\n---\n# 11-05-22\n[Rising Above Bedlam - Jah Wobble's Invaders Of The Heart](spotify:album:2TXvjVOhfNjAYpRpODqmVb)\n![OpenStreetMap was always pretty good but is also now *really* good? And Apple Maps's new zoomed-in design in certain cities like NYC and London is just gorgeous. It's cool how there are all these good maps now!](https://imgs.xkcd.com/comics/maps.png)\n\n\n## Todos\n- [ ] 12:00 Info201 Lab 8\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture 18\n- [ ] info 202 api's lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n- [ ] 10:00 Info203 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Lecture/Labs\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-12":{"title":"","content":"[2022-05-11](daily_notes/2022-05-11) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-13](daily_notes/2022-05-13)\n\n---\n# 12-05-22\n[Darklands - The Jesus And Mary Chain](spotify:album:1vtsYpapUeoDNMJOWRql9b)\n![OpenStreetMap was always pretty good but is also now *really* good? And Apple Maps's new zoomed-in design in certain cities like NYC and London is just gorgeous. It's cool how there are all these good maps now!](https://imgs.xkcd.com/comics/maps.png)\n\n## Todos\n- [ ] 12:00 Info201 Lab 8\n- [ ] Info201 Lecture 14\n- [x] Info201 Lecture 18\n- [ ] info 202 api's lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n- [ ] 10:00 Info203 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n\n## Lecture/Labs\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 12:00 Info203 Tutorial\n- [ ] 16:00 Info201 Lecture\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-13":{"title":"","content":"[2022-05-12](daily_notes/2022-05-12) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-14](daily_notes/2022-05-14)\n\n---\n# 13-05-22\n[Darkness on the Edge of Town - Bruce Springsteen](spotify:album:4KT6G8fj8EEIfsyr75hbgc)\n![We carefully sampled the general population and found that most people are familiar with acquiescence bias.](https://imgs.xkcd.com/comics/selection_bias.png)\n\n\n## Todos\n- [ ] Cosc201 lab\n- [ ] Cosc201 Lab\n- [ ] Info203 Lecture\n- [ ] Info203 Lecture\n- [ ] Info201 Lab 8\n- [ ] Info201 Lecture\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture\n- [x] Cosc202 Lecture\n- [ ] cosc 202 api's lecture\n- [ ] Cosc202 Lecture\n\n## Lecture/Labs\n- [x] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab                   \n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)\n\n\n ","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-14":{"title":"","content":"[2022-05-13](daily_notes/2022-05-13) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-15](daily_notes/2022-05-15)\n\n---\n# 14-05-22\n[The Who Sell Out - The Who](spotify:album:2nbxElNcpz1C8LudsOW3ZH)\n![A medicine that makes you put two dots over your letters more often is a di�retic.](https://imgs.xkcd.com/comics/crepe.png)\n\n\n## Todos\n- [ ] Cosc201 lab\n- [ ] Cosc201 Lab\n- [ ] Info203 Lecture\n- [ ] Info203 Lecture\n- [ ] Info201 Lab 8\n- [ ] Info201 Lecture\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture\n- [ ] cosc 202 api's lecture\n- [ ] Cosc202 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab                   \n\n## Lecture/Labs\n\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-15":{"title":"","content":"[2022-05-14](daily_notes/2022-05-14) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-16](daily_notes/2022-05-16)\n\n---\n# 15-05-22\n[Rust Never Sleeps - Neil Young \u0026 Crazy Horse](spotify:album:5m2MQk77aAXPhwI6Ges8X5)\n![A medicine that makes you put two dots over your letters more often is a di�retic.](https://imgs.xkcd.com/comics/crepe.png)\n\n\n## Todos\n- [ ] Cosc201 lab\n- [ ] Cosc201 Lab\n- [ ] Info203 Lecture\n- [ ] Info203 Lecture\n- [ ] Info201 Lab 8\n- [ ] Info201 Lecture\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture\n- [ ] cosc 202 api's lecture\n- [ ] Cosc202 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab                   \n\n## Lecture/Labs\n\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-16":{"title":"","content":"[2022-05-15](daily_notes/2022-05-15) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-17](daily_notes/2022-05-17)\n\n---\n# 16-05-22\n[The Specials - The Specials](spotify:album:7kHtInr7Es2tPk5QJO6y6c)\n![A medicine that makes you put two dots over your letters more often is a di�retic.](https://imgs.xkcd.com/comics/crepe.png)\n\n## Today\n- [x] Cosc201 lab 11\n- [x] 11:00 Cosc201 Lecture graphs\n- [x] Info201 Lab 9\n- [x] Info201 Lab 8\n- [x] Info201 Lecture 19 sql part 2\n- [x] Info203 Lecture\n- [x] Info203 Lecture\n- [x] 1hr 203 work\n\n100%\n\n## Backlog\n- [ ] Cosc201 Lab 12\n- [ ] Info201 Lab 3\n- [ ] Info201 Lab 4\n- [ ] Info201 Lab 7\n- [ ] Info201 Lab 10\n- [ ] Info201 Lab 11\n- [ ] Info201 Lecture 20 database\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] cosc 202 api's lecture\n- [ ] Cosc202 Lecture\n- [ ] Cosc202 Lab 19\n\n## Lecture/Labs\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab 13\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-17":{"title":"","content":"[2022-05-16](daily_notes/2022-05-16) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-18](daily_notes/2022-05-18)\n\n---\n# 17-05-22\n[Black Sabbath - Black Sabbath](spotify:album:2T6jeELx5BqH4GMLObBy10)\n![A medicine that makes you put two dots over your letters more often is a di�retic.](https://imgs.xkcd.com/comics/crepe.png)\n\n## Today\n- [ ] 10:00 Info203 Lecture\n- [x] 1hr ass work\n- [ ] 11:00 Cosc201 Lecture\n- [ ] Cosc201 Lab 12\n- [x] Info201 Lecture 20 database\n- [x] Info201 Lab 10\n- [x] Cosc202 Lecture\n- [x] some 202 work\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n- [ ] Info201 Lab 3\n- [ ] Info201 Lab 4\n- [ ] Info201 Lab 7\n- [ ] Info201 Lab 11\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc 202 api's lecture\n- [ ] Cosc202 Lab 19\n- [ ] Cosc201 lab 13\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-18":{"title":"","content":"[2022-05-17](daily_notes/2022-05-17) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-19](daily_notes/2022-05-19)\n\n---\n# 18-05-22\n[Floodland - Sisters Of Mercy](spotify:album:2I5WCmOZo17YkcEwjXbLvc)\n![Donate now to help us find a cure for causality. No one should have to suffer through events because of other events.](https://imgs.xkcd.com/comics/health_data.png)\n\n## Today\n- [ ] 10:00 Info203 Lecture\n- [ ] 10:00 Info203 Lectur  vc dbe\n- [x] Cosc201 Lecture\n- [ ] Cosc 202 api's lecture\n- [x] Info201 Lab 3\n- [ ] 1hr ass work\n- [x] review today\n- [x] review extra\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] Cosc201 Lab 12\n- [ ] Cosc201 lab 13\n- [ ] 13:00 Info201 Lecture\n- [ ] Info201 Lab 4\n- [ ] Info201 Lab 7\n- [ ] Info201 Lab 11\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] 14:00 Cosc202 Lab\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n- weather api in daily note\n- drop shipping site\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-19":{"title":"","content":"[2022-05-18](daily_notes/2022-05-18) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-20](daily_notes/2022-05-20)\n\n---\n# 19-05-22\n[New York Dolls - New York Dolls](spotify:album:2xbTV0Awe4Qm5caUVuPbMr)\n![Donate now to help us find a cure for causality. No one should have to suffer through events because of other events.](https://imgs.xkcd.com/comics/health_data.png)\n\n## Today\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [x] Info201 Lecture 21\n- [x] Cosc 202 api's lecture\n- [x] Info201 Lab 4\n- [ ] review\n- [x] 202 work\n- [x] 10:00 Info203 Lecture\n- [x] 2 hr ass work\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] Info203 Lectures x2\n- [ ] Info201 Lecture 22\n- [ ] Cosc201 Lab 12\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-20":{"title":"","content":"[2022-05-19](daily_notes/2022-05-19) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-21](daily_notes/2022-05-21)\n\n---\n# 20-05-22\n[Highway to Hell - AC/DC](spotify:album:10v912xgTZbjAtYfyKWJCS)\n![Oh sure, I know Keira Knightly, from the first movie in that series by The Land Before Time producer. You know, the franchise with the guy from Jurassic Park and Ghostwriter, and script work by Billie Lourd's mom?](https://imgs.xkcd.com/comics/mainly_known_for.png)\n\nAAPL : 137.44 \nSP500 : 3900.79 \nTSLA : 709.42\n\n## Today\n- [ ] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n- [ ] review\n- [ ] email about labs c201\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] review\n- [ ] Info203 Lectures x2\n- [ ] Info201 Lecture 22\n- [ ] Cosc201 Lab 12\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-21":{"title":"","content":"[2022-05-20](daily_notes/2022-05-20) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-22](daily_notes/2022-05-22)\n\n---\n# 21-05-22\n[The Age Of The Understatement - The Last Shadow Puppets](spotify:album:2y3Rm0cT1xbf2NoTQwKv99)\n![Thank you to Katie Mack for teaching me about this effect, and to Janelle Shane for describing redshifts as 'like galaxies sinking into a pool of dilute blood,' which is how I'll see them from now on.](https://imgs.xkcd.com/comics/angular_diameter_turnaround.png)\n\nAAPL : 137.64 \nSP500 : 3901.36 \nTSLA : 663.9\n\n## Today\n\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n- [ ] review\n- [ ] email about labs c201\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] review\n- [ ] Info203 Lectures x2\n- [ ] Info201 Lecture 22\n- [ ] Cosc201 Lab 12\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-22":{"title":"","content":"[2022-05-21](daily_notes/2022-05-21) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-23](daily_notes/2022-05-23)\n\n---\n# 22-05-22\n[ - ](spotify:album:)\n![Thank you to Katie Mack for teaching me about this effect, and to Janelle Shane for describing redshifts as 'like galaxies sinking into a pool of dilute blood,' which is how I'll see them from now on.](https://imgs.xkcd.com/comics/angular_diameter_turnaround.png)\n\nAAPL : 137.59 \nSP500 : 3901.36 \nTSLA : 663.9\n\n## Today\n- [x] Info203 Lectures x2\n\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] Cosc201 Lab 12\n- [ ] Cosc201 follow up email about labs\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-23":{"title":"","content":"[2022-05-22](daily_notes/2022-05-22) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-24](daily_notes/2022-05-24)\n\n---\n# 23-05-22\n[Q: Are We Not Men? A: We Are Devo - Devo](spotify:album:1u2Qni8cVRptDTaA00fmBC)\n![Thank you to Katie Mack for teaching me about this effect, and to Janelle Shane for describing redshifts as 'like galaxies sinking into a pool of dilute blood,' which is how I'll see them from now on.](https://imgs.xkcd.com/comics/angular_diameter_turnaround.png)\n\nAAPL : 137.59 \nSP500 : 3901.36 \nTSLA : 663.9\n\n## Today\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] Cosc201 Lab 12\n- [ ] Cosc201 follow up email about labs\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-24":{"title":"","content":"[2022-05-23](daily_notes/2022-05-23) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-25](daily_notes/2022-05-25)\n\n---\n# 24-05-22\n[Q: Are We Not Men? A: We Are Devo - Devo](spotify:album:1u2Qni8cVRptDTaA00fmBC)\n![The film is set in 2018, but when Commander Bremberly chases the hologram through Times Square, there's a billboard for Avengers: Age of Ultron. Depending on the date, that billboard would have been advertising either Infinity War or this movie.](https://imgs.xkcd.com/comics/goofs.png)\n\nAAPL : 143.11 \nSP500 : 3973.75 \nTSLA : 674.9\n\n## Today\n- [x] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n- [ ] Cosc201 Lab 12\n- [ ] Cosc201 follow up email about labs\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-25":{"title":"","content":"[2022-05-24](daily_notes/2022-05-24) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-26](daily_notes/2022-05-26)\n\n---\n# 25-05-22\n[Playing With Fire - Spacemen 3](spotify:album:0Ju8YUtJB0RMw8NZXgXe6n)\n![The film is set in 2018, but when Commander Bremberly chases the hologram through Times Square, there's a billboard for Avengers: Age of Ultron. Depending on the date, that billboard would have been advertising either Infinity War or this movie.](https://imgs.xkcd.com/comics/goofs.png)\n\nAAPL : 140.48 \nSP500 : 3941.48 \nTSLA : 628.16\n\n## Today\n- [x]] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n- [ ] Cosc201 Lab 12\n- [ ] Cosc201 follow up email about labs\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-26":{"title":"","content":"\n\n[2022-05-25](daily_notes/2022-05-25) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-27](daily_notes/2022-05-27)\n\n---\n# 26-05-22\n[Sweet Baby James - James Taylor](spotify:album:2NEQ5Q4sBbUHVVx3Wf8TEZ)\n![Also, they're getting increasingly worried that someone will accidentally hit the 'retract' button, and that the end of the cable thrashing around as it winds up could devastate the Earth's surface.](https://imgs.xkcd.com/comics/voyager_wires.png)\n\nAAPL : 140.38 \nSP500 : 3978.73 \nTSLA : 658.8\n\n## Today\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 12:00 Info203 Tutorial\n- [ ] 16:00 Info201 Lecture\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n- [ ] Cosc201 Lab 12\n- [ ] Cosc201 follow up email about labs\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-27":{"title":"","content":"[2022-05-26](daily_notes/2022-05-26) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-28](daily_notes/2022-05-28)\n\n---\n# 27-05-22\n[Exile On Main Street - The Rolling Stones](spotify:album:5dBQ20ppdPxo5bqkoeTKnN)\n![Also, they're getting increasingly worried that someone will accidentally hit the 'retract' button, and that the end of the cable thrashing around as it winds up could devastate the Earth's surface.](https://imgs.xkcd.com/comics/voyager_wires.png)\n\nAAPL : 143.75 \nSP500 : 4057.84 \nTSLA : 707.73\n\n## Today\n- [x] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [x] 12:00 Info201 Lab\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 16:00 Info201 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-29":{"title":"","content":"[2022-05-28](daily_notes/2022-05-28) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-30](daily_notes/2022-05-30)\n\n---\n# 29-05-22\n[Mermaid Avenue - Billy Bragg](spotify:album:0yTmT1i6yHb5EVyJOmIwGw)\n![300](https://i.scdn.co/image/ab67616d0000b273bee802eae45543f3010c2ca9)\n![The combination croquet set/10-lane pool can also be used for some varieties of foosball and Skee-Ball.](https://imgs.xkcd.com/comics/field_topology.png)\n\nAAPL : 149.61 \nSP500 : 4158.24 \nTSLA : 759.63\n\n## Today\n\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 16:00 Info201 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-30":{"title":"","content":"[2022-05-29](daily_notes/2022-05-29) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-31](daily_notes/2022-05-31)\n\n---\n# 30-05-22\n[Selling England By The Pound - Genesis](spotify:album:2tSRe2rkdJvZWMOIZpu6lk)\n![300](https://i.scdn.co/image/f652cc4d0f26b21e6f6d1d6a971b1241122d8804)\n![The combination croquet set/10-lane pool can also be used for some varieties of foosball and Skee-Ball.](https://imgs.xkcd.com/comics/field_topology.png)\n\nAAPL : 149.61 \nSP500 : 4158.24 \nTSLA : 759.63\n\n## Today\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 16:00 Info201 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-05-31":{"title":"","content":"[2022-05-30](daily_notes/2022-05-30) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-01](daily_notes/2022-06-01)\n\n---\n# 31-05-22\n[Eagles - Eagles](spotify:album:51B7LbLWgYLKBVSpkan8Z7)\n![300](https://i.scdn.co/image/ab67616d0000b273c13acd642ba9f6f5f127aa1b)\n![They're robust against quantum attacks because it's hard to make a quantum system that large.](https://imgs.xkcd.com/comics/d65536.png)\n\nAAPL : 149.61 \nSP500 : 4158.24 \nTSLA : 759.63\n\n## Today\n- [ ] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-06-01":{"title":"","content":"[2022-05-31](daily_notes/2022-05-31) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-02](daily_notes/2022-06-02)\n\n---\n# 01-06-22\n[New Wave - The Auteurs](spotify:album:7dJLDJkGND4ovSCRL4r4bk)\n![300](https://i.scdn.co/image/4ae385ee00c33a777f88df5537d57d6d12314d60)\n![They're robust against quantum attacks because it's hard to make a quantum system that large.](https://imgs.xkcd.com/comics/d65536.png)\n\nAAPL : 149.61 \nSP500 : 4132.15 \nTSLA : 758.26\n\n## Today\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-06-02":{"title":"","content":"[2022-06-01](daily_notes/2022-06-01) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-03](daily_notes/2022-06-03)\n\n---\n# 02-06-22\n[Pink Moon - Nick Drake](spotify:album:6LoD5uGEynY4eqstWDFKhg)\n![300](https://i.scdn.co/image/7eca64a5f6819743522fadcbe2a0020aa63f0391)\n![An x-ray gyroscope is used to determine exactly which toppings they included in the pita.](https://imgs.xkcd.com/comics/types_of_scopes.png)\n\nAAPL : 149.61 \nSP500 : 4101.23 \nTSLA : 740.37\n\n## Today\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 12:00 Info203 Tutorial\n- [ ] 16:00 Info201 Lecture\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-06-03":{"title":"","content":"[2022-06-02](daily_notes/2022-06-02) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-04](daily_notes/2022-06-04)\n\n---\n# 03-06-22\n[Here Are the Sonics - The Sonics](spotify:album:4vqaqoTEbNyeeSHJA6KpdM)\n![300](https://i.scdn.co/image/e7a07ba6460b230291cc571ff3df941183ae9bcf)\n![An x-ray gyroscope is used to determine exactly which toppings they included in the pita.](https://imgs.xkcd.com/comics/types_of_scopes.png)\n\nAAPL : 149.61 \nSP500 : 4176.82 \nTSLA : 775\n\n## Today\n- [ ] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 12:00 Info203 Tutorial\n- [ ] 16:00 Info201 Lecture\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-06-05":{"title":"","content":"[2022-06-04](daily_notes/2022-06-04) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-06](daily_notes/2022-06-06)\n\n---\n# 05-06-22\n[All That You Can't Leave Behind - U2](spotify:album:7a5U0GPoAvT3gvEY66FRuN)\n![300](https://i.scdn.co/image/515919e9fd8a091bc103384e8a0460c0c30aad0d)\n![I can't speak for your other subjects, but MY motion was as smooth and natural as the framerate allowed.](https://imgs.xkcd.com/comics/motion_blur.png)\n\nAAPL : 149.61 \nSP500 : 4108.54 \nTSLA : 703.55\n\n## Today\n\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 10:00 Info203 Lecture\n- [ ] 10:00 Info203 Lecture\n\n- [ ] 12:00 Info201 Lab\n- [ ] 16:00 Info201 Lecture\n- [ ] 13:00 Info201 Lecture\n\n- [ ] 12:00 Cosc201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc201 Lecture\n\n- [ ] 11:00 Cosc202 Lecture\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-06-08":{"title":"","content":"[2022-06-07](daily_notes/2022-06-07) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-09](daily_notes/2022-06-09)\n\n---\n# 08-06-22\n[Little Earthquakes - Tori Amos](spotify:album:1pFUGy3ABpLRRE3oNMPbDb)\n![300](https://i.scdn.co/image/27141e7eef911d0085b3f9ba91bd1baa963a65f0)\n![Oh yeah, I didn't even know they renamed it the Willis Tower in 2009, because I know a normal amount about skyscrapers.](https://imgs.xkcd.com/comics/or_whatever.png)\n\nAAPL : 148.62 \nSP500 : 4160.68 \nTSLA : 716.66\n\n## Today\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 10:00 Info203 Lecture\n- [ ] 10:00 Info203 Lecture\n- [ ] 12:00 Info201 Lab\n- [ ] 16:00 Info201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-06-09":{"title":"","content":"[2022-06-08](daily_notes/2022-06-08) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-10](daily_notes/2022-06-10)\n\n---\n# 09-06-22\n[Little Earthquakes - Tori Amos](spotify:album:1pFUGy3ABpLRRE3oNMPbDb)\n![300](https://i.scdn.co/image/27141e7eef911d0085b3f9ba91bd1baa963a65f0)\n![It's believed to be related to the Stellar Sea Cow.](https://imgs.xkcd.com/comics/shuttle_skeleton.png)\n\nAAPL : 147.95 \nSP500 : 4115.77 \nTSLA : 725.6\n\n## Today\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 12:00 Info203 Tutorial\n- [ ] 16:00 Info201 Lecture\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 10:00 Info203 Lecture\n- [ ] 10:00 Info203 Lecture\n- [ ] 12:00 Info201 Lab\n- [ ] 16:00 Info201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/daily_notes/2022-06-10":{"title":"","content":"[2022-06-09](daily_notes/2022-06-09) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-11](daily_notes/2022-06-11)\n\n---\n# 10-06-22\n[Bad Company - Bad Company](spotify:album:6DaTfshdfMQiM00Yw1CG3J)\n![300](https://i.scdn.co/image/bced88d2be33cab73adbb5ab2db47a5c78a76488)\n![It's believed to be related to the Stellar Sea Cow.](https://imgs.xkcd.com/comics/shuttle_skeleton.png)\n\nAAPL : 142.67 \nSP500 : 4017.82 \nTSLA : 719.12\n\n## Today\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)\n\n## Today's log","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/01-basic-html":{"title":"01-basic-html","content":"\n[slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2932183-dt-content-rid-18925536_1/courses/COSC203_S2DNI_2022/COSC203_lecture1.pdf)\n\n\n\n[html](notes/html.md)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3 Main parts\n- html - structure\n- css - styles\n- javascript - interactivity\n\n# HTML\nElement:\n- opening tag\n- closing tag\n- content\n- attributes\n\nMultimedia and Tables\n- images vector graphics\n- video and audio\n- iframe\n- tables","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/01-big-picture":{"title":"01-big-picture","content":"\n- [information-security](notes/information-security.md)\n- [mccumber-cube](notes/mccumber-cube.md)\n- [access-security-tradeoff](notes/access-security-tradeoff.md)\n- [cia-triad](notes/cia-triad.md)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# In the news\n\n- [Axie hack](https://thehackernews.com/2022/07/hackers-used-fake-job-offer-to-hack-and.html)\n- \n\n# Why info sec\n- more interconnected\n\t- more exposure\n- software devs need to know about security\n- often security is an afterthought\n\t- this is bad\n- IS proatects the ability of an organisation to function\n\t- also protects reputation\n\n# What is security\n- protecting assets from harm or damage\n- related concepts\n\t- nation security (political security)\n\t- safety (health)\n\t- environmental security (clean environement)\n\t- information security \n\t- economic security (stability of ecomony)\n\n# What is information secuity\n- focus of protecting information assets\n\t- data, systems, equipment, infrastructure\n- intentional and accidental risks\n\n\u003e \"The preservation of confidentiality, integrity and availability of information; in addition, other properties such as authenticity, accountability, non-repudiation and reliability can also be involved.” \n\u003e (ISO27000 Information Security Management Systems – Overview and Vocabulary)\n\n# Continuous need\n- environment is rapidly changing\n- innovation is rapid\n- cloud computing\n- more ICT capabilities introduce new attack vectors\n\n# Components of Info systems\ncan all be sources of attacks\n\n- data\n\t- e.g., bank: unauthorised acces to data\n- people\n\t- e.g., social engineering\n- hardware\n\t- e.g., physical security (usually)\n- software\n\t- e.g., most common\n- netowrk\n\t- e.g., lost os possibilities for attack\n- procedures\n\t- e.g., back: inside knowledge of faults within the business, that can be exploited\n\n# CIA Triad\nhow security has been appraoched by industry for ages\n\n- Confidentiality\n\t- having information protected from exposure\n\t- blocking unauthorised access\n- Availability\n\t- authentic state of information\n\t- preventing corruption etc.\n\t- e.g., checksum, hash check etc\n- Integrity\n\t- information being available to users without obstables \n\t- DDoS\n\nOther models have been developed\n- [slide](https://i.imgur.com/GJfb8Ph.png)\n\n# McCumber Cube\n- a way to think about how to protect your information\n- [slide](https://i.imgur.com/5Ls2yUp.png)\n\n- a map\n- can be used to find \"holes\"\n\n# Access Security tradeoff\n- perfect info security is impossible\n- unrestricted access is dangerous\n- completely secure would not allow access to anyone\n- balance is key\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/01-bits-and-bytes":{"title":"01-bits-and-bytes","content":"\n[memory](notes/memory.md)\n[unicode](notes/unicode.md)\n[ASCII](notes/ASCII.md)\n[digital-data](notes/digital-data.md)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# What is data\n- A fact — a piece of information\n\t- corresponds to discreete facts about phenomena from which we gain information abou the world\n- The concept of a *value* is fundamental to data\n\t- e.g., 25, $356.00, April, \"this is a sentence\", colours etc\n- Vaues are abstract, they are interpretations of data\n\t- There are many way of storing the same data\n\t- e.g., 12, twelve, XII, 1100, · ··, ·----··---\n\n# How computers represent data\n- In *Binary*\n- Stored in one of two states, true/false, 1/0, on/off, voltage/no voltage\n- Each instance of a state is called a *bit*. (binary digit)\n- *Values* are represented as a sequence of bits.\n\t- e.g., 1000001\n\t- The computer doesn't \"know\" what any given sequence means, **you** know.\n\t- could be 65, A, or anything **You** want it to mean\n\n# Computer memory\n- SImilar to the switch board in your home\n- Each switch has a number\n- they are all always there\n- you can switch the state by flipping the switch\n\n - Each switch has:\n\t - A address/location (swtich number)\n\t - A value (on/off)\n\n- computer languages allow us to name some of the locations, its easuer than remembering its number (variable)\n\n\n# Bits, Nibbles, Bytes\n-  The smallest unit of storage is a buit (0 or 1)\n- (for convenience) bit are grouped into larger units.\n\t- a nibble is 4 bits\n\t- a byte is 8 bits\n- For convenience bytes are given addresses, not nibbles or bits. (they are too small to work with most of the time)\n\n# A Word of memory\n- The word is the number of bits the cpu uses internally, varies between manufacturers and CPUs.\n- Now its usually 64 bits\n- [amount of bits for different devices](https://i.imgur.com/nHrz1zX.png)\n\n# Characters\n- A written symbol.\n- In english are represented as a single byte, (other languages use 2 bytes or more)\n- e.g., [different types of characters](https://i.imgur.com/DBLVhw8.png)\n\n- characters are joined together to make human readable numbers and words\n\n- `char ch` \n- ch is a variable name (identifier) \n- used to label a location in the computer's memory where a byte is stored\n- when the code is compile, the name is assigned an address, in memory. The meaning of that data depends on how a human interprets it. it might be small integer, or a character, or a color etc.\n\n## ASCII Character Code\n![ascii code](https://i.imgur.com/NbBtm1v.png)\n\n1. The computer uses ch as a integer index into a pre-existing table \n2. the computer screen is made up of a thousand little dots called pixels. theyre in a rectangular grid like a table.a\n\n- [ascii code example](https://i.imgur.com/9uvKRVo.png)\n\n- There are several tables that describe what to draw\n\t- fonts describe how to draw them\n- ASCII (american standard code for information) describes what should be drawn for Roman (english like) alphabets\n- e.g.,\n\t- A 1000001 (65)\n\t- B 1100001 (97)\n\t- 9 0111001 (57)\n- There are only a few letter numbers and punctuation marks. The remaining ASCII code are non-printing and have other meaning (line feed, for feed, tab etcc)\n- ASCII characters are stored using 7-bits\n\t- so there are 128 (2^7) possible characters\n\t- stored as a byte with the 8th bit set to zero\n\t- For sorting purposes characters are compared on their numeric value (called the *collating sequence*)\n\t- 'A' is before 'Z' but 'a' is after 'Z'!\n\n## Unicode\n![unicode](https://i.imgur.com/GEtVItW.png)\n\n- Other non roman languages\n\t- greek, arabic, chinese, hebrew, japanese, thai etc.\n\t- atrology symbols\n\t- emoji etc\n- Unicode\n\t- developed by the Unicode Consortium\n\t- coordinated with ISO/IEC 10646\n\t- a 21-bit code with 144,697 characters from 159 scripts\n\t- unicode maps from character numbers (code points) into glyphs (graphical representations)\n\t- Some(many) are reserved\n\n\n# Homework\n- How are character strings (e.g. “hello world”) stored in a computer?\n- Is this different between different programming languages (for example; C and Java)?","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/01-security-audit":{"title":"01-security-audit","content":"\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/02-basic-css":{"title":"02-basic-css","content":"\n- [slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2963251-dt-content-rid-18931782_1/courses/COSC203_S2DNI_2022/COSC203_lecture2%281%29.pdf)\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/02-combinatorial-logic":{"title":"02-combinatorial-logic","content":"\n- [slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2954102-dt-content-rid-18888626_1/courses/COSC204_S2DNI_2022/L2%20-%20Combinatorial%20Logic.pdf)\n\n\n\n- [transistors](notes/transistors.md)\n- [combinatorial-logic-circuit](notes/combinatorial-logic-circuit.md)\n- [boolean-equations](notes/boolean-equations.md)\n- [logic-gates](notes/logic-gates.md)\n- [demultiplexor](notes/demultiplexor.md)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Circuit basics:\n- current flows + to -\n- input to a unit (e.g., LED) is the + end\n\n# Combinatorial Logic Circuit\n\u003e [!Definition]\n\u003e Combinatorial Logic Circuit is a circuit whose digital outputs are dependent only on its digital inputs\nThey can be described using logic expressions and therefore logic gates. We assume the outputs respond immediately^[1]\n\nThey can be defined:\n- Using a truth table\n- Using boolean equations ($Q\\ =\\ A+\\ B$) \n- Using graphical symbols  \n\n- [1 Bit half adder](https://i.imgur.com/mjCVU4I.png)\n- [1 Bit full adder: (includes carry input)](https://i.imgur.com/yu6kS83.png)\n- [Ripple carry adder](https://i.imgur.com/HtEIZ5t.png)\n- 3 Bit parity Generator\n\t- Adds an extra bit to the input data so that the number of ones in the output is always odd\n\t- Used for error checking\n\t- [truth table](https://i.imgur.com/KDUiJbN.png)\n\t- [boolean equation](https://i.imgur.com/mwBpnlO.png)\n\t- [circuit](https://i.imgur.com/tsgDISC.png)\n- [7 segment displlay](https://i.imgur.com/qtPmtwR.png)\n\n# Boolean Equations\n\nPrecedence\n- NOT is unary, so it has the highest precedence\n- AND is mulitply, so it comes next\n- OR is like plusl, to it comes last\n\n![Precedence table|200](https://i.imgur.com/jPlrVwW.png)\n\nCreating boolean equations:\n- for each row where output is 1\n- write the equation as a function of the inputs  (using AND)\n- Write the final equation, putting OR between each clause\n- [example](https://i.imgur.com/RoBTEfH.png)\n\n# De Morgan's Theorum\n- !(A + B) = A! \u0026 !B\n- !(A + B + C + ... + X) = !A \u0026 !B \u0026 !C \u0026 ... \u0026 !X\n- [truth table](https://i.imgur.com/QegVxkx.png)\n- any boolean function can be represented as the sum of logical products\n- All combinatorial circuits can be described using just one gate type (either nand or nor) [^2]\n\n# Transistors\n![simple transistor diagram|100](https://i.imgur.com/oBuNR9m.png)\n\n- B: Base ⇒ A swtich connecting C to E\n\t- open (C is disconnected from E) when supplied 0v\n\t- closed (C is connected to E) by applying +5V\n- C: Collector\n- E: Emitter\n\nPossible to create NAND gate using just transistors ∴ possible to create all logic gates using only transistors [^3]\n\n# Demultiplexor\n- Mutli way swtich where the address determines which output recieves the input\n- [2 bit address diagram and truth table](https://i.imgur.com/XQteI3j.png)\n\n# Logic Gates\n- NOT\n- AND\n- OR\n- NAND\n- NOR\n- XOR/EOR\n\n\n\n\n[^1] : In real circuits propagation delay must be considered, hence the clock cycle on CPUs\n[^2] : The Apollo Guidance Computer used about 5600 NOR gates and no other gate types!\n[^3] : They dont actually do it this way (see lab)","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/02-concepts-and-roles":{"title":"02-concepts-and-roles","content":"\n- [slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2956897-dt-content-rid-18930757_1/courses/COMP210_S2DNI_2022/Lecture_02%281%29.pdf)\n\n# News\n- [more personal email scams](https://theconversation.com/email-scams-are-getting-more-personal-they-even-fool-cybersecurity-experts-186009)\n\t- They have more knowledge about your personal information\n- [deakin university attack](https://australiancybersecuritymagazine.com.au/up-to-10000-students-targeted-in-deakin-university-cyberattack/)\n\t- staff credentials were leaked and acces to students information was gathered\n- [rusian hackers attack lithuania](https://www.reuters.com/world/europe/russian-hacker-group-says-cyber-attacks-continue-lithuania-2022-06-28/)\n- [attacks against india](https://www.indiatoday.in/india/story/prophet-row-international-hackers-cyber-attacks-india-nupur-sharma-remark-1961941-2022-06-13)\n- [retbleed attack affects AMD and Intel CPUs (spectre-based speculative-execution attacks)](https://thehackernews.com/2022/07/new-retbleed-speculative-execution.html)\n\n# Vulnerabilities\n- a potential weakness in an asset\n\t- or in its defense security control\n- e.g., flaws in software packages or an unprotected system port\n\nexploit is the technique used to attack\n\n- [RAND report r-609-1 (1979)](https://i.imgur.com/GEVLIq1.png)\n- need to be aware of vulnerabilities\n\ne.g.,\n- websites can steal browser data via extension APIs\n\n# Security services and control\n- services\n\t- the intended security goal or property (C.I.A provides the three main security services)\n\t- confidentiality\n\t- integrity\n\t- awareness\n- controls\n\t- the mechanisms employed to implement the services\n\t- encryption\n\t- firewalls\n\t- awareness\n\n## Controls\n- physical controls\n\t- facility protection\n\t- guards\n\t- locks\n\t- monitoring\n\t- environment controls\n\t- intrustion detection\n- technical controls\n\t- network security\n\t- cryptography\n\t- forensics\n\t- user authentication\n\t- etc\n- administrative controls\n\t- policies\n\t- standards\n\t- procedures\n\t- guidelines\n\t- personnel screening\n\t- awareness training\n\n- Preventive \n\t- e.g., \"prevent exposure of critical information\"\n\t- control - e.g., encrpytion\n- detective\n\t- e.g., \"we want to warn attempts of intrustions\"\n\t- control - e.g., intrusion detection systems\n- corrective\n\t- reduce/fix damage\n\t- e.g., \"we want to repair our system in case of errors\"\n\t- conrtol - e.g., restoration point mechanisms (e.g., version control systems like [git](notes/git.md))\n\n- we need security controls for all info states:\n\t- storage\n\t\t- information storage containers\n\t\t- electronic, physical, human\n\t- transmission\n\t\t- physical or electronic\n\t- processing\n\t\t- physical or electronic\n\n# CIA\n- a security service provides a high level security property\n\n## Confidentiality\n- information should not be available to unauthorised people\n- divided into:\n\t- secrecy: protecting business data\n\t- privacy: protecting personal data\n\t- anonymity: hide who is engaging in what actions\n- threats: information theft, unintentional disclosure\n- controls: encyption, access control, perimeter defense\n- general controls: secure systems development, and incident response\n\n## Integrity\n- data integrity: should not be corruped, tampered, altered with etc in an unauthorised manner\n- system inegrity: accuracy and completeness\n- threats: data and system corruption, loss of accountability\n- controls: \n\t- hashing, cryptographic integrity check and encryption\n\t- authentiation, access control\n\t- digital signing\n\t- config management and change control \n- general controls: Secure Systems Development and Incident Response\n\n## Availability\n- information should be accessible and usable upon demand by an authorised entity\n- main threat: DoS\n- controls:\n\t- redundancy of resources\n\t- load balancing\n\t- software and data backups\n- general controls: Secure Systems Development and Incident Response\n\n## Additionally properties\n- accuracy - free from mistakes and erors\n- authenticity - genuine or original\n- utility - serve a purpose (e.g., census data)\n- possession - ownership or control (importat for privacy)\n\n# Privacy and Actors\n- [facebook gdpr](https://techcrunch.com/2018/04/17/facebook-gdpr-changes/)\n\n## GDPR\n- To protect specific aspects of information that may be related to natural persons (personal information) \n- Prevent unauthorized collection and storage of personal information \n- Make sure your personal information is correct \n- Ensure transparency and access for data subjects \n- Provide adequate information security (C.I.A) around personal information \n- Define clear responsibilities around personal information \n- GDPR became EU law on 25 May 2018 (General Data Protection Regulation)\n\n- [who can see my email](https://i.imgur.com/34R3hJx.png)\n\n## Actors\n- threat actors\n\t- those responsible for the security incident\n- (security) Hacker\n\t- uses technical skills and knowledge to uncover bugs or exploits\n- Attacker\n\t- may use other (non-technical) means to exploit data and system (the malicious intention is what matters here)\n\n- intelligence agencies\n- law enforcement\n- nation states\n- independents (hackers, criminals, private surveillance, manufacturers etc)\n\n- [motivaitions](https://i.imgur.com/74qgpsc.png)\n\n## Skills and focus of actors\n- low skill \u0026 low focus\n- high skill \u0026 low focus\n- high skill \u0026 high focus\n\t- intelligence agencies\n\t- highly sophicticated\n\n# Shared responsibility\n- business needs first\n- [information securty functions](https://i.imgur.com/apXn7Qb.png)\n- [protecting the functionality of an organization](https://i.imgur.com/pT1nL8E.png)\n- [enablling safe operation of applications](https://i.imgur.com/Ytzlqhc.png)\n- [safeguarding technology assets in organizations](https://i.imgur.com/gNgScT8.png)\n\n# Balance\n\n- [balance](https://i.imgur.com/df1LZuP.png)\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/02-version-control-system":{"title":"02-version-control-system","content":"\n[git](notes/git.md)\n\n[VCS](notes/version-control-systems.md)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/03-agile-methodologies":{"title":"03-agile-methodologies","content":"\n\u003e guilding philosphy to develop info systems in unkown, rapidly changing evnironments\n\n\"Chaordic\"\n\n[The agile manifesto](https://www.agilealliance.org/agile101/the-agile-manifesto)\n\n# 1 [scrum](notes/scrum.md)\nDevelopment is split into many short (~30 day) \"sprints\" of intense focus where the entire team is involved\n\n# 2 [Extreme Programming](notes/extreme-programming.md) (XP)\ntaking current industry practices to the extreme\n\n# 3 [Unified Processes](notes/unified-processes.md) (UP)\nInterative and incremental  architecture-centric which has four main phases\n- inception\n- elaboration\n- construction\n- transition\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/03-more-css":{"title":"03-more-css","content":"\n[slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2964467-dt-content-rid-18940944_1/courses/COSC203_S2DNI_2022/COSC203_lecture3%281%29.pdf)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/03-sequential-logic-circuits":{"title":"03-sequential-logic-circuits","content":"\ncomb log. circuits always produce the same output with the same inputs\n\nSequential logic circuit output depends not only on the inputs but also past history (memory)\n\n![combinatorial vs sequential](https://i.imgur.com/GbfAZ4c.png)\n\n\nTwo types:\n- synchronous\n\t- changes of state happen in time with a clock cycle\n\t- input changes occur between clock pulses\n\t- state changes occur at the clock pulses\n- asynchronous\n\t- We will not be studying these\n\t- State changes occur as changes in inputs occur\n\t- Event driven\n\n\n# Memory circuits\n- Set-reset latch ![sr latch](https://i.imgur.com/mhXd77i.png)\n- D-type flip-flop ![delay flip flop](https://i.imgur.com/IpQfNRm.png)\n- T-type flip-flop ![t flip flop](https://i.imgur.com/SZn2J94.png)\n- JK-type flip-flop ![jk flip flop](https://i.imgur.com/OgfTehO.png), ![jk flip flop 2](https://i.imgur.com/8zJvDuw.png) [simulation](https://tinyurl.com/2bewwd7h)\n- synchronous counter ![simulation](https://tinyurl.com/25olydjb), ![slide](https://i.imgur.com/81LS7HL.png)\n\n# State transition\n\n\"if you are here and you get this then go here\"\n\nbasis of all computing  (turing machine)\n\nThe computer memory is the current state, the instruction is where to go next","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/03-threats-social-engineering-and-failures":{"title":"03-threats-social-engineering-and-failures","content":"\n# News\n- kiwis urged to get new passwords by government cybersecurity agency (\"big password energy\")\n- ukraine cyber agency reports cyber attack surge\n- plymouth households hit by clarion housing cyber attack\n- facebook \"unintentionally uploaded\" 1.5 million peoples email contacts without their consent\n- threat maps: https://threatmap.checkpoint.com/ThreatPortal/livemap.html\n\n# Threats\nevents are circumstances that has the potential (risk) to adversely affect assets (reducing their value)\n- e.g., possibility of text messages stop working -\u003e phone loses value\n\n# Attack\nintentional or unintentional (e.g., lightning) acts that can damage or compromise assets.\n- the actual act of attacking\n- can be passive attack: e.g., stumble accross information accidentaly\n\n# Exploits\n- the techniques used\n\n# Vulnerabilities\n- the potential weaknesses in assets or in their defensive control systems\n- e.g., try to find weakpoints in a castle\n\n# Arms race\nsecurity is a never ending arms race. Security is improving but so are the number of potential exploits\n\n# 12 groups of threats\n![](https://i.imgur.com/d5i1wpA.png)\n\n## Intellectual property\n- creation ownership and control of original ideas\n- common breaches include software priracy\n- two organisatons investigate software abuse\n\t- software and information industry association (SIIA)\n\t- business software alliance (BSA)\n- enforcement of copyright laws has been attempted with technical security mechanisms (e.g., watermark, you need an account, must register the software, etc)\n\n## deviations in quality of service\n- when a product is not delivered as expected\n- info systems depend of successful operation of many interdependent support systems\n- internet, communications, power irregularities, all affect the availability of information systems\n- internet:\n\t- ISP failures can considerably undermine the availability of information\n\t- outsourced web hosting assumes responsibility for all internet service as well as for the hardware and the web site operaing system software. \n\t- terms of service ensure that these services are guaranteed\n- communication and other provider service issues include\n\t- other untilities: telephone, water, wastewater, garbage collection\n\t- these all affect the companies ability to function\n- power irregularities\n\t- pwer exess, shortages, losses\n\t- sensitive equipment vulnerable to and easily damaged by fluctuations\n\t- controls can be applied to manage power quality e.g., UPS\n\n## espionage or trespass \n- unauthorized attempts to gain illegal access to information\n- competitive intelligence vs industrial espionage vs cyber terrorism\n- shoulder surfing \n- controls mark the virtual boundaries of an organisations\n\t- controls oftentimes let trespassers know they are encroaching on an organizations cyberspace\n\t- hackers use skill, guile, or fraud, to bypass controls protecting others information\n\t\t- expert\n\t\t\t- develop scripts and exploits\n\t\t\t- master of many skills\n\t\t\t- of create software (malware etc) and share with others\n\t\t\t- minority\n\t\t- novice\n\t\t\t- script kiddies\n\t\t\t- more common\n\t\t\t- use scripts written by experts\n\t\t\t- do not understand the systems the are hacking\n\t\t\t- packet monkeys: script kiddies that use worms to overload systems\n\t\t- cracker\n\t\t\t- cracks or removes software protections designed to precent unauthorized duplication\n\t\t\t- also crack passwords\n\t\t- phreaker\n\t\t\t- hacks the public telephone system to make free calls or disrupt services\n\t\t\t- more specific\n- also includes password attacks\n\t- brute force- tried all possible combinations\n\t- dictionary - include information related to the target user\n\t- rainbow tables - a hacker with access to encrypted password, they can find the corresponding plaintext in a dataset called a rainbow table\n\t- social engineering - e.g., attacks as posing at IT professionals to gain access toa systems information (normally by contacting other employees)\n\n# Forces of nature\n- fire, flood, lightening, earthquake, eruptions, etc.\n- can use controls to protect against these\n- very dynamic\n- unpredicatble\n\n# Human errors or failure\n- actions performed without malicious intent or ignorance (by an authorised user)\n- inexperience\n- improper training\n- incorrect assumptions\n- employees are among the greatest threats to an organisations data\n- e.g, \n\t- accidental deletion\n\t- revelation of classified data\n\t- entry or erroneous data\n\t- storage in unprotected areas\n\t- failure to protect information\n- can be prevented with training, ongoing awareness activites, and controls\n\n# Social engineering\n- using social skills to convince people to reveal access credentials or other valuable information to an attacker\n- used for a broad range of malicious activities through human interactions\n\n![kevin mitnick quote](https://i.imgur.com/Q7ChU37.png)\n\nDeveloping trust is a powerful technique in social engineering\n- people are naturally helpful and trusting\n- ask during seemingly innocent conversations\n\t- slowly ask for increasingly imprtant information\n- lean company lingo, names of people, names, servers etc\n- cause a problem and subsequently offer your help to fix it\n- talk negatively about common enemy\n- talk positively about common hero\n\nInducing strong emotions\n- you won a prize etc\n- excitement \n- fear\n- confusion\n\ninformation overload technique\n- reduce targets ability to sctrutinize arguments proposed by attacker\n- trigger by\n\t- providing a lot of information\n\t- providing arguments from an unexpected angle, whicih forces the victim to analyse the situation from a new perspective which requires additional mental processing\n\nReciprocation\n- technique that exploits our tendency to return a favour\n- even if first favour was not requested\n- even if the return favour is more valuable\n- double disagreement\n\t- if the attacker created a double disagreement and gives in one, the victim will have the tendency to ive in the other\n- expectation\n\t- if the victim is requested to give the first favour, they will believe that the attacker becomes a future ally\n\ntendency to obey authority\n- milgram experiement\n\ndont be a commitment creep\n- people have a tendency to follow commitments even when is might be unwise\n\ninformation exortion is the practive of requesting a ransom for your valuable information\n- ransomware\n\n# Attacks\nrepresent intentional or unintentional acts that can damage or compromise assets\n- range from petty to vandalism to organized sabotage\n- defacing\n- threats are rising\n- cyberterrorism/warfare is much more sinister form of hacking","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/04-computer-architecture":{"title":"04-computer-architecture","content":"\n- [memory](notes/memory.md)\n- [control-unit](notes/control-unit.md)\n- [bus](notes/bus.md)\n- [CPU](notes/CPU.md)\n- [ALU](notes/ALU.md)\n- [computer-architecture](notes/computer-architecture.md)\n\n\n\n\n\n\n\n\n\n\n\n- tristate buffer [slide](https://i.imgur.com/2Kb419g.png)\n- ![memory write](https://i.imgur.com/PExnbFm.png) [circuit simulator](https://tinyurl.com/2bmqovqz)\n- ![memory read](https://i.imgur.com/GZwxuaA.png)\n\n# Bus\n- data bus\n- address bus\n- control bus\n\n- conmmunicate between parts of the computer\n- only one transmitter at a time\n- only addressed device can respond\n- 2 levels\n\t- internal\n\t- external\n\n# Memory\n- memory size is dependent on bus size\n\t- 2n bytes for n-lines on the address bus\n\t\t- 2^8=256B, 2^16=64KB, 2^32=4GB, 2^64=16EB\n\n- flip flops are grouped into bytes (or larger)\n\t- each byte has an address\n\t- to write\n\t\t- present the address and the data\n\t\t- tell chip to write\n\t- to read\n\t\t- present the address\n\t\t- tell the chip to read\n\t\t- look at the data\n\n## Static RAM (SRAM)\n- memory made from flip flops is called static RAM\n\t- used mostly in CPU cache\n\t- or anywhere where only a small amount is needed\n\t- expensive\n\n## Dynamic RAM (DRAM)\n- made from capacitors\n- used where large amount of RAM is needed\n- slower than SRAM\n- inexpensive\n\n## Non-Volatile Memory\n- often called ROM (read only memory)\n\t- can also be called PROM, EPROM, EEPROM, FLASH\n- flash\n\t- uses floating-gate flash cells, not quite a transistor\n\n# ALU\n![](https://i.imgur.com/wLJhTSG.png)\n\n- performs arithmetic\n\t- add, subtract, etc.\n- logical operations\n\t- and, or, shift, etc\n- subunits\n\t- lofical operations\n\t- addition\n\t- multiplication and dividion\n\t- shifting\n\t- comparison\n\t- logical tests (if, \u003e0, \u003c0, =0, \u003c=0, etc)\n\n# Control unit\n![](https://i.imgur.com/bQ4eA94.png)\n\n- coordinates the operation of the computer\n- generates control signals\n\t- connect registers to the bus\n\t- control the function of the ALU\n\t- provides timing signals to the system\n\nallso associated with the decoding and executuion of instructions in a pipelined system\n\n# Registers\n![](https://i.imgur.com/32rVBFW.png)\n\n- memory cells with names\n- hold data, instructions, or CPU status\n- various sizes, (8, 16, 32, or 64, or larger (512))\n- hold data typically the same width as memory words\n- registers for accessing memory typically the same with as the address bus\n\nSpecial purpose registers\n- program counter\n\t- stores address of current instruction\n- accumulator\n\t- source of one of the operands\n\t- destination of the result\n- status flags\n\t- individaul bits store information about results of operations\n\t\t- result of last instruction was negative, zero, or postive\n\t\t- carry from most recent arithmetic operation\n\t\t- overflow occurred during the last instruction\n\n# CPU\n![](https://i.imgur.com/NxDLkuN.png)\n\n# Computer\n![](https://i.imgur.com/DSa47Jy.png)\n\n# Instructions\n- bit patterns\n- can be split into a number of fields\n\t- operation to be executed\n\t- the address in memory\n\t- which registers (or memory cells) to use as operands\n\t- where to place the result (registers or memory)\n\n# Stored program computer\n![](https://i.imgur.com/wxSfxiO.png)\n\n# Von Neumann Architecture\n- three key concepts\n\t- data and instructions are stored in a single read-write memory\n\t- contents of memory are addressable by location, without regard to the type of data contained\n\t- execution occurs in a sequential fashion, unless explicitly altered, from one instuction to the next\n- programs and data are the same thing\n\t- and so its possible to write soure code (data) and comile them into executables (programs) that can be loaded as data and then executed as programs\n\n# Early computers\n![motorola MC6809 CPU](https://i.imgur.com/yq74Ops.png)\n![circuit diagram for 6809](https://i.imgur.com/41F0tnH.png)\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/04-evaluation-methods-birth-of-hci":{"title":"04-evaluation-methods-birth-of-hci","content":"\n- [evaluating-designs](notes/evaluating-designs.md)\n- [birth-of-hci](notes/birth-of-hci.md)\n\nPossible exam questions\n- Define User Experience!\n- Difference User Experience - Usability\n- Describe applications where the subject’s satisfaction is of less importance than effectiveness and efficiency\n- Compare the advantages and disadvantages of a laboratory based and a field based evaluation of a user interface?\n- Describe the different characteristics of quantitative and qualitative measurements in HCI!\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/04-requirements":{"title":"04-requirements","content":"\n[requirements](notes/requirements.md)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/040-superstition":{"title":"040-superstition","content":"\n\"falsely attributing somet cause to some affect\"\n\ne.g., apple is preventing me from going to doctor\n\nmore common than commonly thought\n\nmost people are mistaken about the true causes of things\n\ne.g., sports fan thinkgs type of beer they drink affects outcome of game\n\n## on happiness\nmost people want to be happy\n\nso emulate people who are happy. they see rich people who are happy and think the cause of their happiness is their material things. eventualty realise than not all rich people are happy\n\nsocrates - \"happy is he who is content with the least\"\n\nhappiness lies in low expectations\n\nif basic needs aren't met would you be necessarlly be unhappy? -\u003e no you can still be accepting of that\n\n∴ happiness lies in acceptance\n\nwhat is acceptance: accepting what you have and what is in your future. so is happiness being fully present in this moment. when have money you are able to do this more easily \n\n## back to supersition\n\nThese ^ are all superstitious conclusions. we are all gulity of things like these. \n\nIt is good to periodically examine our own superstitions. However, if we know they're superstitions, why do we have them?\n\nhuge \"enemy\" during the enlightenment\n\n### The enlightenment\nrelatively short (relative to history), made up of three key generation of people who had ideas on the backs of each other.\n\nways to describe:\n- the ultimate awakening of mankind - start the snowball of reason\n- others say the snowball had been rolling since the middle ages (aristotle). enlightenment is just the culmination\n- fueled by religion - the counter reforation of the curch\n- propaganda - thinker propped up by people to give legitamacy to new way of thinking\n\nregardless it was transformative - attempt to abolish superstition is all areas of thought\n\n### bishop berkley\naboish superstitions with senses. \n\nwhat we percieve with our senses is not reality \"veil of perception\"\n\nwe have an idea of reality in our mind far from actual reality\n\nunderneath is some \"true\" reality. \n\nberkely questioned this assumption\n\nthe only thing we need to interact with is our  \"idea\" of reality\n\n\"immaterialist idealist\"  also a monist (the one substance is mind) and impericist (all knowledge is derived from sense experience)\n\nwe never experience the supposed \"real\" world, so how do we know it exists\n\n\"if a tree falls and noone sees it does it fall\" - if there was nobody or notging aroud to percieve it is wouldn't exists. but there is one entity that is perpetually aware of everything in the universe - God\n\nHe is the first in this line of thinking\n\ntyring to preserve the idea of god.\n\ngave rise to idealism - emanual kant\n\n\nhow did he get to this line of reasoning? why ask these questions? maybe because he was trying to preserve god. once matter is a substance that explained itself, what is stopping god from being removed. therefore. why does this physical stuff even need to exists at all\n\n\n### Voltaire\nnot a big fan of the religion of his day\n\nevolved throughout his life - deist -\u003e theist -\u003e ? Belived in the cosmological god.\n\ncommon to be anti-semetic. most peopole because mad at \"people who killed jesus\". valtaire was mad because jews made christianity able to exist. \n\neasy for us to project our time period onto voltaire. chistianity - islam - judaism, were different than they are now. they represented something bad to volatire (enemies of supersitions and tolerance). volatire wanted toleration, he thought that god was more that what these religions had laid out so far. \n\n#### letters concerning the  english nation\nanallysing system of govern in england after reformation following the (3) civil wars, knowing there would be a revolution in france soon\n\nliked some elements. they were producing good thinkers (newston, bacon, hobbs, and more)\n\ntrying to understand elements of english cuture and how they differed from france. in order to help the french revolution\n\nappreciates their system of religous tolerance. why do people of differenet religions get along so well. maybe because there are many different forms of religions. \n\nif there was only one religion - there would be no need for government\nif there were two religions - they would be fighting (e.g., democrat vs rebuplican)\n\nso more that two is best. no religion feels threatened by another religion.\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/05-6809-assembly":{"title":"05-6809-assembly","content":"\n\n# Warnings\n- different CPU architectures have their own machine codes and their own assembly languages\n- assembly language programs are **not** portable across CPU architectures (e.g., 6809 to x86 ARM) but are often backwards compatible (e.g., x86_64 family)\n\n# Working up\n- High level languages\n\t- ↓ Compiler ↓\n- Assembly language\n\t- ↓ Assembler ↓\n- Machine code\n\t- ↓ Instruction Set ↓\n- Hardware\n\n# Motorola MC6809 CPU\n- 6809 (1978) 9000 transistors\n- Apple M1 Ultra (2022) 114,000,000,000 transistors\n\n![Image of 6809 CPU chip](https://i.imgur.com/DuKNuX1.png)\n\n# Machine Code\n- Computers are controlled by bit-patterns. \n- These patterns determine what the CPU does and to which memory location\n\t- Assign values to registers\n\t- load registers from memory\n\t- add numbers to registers\n\t- store registers in memory\n\t- and so on\n- This is called machine code\n\nIt is not very easy to programm this way\n- slow\n- not human readable\n- difficult to debug\n- etc\n\nTo make the process easier, we assign names to the numbers. This allows us to program symbolically. We call this assembly language programming\n\n## Programmer's Model\n\nThe programmer's model of a computer is not the same as the hardware model. The hardware makes the computer look a particular way to the programmer\n- e.g., your computer could have several memory chips in it, but it looks like one continuous block of memory\n\n## 6809 Memory\n- 64KB memory\n\t- called *memory space* or *address space*\n- each byte in numbered from $0000 to $FFFF\n\t- $ means hex (base 16)\n\t- for our purposes, all memory locations exist\n\t- so the computer memory is just an array\n\t\t- `unsigned char memory[65536]`\n\t- the 6809 memory is conceptually broken into **pages** of 256 bytes each\n\t- the first page is called zero page ( all address are of the form $00xx)\n\t- the second page is called page 1 ($01xx)\n\t- and so on\n\n## 6809 Registers\n\n![6809 registers table](https://i.imgur.com/Icvj7BJ.png)\n\n- Registers are like global variables\n- some are general purpose (X, Y)\n- some are broken down like a `struct` or `union`\n\t- D is made u of A and B\n\t- Write to A or B and D changes\n\t- Write a 16 bit value to D\n\t\t- Read each byte usinig A or B\n- some have special meaning\n\t- DP - direct page register, can beused to make instuctons that refer to the same memory page faster\n\t- PC - the program counter, stores the location of the instruction that is currently being executed\n\t- S - system stack pointer is just an index into the byte array we call memory [diagram](https://i.imgur.com/vImSjAJ.png)\n\t\t- e.g., we can say `lds #$BCD7` - `S=0xBCD7`\n\t\t- it's more useful to say `pshs a` - `memory[--S]=A`\n\t\t- or `puls a` - `A = memory[S==]`\n\t\t- this is why we call it a stack pointer\n\t- U - user stack pointer, like S but used for in routine (function) calls to \n\t- CC - condition codes, hold information about the result of previous operations\n\t\t- E - Entire\n\t\t- F - FIRQ mask (on 1)\n\t\t- H - half carry\n\t\t- I - IRQ mask (on 1)\n\t\t- N - negative\n\t\t- Z - zero\n\t\t- V - overflow\n\t\t- C - carry (ripple carry adder pushes and pulls carry from here)\n\n## Instruction Set\n- Determined by the CPU designers\n- instructions consist of one or more fields\n\t- the mnemonic **opcode**\n\t\t- e.g., return from subroutine (`rts`)\n\t- and (optionally) parameters called **operands**\n\t\t- e.g., GOTO (`bra more`)\n\t- instuctionsare often of different lengths\n\t\t- `rts` one byte on the 6809\n\t\t- `bra more` is two bytes on the 6809\n\t\t- On ARM32 they are all 32-bits (4 bytes)\n\n### Syntax\n- normally case sensitive\n- syntax\n\t- `\u003clabel:\u003e\u003copcode\u003e\u003coperands\u003e;\u003ccomment\u003e`\n- labels\n\t- Start with a letter and ends with a colon (can be alphanumberic)\n- Operands\n\t- \\# immediate (if no # is given then it's an address)\n\t- $ hex value\n\t- % binary value\n- Examples\n\t- Load A with the value $0F\n\t\t- this is like A = 0x0F\n\t\t- `lda #$0F`\n\t- Load A with the value stored at memory location $000F\n\t\t- This is like: `A = memory[0x0F]`\n\t\t- `lda $0F$`\n\t- Transfer the value stored in B into A\n\t\t- This is like `A = B`\n\t\t- `tfr b,a`\n\n### Opcodes\n- lda / ldx / ldy\n\t- load a value into the given register\n- sta / stx / sty\n\t- store the value of the register back into memory\n- tfr\n\t- transfer from one register to another. (tfr b,a)\n\nthe hard part is the missing instructions\n- 6809 has no `div` or `sqrt`\n\n![opcode table](https://i.imgur.com/VUGYHPi.png)\n\n### Functional Groups\n- Instructions exist for \n\t- data transfer\n\t\t- between registers\n\t\t- betwen registers and memory\n\t\t- push and pull from stack\n\t\t- [instructions](https://i.imgur.com/nMQuwma.png)\n\t- data processing\n\t\t- arithmetic, logical, shift operaitons\n\t\t- [instructions](https://i.imgur.com/67Els9d.png)\n\t\t- [instructions 2](https://i.imgur.com/gMhKiVb.png)\n\t- test and jump / branch\n\t\t- check bits in the flag resister and conditional jump\n\t\t- [test and jump instructions](https://i.imgur.com/q0GImXS.png)\n\t\t- ![branch instructions](https://i.imgur.com/OBNIwMj.png)\n\t- input ouput\n\t\t- instructions that access the zero page\n\t\t- `out` and `in` instructions on x86\n\t- control\n\t\t- interrupt handling\n\t\t- [instructions](https://i.imgur.com/Mj4PYC2.png)\n\n## 6502 Fibonacci in Machine Code\n\nExample program:\n\n- 4C 13 00 00 00 00 00 00 \n- 00 00 00 00 00 00 00 00 \n- 00 00 00 A2 10 A9 01 8D \n- 10 00 8D 11 00 8D 12 00 \n- A9 31 8D 0F 00 8D 0F 00 \n- AD 10 00 6D 11 00 8D 12 \n- 00 69 30 8D 0F 00 AD 11 \n- 00 8D 10 00 AD 12 00 8D \n- 11 00 CA D0 E3\n\n[visualisation of comuter](http://www.visual6502.org/JSSim/expert.html?loglevel=0\u0026a=0000\u0026d=4C130000000000000000000000000000000000A210A9018D10008D11008D1200A9318D0F008D0F00AD10006D11008D120069308D0F00AD11008D1000AD12008D1100CAD0E3)\n\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/05-crypography":{"title":"05-crypography","content":"\n# news\n- zodiac killer code cracked\n- twitter leak\n\n# Brief history\n- study of secret messages\n- confidentiality of [cia-triad](notes/cia-triad.md)\n- also small role in integrity (authentication of message, and sender)\n- history of cyprtopgraphy is interwined with information technology\n\nLanguage use for communication seems to be part of human nature: perhaps the use of covert lanuage is too\n\n## need for confidentiality\n\"nothing to hide: nothing to fear\" look at edward snowdens corrolary\n\nWe all have legit needs for privacy. Cryptography provides technical measure for ensuring this privacy.\n\n## history\n- caesar cipher\n\t- simple substitution scheme (rotation)\n\t- vulnerable to cryptanalysis\n\t- key is a single integer\n\t- symmetrical (same key for encrypt and decrypt)\n\t- so ciphertext has the same patterns as the plaintext e.g., letter frequencies\n\t- this leads to cryptanalysis: systematic ways of determining the encryption scheme\n\t- modern ciphers aim to make the cipher text resemble *noise* (random data)\n\n# General process\n- encrypt\n\t- plaintext + key =\u003e ciphertext\n\t- key is a secret\n- decrypt\n\t- ciphertext + key =\u003e plaintext\n\nmathmatically\n- c = e(p, k)\n- p = d(c, k)\n\n# Terminology\n- copy later\n\n# Plaintext\nrefers to unencypted message. In the digital age the messages are often not plain text (ascii, unicode, etc).\n\ndigital crypto schemes normally work on the binary data (images, .docs, .txt, mp4 etc.)\n\n# Conventions\n- alice, bob, charlie, etc\n- mallory -\u003e malicious\n- etc\n- public vs private domains\n\t- assume communication is public\n\t- assume information is prepared and consumed in private domain\n\n# Randomness\n- a lack of predicability\n- no patterns\n- stochastic (can be analysed but not predcted) vs deterministic\n\nused for\n- one time pad\n- generating key-pairs\n- generating salts for password hashing\n- seeding pesudo random number generators\n\nhumans are not good at randomness\n- e.g., see patterns when there are none\n- e.g., random dot pattern\n- shuffle algorithm\n- gambers fallacy\n\ncomputers have the same problem: they are deterministic\n- cannot really produce true random numbers\n- CSPRNGS crypto secure pseudo random number generators\n- hardware entropy generator\n\nentropy pool\n- modern OSs implement an entropy pool that processes can draw on when the need random data\n\t- some systems provide blocking and non-blocking random source devices\n\t\t- blocking: will stop when entropy is exhausted\n\nhow to prove randomness\n- cannot prove\n- but can check for uniformity, bias, distribution etc. \n- difficult with small samples\n- can identify data that is unlikely to be random\n\t- (rngtext, diehard, dieharder etc)\n\n# Future\n- arms race\n- parallell co-ordination\n- quantum copmuting/cryptography could radically change the field\n\t- already being developed and investigated\n- security practitioners are are already developing things for quantum computing. ","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/05-javascript":{"title":"05-javascript","content":"\n# Javascript\n## DOM\n- JS can access and change all the elements of an HTML document\n- When a webpage is loaded, the browser creates a DOM of the page\n- The HTML DOM model is contructed as a tree of Objects\n\n![HTML DOM Diagram|300](https://i.imgur.com/2TZ2i1c.png)\n\nJS can:\n- change elements\n- change attributes\n- change styles\n- remove elements\n- add new elements\n- react to events\n- create new events\n\nJS is \n- descriptive\n- structued\n- interpreted\n\ncan be linked externally\n- `\u003cscipt src=\"script.js\" defer\u003e\u003c/script\u003e`\n- `defer` ensures that the js is loaded after the html (in a specific order)\n- `async` ensures that the js is run as soon as it is loaded (not in a specific order)\n\ntyping\n - js is dynamically typed\n - you dont need to specify the type of variable\n\nevents\n- e.g., click, hover, resize etc\n- smoke alarm analogy\n\t- fire is the event\n\t- alarm is the listener\n\t- sound of the alarm is the handler\n\ncookies\n- websites can use JS to store cookies on client machines.\n- usually server 'serve' the file to the user and nothing else\n- cookies allow to server to remember information about the client\n- `document.cookie`\n\nlimitations\n- cannot write to files (apart from cookies)\n- cannot execute programs on client computer\n- cannot establish a connection to any server except the one it came from (apart from re-directing to a new site)\n- cannot read history of brower (but is can cause the brower to move around in the history list)\n- not supposed to be able to open an invisible window\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/054-hume-on-art":{"title":"054-hume-on-art","content":"\nTastemaker:\n- strong sense\n\t- able to see and experience the art (i.e., not blind, deaf etc)\n- delicate taste (perceptive of delicate sentiment)\n\t- should be able to see what makes a piece of art good\n- practice\n- free of prejudice\n\t- Nostalgia\n\t- Novelty\n\t- Complexity\n\t- And more\n- comparison\n\nThere is something consistent about art. The greatest scientist may not be the greatest of all time, but the greatest artists are strangely timeless.\n\nAll sentiment is right; because sentiment has a reference to nothing beyond itself, and is always real, wherever a man is conscious of it.\n\nBeauty is no quality in things themselves: It exists merely in the mind which contemplates them; and each mind perceives a different beauty.\n\nA man in a fever would not insist on his palate as able to decide concerning flavours; nor would one, affected with the jaundice, pretend to give a verdict with regard to colours. In each creature, there is a sound and a defective state; and the former alone can be supposed to afford us a true standard of taste and sentiment. If, in the sound state of the organ, there be an entire or a considerable uniformity of sentiment among men, we may thence derive an idea of the perfect beauty; in like manner as the appearance of objects in day-light, to the eye of a man in health, is denominated their true and real colour, even while colour is allowed to be merely a phantasm of the senses.\n\nThus, though the principles of taste be universal, and nearly, if not entirely, the\nsame in all men; yet few are qualified to give judgment on any work of art, or establish their own sentiment as the standard of beauty.\n\nStrong sense, united to delicate sentiment, improved by practice, perfected by comparison, and cleared of all prejudice, can alone entitle critics to this valuable character; and the joint verdict of such, wherever they are to be found, is the true standard of taste and beauty.\n\nIt is plainly an error in a critic, to confine his approbation to one species or style of writing, and condemn all the rest. But it is almost impossible not to feel a predilection for that which suits our particular turn and disposition. Such preferences are innocent and unavoidable, and can never reasonably be the object of dispute, because there is no standard by which they can be decided.","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/06-6809-programming":{"title":"06-6809-programming","content":"\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/06-business-functions-and-use-cases":{"title":"06-business-functions-and-use-cases","content":"\n[approaches-to-systems-development](notes/approaches-to-systems-development.md)\n\n1. What are the two main approaches to systems development and how do they differ\n\n- object oriented - system is a collection of objects\n- tranditional - system is a collectin of processes\n\n[business-functions](notes/business-functions.md)\n\n2. What are business functions\n\nthings that a business *ought* to be doing not who, how, structure, tech\n\n3. What is a use case\nan interaction between a role and a system to achieve a goal\n\n4. What is a use case diagram used for\na high level descruption of how people interact with a system\n\n[use-case-diagrams](notes/use-case-diagrams.md)\n\n- dependencies\n\t- includes\n\t- excludes\n\t- requries\n\nwhat is the difference between requries and indludes\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/065-mary-woolstonecraft":{"title":"065-mary-woolstonecraft","content":"\nroyal humane society - resusitation\n\nsaved mary woolstone craft from the river thames and resusitated after attempted suicide\n\nsuicide is crazy - all our intellect decides the only way is to end it all\n\nborn april 27th 1759\n\nrenaissanece - voltaire rossueau, burke\n\nborn into conservative household - dad was a drunk wifebeater\nshe tried to protect her mother\n\nlead to need to protect other women\n\nhelped her sister escape from bad marriage\n\nbecomes personal tutor to family with four young daughters\n* dfa\n\t- they were similar to other women of that age\n\t- conditioned to become a \"good wife\"\n\t\t- be quiet, loog good in a corset\n\t\t- sexual \"plaything\"\n\t\t- submission leads to a \"good life\"\n\t\t\t- not critical thinking etc\n\t- after being taught bny mary were incedibly succesful\n- despite reconsideration about slaves, there were no  reconsiderations as women as slaves \n- john locke - tabula rossa - \"maybe the content of someones character is dependent on their previous experiences\" \n\t- jean jaque rosseau emilie - education of men versus education of women\n\t\t- women - \"the whole education of women ought ot be relative to men, to please them, to be useful to them, to make themselves loved and honoured by them, to educate them when young, to care for them when grown, to counsel them to console them, and to make life agreeable and sweet to them, these are the duties of women at all times, and should be taught to them from their infancy\"\n\t\t- sounds like slavery\n\t- this is what woolstone craft is reponding to \n\t\t- \"strengthen the female mind by enlarging it, and there will be an end to blind obedience, but as blind obedience is ever sought for by power, tyrants and sensualists are in the right when they endevour to keep women in the dark, because the former only wants slaves and the latter a plaything\"\n\t\t- the system that opreses womens is like a tyrant,\n\t\t- women are percieved and mentally and physically inferior to men\n\t\t- chicken vs egg, women always stupid or have men made them stupid \n\t\t- introduced the idea that equality is for women and men (wow)\n\t\t- pursuit of true equality\n- read edomnd burke reflections (exalted tradition as ultimate guide))\n\t- mary rejected this - tradition should be questioned\n\t-  \n- after death was castaged for being a vixen \"whore\"\n\t- had many children without marrying\n\t- marraige laws were virtually legal slavery this is why she didn't marry\n- dared to questiont the social convention around her, while being hated\n- \"successful life\"\n\t- back then -\u003e \"submissive to husband who buys everything\"\n\t- now -\u003e \"?\" this is still happening - might be just as bad\n\t- what about men\n\t- \"admirable behaviour\" - contantly changing, with the culture and world - same for most cultural conventions\n\t- what is reponsible for this change\n\t\t- happen in bursts \"revolutions\"\n\t\t- some one points out a glaring injustice, then change occurs\n\t\t- philosophy and religion\n - who/what is the tyrant now - how am i being conditioned now.\n - futured generation will hate us as we have earlier generations\n\t - \"ill just defend the best behaviour set I know of\"\n\t - acknowleding how arbitrary our current norms are is freeing\n\t - what conditioning might have led to a convicts behaviour, can we change it\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/07-business-process-modelling":{"title":"07-business-process-modelling","content":"\n- understand core conepts related to business process mondelling\n- learn about commonly used business process modelling notations\n- understand the elemeents of a UML activity diagram\n\n1. What is a business process\n- [business-process](notes/business-process.md)\n- [business-process-model](notes/business-process-model.md)\n- [business-process-model-and-notation](notes/business-process-model-and-notation.md)\n- [unified-modelling-language](notes/unified-modelling-language.md)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/07-heuristic-evaluation-cont":{"title":"07-heuristic-evaluation-cont","content":"\n[heuristic-evaluation](notes/heuristic-evaluation.md)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/07-mergesort-1":{"title":"07-mergesort-1","content":"\n[mergesort](notes/mergesort.md)\n\n[quicksort](notes/quicksort.md)\n\n[divide-and-conquer](notes/divide-and-conquer.md)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/07-testing":{"title":"07-testing","content":"- [testing](notes/testing.md)\n- [test-driven-development](notes/test-driven-development.md)\n- [unit-testing](notes/unit-testing.md)\n\n- understand that testing is useful for detecting bugs\n- contrast different types of testting\n- descrive the principle of test driven development\n- explain how unit tests are developed\n- indicate how languages integreate unit test support\n- apppreiciate limitation of software testing\n\n# Flash cards\n## Testing\nwhat are unit tests::Testing individual pieces of code \u003c!--SR:!2022-5-521,3,270--\u003e\nwhat are integration tests::tests checking that code works together \u003c!--SR:!2022-5-521,3,270--\u003e\nwhat are end-to-end tests::tests that check the behaviour of the while program \u003c!--SR:!2022-5-521,3,270--\u003e\nwhat is the halting problem::you cant fully analyse code using code \u003c!--SR:!2022-5-521,3,270--\u003e\n\n## TDD\nwhat is TDD::a software dev. methodology where tests are written before code \u003c!--SR:!2022-5-521,3,270--\u003e\n\n## Unit testing\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/077-marx-and-kierkegaard-religion":{"title":"077-marx-and-kierkegaard-religion-pt1","content":"\nsomething changes when you an actual photo of a philosopher. they become people, not enigmas (e.g., socrates). \n\n# Marx\n\"religion is the opiate of the masses\".\n\nlived in the era after the enlightenment. Dividends of these ideas are being paid. Trade is more available. There is ever increasing demand. Small crafter gave way to manufacturers. Power is given to these people. Max's thinks this is bad.\n\nMarx liked hegels dialectic:\n- thesis\n- antithesis\n- synthesis\n\napplied this to the economic history of the world. \n\n\"the history of all hitherto existing society is the history of class struggles\"\n\nalways two classes of people, rulers, and the exploited. rulers - thesis, exploited - anithesis, then revolution - synthesis. \n\ne.g.,\n- slavery vs slave master\n- peasants vs others\n\nmanufacturers - burgoise. others - politerate\n\nwe are the exploited class of this time period. rulers could be the big financial institutions\n\njust because you dont feel exploited doesn't mean you aren't. \n\nwhy would anyone be satisfied with this arrangement? why should be accept that revolution is necessary.\n\nrulers try to maximise their time in power. video games, movies, etc. distactin us from the world. \n\nultimate method of distraction is religion\n\n\n\n\"religion is the opiate of the masses\".\n\n\n\nmeant to mitigate the pain of being exploited. it is the ultimate fanstasy world. creates acceptance in the people. wverything is all \"gods will\". good for personal happiness, not good for society. \n\nthe structure of the religion of a time period mirrors the current econmic tactic of coercion by the ruling class. \n\ne.g., \n- heirachical structure of feudal system matches the religion of the time - catholism. \n- capitalism - liberty. religion abandons heirachical structure.\n\ntell the people \"the rich go to hell\".\n\nindividual moral progress is an illusion. the only thing that matters is the moral progress of society toward an end goal - the ideal society. \n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/078-marx-and-kierkegaard-religion":{"title":"078-marx-and-kierkegaard-religion-pt2","content":"\n# Kierkegaard\ndisagreed with marx. said progress is a conglomeration of individuals.\n\nthought it was likely that a world would emerge where people were no longer individuals. he thought there would more people living vicariously through others, than there were individuals. \n\ncolloseum example\n\ntwo pitfalls that make you less of an idividual\n- lost in infinite\n\t- \"anxiety is the diziness of freedom\"\n\t- \"analysis paralysis\"\n\t- need to take action\n\t- not using the ability to freely act - losing a part of your individuality\n- lost in finite\n\t- \"mindlessly following cultural and social conventions\"\n\t- usually unaware of their state\n\t- e.g., cows think they are freely acting, but they are actually folliwing the herd\n\ncan be in both states\n\nThe only way to stop thinking of the endless sea of possibilities is to \"make a leap of faith\". you can become an individual. \"leap of faith\" towards christianity.\n\nwas disgusted by the religion of his time. thought everyone was doing it wrong. \n\n\"Christendom is pampered with the nonsense that the Christian God is a decent and harmless chap a good fellow and especially a friend of female business and the beginning of children. All human effort tends towards hurting each other let us unite, etc. Naturally, this happens under all sorts of high sounding names, love and sympathy and enthusiasm  the carrying out of some grand plan and the like. This is the usual hypocrisy of the scoundrels we are, but the truth is that in a herd, we are free from the standard of the individual, so millions of men live and die, they're just numbers and the Numerical becomes the horizon, that is to say, they are just copies, and Christianity which, in the divine love wants every one to be an individual, has been transferred by human bungling into precisely the opposite\"\n\nthe bible is a system for bringing about the highest form of us as an individual.\n\nthe function of religion is to organise a commitment to a particular way of life. create own religion experiment\n\ncreates a \"cheatsheet\" for life.\n\navoid being lost is infinite or finite. so faith is the ultimate act of reason\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/079-kierkegaard-anxiety":{"title":"079-kierkegaard-anxiety","content":"\n\"anxiety is the dizziness of freedom\"\n\n\nthe biggest danger in this life is the loss of yourself. you might not realise you are in this situation.\n\nmost people are lost\n- lost in finite\n- lost in infinite\n\ntruly being a self required the realisation that you must make a choice\n\nwhen we are stuck between the two we experience \"dizziness\". we start catasrophizing.\n\nessense of anxiety - fear of some future outcome that we may have no control over\n\n\"Anxiety may be compared with dizziness he, whose eye happends to look down into the awning abyss becomes dizzy. But what is the reason for this? It is just as much in his own eyes as in the abyss. Anxiety is the dizziness of freedom.\"\n\nanxiety is the reaction we have to the sheer number of possibilites. What if i make a mistake?\n\nthis makes us uncomfortable, imbues a sense of *dread*. most peolple to avoid this. the road to becoming a self is tough. \n\nafter dread becomes despair. most people spend their life here. comes from the attempt to rid yourself of yourself. Despair is a sickness of the spirit. A disease affecting your emotional state. Its not always clear that you are in this state, you can be in despair and still seem like a happy person.\n\n\"most men are subjective toward themselves, and objective towards all others. Fightfully objective sometimes. but the task is precisely to be objective towards oneself, and subjective towards all others.\"\n\nmany types of despair. e.g., sickness of despair over something earthly. conflating identity with something external to yourself. \n\nUsing something to distract yourself from your state of despair. similar to kant idea of outsourcing things. echoes of buddism. \n\nwhile you are feeling anxiety you are becoming closer to your true self. \n\naim to find a \"truth that is true for me\"\n\nreject hegel notion that our choices are a product of our culture. \n\nfather of existentialism","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/08-business-patterns":{"title":"08-business-patterns","content":"\n[entity-relationship-diagrams](notes/entity-relationship-diagrams.md)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/08-debugging":{"title":"08-debugging","content":"\n[debugging](notes/debugging.md)\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/08-mergesort-2":{"title":"08-mergesort-2","content":"\n[mergesort](notes/mergesort.md)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/08-personas-and-scenarios":{"title":"08-personas-and-scenarios","content":"\n- [personas-and-scenarios](notes/personas-and-scenarios.md)\n- [storyboards](notes/storyboards.md)\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/083-henry-david-thoreau":{"title":"083-henry-david-thoreau","content":"\ntrancendentalist\n\ngraduated harvard, got a job as a school teacher. He was against corporal punishment and quit. opponent of slavery, conservationist. \n\nhow to persuade people to agree? \n\nare you oblisged to agree with the majority ina democracy or the opposite.\n\nread self reliance by ralph waldo emerson. meant to teach the importatnce of being an \"individual\" - \"there comes a time in every mans education, when he arrives at the conviction that envy is ignorance, that imitation is suicide that he must take himself for better or for worse as his portion\" \n\nas a human we need to find out who we are. none of us are born with this knowledge so we conform with what others are doing. but imitation is suicide of your individuality. \n\nbest thing to do is figure it out for yourself. objective truth is hard to define\n\ntrancendentalism -\u003e takes other ideas, and creates an approach to life needs meaning, and that one must find this meaning himself. aim to understand personal truth about the way things are. \n\nsociety is in conspiracy againt the manhood of its members. \n\nsociety promotes conformity, protects the mentally and physically lazy. obstacle blocking living individualy\n\nthe more you own , the more your stuff owns you. \n\ntry to \"fix yourself using material things\". not only material things, also e.g. travel. \n\nwhen people are given freedom they act like everyone else.\n\n\n ","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/09-data-modelling-and-normalisation":{"title":"09-data-modelling-and-normalisation","content":"\n- [redundancy-and-anomalies](notes/redundancy-and-anomalies.md)\n- [dependencies](notes/dependencies.md)\n\nwia functional dependecy::when some attribute has exactly one associated other attribute \nwia transitive dependency:: A→B, B→C [Transitive dependency](notes/dependencies.md#Transitive%20dependency) \u003c!--SR:!2022-5-521,3,250--\u003e\nwia partial dependency:: when a subset of the left determines the right\u003c!--SR:!2022-5-521,3,250--\u003e\nwia multivalued dependency::when something has a set of associated values of another attribute \n\n- [normalisation](notes/normalisation.md)\n\nwhat is normalisation::formal process of eliminanting unnecessary redundancy in relations by splitting relations into smaller chunks","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/09-documentation":{"title":"09-documentation","content":"\n[documentation](notes/documentation.md)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/09-paper-prototypes-wiz-of-oz-video-prototypes":{"title":"09-paper-prototypes-wiz-of-oz-video-prototypes","content":"\n- [wizard-of-oz](notes/wizard-of-oz.md)\n- [video-prototyping](notes/video-prototyping.md)\n- [storyboards-mockups-paper-prototypes](notes/storyboards-mockups-paper-prototypes.md)\n\n# Paper protoypes\n\n- brainstorming. e.g., ![](https://i.imgur.com/IKIEHon.png)\n- refinement of design and communicating ideas. e.g., ![](https://i.imgur.com/A7paq38.png)\n- -   evaluating interfaces\n\nExample of previous years 203 work\n![](https://i.imgur.com/NvgJA8n.png)\n\n# Digital prototypes\n\nPast 203 work\n![](https://i.imgur.com/d4b22ZM.png)\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/09-stacks-queues-heaps":{"title":"09-stacks-queues-heaps","content":"\n- [dynamic-linear-datatype](notes/dynamic-linear-datatype.md)\n\t- [Stack](notes/dynamic-linear-datatype.md#Stack)\n\t- [Queue](notes/dynamic-linear-datatype.md#Queue)\n- [priority-queue](notes/priority-queue.md)\n- [heap](notes/heap.md)\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/090-nietzsche-god-is-dead":{"title":"090-nietzsche-god-is-dead","content":"\nSo many people ask \"what is the meaning of my life\". There is no easy answer to this\n\nSince everyone is born into this condition Nietzsche asks — \"Why aren't the vast majority of people nihilistic\"\n\nthe reason is bevaus when you come of age and ask these questions, historically speaking people have always had a choice between many different \"true world theories\"\n\ne.g., platos world of forms. Things in the world are imperfect representations of a \"ideal form\". \n\nthis implies that the world is a earthly shadow of a \"real world\"\n\nnietsche would call this the true world of this true world theory\n\n\ne.g., christian, earth vs afterlife. you are an eternal spirit inhabiting a temporary body. We should focus of heaven\n\n∴ heaven is the true world of this true world theory\n\n\ne.g., hinduism/buddism: a wave is a temporary manifestation of the ocean: its not separate from the ocean. In that sense we too are waves. temporary manifestation of some spirit world or the totality of the universe. individuality is an illusion, we are all one thing\n\nthis one thing is the true world\n\n\nThere are many more and they are all very similar. Niezsche would say these true world theories are human inventions, a common tactic used to satisfy our psycological needs. They are a solution to a universal problem. Similar to the problem of moving heavy things which everyone solved using the wheel.\n\nThe reason they have existed so long, is that we havent always been able to refute the existence of another world. \n\nOnce everyone is aware of this Niezsche says \"God is dead\". He  not talking about some deity. He saying that humanity's pursuit of a true theory is dead. He's saying its becoming more difficult for humans to believe in one of these theories. Our solution to the problem dissapears. \n\nNietzsche also says these theories breed complacency, e.g., god forgiving you for your sins. Every one become a \"member of a herd\". The code they share removes their individuality. \n\nNietzsche says Envy (a sin) is a powerful force driving us to become the best version of us. It can be used as motivation. It's highly personalised, you dont envy something you dont want (?). What we are envious about can teach us about who we are.\n\nNietzsche says christianity, creates weakness and passivity as a virtue. \n\nHe reccomends: dont drink alcohol: you feel good for a little while, but it's bad for you, is calorie dense, opportunity cost, monetary cost. even so: is wierd to not drink. The other pro is that it instantly (temporarily) solves all your problems. \n\n\u003e \"There have been two great narcotics in history: Christianity, and alcohol\"\n\nIt is a trap to use alcohol in the same way as christianity. \n\nAA replaces alcohol with god\n\nWe have created so many excuses to drink\n\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/091-nietzsche-wilil-to-power":{"title":"02-nietzsche-wilil-to-power","content":"\n\nWhy do we do things: usually to be happy. some might say — no i life my life to serve i sacrifice i volunteer etc — but this still on some level, brings them happiness. \n\nBut then why do people to so many things that make them unhappy (e.g., jealousy, guilt). Some people say (in a very shopenhauer approach to things) that these things happen because of survival, the will to life. \n\nbut then if the goal was survival, why do people go skydiving etc. Its more complex than just survival\n\nNietzsche says its not will to happiness, its not will to survival, its will to power. by power he means becoming who you are, finding yourself, self expression. \n\nWe are a part of the animal kingdom, we are part of an ecosystem. other animals e.g., bears have a will to power, to imporve their curcumstances. We are the same, but we have big brains so their are more ways to achieve this. \n\nsome people say this notion of a will to power, extends to the entire universe. it it possible that by looking at our own existense we can learn about stars, planets etc. \n\nthe will to power could be anything: large business, my tiny cabin in the woods by a surf spot. It's whatever you want. \n\n\nThere are things we must overcome find get this \"power\". Humans have many differnt ideas conditioned into us that we need to overcome before we become our true self\n\n\n\n\nsince we exist in this world as individual agents exerting our will power, everything else is the same. all the different wills to power often condtradict each other. we dont have control over the universe, about who hits my car, etc. we have no ultimate control over the world. this is usually solves by focusing on controlling the internal world: buddism, stoicism, etc. \"pain is certain, suffering is optional\". however this diminishes value of good things. \n\nNietzsche says that earthly attachment is necessary and, the solution is to try as hard as we can to control as much as possible.\n\nthe reason most people dont do anything extraordianry is becaue of fear or laziness. \n\nthe worst thing is a fear of failure. we should take calculated risks. embrace the danger, embrace pain. most people run from pain and try to minimiise is. pain serves a purpose to us. its the only way we grow as people. \n\nthe only way to experience the most intense highes is to experience the most intense pain. its only people with courage who will summit the mountain. \n\nits easy to manufacture the most comfortable life. \n\nthought experiment: what if you had to repeat your life over and over again, without changing anything, how pecious does each decision become then?","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/092-nietzsche-pt3-thus-spole-zarathustra":{"title":"092-nietzsche-pt3-thus-spole-zarathustra","content":"\nIn this episode nietzsche talks about the  \"overman\". How there are three stages of life\n- the camel where we carry other people burdens and dont question why\n- the lion where we rebel and stop doing things for other people, questioning why\n- the child where we realise we dont have to reject everything, and we become like \"a child at play\"\n\nthen after these three there is the overman which is like an infinitely perfect person.\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/093-nietzsche-pt4-love":{"title":"093-nietzsche-pt4-love","content":"\nThis episode is about love. We talked about the idea of love from platos symposium\n\nhe says love is like a ladder with 6 steps\n- love for a particular body\n- love for all bodies\n- love for souls\n- love for laws and institutions (Love for the practice, custom or foundation that are derived from people with beautiful souls.)\n- love for knowledge\n- love for beauty itself\n\nis is commonly thought that when you find love for a higher rung, you no longer have love for the lower rungs. for example, once a person finds love of the soul, he might think that love of the body is merely lust.\n\nHowever, some people think the opposite. When you climb the ladder, you better understand the previous rungs","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/094-a-look-at-suffering":{"title":"094-a-look-at-suffering","content":"\nniel degrasse tyson said two things to live your life by\n- know more today than you did yesterday\n- limit the suffering of others\n\nIs the second one something we should all do?\n\nfyodor dostoyevsky says suffering is a necessary part of human life.\n\nHow do we define human progress?\n\nTranshumanism/hedonistic imperative\n- we limit physical pain by drugs (this seemed unrealistic to earlier humans)\n- why not limit all pain and place ourselves in an eternal state of bliss\n- we are the last of a dying breed\n- the last to exist in the \"darwinian pathology of conciousness\"\n\nThis idea has a lot of implications: \n- if we cant feel any pain, will we still be able to experience pleasure? will life become numb?\n\t- one arugment is that yes we will since people who are in almost constant pain still know they are in pain\n- Will we still be motivated (to make things better) to create new things, experiement, improve our condition etc\n- \"mental strength\" (e.g., stoicism, buddism) might be unnecesary \n- future generation will look at us the way we looked at e.g., plato (how different their world is)\n- we base a lot of judgements (eg., what is progress) on limiting suffering \n- deeper more complex emotions (pleasure)?\n\nDream thought experiment\n- if every time you slept and had a dream you lived a ful 75 year lifetime in that dream\n- at first you would live a perfect life, you would have everything you wanted: money, sex, etc\n- but eventually this would get boring and you'd introduce variance and things out of your control\n- then after some time, you'd want to not know you were even dreaming at all\n- at this point, you are just living in real life\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/095-are-we-living-in-a-simulation":{"title":"095-are-we-living-in-a-simulation","content":"\nThis question is becoming more and more popular. \n\nbreif note about descartes \"cogito ergo sum\". I think before I am. He systematically doubted everything and realised that the only thing he couldn't doubt was that since he was able to doubt, and he was thinking, he must exist. From this base be built up a sort of proof that the world is real. But it wasn't very good and he made many assuptions along the way.\n\nDrake equation: calculated the probability of other life based on number of planets, galaxies etc. Gave rise to the fermi paradox: why are there no aliens.\n\n2005 paper about are we living in a simulation presented three options:\n1. we go extinct before we are able to create the technology\n2. we reach the point where we can but for some ethical or otherwise reason we dont want to \n3. we do develop the technology and we do create simulations. In which case since there is only one base reality and many simulated ones, we are most likely living in a simulation.\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/10-continuous-integration-1":{"title":"10-continuous-integration-1","content":"\n[continuous-integration](notes/continuous-integration.md)\n\n1. explain the term continuous integration\n2. describe different purposes for CI\n3. indicate how CI jobs are usually triggered\n4. understand implications of CI running asynchronously\n5. Exlplain how to manage output from CI jobs\n6. describe role of stages and jobs within gitlab pipelines\n7. indicate how CI specifications are stored\n","lastmodified":"2022-07-27T23:05:09.08608591Z","tags":null},"/notes/10-design-heuristics-1":{"title":"10-design-heuristics-1","content":"\n## 1 Wizard of OZ\n[wizard-of-oz](notes/wizard-of-oz.md)\nsimulating machine behavior with human operators\n\n## 2 Video prototyping\n[video-prototyping](notes/video-prototyping.md)\n\n## 3 Creating and comparing alternatives\ncreate multiple ideas in parallel rather than one after the other \n\n![](https://i.imgur.com/zPrMKlz.png)\n\n## Functional fixation\nThis is when you get tunnel vision about some design. This causes you to not consider other possible alternatives.\n\nFor example with nail problem, almost nobody consider using the nails it the way that is needed.\n![](https://i.imgur.com/h1c095B.png)\n\n## 4 Design heuristics\n[design-heuristics](notes/design-heuristics.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/10-heaps-and-heapsort":{"title":"10-heaps-and-heapsort","content":"\n[heapsort](notes/heapsort.md)\n\n\n# 1 Overview\n[[notes/heap]]\n\n# 2 Operations\n## 2.1 Add element\nAssumptions\n- access first vacant position\n- set (or find) the value $H.q$ stored in any (occupied) position $q$\n- access parent of any given position\n- identify when we're at the root\n(all in constant time)\n\nOutcome: Change $H$ by adding x to it, while maintaining the heap conditions\n\n```\np \u003c- first vacancy, H.p \u003c- x\nwhile p is not the root and H.parent(p) \u003c H.p do\n\tswap H.parent(p) and H.p\n\tp \u003c- parent(p)\nend while\n\n```\n\n## 2.2 Remove the maximum\nOutcome: Change H by removing its maximum (i.e., root) value wile maintaining the heap conditions\n\n```\nv \u003c- H.root\nset H.root to be the value stored in the last occupied position\np \u003c- root\n\nwhile p has children\n\tif the largest value, H.c of a child of p is greater than H.p then\n\t\tswap H.c and H.p, p \u003c-c\n\telse\n\t\tBreak\n\tend if\nend while\n\nreturn v\n\n```\n\n\n## 2.3 Complexity\nIn addition, we move along a branch from an added element up to the root, fixing violations as we go\n\nIn removal, we move from the root down through some branch until all violations are fixed (can only occur if node has children)\n\nSo both loops do most Ο(lg n)\n\n## 2.4 Storage\n![](https://i.imgur.com/04qVrGQ.png#invert)\n\n- Array\n- root at position 0 and children at 1 and 2\n- children of 1 to in 3 and 4, children of 2 go in 5 and 6\n\n- first vacant pos --\u003e heap[n]\n- value at pos q --\u003e heap[q]\n- get parent of q --\u003e parent(q) = (q-1)/2\n- get children of q --\u003e (2 * q) ± 2\n- identify if q is root --\u003e q == 0\n\n## 2.5 Implementation\n\nUse java.util.PriorityQueue\n\n# 3 Heap Sort\nIn place and ϴ(n lg n)\n\n- start with array\n- using itself as a heap, add the elements one at a time until all been added\n- Then remove them one at a time - the largest elements gets removed first and the place where is needs to be put gets freed from the map\n\n# 4 Heap vs Merge\nheap --\u003e in place, ϴ(n lg n)\nmerge --\u003e not in place, Ο(n lg n)\n\nMerge is preferred because\n\n- MS can take advantage of partially sorted data (hence ϴ() vs Ο())\n- MS memory accesses are good fast\n- overwrites allow for optimizations that swaps do not\n\nextra memory cost of merge sort is negligible\n\n∴ Merge sort is faster\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/10-oop-concepts-and-uml":{"title":"10-oop-concepts-and-uml","content":"\n1. what is the concept of encapsulation and how is it enforced for objects\n2. how does and object refernce differ from a relational foreign key\n3. give an example of how difference UML diagram types can be linked when modelling a system\n\n- [object](notes/object.md)\n- [unified-modelling-language](notes/unified-modelling-language.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/11-class-diagrams":{"title":"11-class-diagrams","content":"\n[class-diagrams](notes/class-diagrams.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/11-continuous-integration-2":{"title":"11-continuous-integration-2","content":"\n1. Appreciate that GitLab is a complex software\n2. Understand where CI jobs scripts get run\n3. explain why repository servers can host websites\n4. Understand how gitblab dternmimines awhen a CI script failed\n5. Describe a way in which CI scripts scan handle secrets\n6. Outline uses of local git hook scripts\n\n[continuous integration](notes/continuous-integration.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/11-design-heuristics-2":{"title":"11-design-heuristics-2","content":"\n- [Show System Status](notes/show-system-status.md)\n- [Familiar Metaphors And Language](notes/familiar-metaphors-and-language.md)\n- [User Freedom And Control](notes/user-freedom-and-control.md)\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/11-sets-maps-trees":{"title":"11-sets-maps-trees","content":"\nA [set](notes/set.md) is :: a collection of elements with no repetition allowed \u003c!--SR:!2022-5-527,9,250--\u003e\n\nA [hash-map](notes/hash-map.md) is :: a set of key value pairs \u003c!--SR:!2022-5-526,8,250--\u003e\n\nA [tree](notes/tree.md) is :: a general concept of a way of organising data. \u003c!--SR:!2022-5-528,10,250--\u003e\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/12-automation":{"title":"12-automation","content":"links: [cosc-202-lectures](notes/cosc-202-lectures.md), [slides](https://cosc202.cspages.otago.ac.nz/lectures/L12-automation.pdf)\n\n---\n\n[automation](notes/automation.md)\n\n---\n\n# Garbage notes\n\nThe use of automatic equipment in a production process. We desire to remove repetive work within software development\n\n1. Automation within existing tools\n2. Tools that control other tools\n\nThis automation should be designed to be efficient and easy to use quickly for a useful purpose. It should also be reliable and safe\n\nDont spend more time automating than the time you will save. It's good to periodically re-check whether maintaining/developing an automation is warranted\n[Relevant xkdc](https://i.imgur.com/RvYHIUW.png)\n\n# 1 Beware\n\nAutomation bugs can rapidly cause big messes which can be difficult to undo\n\nSo it is useful to do a 'dry run' first to check you automation works\n\nAs always, keep backups\n\n\n# 2 Automating GUI's\n\n- Windows: AutoHotkey\n- macOS: Open Scripting Architecture\n- Linux: most tools aren't GUI-only\n\n\n# 3 Automating web apps\n\n[selenium](notes/selenium) can automate access to websites.\n\n\n# 4 Macros and snippets\n\n[integrated-development-environments](notes/integrated-development-environments.md) can create macros. For example within vscode you can define snippets. These are are often included in laguage extensions. These snippets are templates for often repeated chunks of text.\n\nFor example a snippet to create a latex slide\n\n```\n\"dframe\": {\n\t\"prefix\": \"BDF\"\n\t\"body\": \"\\\\begin{dframe}{$1}\\n \\\\1 $2\\n\\\\end{dframe}\n\t\"description\": \"New dframe\" },\n}\n```\n\n\n## 4.1 Programming language macros\n\nMany programming languages include macros. These are \"text replacement\" macros.\n\nFor example you can define a macro \"pi 3.14....\". This will then be expanded  when the program is compiled\n\n\n## 4.2 Shell automation\n\nMost command [shell](notes/shell.md) faciliate automation using shell scripts with loops and conditions.\n\nThese are more suited to quick and simple tasks, as more with more complex tasks it is hard to handle edge cases and quirks.\n\nA good way to make scripts safetly is to test the steps interactively before making them into a script\n\nIf a script is becoming complex, it is worth switching to python or some other language\n\n\n## 4.3 Office 365 automation\n\nOffice 365 has built in tools for automation. You can record macros using a GUI. You can use Visual Basic for applications. They also have a tool called Power Automate or Flow, which is used for building cloud based automations between products. This can faciliate forms of [continuous-integration](notes/continuous-integration.md)\n\n[Example Flow](https://i.imgur.com/Liiqzlh.png)\n\n# 5 Using tools to automate other tools\n\n## 5.1 Using code to create code\n\nYou can you a program to product source code. For example you can write a java program to generate java code. This is suited for producing repetitive error prone source code. \n\nFor example. You are building a command line tool. You want to have a help option. You can create a YAML definition to define command line arguments. You could then create code to parse this YAML and create generate the source code. \n\n[finite-state-machine](notes/finite-state-machine.md) are another example of something that may benefit from being created programatically\n\n\n## 5.2 Code generation using spreadsheets\n\nSpreadsheets allow a mix of pattern (using formula) and exceptions (overriding formula for a particular row). This allows you to \"eye ball\" your shell commands.\n\nFor example. each row is a command invocation. Columns build up command's invocation, including formulae. Then use concatenate function to join text from other columns. And copy and paste the rows into your shell\n\nThis is useful for idempotent commands. i.e., change happens once. As nothing bad will happen if a command is run twice\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/12-binary-search-tree-operations":{"title":"12-binary-search-tree-operations","content":"\nRecall [binary-search-tree](notes/binary-search-tree.md)\n\n[binary search tree operations](notes/bst-operations.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/12-design-heuristics-3":{"title":"12-design-heuristics-3","content":"\n- [Consistency And Standards](notes/consistency-and-standards.md)\n- [Error Prevention](notes/error-prevention.md)\n- [Recognition Over Recall](notes/recognition-over-recall.md)\n- [flexibility-and-efficiency](notes/flexibility-and-efficiency.md)\n- [Aesthetic and Minimalist Design](notes/aesthetic-and-minimalist-design.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/12-modelling-behaviour":{"title":"12-modelling-behaviour","content":"[slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2892846-dt-content-rid-18407618_1/courses/INFO201_S1DNIE_2022/2022/lectures/lecture_12_slides.pdf)\n\n[modelling-behaviour](notes/modelling-behaviour.md)\n\n- method signatures\n- inheritance of behaviour\n- lower level sequencing and flow of control\n- compartmentalisation into \"subsystems\"\n\n1. Compare and contrast the two typical approaches to inheriting behaviour in OO systems. \n2. What does it mean to “program to an interface�? and why is this important?\n3. Compare and contrast “rich�? versus “anaemic�? domain models with regards to behaviour.\n4. Give an example of a “processor�? in the context of OO system design and explain why these are useful.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Garbage Notes\n# 1 Example of Linked UML (not realistic)\n\n![](https://i.imgur.com/SAp9l60.png)\n\n![200](https://i.imgur.com/sDLFeRe.png) ![150](https://i.imgur.com/JXSxAKy.png) ![200](https://i.imgur.com/RhQZdep.png)\n\n# 2 Inheritance\n\n## 2.1 Inheriting behaviour via specialisation\n\ne.g., \n\n- subclass of item\n\t- inherit all public members of Item\n\t- can replace or customeise any intherited method\n\t- can add their own specialised methods (including constructors)\n\t- can’t concurrently be subclasses of anything else (single inheritance)\n- Things that know how to use Item will also accept Book or Disc.\n\n![](https://i.imgur.com/Nul5ECp.png)\n\n\n### 2.1.1 Specialisation in Java\n\n![300](https://i.imgur.com/D7nZ2ON.png)\n\n\n## 2.2 Inheriting behaviour via implenting an interface\n\n![](https://i.imgur.com/tZX8uQT.png)\n\n- Search specifies a set of common behaviour.\n\t- public methods and constant fields only (no variable fields)\n\t- effectively an “inheritable�? public API (no implementation) ⇒ Catalogue must implement all Search methods\n\t- independent of inheritance via specialisation\n\t- a class can implement multiple interfaces\n- Things that know how to use Search will also accept Catalogue.\n\n### 2.2.1 Interface in java\n\n![](https://i.imgur.com/2cXr5CM.png)\n\n- Examples of built-in Java interfaces: (also see INFO 202) \n- Collection: collections of objects (lists, sets, maps, …) \n- Iterable: collections that can be iterated over \n- Comparable: objects that have a concept of ordering\n\n## 2.3 Public API vs private implementation\n\n- The public API defines what a class can do \n\t- e.g., read and write data, manage a list of items \n\t- effectively a “promise�? or “contract�? to other classes that use it \n\t- should be as stable as possible \n\n- The private implementation defines how a class behaves \n\t- e.g., data stored in memory vs. CSV files vs. SQL DBMS vs. …, unsorted lists vs. sorted vs. unique vs. … \n\t- can change to improve speed, reduce memory, redesign architecture, take advantage of new language features, …\n\t- shouldn’t be exposed to other classes\n\n## 2.4 Why public and private are decoupled\n\n- More stable public API: \n\t- doesn’t expose internal implementation details \n\t- can change internals without breaking promised behaviour\n\n- More flexible public API: \n\t- less coding required to switch implementations \n\t- can easily switch internal implementations on the fly (e.g., print receipt vs. save as PDF vs. send as email) \n- Programming to an interface (i.e., public API): \n\t- encapsulate public API into a class or (Java) interface \n\t- subclass or implement this to create specific implementations \n\t- use the top-level class or interface everywhere you would otherwise use the specialised implementations\n\n## 2.5 Java collection interface example\n\n- A collection is a container for groups of objects: \n\t- e.g., lists, sets, stacks, trees, … \n\t- common behaviour (public API): add, remove, count items, … \n\t- specialised behaviour (private implementation): indexing, uniqueness, sorting, … \n- Java’s Collection interface defines common behaviour: \n\t- add() or remove() items \n\t- get size() of collection \n\t- … \n- All Java collection types implement Collection. \n\nAnything coded to work with Collection will accept *any* Java collection type. (e.g., ArrayList, HashSet, TreeMap, …)\n\n### 2.5.1 Bad example\n\n![](https://i.imgur.com/89PjFdT.png)\n\n- Internal details (ArrayList) are exposed in public API. \n- What if requirements change so that each product can appear only once? (requires HashSet) \n- Could change all ArrayList to HashSet, but: \n\t- need to update everywhere getAllProducts() and getProductsByName() are called! (⇒ massive breakage potential) \n\t- what if requirements change again\n\n### 2.5.2 Good Example\n\n![](https://i.imgur.com/j33SjYm.png)\n\n\n- Public API specifies Collection. (general) \n- Private implementation uses ArrayList. (specific) \n- Everything outside Inventory sees only Collection. (internal details not exposed)\n- Can switch to HashSet, TreeSet, … without breaking anything.\n\n# 3 Behaviour in Domain models\n\n## 3.1 Rich domain models\n\n- True OO involves sending objects “native instructions�? beyond basic getter/setter methods: \n\t- e.g., they can save, display, update, validate, etc., themselves \n\t- often requires communicating with other objects \n- Advantages: \n\t- better encapsulation ⇒ more scope for reuse \n\t- methods are highly cohesive (focused) \n\t- natural fit with programming to an interface \n- Disadvantages: \n\t- many “chicken and egg�? situations ⇒ harder to use \n\t- bordering on taking things too far (too much abstraction) \n\t- well beyond comfort zone of many developers (“exotic�?)\n\n### 3.1.1 Rich domain example: Library system\n\n![](https://i.imgur.com/TCNp6vY.png)\n\n\n## 3.2 Contrast with anaemic domain models\n\n- Objects have relatively little “native�? behaviour: (if any) \n\t- mostly just state \n\t- don’t inherit from anything else (class or interface) \n\t- getters/setters don’t really encapsulate much \n\t- methods manipulate only internal state (no external communication) \n\t- generally referred to as JavaBeans in Java (also POJO) \n- Require a lot of “plumbing�? code to shift data into and out of objects so we can do something useful with it. \n- De facto standard for most programmers/systems\n\n![](https://i.imgur.com/snGpG4m.png)\n\n\n## 3.3 Reducing the plumbing in anaemic models \n\n- Frequently need to move data between domain objects and other (sub)systems, e.g.: \n\t- GUI components (see INFO 202) \n\t- data stores (also see Lecture 17) \n\t- barcode management subsystem \n\t- shipping (sub)system \n\t- inventory (sub)system \n\t- … \n- “Processor objects�? can encapsulate these interactions: \n\t- effectively “(sub)system APIs�? that group related behaviour \n\t- either classes or (Java) interfaces, as appropriate \n\t- methods take relevant domain objects as arguments \n- Third-party frameworks can reduce the amount of code you need to write even further. (see INFO 202)\n\n![](https://i.imgur.com/EoX8sTA.png)\n\n# 4 Lecture summary \n\n- There are a variety of behavioural diagrams in UML. \n- Behaviour can be inherited directly via specialisation, or indirectly by implementing an interface. \n- interfaces decouple public API from private implementation \n- programming to an interface \n- Domain models can be “rich�? or “anaemic�?. \n- anaemic more common \n- use “processors�? to encapsulate “plumbing�? code\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/13-UML-sequence-diagrams":{"title":"13-UML-sequence-diagrams","content":"\n[sequence-diagrams](notes/sequence-diagrams.md)\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/13-bst-traversals-and-balance":{"title":"13-bst-traversals-and-balance","content":"\n[tree-traversal](notes/tree-traversal.md)\n[balancing-binary-search-trees](notes/balancing-binary-search-trees.md)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/13-code-librarires":{"title":"13-code-librarires","content":"\n[software library](notes/libraries.md)\n\n- Explain what a software library is \n- Describe reasons for/against using libraries \n- Understand transitive dependencies in libraries \n- Appreciate your obligations from using libraries \n- Outline considerations when writing libraries \n- Highlight features of the Java standard libraries","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/13-design-heuristics-4":{"title":"13-design-heuristics-4","content":"[aesthetic-and-minimalist-design](notes/aesthetic-and-minimalist-design.md)\n[help-and-documentation](notes/help-and-documentation.md)\n[recognise-and-recover-from-errors](notes/recognise-and-recover-from-errors.md)\n[anti-design-heristics](notes/anti-design-heristics.md)\n[dark-patterns](notes/dark-patterns.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/14-apis":{"title":"14-apis","content":"\n- purpose of apis\n- apis vs code libraries\n- why web technologies assist API development\n- REST\n- apis in cloud mircoservices\n- building APIs\n- maintenance of APIs\n\n[application-programming-interface](notes/application-programming-interface.md)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/14-balancing-bsts":{"title":"14-balancing-bsts","content":"\n[balancing-binary-search-trees](notes/balancing-binary-search-trees.md)\n\n- [avl-tree](notes/avl-tree.md) \n- [red-black-tree](notes/red-black-tree.md)\n- [treap](notes/treap.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/14-direct-manipulation-and-mental-models":{"title":"14-direct-manipulation-and-mental-models","content":"\n\nCommand line vs UI\n[table](https://i.imgur.com/DW8jnGz.png)\n\n# Object action models\n\nobject action model: user selects an object then selects the action to perform on the objct\n\naction object model: user first selects an action to be perdormed and then selects the objects on which this action will be performed\n\nobject action model maps to real life environment\n\nthe designer needs to create mapping from the real world unicers ofb objects and intentios to the intrefac world universe of metaphors and plans\n\n# fitts law\ntime to point to something depends on its size and distance:\n$$\nMT = C1 + C2\\ log_2(2A/W)\n$$ \n\nwhere C1 and C2 are contstants that depend on the device. A is the distance that users have to move and W is the target size.\n\n- buttons and othe controls should be of reasonable size\n\t- things done more often should a assigned a larger button\n\t- or closer to the average position of the users cursor\n- edges and coreners are easier to reach as the pointer is \"caught\" (infinite width)\n- popup menus can usually be open faster than pull-down menus, since the user avoids movement\n- pie menu items are typically selected faster and have a lower error rate than linear meny items as they scale with distance\n\n\n# Combining inputs\noften multiple ways of doing one thing\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/15-containers":{"title":"15-containers","content":"\n[containers](notes/containers.md)\n\n* Describe what software containers are \n\t* basically lightweight virtual machines\n- Explain why containers are useful \n\t- Encapsulate a computing environment\n- Outline the role of container registries \n\t- Store and share *images*\n\t- E.g., dockerHub\n- Contrast different ways to interact with containers \n\t- Files: e.g., CI/CD SSG's\n\t- Network: \n- Understand security risks inherent in container use\n\t- \n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/15-dynamic-programming":{"title":"17-dynamic-programming","content":"\n\n\n![dynamic-programming](notes/dynamic-programming.md)\n\n![memoization](notes/memoization.md)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/15-from-models-to-code-and-back":{"title":"15-from-models-to-code-and-back","content":"\n- [UML to Java Foward Engineering](notes/uml-java-forward-engineering.md)\n- [round-trip-engineering](notes/round-trip-engineering.md)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/15-mental-models-representation-matters-distributing-cognition":{"title":"15-mental-models-representation-matters-distributing-cognition","content":"\ndoors are simple. But they are still done wrong very often. Incorrect labelling can give the user a wrong mental model - widening the \"gulf of execution\". Signifiers like handles, can create a certain mental model making you pull it. These are easier to process than labels like push and pull. Our brains are lazy, we will choose the easiest option. \n\nDoor is very simple compared to computer interface. Yet they are still done wrong. \n\n\"A conceptial model mismatch (use has the wrong mental model)\"\n\"Increases the Gulf of Execution (suporting the right model narrows it)\"\n\n![500](https://i.imgur.com/dv6LH0O.png#invert)\n\n# Mental Models\n[mental-models](notes/mental-models.md)\n\n# Representation Matters and Distributing cognition\n\n[representation-and-distributing-cognition](notes/representation-and-distributing-cognition.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/16-c201-archive":{"title":"16-c201-archive","content":"\n## In a perfect world\n- keys from a class k, valuyes from a class v\n- there are only 4000 possible keys\n- each key, k, has a unique four digit identifier than we can obtain in constant time as `k.id();`\n\n```java\nV[] map = new V[10000];\n\npublic V put(K key, V value){\n\tV old = map[k.id()];\n\tmap[k.id()] = value;\n\treturn old; //to match java map interface\n}\n\npublic V get(K key){\n\treturn map[k.id()];\n}\n\npublic V remove(K key){\n\tV old = map[k.id()];\n\tmap[k.id()] = null;\n\treturn old;\n}\n```\n\nworks but:\n- we need to allocate 10000 spaces of storage\n- require `k.id();` in  constant time\n- cannot store null values (key not present vs key is mapped to null) (we will need more storage)\n\nso:\n- we should only require storage for what we need, not for all possible keys\n- need to use `Array` for constant time add, remove, get. (we may need to resize the array sometimes)\n\n## Considering space \n```java\nV[] map = new V[53];\n\npublic V put(K key, V value){\n\tV old = map[k.id() % v.length];\n\tmap[k.id() % v.length] = value;\n\treturn old; //to match java map interface\n}\n\npublic V get(K key){\n\treturn map[k.id() % v.length];\n}\n\npublic V remove(K key){\n\tV old = map[k.id() % v.length];\n\tmap[k.id() % v.length] = null;\n\treturn old;\n}\n\n```\n\nProblem:\n- some keys can be duplicated\n\n## Solving k.id()\n- solution is to make one up.\n- since collisions are inevitable, uniqueness is not required\n-  made up ID called a `hash code`\n- a *hash function* take objects from a class as input and produces a value from a fixed finite set of values (in Java, an `int`)\n- properites it should have\n\t- should be fast to compute $O(1)$\n\t- shoud be uniform (even when we take modulo)\n\nThis sounds hard, but for commonly used classes (e.g., strings) there are already good has functions. Good enough is usually good enough. IDE can usually suggest something that is good enough. A hashcode function will usually come with an equals function to distinguish between collions and actual equal values\n\n\n## Collisions: Chaining/open addressing\n- array elements are called buckets\n- each bucket is a *list* of key-value pairs\n- when a mapping is added, \n\t- if empty add it (creating a new list if required)\n\t- otherwise check to see if there is a collision or an actual equality with each item of the list\n\t\t- If there is an equality -\u003e change its value\n\t\t- otherwise just add it to the list\n- get and removing are handled similarly\n\nwe need to keep the load factor (how full the map is) small so that the chains dont't get to long \n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/16-compilers":{"title":"16-compilers","content":"\n- describe what it is and what is does\n- compilers vs interpreters\n- compile stages\n- why java is atypical of compiled languages\n- compiler front vs back end\n- why producing precise compiler errors is hard\n\n\n- [compiler](notes/compiler.md)\n- [interpreter](notes/interpreter.md)\n\n# What is a compiler?\nA [compiler](notes/compiler.md) is used to build stored programs. Things that are stored on the disk that  you can run. They use source code in a **high level** language, and output machine code in a binary file which is then linked with a [linker](notes/linker.md). This file can be loaded and run by hardware. Example langauges include C, C++, Java (sorf of)\n\nAn [interpreter](notes/interpreter.md) is more of an interactive tool. The interpreter program (e.g., python) runs of the CPU and execute your program. Interpreted laguages include (python, ruby, shell, R, js, PHP).\n\nUsually compiled program are smaller and run faster, but interpreted languages are more convienient\n\nThe line between compiled and interpreted is becoming less clear with things like the JVM, Scala, and python .pyc files.","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/16-distributing-cognition-and-visual-design-typography":{"title":"16-distributing-cognition-and-visual-design-typography","content":"\n- [representation-and-distributing-cognition](notes/representation-and-distributing-cognition.md)\n- [typography](notes/typography.md)\n- [visual-design](notes/visual-design.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/16-hasing-maps-sets":{"title":"16-hasing-maps-sets","content":"\n[Hash functions](notes/hash-map.md#Hash%20functions)\n[Collisions Chaining open addressing](notes/hash-map.md#Collisions%20Chaining%20open%20addressing)\n[basic implementation](notes/hash-map.md#basic%20implementation)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/16-reverse-engineering":{"title":"16-reverse engineering","content":"\n[uml-java-reverse-engineering](notes/uml-java-reverse-engineering.md)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/17-collision-resolution-probing":{"title":"17-collision-resolution-probing","content":"\n[linear-probing](notes/linear-probing.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/17-data-access":{"title":"17-data-access","content":"\n![revision questions](https://i.imgur.com/mPmQ28v.png)\n\n[data-access](notes/data-access.md)\n- [file-based-storage](notes/file-based-storage.md)\n- [database-based-storage](notes/database-based-storage.md)\n- [data-access-object](notes/data-access-object.md)\n- [java-database-connectibity](notes/java-database-connectibity.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/17-grids-grouping-alignment-reading-and-navigation":{"title":"17-grids-grouping-alignment-reading-and-navigation","content":"\n- [layout](notes/layout.md)\n\t- [closure](notes/law-of-closure.md)\n\t- [grouping](notes/grouping.md)\n\t- [similarity](notes/law-of-similarity.md)\n- [color](notes/color.md)\n- [reading-and-navigating](notes/reading-and-navigating.md)\n\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/17-linkers-and-loaders":{"title":"17-linkers-and-loaders","content":"\n- Appreciate kernel / userspace distinction \n- Sketch what OS loaders need to achieve \n- Contrast running Java versus C code \n- Outline abstractions that hide OS from developers \n- Describe what linkers achieve \n- Contrast static and dynamic linking of libraries\n\n- [operating-system](notes/operating-system.md)\n- [loader](notes/loader.md)\n- [linker](notes/linker.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/18-advanced-sql-1":{"title":"18-advanced-SQL","content":"![create table 2](https://i.imgur.com/sVoiVud.png)\n![create table 2](https://i.imgur.com/AyzF1kR.png)\n\nvarchar usually bigger than you think\n\n# CRUD\n- insert adds a row ![](https://i.imgur.com/WLF64jn.png)\n- select retrieves rows from the table![](https://i.imgur.com/yHhPL6L.png)\n\t- ouput can be \"saved\" as a view![](https://i.imgur.com/iHtC4Vd.png) ![](https://i.imgur.com/NPqTeA1.png)\n\t- changes to the underlying table also chagnes the view\n- update modifies rows ![](https://i.imgur.com/aw74vlk.png)\n- delete removes rows ![](https://i.imgur.com/DZyorFF.png) ![](https://i.imgur.com/IOKErzP.png)\n\t- test as a select statement first\n\n# SQL DAO programming\nWe want to miniminse load on sql as connecting to database is expensive. \n\nOptimisations:\n- prefer muultiple row operations\n- connection pools (keep connections \"alive\")\n- reuse prepared statements (reduce unnecessary SQL parsing)\n- consider combining queries to reduce round trips\n- batched requests\n\nFollow Optimistic approach\n- assume operatios will succeed (no pre checking)\n- handle errors with exception handling\n- consider using merge if available\n\n## Merge\n![](https://i.imgur.com/UUZWjyM.png) aka replace etc.\n\n- update if they exist other wise insert\n\n## JDBC\nJava framework for interacting with sql databases.\n\nplaform and DBMS independent\n- driver provided by DBMS vendors\n- same Java code will work with any DBMC\n\nkey concepts\n- connections and connection pools\n- sql strings and prepared statements\n- result sets\n- transactions\n- batched requrests\n\n![typical jdbc](https://i.imgur.com/jLGbZWW.png)\n\n\n## JDBI\n- better version of [JDBC](notes/java-database-connectibity.md)\n\t- layered on top of it\n\t- better APIs\n\t- less code\n- simple class \u003c-\u003e table mapping \n- flexible plugin architecture\n\n![typical jdbi (fluent)](https://i.imgur.com/SwmulpV.png)\n![typical jdbi (declarative)](https://i.imgur.com/1uc2t47.png)\n\n\n# Transactions\ninteraction between two entities\n- follow explicit or implied forms\n- usually involves exchange on resources\n- may require several steps\n- often considered a single unit\n\n## In data bases\n- group of db operations is considered a *single logical unit*\n\t- transfer (read and update)\n\t- recieve shipement (update accounts)\n\t- customer sale\n\ntransactions are all or nothing. (commit vs rollback)\n\n## ACID\n- Atomic\n\t- all or nothing \n\t- operations should be related\n- Consistent\n\t- transactions move dbs from one consistent state to another\n\t\t- \"consistent\" ⇒ all integrity rules are satisfied\n\t- db may be inconsistent during a transaction\n\t\t- require defferable constraints\n![atomc and consistent](https://i.imgur.com/tCqEEHy.png)\n- Isolated\n\t- concurrent transactios shouldn't interfere with each other\n\t- ideally behave as if other transactions dont exist\n\t- read committed isolation\n\t\t- uncommited changes are visible to other transactions\n\t- require some form of concrrency mangement (e.g., locking)\n\t- ![improper isolation](https://i.imgur.com/IrZZDlW.png)\n- Durability\n\t- once a transaction is commited it is permanent\n\t- uncommited transaction dont survive crashes\n\t- auto rollback of uncommitted transaction\n\n## commit and rollback\n- changes are made to \"live\" data\n- commit makes database changes permanent\n- rollback removes all changes since that transaction start\n\n## Transaction in Java\ndefault to auto commit.\n- each statement is a separate transaction\n- if transaction has multiple statements\n\t- disable auto commit\n\t- you must manage commit and rollback yourself\n\n![JDBC explicit transactions](https://i.imgur.com/FJaINwD.png)\n![JDBI explcit transaction (fluent)](https://i.imgur.com/KvtfZC0.png)\n![JDBI explcit transaction (declarative)](https://i.imgur.com/BzGRpV4.png)\n\n# Select\n- select \u003c- wahat\n- from \u003c- from where\n- where \u003c- filter\n- group \u003c- aggregation\n- order \u003c- order\n\ndistinct removes duplicate rows\n\n![distinct](https://i.imgur.com/RiOHBkM.png)\n\n![select](https://i.imgur.com/DWFUQYN.png)\n\n![from](https://i.imgur.com/it107cD.png)\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/18-build-tools":{"title":"18-build-tools","content":"\n- understnad the purpose of build tools\n\t- automate the construction of software\n- sketch how make's rules (re)build software\n\t- has a set of taget and a set of sources\n\t- checks whether targets are older than sources\n\t- a MakeFile contains a list of commands that build the tager from the source\n\t- builds in the correct order (*topologically*) e.g., will run compiler before linker\n- explain why ant better suits java projects\n\t- written to handle build tasks \n\t- better at scanning sub dirs\n\t- call javac on many files at once, instead of one at a time\n- sketch how maven seeks to improve on ant\n\t- adds color\n\t- add more conventions\n\t\t- e.g., file structure\n- appreciated that there are many build tools\n\t- rake - ruby's version of Make\n- SCons - builds database about build state\n- CMake - cross platorm building; uses existing tools/IDEs\n- SBT scala\n- languge built in tools\n\t- go - Go build\n\t- rust - Cargo\n\n[build-tools](notes/build-tools.md)\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/18-ethics-in-hci":{"title":"18-ethics-in-hci","content":"\n[hci-ethics](notes/hci-ethics.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/18-hash-examples":{"title":"18-hash-examples","content":"\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/19-advanced-sql-2":{"title":"19-advanced-sql-2","content":"\n\n# CASE\n![case example](https://i.imgur.com/H0VjLAK.png)\n\nbasically a switch statement\n\n- derived valye where calcyulation isnt simple\n- standardising values e.g., booleans: t/f, y/n, 0/1\n- flipping between row and col orientation (*privoting*)\n\t- all students vs all on one students papers\n\n# Set operators\nrelations are sets of tuples ⇒ we can use set operators\n\ncombine rows of two table vertically\n\nsource table must be compativble\n- same set of columns\n- same data types\n- = same heading\n\nget new table with same headings as inputs\n\nidentical rows deleted\n\n![set example 1](https://i.imgur.com/omk0DYv.png)\n\nunion: all rows\n- ![union](https://i.imgur.com/GfrjCLI.png)\n- ![union result](https://i.imgur.com/OPsaTuu.png)\n\nintersect: rows that appear in both\n- ![intersect](https://i.imgur.com/yKp8x6q.png)\n- ![intersect results](https://i.imgur.com/VsrACMF.png)\n\ndifference (except, minus): rows in top that arent in bottom\n- ![diff](https://i.imgur.com/LEpaeeT.png)\n- ![diff results](https://i.imgur.com/0I6BqOn.png)\n\n# Aggregation and grouping\n![recall](https://i.imgur.com/AyBCAN3.png)\n\n ## group by\n![](https://i.imgur.com/LxxyZaf.png)\n- groups rows that have equal values across all the columns in \\\u003ccolumn-list\u003e\n- always used with aggregate function(s) in select clause\n- one row in the result for each differect combined value of the grouped columns\n\n![group example](https://i.imgur.com/ZYgqzlD.png)\n\n- all non computed columns in select clause must normally appear in group y, and vice versa\n\n### restricting by groups (having)\n![](https://i.imgur.com/ylqvkU5.png)\n\n- similiar to where, restricts output of group by\n- cant include aggregate functions (where can't);\n\n## Analytic functions (FYI)\n![](https://i.imgur.com/L59hwEa.png)\n\n- enchancement of aggregation\n- aggregate without reshaping the ouput\n- many more functions avaiable\n- sliding windows supported\n- dont use when simple group by is sufficient\n\n# Select\n![slide](https://i.imgur.com/4rsQ1B9.png)\n\n- select\n- from\n- where\n- group  by\n- having\n- order by\n\norder of evaluation\n- from\n- where\n- group by\n- having\n- select\n- order by\n\n# Joins\n![recall](https://i.imgur.com/khcpBa0.png)\n![recall join syntax](https://i.imgur.com/hQHotL3.png)\n\ninner join : matching rows only\n\nouter join: may include non-matching rows from the left table, right table, or both tables\n\nalso, cross, and semi join\n\n## Cross join product\n![cross join](https://i.imgur.com/CxGUhpu.png)\n![cross join result](https://i.imgur.com/O3FxL5o.png)\n\nevery possible combination of rows from two tables\n\nuses:\n- cards\n\t- suits table\n\t- ranks table\n\t- deck = suits cross join ranks\n-  timetable\n\t- days table\n\t- timeslots table\n\t- timetable = days cross join timeslots\n\n## Semi join\noutput only trows from one table that match rows from the other\n\n![semijoin](https://i.imgur.com/bW4uVPQ.png)\n![semijoin results](https://i.imgur.com/ts5hEf9.png)\n\ninverse is antijoin: ouput only rows from one table that dont match rows from the other\n\n# Subqueries\na select expression embedded inside another\n- inselect clause to compute value using data from other tables\n- in from: inline view\n- in where clause with in, all, some , exists\n\n- can refer to data from \"outer\" expression (correlated subquery)\n- tricky to write, so be careful. maybe stepwise\n- can rewrite joins as subqueries, but not vice versa\n\nprefer joins to subqueries\n\n## how to develop\n- identify components opf multi part query\n- implement and test the components as separeate select statements\n- combine into one query, nesting one within the other.\n\n![subquery part 1](https://i.imgur.com/yhOriER.png)\n![subquery part 2](https://i.imgur.com/APZGzz5.png)\n\n# Inline views\na named subqueriy embedded in the from clause is effectively a temporary view\n\nvisible within thescope of current select expression only\n\n![inline view](https://i.imgur.com/s3G8L7X.png)\n\n## saving sub queries (WITH)\n- sometimes need to re-use same or very similar subquery severl times in the same query\n- with saves named subqueries for later re-use (in the same query)\n- visible iwthin scope of entire select statement\n\n![with](https://i.imgur.com/uQ5bn3B.png)\n\n# Scope  in select\n- row variable only exist inside the select expression that defines them\n- a select expression can only directly refer to items declared in:\n\t- its own select and from clause\n\t- select and from clauses of any elclosing expressions\n\t- any preceedin with expression\n- particularly important for correlated subqueries\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/19-graphs":{"title":"19-graphs","content":"\n[graphs](notes/graphs.md)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/19-security":{"title":"19-security","content":"\n- why cybersecurity is a growing concern\n\t- more software ∴ more dependecies ∴ more complex ∴ more \"surface area\" of risk of vulnerability\n- sketch confidentiality, integrity, and avalability security\n\t- confidentiality - protecting data from being stolen\n\t- integrity - attacks on data with the aim to decieve users\n\t- avalability - e.g., DDoS\n- appreciate that dependencies cause security risks\n\t- vulnerabilities in dependencies extend to your code\n- explain risks from non-validation of user input\n\t- \n- outline how injection attack works\n\t- malicious input to manupulate underlying database\n\n[security](notes/security.md)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/20-data-integrity":{"title":"20-data-integrity","content":"\n![review questions](https://i.imgur.com/P812tlT.png)\n\n# Data Integrity\n\nGIGO\n\n![recall integrity](https://i.imgur.com/KlL4bjE.png)\n\nTypes of error\n- ennecessary duplication of data\n- missing information (expecially nulls)\n- referential integrity problems: broken links,  \"orhpan\" records (foreign keys)\n- data entry errors: typos/keying errors, value in wrong field\n- invalid/nonsensical data, e.g., nefative salary\n- going against business rules/policy law\n\n## Validation\nchecking that entered values are plausible.\n- values must make sens, be valid\n- simple checks to block obvisously bogus data\n\nautomated by constraints within the data base\n\nvalid ≠ correct\n\n## Verification\nChecking that correct value was entered e.g.,\n- double check input\n- independent double entry\n- independent triple entry (or more) for critical checks\n\nmanual process invvolving human input and judgement\n\nvalid + verified ≠ correct.\n- malicious vandalism\n- human psychology rtends to promote dertain kinds of error\n- misread handwritten notes\n- incorrect for fake information provided\n\n![validation and verification examples](https://i.imgur.com/I3EPWZO.png)\n![student id check digit](https://i.imgur.com/JlQMPYZ.png)\n\n## Integrity constraints\nmachine readable conditions (true/false)\n\nchecked when data is changed\n- in oracle all existing data must conform\n- in SQL erver, you havel to explicity tell it to check existing data\n\nideally these are in the daabase. but some this is not possibe and must be implemented in code.\n\n### Defining constraints\ncol-level constraints\n- specified in line in col defs\n- can only refer to that column\n\ntable level constraints\n- are specified out of line alongside other columns\n- can refer to  any col inthe table\n\nconstrainst should be named\n\n### Primary and foreign key constraints\n![example](https://i.imgur.com/xh5jdPV.png)\n\nprimary keys are not null and are unique\n\nsome DBMSs support on delete and on update actios on foreign keys when a parent row is deleted or updated\n- cascade: \"child\" rows inherit the same operation as \"parent\" row\n- set null: \"child\" FK is set to null (if permitted)\n- set default: \"\"\n\n### Unique values (other than primary keys)\n![](https://i.imgur.com/QcoDPPq.png)\n\n## Check constrainsts\n![](https://i.imgur.com/hBq0Rnp.png)\n\nfor chcking if within list. use a lookup table\n![](https://i.imgur.com/kHMqxM6.png)\n\n# Automation\n## Sequences\ngenerate integer values\n\n![sequence](https://i.imgur.com/oE9BGkt.png)\n![sequences auto vs custome](https://i.imgur.com/msmxsgu.png)\n![java accesing the sequence](https://i.imgur.com/psDNCrN.png)\n![java accesing the sequence (fluent)](https://i.imgur.com/nbfAzca.png)\n\n![caution](https://i.imgur.com/l4fiErh.png)\n\n## Triggers\nspecific operation on table trigger other operations\n\nnormally written in a \"proper\" language e.g.,\n- Oracle: PL/SQL, Java\n- H2: java\n- SQL server: transact-SQL\n- PostgreSQL: most languages, e.g., python, ruby, perl, r, bash, java, php etc\n\nused when:\n- as a last resort\n- computed columns\n- setting status values in reponse to updates\n- maintaining refernetial integrity\n- rewriting application input\n- integrity constraints that involve multiple tables\n- row based security policies\n- domain specific auditing (beyond standard logging features)\n- performing actions outside the DBMS\n\nspecifications\n- timing: before, after, instead of\n- type of operation: insert update delete\n- column affected (update only, optional)\n- table affected\n- other conditions (optional)\n\ntriggered operation\n- what to do\n- trigger will activate only once unless you tell to to execute once for each row affectted by the activation conditions\n\n![H2 trigger](https://i.imgur.com/e4tqfH9.png)\n![H2 trigger action](https://i.imgur.com/eSr8Lc4.png)\n\n## Stored procedure\nprogramming code stored within the database\n\nwhy?:\n- reduce or eliminate application/database round trips\n- offload database-oriented processing to the DBMS\n- encapsulate database code in the database for re use (DRY)\n- encapsulate query details\n\ntriggers often a special case\nh2 lets you create aliases to java functions, but these aren't stored in the database\n\n![h2 function alias](https://i.imgur.com/TjUhVAO.png)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/20-graphs-2":{"title":"20-graphs-2","content":"\nGraph drawing is its own problem.\n\nOne easy way is to draw the vertices is clockwise order and draw edges between them\n\n[traversal examples](https://echo360.net.au/lesson/86c6c819-3257-424e-b8e6-d17f4e1e9170/classroom#sortDirection=desc)\n\n# recurisve depth first traversal\nsame but.. delay the pop of an item from the stack until all its neighbours have been processed, and we only push those one at a time.\n\n![code](https://i.imgur.com/kWm9REo.png)\n\n## topological sorting\nIn a *directed* graph we have edges from v to w which do not necessarily imply an edge from w to v.\n\nthen is a neighbor of v but not (necessarily) vice versa. \n\nsuppose edges indicate some dependency\n\nwe want an order of vertices that finishes with v but never containes any vertex unless all the things that depend on it occur earlier\n\nthis is a (reverse) *topological* sort\n\nfor this to work the graph must be *acyclic*. i.e., we cannot have a depends on v which depends on w which depends on a\n\nit that condition is met a recursive depth first traversal can be used.3\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/20-software-licensing":{"title":"20-software-licensing","content":"\n[pdf](https://cosc202.cspages.otago.ac.nz/lectures/L20-software-licensing.pdf)\n\nwhat does it mean for people to use your software. What responsitilities do you have\n\n- Understand the default protection of code \n\t- authors copyright\n- Contrast ‘libre’ free and ‘gratis’ free \n\t- libre: free as in freedom\n\t- gratis: free as in no cost\n- Define what makes open source software \n\t- floss - free libre open source software\n- Contrast copyleft and more permissive licences \n\t- copyleft  \"viral licensing\"\n\t\t- usage of copyleft software required your software be copyleft also\n\t\t- derivative must \"copy\" the same license\n\t- others e.g., creative commons\n\t\t- allow a selection of *facets* [Creative commons](notes/software-licensing.md#Creative%20commons)\n- Appreciate that code can be multi-licensed \n\t- e.g., floss for non-commercial use but commercially licenced otherwise\n- Understand how to apply a license to code \n\t- project should include complete license text: LICENSE file in top-level of project directory\n\t- also good idea to add to each file\n- Appreciate licenses can be mutually incompatible\n\t- e.g., developing software that combines two FLOSS code bases that have different code licenses.\n\t- could be impossible to satisfy both licenses simultaneously.\n\n[software-licensing](notes/software-licensing.md)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/203-exam-prep":{"title":"203-exam-prep","content":"\nexample questions\n\nhttps://blackboard.otago.ac.nz/bbcswebdav/pid-2827524-dt-content-rid-18670180_1/courses/INFO203_S1DNIE_2022/2022/INFO203_Lecture25.pdf\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/21-software-architecture-and-templates":{"title":"21-software-architecture-and-templates","content":"\n[software-architectures](notes/software-architectures.md)\n\n[system-templates](notes/system-templates.md)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/22-open-source-software":{"title":"22-open-source-software","content":"\n![](https://i.imgur.com/3EQenkP.png)\n\n# Describe Origination\n- how do floss projects get created\n\t- forking an existing open source project\n\t\t- mangement of existig project \"run out of steam\"\n\t\t- users decide to take development of themselves\n\t- some decides to apply an open source licence\n\t\t- e.g., individual or member of team with appropriate responsibility\n- Motivation for release as floss\n\t- giving back to community\n\t- seeking addition team members, code or otherwise\n\t- grow ecosystem around the software system \n\t\t- essentially a form of publicity\n\n# Detail Roles\n- Team shape\n\t- depends of specifics and scale of project\n\t- small projects often driven by an individual\n\t- a few developers collaborate closely - often code founders\n\t- large potentially open team combine contributions\n- different jobs and skill sets beyond coding\n\t- documentation - creating and updating\n\t- code review - pre-merge and post-merge quality control\n\t- testing - developing tests (or test suites), and reporting back user bugs\n\t- community - keeping team motivated and focused\n\n# Contrast Governance vs management\n- mangement\n\t- day to day decisions\n- governance\n\t- controlling overall roadmap\n\t- setting priorities to reach intended milestones\n\t- often a spectrum between\n\t\t- commercial organisation that retain ownership\n\t\t- open community-led approach\n\t- community-led governance needs agreed stucture\n\t\t- e.g., executive, committees, voting process for key decisions\n\n# Sketch OSS foundations\n# # sharing development and governance\n- required governance processes similar in big projects\n\t- can benefit from manageing multiple projects together\n- e.g. apache software foundation (ASF)\n\t- american non-profit\n\t- manages more than 350 projects\n\t- can share governance, management, and commounity\n\t\t- conferences (apacheCon) bringing community together\n- many others e.g., free software foundation (GNU)\n\n## Incubation into open source foundations\n- foundations reputation: projects must he high quality\n\t- but also want to be boradly accepting\n- ASF has Apache incubator\n\t- new projects gain inital ASF linkage\n\t- see if projects demonstrate continued development activity\n\t- see if projects are popular iwth end users\n- Large organisations can donate code to incubator\n\t- need to be sure that code can be maintained\n\t- e.g., google wave \n\n# Understand sustainability challenges\n- need mechanisms to keep project resouced\n\t- e.g., financial support for key developers\n- sustainability - software is seldom \"finished\"\n\t- new features require development\n\t- bugs need fiing, but hobbyists don't give 24/7 service\n\t- older code within project may need maintenance\n- Development path can become contentious\n\t- e.g., too slow, or percieved to be in wrong direction\n\t\t- ...which can lead to project forks and split community\n\n## Examples\n- PEP python enchancement proposal\n\t- usually focis on language feature additions or changes\n\t- but sometimes relate to the governance of Python\n\t- PEP approval process involves input from:\n\t\t- python community\n\t\t- python steering council\n\t- Guido van rossum was 'benevolent dictator for life'\n\t\t- st ood d\n- JCP java community process\n\t- open collaboration to ratify java standards\n\t- ![](https://i.imgur.com/ls7GAck.png)\n\t- JSRs java specification request\n\t- ","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/22-performance-and-security":{"title":"22-performance-and-security","content":"\n# Performance requirements\n- e.g., credit card system\n\t- functional reqs\n\t\t- sales authorised only for valid cards\n\t\t- generate monthly statements\n\t\t- performance requirements\n\t\t\t- cards are validated quickly\n\t\t\t- statements are accurate and generated on time\n\t\t- quickly, accurate, and on time need to be operationalised, measured, and tested.\n\nWhy are they important\n- vital quality factor\n- infosystems are wide and varied\n- wide range of performance characteristics\n\nThings to consider\n- can interact and conflict with each other\n\t- accuracy vs speed\n\t- speed vs space\n\t- often a trade-off or compromise\n- selectig best developent techniques for taget system\n\t- algorithms\n\t- data structures\n\t- languages and frameworkds\n\t- constraints of target platform \n\t\t- (devs machines are often more powerful)\n\t\t- minimum requiremnts for system e.g., min specs for windows\n\t- ...\n\n- impact of changing requirements, e.g., adding a new module\n- need to consider (often conflicting) organisational priorities\n- critical to unambiguously document and agree\n\n# Response time\n- what is quick\n- for most people\n\t- \u003c 0.1s: instant\n\t- 0.1s to 1s: noticable\n\t- 1s to 10s: slow\n\t- \u003e 10s: user will probably switch tasks\n- affected by system workload: number of concurrent users, volume of data, etc vs available resources\n- most users really dislike variable response times (unpredicatbility)\n\n\n- example requiremen: \"cards are validated within 2s\"\n\t- this implies 100%\n\t- better: \"95% of cards are validated within 2 s\"\n- other consideration\n\t- what is included in response time?\n\t- what is the measurement period (of the system in general) (often varied workload changes performance)\n\t- what is the acceptable error rate\n\n# Workload\n- system workload is almost never constant\n\t- may may well defined peaks and troughs\n\t- may be unpreditable\n\t- peak vs typical vs minimum\n- differet transaction types\n\t- read vs write transactions\n\t- online vs batch\n\n- define workload requirements around use cases\n- e.g., \" the system must be able to validate 1 million cards per day\"\n\n# Scalability\n- can the system scale to meet changing demand\n- can it scale quickly enough\n- elasticity particularly important to large public-facing systems\n- can be difficult to test \"for real\"\n- example requirement: \"the system must be able to handle up to 2 million cards on a busy day\"\n\n# Platform\n- target for system deployment\n\t- on prem\n\t- cloud\n- do you have a choice\n- will the platform be only just for this system or for other things (multi tenanting)\n- what limits are imposed by the platform\n- does it inlclude external systems or resources\n\n\n# Caching\n- temporarily store frequently used data\n- same concept as [memoization](notes/memoization.md)\n- mainly about improving read performance\n\t- when retrieving data, look in the cache first\n\t- if its there (=hit), done\n\t- if not (or stale) (=miss), read from original source\n\t- can be several orders of magnitude faster\n\t- ideal for small, frequently accessed data\n- cache contents needs to be managed\n\t- e.g., least recently used (LRU) data drop out as cache fills up\n\t- cahced data can become inconsistent with original source\n- can go anywhere\n\t- databse, client, dedicated caching server\n\t- numberourus cahcing tools, e.g., memcache, redis\n\n# Pooling\n- pre allocate a set of shared resources that are kept ready for use (e.g., databse connetions, objects)\n- useful when:\n\t- allocating eacch resources has a significant cost (time space)\n\t- there are frequent requests of short duration\n\t- we need to limit the total number of resources\n- mainly about resource management, so pools ar maintaineed by the resource allocator\n- important to reset resources when returning to the pool.\n\t- e.g., ensure atabase connection has no incomplete statements\n\t- ensures state doesn't leak across different uses of same resource\n\n# System reliability\n- behaviour of system\n- graceful degradation - should behave sensibly under all but the most extreme circumstances\n- should't just crash\n\t- thorough automated testing\n\t- thorough user testing\n- raw errors shouldn't bubble up to the user\n\t- user wont understand -\u003e pointless\n\t- may expose sensitive information (e.g., file system paths)\n\t- particularly relevant for web applications\n\t- handle exceptions accordingly\n- system should handle capacity issues as cleanly as possible\n\t- give relevant feedback to user (not just spinning wheel of death)\n\t- implement load balancing for web applications, expecially if they use a services model\n\t- also pooling, cachig, etc.\n\n\n# Integrity and security considerations\n- consider following security requirements\n\t- only staff with correct authority can alter data\n\t- secure transactions over iternet\n\t- https is better\n\t- validation of data\n\t- secure storage of passowrds\n\t- legilsations complliance\n- needs to be integreated into application and database\n- and considered throughout development\n- least privilege\n\t- a user should only have access to what they absolutely need in order to perform their responsibilities, and no more.\n\n# Integity and securuty controls\n- ensure correct system function by:\n\t- reject invalid data inputs\n\t- preventing unauthorised data inputs and outputs\n\t- protecting data and programs against tampering\n- objectives:\n\t- ensure only appropriate business transactions occur\n\t- ensure transactions are recoreded and processed correctly\n\t- protect and safeguard organisational assets\n\t- protect and safegurad customer data\n\nincreased security -\u003e decreased accessiblility and usability\n\n# integity and securuty mechanisms\n- data integrity\n\t- input field validation\n\t- database constraints\n- data security\n\t- databas access control\n\t- trasaction logging\n\t- redundancy, backup, recovery\n\t- encryption, hashing, digital signatures\n\t- ouput control (exfiltration prevention)\n- system security\n\t- user authentication and authorisation\n\t\t- In authentication process, the identity of users are checked for providing the access to the system. While in authorization process, person’s or user’s authorities are checked for accessing the resources. Authentication is done before the authorization process, whereas authorization process is done after the authentication process.\n\t\t- | Authentication determines whether the person is user or not. | While it determines What permission do user have? |\n\t\t- authentication| Example : Employees in a company are required to authenticate through the network before accessing their company email.\n\t\t- authorization | Example : After an employee successfully authenticates, the system determines what information the employees are allowed to access. |\n\n\t- authentication methods\n\t- security patches and updates\n\t- preventing or mitigating known attack vectors\n\n![](https://i.imgur.com/KzYIz1b.png)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/22-trends-in-hci":{"title":"22-trends-in-hci","content":"\n[slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2827522-dt-content-rid-18612267_1/courses/INFO203_S1DNIE_2022/2022/INFO203_Lecture23.pdf\nhow the the methodology of HCI used.)\n\nTheory vs practice. There is a lot of work being done t improve the methodology\n\n# Bad style - HARKing and the replication crisis\n\n![scienfific process](https://i.imgur.com/m1HDqN3.png)\n\n# Publication bias\n- Computing research validate research claims using statistical significance as the standard of evidence \n- Statistical evidence usually assumes 95% confidence (p \u003c= 0.05)\n- analysis of 362 papers published found that 97% reject the null\n- papers that were incorrecct are not published\n- *Publication bias*: Papers supporting their hypotheses are accepted for publication at a much higher rate than those that do not.\n- HARKing (Hypothesizing After the Results are Known) or known as ‘outcome switching’\n\t- Post-hoc reframing of experimental intentions to present a p-fished outcome as having been predicted from the start.\n- p-hacking: Manipulation of experimental and analysis methods to produce statistically significant results. \n- p-fishing: seeking statistically significant effects beyond the original hypothesis.\n\nA survey of over 2000 psychology researchers, John et al. examined the prevalence of questionable experimental practices (forms of HARKing): \n1. Failing to report all dependent measures, which opens the door for selective reporting of favourable findings – 63.4%; \n2. Deciding to collect additional data after checking if the effects were significant – 55.9%; \n3. Failing to report all of the study’s conditions – 27.7%; \n4. Stopping data collection early once the significant effect is found – 15.6%; \n5. Rounding off a p value (e.g., reporting p = .05 when the actual value is p = .054) – 22.0%; \n6. Selectively reporting studies that worked – 45.8%; \n7. Excluding data after looking at the impact of doing so – 38.2%; \n8. Reporting an unexpected finding as having been predicted – 27.0%; \n9. Reporting a lack of effect of demographic variables (e.g., gender) without checking – 3.0%;\n10. Falsifying data – 0.6%\n\n![](https://i.imgur.com/gro2KnF.png)\n\nFile drawer effect: Null findings tend to be unpublished and therefore hidden from the scientific community.\n\n## Solutions\n\nPreregistration: Registries in which researchers preregister their intentions, hypotheses, and methods (including sample sizes and precise plans for the data analyses) for upcoming experiments\n\nPreregistered Reports: Papers (Reports) are submitted for review prior to conducting the experiment. Registered reports include the study motivation, related work, hypotheses, and detailed method; everything that might be expected in a traditional paper except for the results and their interpretation.\n\n• Redefine or abdandon statistical significance. • Create data repositories and support replication\n\n# Trends\n## Wearable sensing and actuation\n![springlets paper](https://i.imgur.com/QQMmEAk.png)\n\n![springlets prototypes](https://i.imgur.com/zbRefG0.png)\n![more prototypes](https://i.imgur.com/dVmrJf9.png)\n\napplications\n- vr haptics\n- on the skin directions\n- notifications\n- more\n\n![evaluation](https://i.imgur.com/4edmUVX.png)\n\n## electodermis\n![electro dermis paper](https://i.imgur.com/9MMLpOG.png)\nfocused more on the manufacturing of the stickers\n\n## earput\n[earput paper](https://i.imgur.com/ZqfaHUt.png)\n![earput evaluaion](https://i.imgur.com/97ZAqGv.png)\n\n## skin track\n![](https://i.imgur.com/LlfFZki.png)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/24-trends-in-hci-2":{"title":"24-trends-in-hci-2","content":"\n\n# Dark patterns\n![dark cookies](https://i.imgur.com/VNpC265.png)\n![cookies dark tricks](https://i.imgur.com/c9cuzVO.png)\n\n# Designing for elderlies\n![wall-sized displays for dementia care](https://i.imgur.com/QHnOJJm.png)\n![dementia care evaluation](https://i.imgur.com/7hcLDmb.png)\n\nthe familiarity of local church in full size was good. \n\n# Digital fabrication\n3d printing, interfaces which allow you to 3d print etc.\n\n##  things\n![lily pad arduino](https://i.imgur.com/IY8sc08.png)\n![fabirc PCBs](https://i.imgur.com/kJ1ONYW.png)\n![iron on embedded UIs](https://i.imgur.com/XjsHnn8.png)\n![interactive design of wood joints](https://i.imgur.com/WoIjHJ3.png)\n![wood joints evaluation](https://i.imgur.com/ZhMz1iB.png)\n![pop-up-print](https://i.imgur.com/EKWT2Q5.png)\n![pop-up evaluation](https://i.imgur.com/PwYWx4c.png)\n\n# Explinable AI HCI for AI, fairness of AI\n![0](https://i.imgur.com/SZyxfay.png)\n![map of AI papers](https://i.imgur.com/QtXnmWM.png)\n![interactive AI design](https://i.imgur.com/YRdtUZQ.png)\n![interactive AI design](https://i.imgur.com/c2qIUoa.png)\n![interative transfer learning](https://i.imgur.com/G6XwmPg.png)\n![interative transfer learning](https://i.imgur.com/tz9wVa7.png)\n\nMost people dont actually understand the AI they create. Finding new ways to create, and understand AI.\n\n# gaze and Eye tracking\n![glasses](https://i.imgur.com/JDTAsSz.png)\n![selection of objects in VR with eye tracking](https://i.imgur.com/x3Pa2Vn.png)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/25-cost-benefit-analysis":{"title":"25-cost-benefit-analysis","content":"\n# justifying a project\n- of difficult to prove justification\n- three criteria\n\t- need\n\t- funds\n\t- strong will\n\n## deciding whether to pursue a project\n- what the project address\n\t- a problem\n\t- opportunity\n\t- directive\n- time frame\n- overall priority\n- what options do you have\n\n## Case study\n![library web system](https://i.imgur.com/KXOOiQ9.png)\n\n## Feasability analysis\n- should we build it (organisational)\n\t- nature and strength of need\n\t- strategic alignment? overall priority?\n\t- stakeholder support? Champion?\n\t- e.g., (otago uni)\n\t\t- document management system - legislated\n\t\t- student management system - mission critical\n\t\t- hard to share multimedia (otago capture) - problem\n\t\t- online teaching - opportunity\n- can we bulid it (techinical)\n\t- complecity (higher complexity -\u003e higher risk)\n\t- familiarity and expertise (low familiarity -\u003e higher risk)\n\t- size (larger -\u003e higher risk)\n\t- compatitibilty (with existing systems; less -\u003e higher risk)\n\t- e.g., IBM police 90's failure\n- will it be worth it (economic)\n\t- costs and benefits\n\t- quantify costs and benefits\n\t- asses economic value\n\t\t- payback period\n\t\t- NPV\n\t\t- ROI\n\t- convers both \"should\" and \"can\" form financial perspective\n\t\t- can we afford it\n\t\t- will it provde financial benefit\n\t\t- are funds available\n- includes considerations of risk and uncertainty\n- may revisit due to uncertainty\n\n# costs and benefits\n## identify\ncosts\n- development\n\t- salaries, pm costs, testing and qual control\n- operational\n\t- maintenance, licensing, servers, training, \n\nbenefits\n- tangible\n\t- reduced customer service costs, more efficiet (saves staff costs), legal compliance\n- intangilble\n\t- security\n\t- market share\n\t- improved perception of company \"cool\", happier staff\n\n## quantify\ndollar values. usually estimates/guesse\n\ne.g.,\n- dev team salaries (assumes accurate estimate of required effort)\n- increased sales (how to predict)\n- improved customer satisfaction: how to assign dollar value\n- smarter student management system with better prerequisite, modelling: how to estimate benefit\n- these are tangible benefits, intangible benefits are harder\n\n## assess economic value\n- payback period - how long until accumulated benefits equal the cost  \n- NPV: sum of costs and benefits , but future years discouted\n\t- ![example](https://i.imgur.com/W6lhzKb.png)\n\t- ![](https://i.imgur.com/rpOBYdc.png)\n- ROI: what is the discounted benefit relative to the costs\n\t- ![](https://i.imgur.com/puvRpYm.png)\n\t- ![](https://i.imgur.com/19rMyQa.png)\n\n## Example: what is better\n- ![](https://i.imgur.com/nxMstV5.png)\n- financial analysis isn't everything\n- possible reasons to ignore a financial analysis\n\t- organisational: ack of institutional will, or not aligned with strategy, or legislated requirement\n\t- technical\n\t- legal risk\n\t- reputational risk\n\n## Comparing methods\n- payback: ignores discounting; gives a *year*\n- NPV considers discounting, give *net benefit* in financial terms, but ignores time and amount invested\n- ROI considers discounting and amount invested, but ignored time period; gives a *percentage*\n- \n\n![summary](https://i.imgur.com/rnBdIfg.png)\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/ALU":{"title":"ALU","content":"\npart of the [CPU](notes/CPU.md)\n\n![](https://i.imgur.com/wLJhTSG.png)\n\n- performs arithmetic\n\t- add, subtract, etc.\n- logical operations\n\t- and, or, shift, etc\n- subunits\n\t- lofical operations\n\t- addition\n\t- multiplication and dividion\n\t- shifting\n\t- comparison\n\t- logical tests (if, \u003e0, \u003c0, =0, \u003c=0, etc)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/ASCII":{"title":"ASCII","content":"\n# ASCII Character Code\n![ascii code](https://i.imgur.com/NbBtm1v.png)\n\n1. The computer uses ch as a integer index into a pre-existing table \n2. the computer screen is made up of a thousand little dots called pixels. theyre in a rectangular grid like a table.a\n\n- [ascii code example](https://i.imgur.com/9uvKRVo.png)\n\n- There are several tables that describe what to draw\n\t- fonts describe how to draw them\n- ASCII (american standard code for information) describes what should be drawn for Roman (english like) alphabets\n- e.g.,\n\t- A 1000001 (65)\n\t- B 1100001 (97)\n\t- 9 0111001 (57)\n- There are only a few letter numbers and punctuation marks. The remaining ASCII code are non-printing and have other meaning (line feed, for feed, tab etcc)\n- ASCII characters are stored using 7-bits\n\t- so there are 128 (2^7) possible characters\n\t- stored as a byte with the 8th bit set to zero\n\t- For sorting purposes characters are compared on their numeric value (called the *collating sequence*)\n\t- 'A' is before 'Z' but 'a' is after 'Z'!","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/COSC-202-Jet-Hughes":{"title":"","content":"# COSC 202 Exam\nJet Hughes 9474308\n\n# 1 Teamwork\na) \n- Quality control/testing\n- Developer\n\nThese roles are complementary because the person in the quality control role, helps the developer to write better code, by identifying bugs and any obscure or unnecessarily complicated or bad code.\n\nb) \n- It can help to reduce errors and produce 'cleaner' code via, e.g., code reviews by peers\n- It can help to speed up development because two people will (usually) be faster than one\n\n\n\u003cdiv style=\"page-break-after: always;\"\u003e\u003c/div\u003e\n\n# 2 Ethics\n\na) One example could be an AI algorithm for a self-driving car. There are multiple ethical issues with this. The main one being the choice of whether to save the driver or the pedestrians in the event of an inevitable accident. Another is whether it is morally right to produce these cars, knowing it is very possible that they could be hacked, and controlled by others.\n\nb) \n1) Confront your manager, and explain to him your feelings, then quit.\n2) Another course of action you could take, which would be unethical, would be to confront him, and ask for a raise with the threat of quitting\n3) Sabotage the project from the inside, so that the product is never released\n4) Consult a lawyer and try to find a problem with the legality of the software\n5) approach an ethics committee and inform them of your situation\n6) arrange a meeting with your manager, and with a third party to discuss the ethics of the project\n\n(META: I don't think this question is specific enough about what the action should accomplish, a person could take any action is this situation, you haven't specified that the action should be ethical.)\n\n5) I could hold my foot and count to three\n\n\n\u003cdiv style=\"page-break-after: always;\"\u003e\u003c/div\u003e\n\n# 3 Testing and Debugging\n\na) If you introduced a bug into your program, the bug is an array index out of bounds error, and the error message shows which method the bug occurred. This debug symbol (the name of the method) is useful because it shows you where the bug is. Debug symbols would also be useful if you were debugging a program by stepping though the program line by line, because they help you to identity and track the values of variables.\nb) \n\n|  Unit tests                                              |  end-to-end tests                            |\n|:---------------------------------------------------------|:---------------------------------------------|\n|  testing only small \"unit\" of the code e.g., one method  |  Test the entire system from \"end\" to \"end\"  |\n|  Very quick to run, and are run frequently               |  Often run less often                        |\n|  Independent so no dependencies                          |  Often interconnected with other systems     |\n|  usually manually tested                                 |  Can be manual or automated                  |\n\n\n\u003cdiv style=\"page-break-after: always;\"\u003e\u003c/div\u003e\n\n# 4 Documentation and source code management\n\na) \n1) Open source contributors - if the project is open source, it is very useful to provide documentation so that it is as easy as possible for other people to understand your code, and thus contribute to it\n2) Users of a public API - the people who want to use the API, need to know about the data they can get, what authentication they need to provide, what parameters they should consider, and many other things. \n\n\n\u003cdiv style=\"page-break-after: always;\"\u003e\u003c/div\u003e\n\n# 5 Continuous integration and automation\n\na) \n1) IDEs - These can be used to greatly speed up development with advanced tools like code completion, and many other things. They are best suited for large projects, with many team members. However, there are also many lightweight IDEs (e.g., VS Code) which are also quite suitable for small projects\n2) shell scripting languages(e.g., PowerShell, bash, fish, etc.) - can be used to automate quick and simple tasks. They are not suited for more complex tasks, as edge cases and quirks become hard to handle and are usually not worth the time. For these tasks, you could use python or some other language.\n\nb)\ni) Unit testing, can be run on a schedule to catch any small bugs that could arise.\nii) A build/release CI job can be run manually, when the software is ready for a release\n\n\n\u003cdiv style=\"page-break-after: always;\"\u003e\u003c/div\u003e\n\n# 6 Libraries and APIs\n\na) Code libraries provide code that can be used within one's own project. APIs differ from libraries because they deal with the interactions between applications at runtime. \n\nb) A RESTful API adheres to the guidelines of Representational state transfer. Some of these best practices include:\n- decoupled\n- stateless\n- uniform interface\n\nc)\ni) Sorting algorithms can be very complicated. It would be far easier and faster to use one that has been thoroughly tested and optimized already.\nii) Often there is no library that perfectly matches your specific needs, and it would be faster, and better to create if yourself. Also, using a library can bloat your program and introduce security vulnerabilities as well as other things\n\n\u003cdiv style=\"page-break-after: always;\"\u003e\u003c/div\u003e\n\n# 7 Security\na) Users will try to input malicious data to your software. For example, an SQL Injection attack. This is when the user inputs data to a form, which tries to change the underlying SQL string, and alter the data in the database, in a malicious way. This can usually be avoided by using SQL prepared statements, or secure database abstraction.\n\nb) more software ∴ more dependencies ∴ more complex ∴ more \"surface area\" of risk of vulnerability. So it is very important to manage which dependencies you have, and monitor their status, so you can quickly resolve any vulnerabilities they might introduce, or remove, them entirely if necessary.\n\n\u003cdiv style=\"page-break-after: always;\"\u003e\u003c/div\u003e\n\n# 8 Software Licensing\n\na) Authors copyright holds for software that does not have a specific license. This means \n\nb) Copyleft licenses require, software that uses other code (not limited to code, could be art, writing, etc.) with a copyleft license to use the same license. i.e., code with a copyleft license requires its derivatives to have the same requirements. This is not enforced with other licenses like MIT or CC-0\n\nc) Open source software is software which is considered 'free, libre open source software'. This means it has no cost, and other people are allowed to use it in their own projects, or contribute to it. Software with a copyleft license like (CC BY-SA-NC or GPL) *can* be open source, and this is usually the case. These two examples (CC BY-SA-NC or GPL) both allow other developers to run, study, share, and modify software, as long as any derivatives have the same license. These permissions clearly allow for 'open source' projects. However, copyleft software is not *necessarily* closed source, e.g., lesser GPL, allows code to be used commercially, but requires that any modified LGPL comments be released LGPL also. ","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/CPU":{"title":"CPU","content":"\n![](https://i.imgur.com/NxDLkuN.png)\n\nThe CPU controls the computer. It is the main component.\n\nA CPU is made of many components including\n- [Registers](notes/memory.md#Registers)\n- [control-unit](notes/control-unit.md)\n- [ALU](notes/ALU.md)\n\ndata is transeferred betwen these components and memory through [data buses](notes/bus.md)\n\n\n\nexamlple of an old CPU\n\n![diagram for 6809](https://i.imgur.com/41F0tnH.png)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/SQL":{"title":"SQL","content":"\n# Principles\n\n# Sytax\n\n# Interaction with code\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/The-Friar-and-the-Cipher":{"title":"The-Friar-and-the-Cipher","content":"\nThe Friar and the Cipher outlines the social context surround the creation of the Voynich manuscript, and the man who wrote it — Roger Bacon. \n\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/Untitled":{"title":"","content":"dlskfjslkfdj::djfdsjfdskf","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/access-security-tradeoff":{"title":"access-security-tradeoff","content":"\nThis is the concept that \"perfect\" security is impossible to attain. \n\nThe \"perfectly\" secure system is one that allowed access to nobody.\n\nWe need to find the corrct balanese between security and access.\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/activity-diagrams":{"title":"activity-diagrams","content":"\n[](https://i.imgur.com/zpwJJ5d.png)\n[](https://i.imgur.com/PKHcpMx.png)\n\n\n### 3.4 Activites and transitions\n\n[](https://i.imgur.com/1G14Ntn.png)\n\n- activities\n\t- take place over some pariod of time\n\t- linked by transitions (arrows)\n\t- only one starting point potentaily many ending conditions\n\n- Transitions\n\t- have guard conditions that must be satisfied before the transition can occur\n\n### 3.5 Decision points\n- represent conditional branching\n- two or more alternative transitions depending on condition\n- every transiiton exiting the decision point must have a guard condition\n\n[](https://i.imgur.com/KCufkgX.png)\n\n### 3.6 Synchonisation bars\n- represents two or more activites running in parallel\n- transitions can be split into mutiple paths and recombined later\n- if a workflow is split then it must be recombined on the same diagram\n\n[](https://i.imgur.com/IVfP7vt.png)\n\n### 3.7 swim lanes\n- same as BPMN\n- show who is responsible for a process\n- can represent\n\t- business organisations\n\t- depts\n\t- people (actors)\n- can simplify processes\n\n[](https://i.imgur.com/cRiZjtE.png)\n\n\n### 3.8 relationships to use cases\n- use case diagrams show the high level interactions between actors and cases\n- high level activity diagrams show the sequence of use cases within a workflow\n\n[](https://i.imgur.com/3b9f2va.png)\n\n\n#### 3.8.1 example\n\n[](https://i.imgur.com/dKHjIdu.png)\n\n[](https://i.imgur.com/yCAjqkZ.png)\n\n[](https://i.imgur.com/RifaVaq.png)\n\n### 3.9 Example producing a book\n\n[](https://i.imgur.com/X5aFAt2.png)\n\n[](https://i.imgur.com/AKVAshk.png)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/aesthetic-and-minimalist-design":{"title":"aesthetic-and-minimalist-design","content":"\n![](https://i.imgur.com/Oywxwgq.png)\n![](https://i.imgur.com/xgfgEtm.png)\n\nsignal to noise\n\n![](https://i.imgur.com/6bLaHS6.png)\n![](https://i.imgur.com/qF21SST.png)\n\n- what are you core functionality\n- how can you best use your screen space\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/analysis-of-recursive-algorithms":{"title":"analysis-of-recursive-algorithms","content":"\n- induction and recursion are linked\n- inductive approach is esential for understanding time-complexity of resursive algorithms\n\n## 1 Proof by induction\n[induction](notes/induction.md)\nFind a (positive integer) _parameter_ that gets smaller in all recursive calls\nProve inductively that \"for all values of the parameter, the result computed is correct\"\nTo do that:\n- check correctness is all non-recursive cases\n- check correctness in recursive cases assuming correcness in the recursive calls\n\n## 2 Examples\n### 2.1 Quicksort\n[divide-and-conquer](notes/divide-and-conquer.md) algorithm\nsorts a range in an array (a group of elements between some lower index, $lo$ inclusive and some upper index $hi$ exclusive) as follows:\n- If length of range $(hi - lo)$ is at most 1 -\u003e do nothing\n- otherwise, choose a pivot p (e.g., the element at $lo$) and:\n\t- place all items less that p in positions $lo$ to $lo +r$\n\t- place all items \u003e= p in positions $lo +r+1$ to $hi$\n\t- place p in position $lo+r$\n\t- call quicksort on the ranges $lo$ to $lo + r$ and $lo+r+1$ to $hi$\n\n#### 2.1.1 Proof\nparameter is $hi - lo$\n\nthe parameter gets smaller in all recusive call because we always remove the element $p$ so, even if it is the smallest or largest element of the range ,,the recursive call has a range of size at most $hi - lo - 1$\n\nthe non-recursive case is correct because if we have 1 or fewer elements in a range they are already sorted\n\nin the recirsive case, since all the elements before $p$ are smaller than it and we assume they get sorted correctly be quicksort, and the same happens for the elements larger than p, we will get a correctly sorted array\n\n\n### 2.2 Fibonacci 1\n```python\n\tdef fib(n)\n\t\tif n \u003c= 1\n\t\t\treturn 1\n\treturn fib(n-1) + fib(n-2)\n```\n\nline 1 -\u003e always executed\nline 2 -\u003e executed if n\u003c=1\nline 4 -\u003e executed if n\u003e1, cost equal to cost of callling fib(n-1), fib(n-2), and some constant cost for the addition and return\n\n#### 2.2.1 Cost bounds/Proof\nif we let T(n) denote the time required for evaluating fib(n) using this algorithm this analysis gives: \n\n\u003e## $T(0) = T(1) = C$\n\u003e## $T(n) = D + T(n-1) + T(n-2)$\n\nwhere c and d are some positive (non-zero) constants. \n\n- this shows that T(n) grows at least as quick as fib(n)\n- even if $D=0$ we'd get $T(n) = C \\times fib(n)$\n- growth rates are the same $\\therefore$ exponential (at least $1.6^n$) and far too slow\n\n\u003e A recurive algorithm that makes two or more recurive calls with parameter values close to the original will generally have exponential time complexity\n\n### 2.3 Fibonacci 2\n```python\n\tdef fibPair()\n\t\tif n == 1\n\t\t\treturn 1, 1\n\t\ta,b = fibpair(n-1)\n\t\treturn b, a+b\n```\nline 1 -\u003e always executed some constant cost\nline 2-\u003e executed if n=1, some constant cost\nline 4-\u003e executed if n\u003e1, cost equal to cost of calling fibPair(n-1)\nline 5 -\u003e executed if n\u003e1, some constant cost\n\n#### 2.3.1 Proof\nit's true for $n-1 by design$\nIf it's true at n-1 then the result of computing fibpair(n) is:\n\n$(f_{n-1}, f_{n-1} + f_{n-1}) = (f_{n-1}, f_n)$\n\nwhich is what we want\n\n#### 2.3.2 Cost bounds\nif we let P(n) denote the time required for evaluating fib(n) using this algorithm this analysis gives: \n\n$P(1) = C$\n$P(n) = P(n-1) + D\\ for\\ n\u003e1$\n\nwhere $C$ and $D$ are some positive (non-zero) constants.\n\n \n Claim: $P(n) = C + D(n-1)$\n\nBy induction: \nit's true for n = 1 since,\n\n$P(1) = C$\n$C+D\\times(1-1)=C$\n\t\nsuppose that it's true for n-1. Then it's true for n as well because\n\n$P(n) = P(n-1) + D$\n$\\ \\ \\ \\ \\ \\ \\ \\ \\ = C+D\\times(n-2)+D$\n$\\ \\ \\ \\ \\ \\ \\ \\ \\ = C+D\\times(n-1)$\n\n$\\therefore$ By induction it's true for all $n\u003e=1$\n\n\n$P(n)$ is the time for evaluating $fibPair(n)$ using this algorithm. This analysis gives:\n\n$P(1) = C$\n$P(n) = P(n-1) +D$\n\nwhere C and D are some positive constants\n\n\u003e ## $P(n) = C+D\\times(n-1)$\n\u003e in particular, $P(n) = \\theta(n)$\n\n\u003e A recursive algorithm that make one recurive call with a smaller value and a constant amount of additional work will have at most linear time complexity\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/analyzing-experiments":{"title":"analyzing-experiments","content":"\n# 3 questions\n- what does my data look like\n\t- graphs, plots, differnent summary plots\n- what are the overall numbers \n\t- aggregate stats e.g., mean average std dev\n- are the differences \"real\"?\n\t- significance p-value\n\t- likihood that results are due to chance\n\n## p value\npearsons chi-squared test. comparing rate of expected value vs observed value\n\n$$\n\\chi^{2}=\\frac{(observed-expected)^2}{expected}\n$$\n\n\"normal\" outcome variance follow normal/gaussian distribution.\n\nas chi squared gets bigger it is less likey that the coin is unbiased\n\ne.g., 20 tosses, we got 13 heads. at p\u003c0.05 can we reject the null that the coin is unbiased\n\n![value = 1.8](https://i.imgur.com/SHKLk53.png)\n\n![](https://i.imgur.com/rxaswEP.png)\n\ndegrees of freedom num possibilites n-1 = 2-1 = 1\n\nwe cannot reject the null\n\n![example 2 chi2 5.4](https://i.imgur.com/UnX2WbG.png) reject the null\n\n![click through rate example](https://i.imgur.com/JYFbgS2.png)\\\n\nformalieses: \"were pretty sure\". helps generalize from small samples\n\nfor normal continiuous data\n- t-tests (compare 2)\n- annova (compare more than 2)\n\ndata is not always normal.\n- bi modal - 2 peaks\n- skewed\n\t- e.g., time: can be infiniely slow, but not infinitely fast\n\n\nnon-normal data\n- knowing is half tha battle\n- run A/A tests\n- use randomised testing","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/anti-design-heristics":{"title":"anti-design-heristics","content":"\n![](https://i.imgur.com/BHJ5iQU.png)\n![](https://i.imgur.com/DrqSSK5.png)\n![](https://i.imgur.com/KPW6h19.png)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/anti-govt-protest-china":{"title":"anti-govt-protest-china","content":"\nChina used facial recognition to identofy protesters\n\nthese protesters used masks and toppled lamposts to thwart this infrastructure\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/application-programming-interface":{"title":"application-programming-interface","content":"\nAllows code (and people) to interact with other people applications. They define interactions points (*endpoints*) within the code, where data is retrieved (GET) or inserted (POST). Each endpoint is accessed using a *URL* or URI through *HTTP*.\n\n# REST principles\n\u003e Representational state transfer.\n\nThese principles describe the best practives for building APIs.\n\nSome of the main points are:\n- decoupled\n\t- not dependent of e.g., a specific browser\n- stateless\n\t- each interaction is self contained\n\t- although sometimes this is not used\n\t\t- e.g., authenticated \"sessions\"\n- uniform interface.\n\t- codifies principle of using HTTP methods on URLs\n\t- internal representation of data id hidden\n\t- interactions are based on resources\n\nREST principles were Co-developed with the web\n\n# Java REST APIs\njava servelts are code blocks that handle requests. java.servlet.http library\n\nframworks like Spring support Java API development\n- wraps an aplication server around you data classes\n- can persist your data in a database\n- also provides servers that can host API access to your data\n\n## Web technologies\n- resources on the web are identified using URLs \n- HTTP is the network protocol for data transfer in the web\n- HTTP describes 'methods' to apply to URLs\n\t- GET *read* a resource identified using a URL\n\t- PUT *writes* to a resource identified using a URL\n\n# Cloud computing\nUses *mircoservices*\n\napps built from intercommunicating microservice components/ each component can scale independently.components are loosely coupled. \n\n# Bulding an API\nUse a [library](notes/libraries.md)/framework with:\n- human readable documentation of functions\n- ability to manually interact\n\nSome APIs will provide tools to interactively build snippets which can be copy pasted\n\n# Maintaining API\nSimilar to maintenance of code [libraries](notes/libraries.md)\n- need to consider abstractions\n- need to evolve\n- future proof as much as possible\n- avoid complete rewrites\n- use versioning\n\n\n# Other stuff\n## Flask\nsmall python web sever\n\n## code and data\nAPIs define interaction points within code. (Similar to visibilty of methods).\n- also force a barrier between devs code\n\nneed developer to understand data model\n- this may appear explicitly in API calls\n- may be that API calls manipulate unseen data\n\t- need ndevs to be comfortable with you *mental model*\n\nUse of [libraries](notes/13-code-librarires.md) share many of these points\n\n## Overview\nAllow code to interact with others applicatioins.\n\ncan be used by people, not only code. \n\nAPI differ from libraries because they deal with the interactions between applications at runtime. \n\nAPIs work accross different \"distances\" of interaction. e.g., intergrating software components within one server vs across the internet\n\nweb technologies have positively impacteed api by\n- simplfy development - provide base of technologies that can be used to gain access to data in a structure way\n- normalised tools to using APIs\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/approaches-to-systems-development":{"title":"approaches-to-systems-development","content":"\nregardless of the approach, the concept of the model is import for analysis, design, and modelling paradigms\n\n# 1 traditional\n*system is a collection of process*\nfunction programming\nprocesses interact with data\nprocesses accept inputs and produce ouputs\n\n# 1 object oriented\n*system is a collection of [objects](notes/object.md)*\nthese objects interact with each other\nand send and respond to messages","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/assigning-participants":{"title":"assigning-participants","content":"\n\n# Methods\n## Between Subjects\nThe participants are split into equal groups, each which reviews one of the alternatives\n## Within Subjects\nThe participants are split into two grops, one group review the first alternative first, the other review the seconds alternative first. \n## Latin Square\n![](https://i.imgur.com/ZORPvqk.png)\n\norder of each group is different\n# Counterbalanced assignments\ne.g., typing speed might affect interface usage\nyou can use a pretest to assign participants to that typing speed is roughly balanced\n\nmany techniques: key is to have equal chance of each participant in each group\n\n## offline counterbalancing\npre-testing then forming matches pairs, which are split between groups]\n\n## online counterbalancing\n- of ther is no pre-test pick a threshold that is likely to be about the middle\n- as they come in\n\n- dont need to ensure even nubmer of high and low typers.\n- do need to ensure the same number of high/low typers in a and b\n## dangers\n### regression:\n- find heady coins\n- first flip them all (pre-test)\n- if they land heads more than half, call them heady\n- \"feed them a snack\"\n- does snacking increase the natural tendency of coins\n\n![coin flip example](https://i.imgur.com/Y2CWCRV.png)\n\nboth regress towards the mean\n\n### how to avoid\nif the pretest is used to counterbalance, and assignment is random, then the error goes away\n\n\n# should every participant use every alternative\nthree major srategies\n\n- **Within** \n\t- everyone tries all options\n\t- good when not fussed about learning/practise/exposure isssues\n- **between participants**\n\t- each person tries only only of the options\n\t- requires more people, and more attention to fair assignment\n\t- has the benefit that each participant is uncorrupted\n\t- most common forthings like web studies\n- **Counterbalancing**\n\t- \n\n# hawthorne effect\nresults are a result of the act of exmperimenting itself not as a resyult of the manupulations of the experiment\n\ncan be avoided with random assignment\n\n# vaccum cleaner example\n- manipulation\n\t- vacuum type\n- measures\n\t- speed\n\t- cleanliness\n\n- between subjects design: assign half the participants to each type.\n\t- worried about individual differences\n- within subjects design: everyone uses both interfaces:\n\t- worried about ordering effects\n\n- half try one first, the other try the other first (counterbalancing)\n\t- each of the tasks should be difference e.g., clean differnt buildings/rooms\n\nindividual differnces: go based of intuition of if it will make a difference.\nRandom assignment is importantg","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/assigning-participants-video":{"title":"assigning-participants-video","content":"\n[assigning-participants](notes/assigning-participants.md)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/assignment-02":{"title":"Assignment 02","content":"\n# 1 Introduction\n## 1.1 Setup\nThis report will discuss various strategies for managing a *warehouse* . A warehouse will be simulated as follows:\n- A warehouse is made up of a grid of *cells*. \n- Each cell has a collection of *packets*\n- Each packet has a *destination* cell. \n- Each cell also has a *robot* \n- In each step of the simulation a robot can deliver one packet to a robot in an adjacent cell.\n- The simulation ends when each cell has arrived at its destination.\n\n\n## 1.2 Managers\nThe goal is to deliver all the packets to their desired destination as efficiently as possible. \n\nEfficiency is defined as the minimum number of steps required to deliver all the packets divided by the actual number of steps taken.\n\nThe efficiency of the warehouse depends on the delivery scheme used by the robots. There are four managers I will be considering. These are:\n\n**Basic**\n- Packets are stored in a FIFO queue\n- Vertical movements are made before horizontal movements\n- Received packets are always added to the queue\n\n**Load Aware**\n- Packets are stored in a FIFO queue\n- If its destination is in a straight line from the current location, it just sends it one step in the appropriate direction.\n- Otherwise, moves to cells with fewer packets are preferred.\n- In case of an equality, revert to the basic rule\n- Only packets that need to keep moving are added to the queue\n\n**Priority**\n- Packets are stored in a Priority queue\n- Packets with further distance to their destination have higher priority\n- If two packets have the same priority, revert to the load aware rule\n- Only packets that need to keep moving are added to the queue\n\n**Min Load** [^1]\n- Same as normal priority, but the priority is changed\n- A Packet has two (logical) possible cells it could move to next. Its priority is found by checking the load at each of these two cells, and taking the lesser of the two. \n- If two packets have the same priority, revert to the load aware rule.\n- Only packets that need to keep moving are added to the queue\n\n## 1.3 Scenarios\nThere are a number of other factors that affect the efficiency of the warehouse. These are:\n\n- The total number of packets in the warehouse\n- The initial distribution of the packets\n- The distribution of the destination of the packets\n\nThe plan is to analyze the efficiencies of the delivery schemes in a few different scenarios, with a few different map sizes. These scenarios are:\n\n- **1000 Random:** 1000 packets are added in random locations with random destinations\n- **One Per Cell:** The number of packets and cells is the same. Each cell contains one packet to begin with, and has a random destination (different packets might have the same destination).\n- **Chance Per Cell:** As the previous case, but each cell has only a 25% chance of containing a packet.\n- **Upper Left:** The number of packets and cells is the same. All the packets start in the upper left corner, and each packet has a different destination.\n- **Center:** The number of packets and cells is the same. All the packets start in center, and each packet has a different destination.\n\n# 2 Analysis\nEach result is the average efficiency of 25 runs in that configuration\n\n## 2.1 N Random\n$$\n\\begin{tabular}{|c|c|c|c|c|c|c|c|}\n\\hline\nScenario\u0026\\multicolumn{6}{|c|}{Map Sizes} \\\\\n\\hline\n\u00265\u002610\u002620\u002640\u002680\u0026100\\\\\n\\hline\nBasic\u00264.0\\%\u002614.6\\%\u002643.7\\%\u002684.6\\%\u002698.2\\%\u002698.9\\%\\\\\nLoad Aware\u00264.9\\%\u002617.5\\%\u002647.0\\%\u002684.3\\%\u002698.0\\%\u002698.6\\%\\\\\nPriority\u00264.9\\%\u002617.7\\%\u002655.6\\%\u0026100.0\\%\u0026100.0\\%\u0026100.0\\%\\\\\nMin Load\u00264.8\\%\u002617.0\\%\u002649.2\\%\u002690.2\\%\u002698.1\\%\u002698.9\\%\\\\\n\\hline\n\\end{tabular}\n$$\n\nIn this scenario. The efficiency of the mangers clearly increased proportionally to the size of the map. This is because the number of packets remained constant, so as the map size increased, the load on the managers decreased and Packets were able to move through the warehouse more quickly.\n\nAt a map size of 100 all managers achieved close to 100% efficiency. However, the Priority manager was the only one able to achieve exactly 100%. In addition, it was about 5% better than the others in a 50x50 map.\n\nIt is also worth noting the basic manager was significantly worse than the others in the very small maps. This is likely due to the high load on each of the managers, amplifying the need to keep them in balance. A since all the other managers have some form of load balancing, the Basic Manager is most affected. I could be interesting to try to create a manger that performs better here than the Basic manager without, using any load balancing. Possibly considering only priority based on distance to destination.\n\nThe Min Load manager was very slightly better than the Load Aware Manager in the mid-sized maps. This implies that prioritizing nodes that can be easily balanced is better than, simply, sending nodes to the least loaded cell.\n\nThe managers tend to perform similarly at the extreme ends of the map size spectrum, and differ most in the middle. \n\n## 2.2 One Per Cell\n$$\n\\begin{tabular}{|c|c|c|c|c|c|c|c|}\n\\hline\nScenario\u0026\\multicolumn{6}{|c|}{Map Sizes} \\\\\n\\hline\n\u00265\u002610\u002620\u002640\u002680\u0026100\\\\\n\\hline\nBasic\u002673.8\\%\u002676.2\\%\u002672.9\\%\u002673.7\\%\u002674.4\\%\u002673.3\\%\\\\\nLoad Aware\u002681.0\\%\u002676.2\\%\u002673.7\\%\u002674.0\\%\u002674.3\\%\u002673.4\\%\\\\\nPriority\u002688.5\\%\u002697.7\\%\u002699.5\\%\u0026100.0\\%\u0026100.0\\%\u0026100.0\\%\\\\\nMin Load\u002685.0\\%\u002681.0\\%\u002683.1\\%\u002682.7\\%\u002681.8\\%\u002683.0\\%\\\\\n\\hline\n\\end{tabular}\n$$\n\nIn this scenario, overall efficiency was relatively high with the Basic, and Load Aware managers achieving about 70%, Min load achieving about 80%, and Priority manager about 100%. Since the number of packets is proportional to the size of the map, changing the size had little effect on the efficiency of the managers, except for the Priority manager, and to a lesser extent the Load Aware manager.\n\nThe Priority manager significantly outperforms the other managers here. However, it was significantly less efficient (but still better than the other managers) in smaller map sizes. It decreased from 100% in 100x100 to 88.5% in 5x5. The Load Aware manager, on the other hand, *increased* from 73.4% in 100x100 to 81% in 5x5. Since I only have a small sample size of 25, this could be due to random chance.\n\nThe Min Load Manager was consistently better than the Basic and Load Aware managers, but never better than the Priority manager. \n\n## 2.3 Chance Per Cell\nChance = 25%\n$$\n\\begin{tabular}{|c|c|c|c|c|c|c|c|}\n\\hline\nScenario\u0026\\multicolumn{6}{|c|}{Map Sizes} \\\\\n\\hline\n\u00265\u002610\u002620\u002640\u002680\u0026100\\\\\n\\hline\nBasic\u002694.5\\%\u002694.5\\%\u002694.6\\%\u002695.7\\%\u002696.5\\%\u002697.4\\%\\\\\nLoad Aware\u002695.8\\%\u002694.2\\%\u002694.1\\%\u002695.6\\%\u002696.2\\%\u002696.1\\%\\\\\nPriority\u002698.7\\%\u002699.7\\%\u0026100.0\\%\u0026100.0\\%\u0026100.0\\%\u0026100.0\\%\\\\\nMin Load\u002697.4\\%\u002696.3\\%\u002696.0\\%\u002696.5\\%\u002698.2\\%\u002698.0\\%\\\\\n\\hline\n\\end{tabular}\n$$\n\nIn this configuration, the efficiency was very high due to the low number of packets, low load-factor and subsequent fast movement of Packets. Hence, the variation in efficiencies was very small, as the need for balanced managers was diminished.\n\nHere, the Priority manager still performed the best, achieving 100% efficiency, although by a lesser margin than in the previous two scenarios. Once again, the Min Load manager was better than the Basic and Load Aware managers, but not the Priority manager. \n\n## 2.4 Upper Left\n$$\n\\begin{tabular}{|c|c|c|c|c|c|c|c|}\n\\hline\nScenario\u0026\\multicolumn{6}{|c|}{Map Sizes} \\\\\n\\hline\n\u00265\u002610\u002620\u002640\u002680\u0026100\\\\\n\\hline\nBasic\u002626.3\\%\u002615.8\\%\u00268.9\\%\u00264.7\\%\u00262.4\\%\u00261.9\\%\\\\\nLoad Aware\u002625.8\\%\u002615.7\\%\u00268.8\\%\u00264.7\\%\u00262.4\\%\u00261.9\\%\\\\\nPriority\u002630.7\\%\u002617.5\\%\u00269.4\\%\u00264.8\\%\u00262.5\\%\u00262.0\\%\\\\\nMin Load\u002626.6\\%\u002616.0\\%\u00268.8\\%\u00264.7\\%\u00262.4\\%\u00261.9\\%\\\\\n\\hline\n\\end{tabular}\n$$\n\nThis scenario had by far the lowest efficiency. This is because a single manger initially holds every node. Since most of the load at any given time is being handled by one manager, and most of the packets will wait a long time before getting offloaded to an adjacent cell, they will take longer to reach their destination. As the map size increases, the efficiency decreases rapidly, as the number of packets starting on the top left cell increased exponentially. \n\nThere is little variation in the efficiency of the different managers, except for the Priority manager, which is slightly more efficient than the others. I think this is because by prioritizing packets that need to travel further, the concentration of packets in the corner is reduces faster. \n\nIt would be interesting to know whether placing all the packets in the center of the map would be more efficient. I think it would be, as there are more directions for the packets to spread out, and the packets are on average would be closer to their destination (since destinations are uniformly distributed).\n\n## 2.5 Center\nI decided to investigate the idea of starting all the packets in the center. These were the results. \n\n$$\n\\begin{tabular}{|c|c|c|c|c|c|c|c|}\n\\hline\nScenario\u0026\\multicolumn{6}{|c|}{Map Sizes} \\\\\n\\hline\n\u00265\u002610\u002620\u002640\u002680\u0026100\\\\\n\\hline\nBasic\u002614.8\\%\u00269.0\\%\u00264.8\\%\u00262.4\\%\u00261.2\\%\u00261.0\\%\\\\\nLoad Aware\u002615.0\\%\u00269.0\\%\u00264.7\\%\u00262.4\\%\u00261.2\\%\u00261.0\\%\\\\\nPriority\u002616.0\\%\u00269.7\\%\u00264.9\\%\u00262.5\\%\u00261.2\\%\u00261.0\\%\\\\\nMin Load\u002614.9\\%\u00269.3\\%\u00264.8\\%\u00262.4\\%\u00261.2\\%\u00261.0\\%\\\\\n\\hline\n\\end{tabular}\n$$\n\nSurprisingly, this was about half as efficient as starting is the corner. This is the opposite of what I expected. It's interesting that it reached exactly 1% efficiency in a 100x100 map. \n\nAha! It's because the max distance a packet must travel is shorter (about half), so even with a similar number of steps, the efficiency will be twice as bad. This means that Center does not necessarily result in slower delivery, only higher consequences for slow deliveries.\n\n# 3 Summary\nPriority managers was clearly the most efficient of the four managers, with the Min Load following. Configurations with extremely large or small amounts of packets per cell made the managers perform more similarly, and scenarios with medium amounts of packets per cell amplified the difference. \n\nI think the main reason Priority manager was consistently better than the other was because It spreads the load among more managers faster, and ensures that Packets with further destinations arrive about the same time as shorter ones. It effectively removes the advantage that packets closer to their destination have.\n\nI think Min Load performed better than Load Aware for one reason: It did a better job of distributing load. I think I could have made an even better manager by prioritizing based on a function of both load, and distance.\n\n[^1]: I couldn't think of a better name\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/automation":{"title":"automation","content":"\nAutomatation is the use of automatic equipment in a productions process. The goal is to remove repetitive tasks. Automation can be built within a tool, or it can be a tool that controls other tools. Any automation should be easy and quick to use, reliable, and safe. \n\n# Implementation/Use tradeoff\nAutomations should save enough time to warrant their creation ([xkdc](https://i.imgur.com/RvYHIUW.png)). It is good to re-check your time spent periodically. \n\nBe careful when creating automations as bugs can rapildly case a mess.\n\n# Examples of Automation\n- [IDEs](notes/integrated-development-environments.md) can  contain user defined [2 1 Snippets](notes/integrated-development-environments.md#2%201%20Snippets). \n- Selenium can be used to control websites using code\n- On windows, AutoHotKey is a scripting language that can be used for keyboard shortcuts, macro creation and more\n-  [shell](notes/shell.md)s can be used to automate quick and simple tasks. They are not suited for more complex tasks as edge cases and quirks become hard to handle and are usually not worth the time. For these tasks you could python or some other language.\n\t- You should create these incrementally, testing steps as you go before combining them into a script\n- Office 365 can be automated using Flow (a.k.a, Power Automate)\n\t- Macros are recorded by a gui or created manually\n\t- This can faciliate forms of [continuous-integration](notes/continuous-integration.md)\n\t- For [example](https://i.imgur.com/Liiqzlh.png)\n\n# Using code to create code\nYou can you a program to product source code. For example you can write a java program to generate java code. This is suited for producing repetitive error prone source code. \n\nFor example. You are building a command line tool. You want to have a help option. You can create a YAML definition to define command line arguments. You could then create code to parse this YAML and create generate the source code. \n\n[finite-state-machine](notes/finite-state-machine.md) are another example of something that may benefit from being created programatically\n\n## Code generation using spreadsheets\n\nSpreadsheets allow a mix of pattern (using formula) and exceptions (overriding formula for a particular row). This allows you to \"eye ball\" your shell commands.\n\nFor example. each row is a command invocation. Columns build up command's invocation, including formulae. Then use concatenate function to join text from other columns. And copy and paste the rows into your shell\n\nThis is useful for idempotent commands. i.e., change happens once. As nothing bad will happen if a command is run twice\n\nAutoHotKey on windows can be used to automate GUIs. Selenium can be used to automate web apps\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/avl-tree":{"title":"avl-tree","content":"\nAVL tree\nmost basic and obvious.\n\neach node contains some extra information: the difference between the height of its right and left subtee. balance is maintained by ensuring that at every node this always at most 1\n\nWhat is the least possible number of nodes in AVL tree of height k?\n\nin general\n\n$A_k= 1 + A_{k-1} + A_{k-2}$\n\nwe need a root 1, on one side a amallest possible tree of height $A_{k-1}$ then the other side must have height at least to $k-2$ to satisfy the rule, so we need at least $A_{k-2}$ more nodes.\n\nThe size if exponential in its height, and therefore its height is logarithmic in the size.\n\nthe operations are the same, but for each one we need to check and fix any excess imbalance along a single path from the affected leaf node up to the root.\n\nfor insertions, at most three rotations are rquired, for deletions the worst case is $O(lg\\ n)$\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/aymptotic-notation":{"title":"asymptotic-notation","content":"\nAsymptotic notations are used in computer science to classify algorithms based how its space and time requirements grow as the input grows. \n\n\n# big O notation\n\nBig O defines a bound for the *upper*  bound of the running time (or space) of a algorithm. However, it is possible that the actual running time is much less as it does not take into account special cases ^fb2c3f\n\n\n## 1 Formal definition\n\n$f(n) = O(g(n))$ if there is some constant $A$ such that $f(n) \u003c A \\times g(n)$\n\n\n# big theta notation\n\nBig theta defines an *upper and a lower* bound for a the running time (or space) of an algorithm. \n\n\n## 2 Formal definition\n\n$f(n) = \\theta(g(n))$ if there are some constants $A$ and $B$ where $0 \u003c B \u003c A$ such that for all sufficiently large $n$, $B \\times g(n) \\geq f(n) \\leq A \\times g(n)$\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/balancing-binary-search-trees":{"title":"balancing-binary-search-trees","content":"\nthe height of a [BST](notes/binary-search-tree.md) is the length of its longest chain. Most operations are $O(n)$ where n is the height of the tree. In an Ideal situation each layer of the tree is full. The height of the tree is logarithmic to the number of nodes. \n\nWhen a tree is being used only occainsonally, we can afford to simply rebalance it periodically. However when it is in constant use we cannot afford this cost\n\nlong branches are a problem\nthe performance bounds for all BST operations are linear of the length of the longest branch of the tree\n\nideal shape is a similar to a [heap](notes/heap.md) (wide and shallow).\n\nwe want the longest branch to be $\\theta(lg\\ n)$ \n\none way is to do an [In order](notes/tree-traversal.md#In%20order) and save to a sorted array. then construct a new tree by repeatedly bisecting the array. and recursively building the left and right subtrees\n\nneed some local operation that helps to restore balance\n\n# Rotation\n## How\nsuppose that in this bst there is a longer chain in e than else where\n\n![100](https://i.imgur.com/SmDsZd1.png)\n\nimagine twisting d to be the root\n\n![100](https://i.imgur.com/6MoYHX1.png)\n\nchanges are\n- b's right child is now c\n- d's left child is not b\n- b parent now points to d\n\n## When\n![](https://i.imgur.com/vjvMVM3.png)\n\nsometimes two rotations are needed\n\nbasic idea is to modify the add and delete operations fo the BST to be somewhat self-balancing. This does not need to be perfect\n\nWe need a rule to decide when the tree is \"balanced enough\" and also strategies for fixing problems when the rule is violated.\n\nWe only need to fix the area local to the add or delete operations\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/behaviour-driven-development":{"title":"behaviour-driven-development","content":"\nModels should be created with the users needs in mind. \nRequired bahaviour determines acceptance criteria\nThis is called Behaviour Driven Development\n\n**Resources** \n[Domain Driven Design with BDD](https://www.youtube.com/watch?v=Ju50D11EIoE)\n[DDD videos](https://www.youtube.com/playlist?list=PLZBNtT95PIW3BPNYF5pYOi4MJjg_boXCG)\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/big-picture":{"title":"big-picture","content":"\n\u003eHCI is the cycle of design, implementation, evaluation of user interfaces\n\n![](https://i.imgur.com/SMtW2Zb.png)\n\n\u003e\"fail fast so you can succeed sooner\"\n\n**Focus on people**\n\nGood design is good\nBad design costs lives, money, time\nBad design can be easily avoided using basic ideas like consistency and feedback\n\nJoy of good design: When interaction becomes \"invisible\" - intuitive**\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/binary-search-tree":{"title":"binary-search-tree","content":"\n[code](https://blackboard.otago.ac.nz/bbcswebdav/pid-2890167-dt-content-rid-18354839_1/courses/COSC201_S1DNIE_2022/BST.java)\n\n[bst-operations](notes/bst-operations.md)\n\na collection of *nodes* with one distinguished node called the root\n\nrules:\n- the node data contains a key which comes from some ordered type e.g., `string`\n- each node can have at most who children - there are two fixed slots called left child and right child\n- the left child node and it descendents are called the left subtree\n- the key value at a nodes *left child* (and all its descendants) must be *less* than the key of the node\n- the key value at a nodes *right child* (and all its descendants) must be *greater* than the key of the node\n- we do not allow duplicate keys\n\nNotation\n- n.key for key\n- n.l and n.r for left and right children\n- n.p for its parent\n- nil for a \"not here\" marker. e.g.,  n.r = nil means \"n has no right child\"\n\ne.g., \n![300](https://i.imgur.com/n0IzHW7.png#invert)\n\nIn this example:\n- root.p = nil\n- root.r = n\n- n.p = root\n- n.key = emu\n- n.l = nil\n- n.r.key = rat\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/birth-of-hci":{"title":"birth-of-hci","content":"\nENIAC (one of the first programmable, electronic computers) 1946, and the first six programmers: Kay McNulty, Betty Jennings, Betty Snyder, Marlyn Meltzer, Fran Bilas, and Ruth Lichterman\n\n![](https://i.imgur.com/w6khmh5.png)\n\nDEC PDP-8 and TI 980 (1960’s), PDP-8 is an octal computer (switches in three-bit configurations), TI 980 is a hexadecimal machine (4-bit configuration). Not interactive\n\n![](https://i.imgur.com/XBP75oa.png)\n\n\nBatch processing using punch cards, still not interactive (1950s -1970s)\n\n![](https://i.imgur.com/qsu2duq.png)\n\nIBM System/360 (mainframe computer in the 70s), Altair 8800 (one of the first home computers)\n\n![](https://i.imgur.com/dAYc8ru.png)\n\n\nvisicalc (Dan Bricklin 1979), and Apple II (1977)\n\n![](https://i.imgur.com/zXmd89L.png)\n\n\nSutherland, Ivan Edward (January 1963). \"Sketchpad: A man-machine graphical communication system, MIT press.\n\n![](https://i.imgur.com/0I0xCKL.png)\n\nSutherland, Ivan Edward (January 1963). \"Sketchpad: A man-machine graphical communication system, MIT press.\n\n![](https://i.imgur.com/PkQWnPU.png)\n\n1968 - “The Sword of Damocles\ufffd\ufffd? Sutherland, Ivan Edward (1968), “A head-mounted three dimensional display\ufffd\ufffd?\n\n![](https://i.imgur.com/XPPjzNS.png)\n\n\n1968 - “The Sword of Damocles\ufffd\ufffd? Sutherland, Ivan Edward (1968), “A head-mounted three dimensional display\ufffd\ufffd?\n\n![](https://i.imgur.com/cvhyx7u.png)\n\n1968 - “The Sword of Damocles\ufffd\ufffd? Sutherland, Ivan Edward (1968), “A head-mounted three dimensional display\ufffd\ufffd?\n\n![](https://i.imgur.com/yYAxe2d.png)\n\n“The Mother of All Demos\ufffd\ufffd?, presented by Douglas Engelbart (1968) at (ACM/IEEE) Computer Society's Fall Joint Computer Conference See full demo: https://www.youtube.com/watch?v=yJDv-zdhzMY\n\n![](https://i.imgur.com/u9McBxK.png)\n\n“Dynabook\ufffd\ufffd? Alan C. Kay. (1972), “Personal Computer for Children of All Ages\ufffd\ufffd?\n\n![](https://i.imgur.com/8IlrB6e.png)\n\nApple Newton (1993) and Apple iPad (2010)\n\n![](https://i.imgur.com/cpLSLUm.png)\n\nGraphical User Interface supporting “What You See Is What You Get\ufffd\ufffd? (WYSIWYG), the Desktop metaphor (files, folders, etc.), Xerox Parc/Xeroc Star\n\n![](https://i.imgur.com/ccSlueJ.png)\n\nGraphical User Interface supporting “What You See Is What You Get\ufffd\ufffd? (WYSIWYG), the Desktop metaphor (files, folders, etc.), Xerox Parc/Xeroc Star\n\n![](https://i.imgur.com/GY8teow.png)\n\n1992/93 - IBM Simon First smartphone Phone, pager, calculator, address book, fax machine, and e-mail device\n\n![](https://i.imgur.com/PmVH5Xt.png)\n\nRamesh Raskar, Greg Welch, Matt Cutts, Adam Lake, Lev Stesin and Henry Fuchs (1998) \"The Office of the Future : A Unified Approach to Image-Based Modeling and Spatially Immersive Displays,\"\n\n![](https://i.imgur.com/7HLtUzS.png)\n\n1981 - Steve Manns’s “Wearable Computing\ufffd\ufffd? Start of a series of prototypes for wearable computing, cyborgs, and mediated reality (-\u003e Google Glass) www.wearcam.org, www.eyetap.org\n\n![](https://i.imgur.com/pJtEw93.png)\n\nNokia N95 (2007) and Apple iPhone (2007)\n\n![](https://i.imgur.com/RZ2K6pv.png)\n\nMajor innovations in HCI (Myers 1998)\n\n![](https://i.imgur.com/uwGf8NN.png)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/bishop-berkely":{"title":"bishop-berkely","content":"monist, imperisist, immaterial idealist\n# Superstition\n[040-superstition](notes/040-superstition.md)\n\nBishop Berkely wanted to abolish superstitions concerning the senses. \n\nThere was a common idea that there is a \"true reality\" that is hidden behind a \"veil of perception\". \n\nBerkely questioned this idea. He said since the only thing we interact with is our \"idea\" of reality, and we never experience the \"real\" world, how do we know it exists?\n\nHis goal was to preserve the idea of god. He thought that philosophy was heading in a direction that could lead to the demise of the idea of \"God\". ","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/boolean-equations":{"title":"boolean-equations","content":"\nOften used to describe/define [combinatorial-logic-circuit](notes/combinatorial-logic-circuit.md)\n\n# Precedence\nPrecedence\n- NOT is unary, so it has the highest precedence\n- AND is mulitply, so it comes next\n- OR is like plus, to it comes last\n\n![Precedence table|200](https://i.imgur.com/jPlrVwW.png)\n\n# Creating boolean equations\n\n![example equation](https://i.imgur.com/fiNKbJT.png)\n![equivalent truth table](https://i.imgur.com/wlm0Cu1.png)\n\nCreating boolean equations:\n- for each row where output is 1\n- write the equation as a function of the inputs  (using AND)\n- Write the final equation, putting OR between each clause\n\n# De Morgan's Theorum\n- !(A + B) = A! \u0026 !B\n- !(A + B + C + ... + X) = !A \u0026 !B \u0026 !C \u0026 ... \u0026 !X\n- [truth table](https://i.imgur.com/QegVxkx.png)\n- any boolean function can be represented as the sum of logical products\n- All combinatorial circuits can be described using just one gate type (either nand or nor) [^2]\n\n[^2] : The Apollo Guidance Computer used about 5600 NOR gates and no other gate types!","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/brainstorming":{"title":"","content":"#info203\n\n# Concept 1 - Snowboard trick generator. \n\nThis will be a mobile app that snowboarders can use to automatically generate random tricks. This app will be useful because snowboarders (riders) often get tunnel vision on a certain style of tricks or even a single trick. Using a algorithm to generate tricks provides a way for them to escape this focus. It can also be used when playing a game of SNOW, which is similar to a game of SKATE.\n\n# Initial Ideas\n- customisable trick generator\n\t- trick lists --\u003e users can create lists for the generator to choose a trick from\n\t\t- some built in lists\n\t\t- share lists with friends\n\t- options\n\t\t- trick types\n\t\t\t- jump\n\t\t\t- rail\n\t\t\t- pipe\n\t\t\t- butters\n\t\t- flips\n\t\t- spins\n\t\t- grabs\n\t\t- spin direction\n\t\t- bring back or not\n\t\t- stance\n\t\t\t- regular\n\t\t\t- goofy\n- daily trick\n\t- same for all users?\n\t- auto notification\n\t- schedule\n\t\t- weekly\n\t\t- custom\n\t\t- auto when at an altitude\n- App widget with daily trick? \n- search for tricks\n\t- options similar to generator\n\t- save tricks to a list for generator\n- link with other users\n\t- methods\n\t\t- qr code\n\t\t- url/link\n\t\t- contact\n\t\t- social media\n\t- people\n\t\t- friends\n\t\t- coach\n\t\t- parents\n\t- features\n\t\t- daily/sheduled trick group\n\t\t\t- how would this work with altitude detector\n\t\t- share trick lists\n\t\t- community section for trick lists\n\t\t\t- like spotify playlists\n\t\t- users can share tutorials\n- Ease of use - (hard to use with gloves)\n\t- voice controls\n\t- gesture controls\n- goals tracking\n\t- goal lists\n\t- daily/weekly/yearly goals\n\t- trick generator can choose a trick from goals\n\t- share (or keep private) with coach and friends\n\t- trick tutorials\n\n# Final Choices\n### Core features\n- customisable generator\n\t- all options no trick lists\n- daily trick\n\t- Notification\n\t- able to set a schedule or have it go when at an altitude\n- links with friends\n\t- Do same tricks\n\t- link with QR code or url\n\nThe first core feature of the app is the customisable trick generator. It should be very easy and quick to use. This presents an interesting problem as while snowboarding, users are wearing large mittens, and the air can be very cold for hands. It would be ideal if it could be used while wearing mittens. \n\nThe second core feature of the app is the Daily Trick. This means that users get a notification with a random trick from the trick generator. This feature could allows users to get the benefit of the trick generator without having to open the app on the mountain. However, the issue here is that most people don't snowboard everyday. To get around this, I could allow the users to schedule days on which to recieve a daily trick, or I could alert them whenever they are on a mountain by monitoring their altitude. Of course the second option has some privacy issues that will need to be considered.\n\nThe third core feature of the app is the link with friends. This is a core feature because snowboarders will typically rider with a group of friends. Being able to join a 'trick group' means these groups can do the same trick and 'compete' against each other.\n\n# Existing Apps\n- For skateboarding: \n\t- [getatrick.com](https://getatrick.com)\n\t- skate gen mobile app\n\t- Skate Tricks\n\t- Skateboard tricks\n\t- Skate Dice\n- Freestyle Generator for inline skating, tramp and skiing\n- Scooter trick generator\n\n## Summary\n### Overview\nI was able to find only 7 apps with similar functionality to what I am planning. Of these none 5 were for skateboarding 2 for other sports and zero for snowboarding. \n\n### Functionality of the apps\nThese 7 apps all had varying degreee of complexity. Some were just simple customizable trick generators, while others were fully fledged coaching and goal tracking apps with community features and other extras. Although I am not planning to make large complicated app, I can still draw from them for guidance as most of them did have a trick generator. \n\nAesthetic/style of the apps\n\n\nConclusion\n\n\n## Skate Dice\nSkate dice was one of the most intresting the apps I found. It had a very unique approach using a \"shake the phone\" gesture to \"roll\" the dice. However it has a paywall for premium features such as more tricks, settings, and a \"tricktionary\".  From what I was able to use I think is was the most simple and intuitive apps. It also had an aesthetic that fit the culture of the sport. All these features combined made it very enjoyable to use. \n\n### How does this app inform mine\n- Keep design simple\n- Maybe incorporate some gestures\n- Consider using an aesthetic wich matches the culture/sport\n\n![100](Attachments/screenshots/skatedice/Screenshot_20220409-192630_Skate%20Dice.jpg)\n\n\n## Skate tricks\nThis app is a much more fully featured solution. It is oriented towards learning skateboarding, and keeping track of you progress while doing it. It also has a built in trick generator, and game of skate. One of the most unique features it had that the other apps didn't was a trick of the day. This is one of the core features I want to include in my app. Another interesting feature it had was a page informing the user about injury prevention.\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/branch":{"title":"branch","content":"\nSplit current dev path into two to work on e.g., a bug or a feature\n\n## 1 Overview\n- allows users to work independently\n- development continues independently along each branch\n\t- can easily switch between branches\n\t- can push a branch without affecting others\n\t- branches can be merged back into the original\n\t- always at least one main branch (usually master, main, trunk)\n\t\n## 2 Default branch\n- used to be called master\n- now called main\n\n## 3 Methodologies\n### 3.1 Working on the main branch\n- focuses on not creating branches\n\t- over time long branches become difficult to merge\n\t- smaller, self-contained changes are encouraged\n\t- focus on main code objective, avoiding side-experiments\n\n- sometimes this is not possible\n\t- complex bugs or features need branches\n\n- pair programming\n\t- e.g., vs code allows multiple developers to work on the same code at the same time.\n\n### 3.2 Working off the main branch\n- branches can be shared with teams\n\t- still isolated commits from the main branch\n- more commits can be added to a branch _after_ it has been merged\n\n### 3.3 Feature branching\n- all new features are developed in a separate branch\n- merging to the branch \"adds\" that feature\n- after a feature is added, it call still be added to using the same branch\n\n### 3.4 Gitflow\n- viewed as ovecomplicated\n- a set of shell scripts helps it be used\n- highly structured\n\n- e.g.,\n\t- main branch -\u003e branch has commit for release versions\n\t- develop branch -\u003e branch is where development occurs\n\t- feature branch -\u003e branches branch off development branch\n\t- release branch -\u003e branch polishes for release\n\t- hotfix -\u003e branches of main branch thence into develop\n\n## 4 continuous integration\n\n\t[[notes/continuous-integration]]\n\n- [CI vs feature branch](https://www.youtube.com/watch?v=v4lijkq6Myfc)\n- [Cl vs feature branch](https://www.youtube.com/watch?v=IXQEi1O5!OI)\n\t\t\n## 5 Topic/feature branch\n- created for a specific purpose .e.g, bug/feature\n\t- can pull from remote without marge conflicts (should be only one person working on branch) \n\t- the more short-lived branches are the less likely there are to be merge conflicts with main\n\t\t\n## 6 Persistent branch\n- long term branch that exists for the lifetime of the project\n- e.g.,\n\t- release branches\n\t\t- release v1, start on v2\n\t\t- security flaw in v1, needs to be fixed\n\t\t- v2 not finished yet\n\t\t- create branch at last v1 commit and fix there\n\t\t- also fix in v2 (if applicable)\n\t\t- v1 branch will last until v2 is released\n\t- specialsed versions of code base\n\t\t- e.g., to support specific platforms or hardware\n\t\t- e.g., to support feaures for a specific customer\n\t\t- features for this specilised version on go on that branch\n\t\t- keeps specialised code out of main codebase\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/bst-operations":{"title":"bst-operations","content":"\n# Search operation\n\nWe want to search in a BST for a key `k` returning `true` if it is found and `false` if it is not\n\n```\ndef search(k)\n\tn \u003c- root\n\twhile n ≠ nil do\n\t\tif n.key = k then\n\t\t\treturn true\n\t\telse if n.key \u003c k then\n\t\t\tn \u003c- n.r\n\t\telse\n\t\t\tn \u003c- n.l\n\t\tend if\n\tend while\n\treturn false\n```\n\nIts naturally recursive\n\nMethod `search(k)` calls `search(k, root)` wher the two-parameter version `search(k, n)` is defined by:\n\n```\ndef search(k, root)\n\tif n = nil then\n\t\treturn false\n\telse if n.key = k then\n\t\treturn true\n\telse if n.key \u003c k then\n\t\treturn search(k, n.right)\n\telse\n\t\treturn search(k, n.left)\n\tendif\n```\n\nCost of search is at  most the length of the longest branch. So we want to keep the trees short and \"bushy\"\n\n# Add Operation\n\nWe want ot add a key `k` to a BST returning `true` if added or `false` if already present.\n\nThis is similar to search:\n```\ndef add(k)\n\tp \u003c- nil, c \u003c- root\n\twhile n ≠ nil do\n\t\tp \u003c- c\n\t\tif p.key = k then\n\t\t\treturn false\n\t\telse if n.key \u003c k then\n\t\t\tc \u003c- p.r\n\t\telse\n\t\t\tc \u003c- p.l\n\t\tend if\n\tend while\n\tmake child node of p with value k\n\treturn true\n```\n\nTo make a child: \n\nMake sure this is really what we want to do:\n- k is not the key of p\n- the pos where this node will be added is currently nil\n\n```\ndef makeChild(p, k)\n\tc \u003c- new(k), c.p \u003c- p\n\tif p.key \u003c k then\n\t\tp.r \u003c- c\n\telse\n\t\tp.l \u003c- c\n\tend if\n```\n\n\n# Remove operation\n\nIf the node to delete is a leaf, we can simply make it nil.\n\nIf the node has only one child, we simply make the nodes child the child of the nodes parent\n\nIf the node has two children, we replace it with its *successor* (the leftmost descendant of its right child)\n\n``` java\nprivate void delete(Node n) {\n    if (n == root) {\n        deleteRoot(); return;\n    }\n    if (n.left == null) {\n\t\taddLink(n.parent, n.right, linkType(n.parent, n));\n\t\treturn;\n    }\n    if (n.right == null) {\n        addLink(n.parent, n.left, linkType(n.parent, n));\n        return;\n    }\n    Node sn = successor(n);\n    String s = sn.key;\n    delete(sn);\n    n.key = s;\n}\n```\n\n# Traversal\n\n[tree-traversal](notes/tree-traversal.md) \n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/bug-tracker":{"title":"bug-tracker","content":"\nlink: https://youtu.be/oC483DTjRXU\n\npotential employer needs to now i\n\nneed to target toward the dev/hiring manager. built wha the need/want to see. They should be able to instantly recognise if its what they want.\n\ndoesn't matter what tools you use. Try to build a project that uses the same stack as the company you are applying for.\n\nShould built an app not 1 hour a day. Should do in large blocks. e.g., spend one saturday.\n\n# The Project\n\nShould:\n- follow a design pattern\n\t- e.g., for web apps: mvc: model view controller [MVC](notes/model-view-controller-pattern.md)\n- clean professional UI\n\t- mobile and desktop\n\t- people are \"visual buyers\"\n\t- use a bootstrap template\n- database\n\t- must perform all of CRUD operations\n- security\n\t- authorisation --\u003e giving people permissions once they are logged in\n\t- authentication --\u003e logging in\n\t- use a third party service like auth zero\n- solve a business problem\n\t- i.e., not a toy app (tic tac toe, etc)\n\n\n## Bug/Issue Tracker\n- e.g., JIRA, etc\n- This can be easily adjusted to fit different industries.\n\n# Building the Project\n\n## 1 SRS\n- compile the requirements\n- divide these into sprints.\n\t- these are the blocks discussed earlier\n- blocks rabbit holes\n\n## 2 Track your progress\n- keeps details\n- use the bug tracker you are building\n- show this to the interviewer\n\n# Common Mistakes\n\n- Build using .NET, ASP.net mvc, C#. This is the most common.\n- Dont start with a small program\n- Show the project to people\n\t- Show to recruiters\n\t- Demo in interviews\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/build-tools":{"title":"build-tools","content":"\n# Build tools\nTools that automate the construction of software,.\n\n## C\nif you recompile C you get an object file which can be linked. Automation tools will do the linking for you. \n\nwhat they do:\n- run [compiler](notes/compiler.md)\n- run [linker](notes/linker.md)\n- automatically download depencies ([libraries](notes/13-code-librarires.md))\n\t- this can also be done using [containers](notes/containers.md) e.g., a docker container\n- possibly some form of [testing](notes/testing.md)\n\n# History of build tools\n\n## Make\n\u003e check whether targets are older than sources\n\nHas:\n- set of targets\n- set of source files\n- A list of commands that build the target from the source\n- internal variables\n\t- \\$@ - the rules source(s)\n\t- \\$\u003c - the rules tartet\n- \n\nBuild things in the correct order (*topologically*. e.g., will run compiler before linker if needed. \n\nLimitations\n- doesn't handle subprojects\n- doesn't handle directories\n\t- when make look for changes, it usually only looks in the current dir\n\t- big projects will have call make is sub projects, this can get complicated quick\n- Internal variables do not match with typical shell variables\n\t- use \\$\\$ to use make shell variables\n- no real constraints or conventions: can \\betaused for a lot of things \n\n## Java programs\ndont really need the linking step: java can load class files on the fly. The java compiler is more flexible. \n\nStill needs some automation:\n- cleaing uneeded .class files\n- bulding Java archive files (JAR)\n\n## Ant\nWritten to handle build tasks, e.g., build a JAR, clean up files. Uses an XML file: build.xml. (XML sucks)\n\nimproves upon make by\n- better at scanning sub dirs\n- calls javac on many files at once not one at a time\n\n## Maven\nmaven has conventions:\n- e.g., file structure:\n\t- main app as src/main/java\n\t- support resources at src/main/resources\n\t- test sources at src/test/java\n- Support non java languages\n\nStill XML files: pom.xml\n\nColour in output. \n\n## Gradle\nspeed and flexibility\n- does not use xml\n- has its own domain specific language\n- more complex than maven\n- faster than maven\n\t- particularly in incremental build\n\t\t- i.e. not re-building when it doesn't need to\n- Support non java languages\n\n## Others\n- rake - ruby's version of Make\n- SCons - builds database about build state\n- CMake - cross platorm building; uses existing tools/IDEs\n- SBT scala\n- languge built in tools\n\t- go - Go build\n\t- rust - Cargo\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/bus":{"title":"bus","content":"\n\n- data bus\n- address bus\n- control bus\n\n- conmmunicate between parts of the computer\n- only one transmitter at a time\n- only addressed device can respond\n- 2 levels\n\t- internal\n\t- external\n\n- memory size is dependent on bus size\n\t- 2n bytes for n-lines on the address bus\n\t\t- 2^8=256B, 2^16=64KB, 2^32=4GB, 2^64=16EB","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/business-analyst":{"title":"business-analyst","content":"\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/business-functions":{"title":"business-functions","content":"\n- what the business ought to be doing\n- _not_\n\t- who, how, stucture, tech\n\neach business function becomes a set of features within an info system\n\n## 1 Id business functions\n- verb phrases\n\t- id what the business ought to be doing ⇒ e.g., \"accept payment from customer\"\n\t- id how =\u003e \"we accept payments online banking and credit card\"\n\t- always ask \"what is the objective\"\n- remove redundancies\n- model the id'd functions as _use cases_\n\n## 2 Use case\n\"A list of actions defining the interactions betweeen a role and a system to achiece a goal\"\n\nhigh level description of how people interact with a system\n\nstory of how the business works\n\nshould be:\n- simple\n- aimed at stakeholders\n- understandable by non-tech people\n- should use ubiquitous language\n- also useful for system devs\n\ncan use text (Cockburn, fowler) or diagrams (function catalog, UML case diagrams)\n\n## 3 UML\nunified modeling language\n- use case  - class - state - activity - sequence - deployment etc\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/business-process":{"title":"business-process","content":"\n- A sequence of tasks or steps required to carry out a particular business function e.g.,:\n\t- pocure new assets\n\t- apply for leave\n\t- process and orer\n\t- enrol a student\n- paper and or computer based processes\n- processes can have sub-processes ⇒ nested hierarchy\n- terminology\n\t- business processes are also know as workflows\n\t- activity usually means the same thing as tasl\n\n**example: processing an order**\n1. sales dept recieves and enters order into system\n\t1. system triugger automated credit check bu finance dept\n\t2. if credit not OK, STOP order\n2. warhouse staff fulfill order\n\t1. check availability in warehouse\n\t2. if any item out of stick transfer to back order process\n\t3. pack items for shipping\n3. finance dept generated invoice\n4. send shipment and invoice to customer\n\n\ne.g., www.otago.ac.nz/study/enrolment/index.html\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/business-process-model":{"title":"business-process-model","content":"\n- graphical depiction fo one ormore business proccesses\n- some variant of a flowchart\n- many different approaches\n\t- [BPMN](notes/business-process-model-and-notation.md)\n\t- [UML](notes/unified-modelling-language.md) [activity-diagrams](notes/activity-diagrams.md)  \n\t- data flow diagrams DFDs\n\t\t- good for [security](notes/security.md)\n\t- business process execution language BPEL\n\t\t- programm how a process with go\n\t\t- can be executed\n\t- subject oriented business process mangement (s-BPM)\n\t- and many more\n- may be execultable\n- developed alongside data [models](notes/models.md) ([ERDs](notes/entity-relationship-diagrams.md), [class-diagrams](notes/class-diagrams.md) etc)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/business-process-model-and-notation":{"title":"business-process-model-and-notation","content":"\nBPMN\n\n- graphical diagramming language\n- free international vendor standard developed by the object management group\n- shows only the order of activites\n\t- when, not under what conditions\n- do not:\n\t- detail the activites\n\t- describe how it is informed\n\n## 1 Components\n### 1.1 swimlanes\nidentify the business role for each activity\n\n### 1.2 Other features\n- looping back\n- types of branch gateway\n- parallel execution\n- collaboration with external entities (pools)\n- executable if using the right infrastructure\n\n## 2 Examples\n![](https://i.imgur.com/Bu4kNWk.png)\n![](https://i.imgur.com/kENP9iR.png)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/cheat-sheets":{"title":"cheat-sheets","content":"\n- [bash-tricks](cheatsheets/bash-tricks.md)\n- [git-cheat-sheet](cheatsheets/git-cheat-sheet.md)\n- [latex-cheat-sheet](cheatsheets/latex-cheat-sheet.md)\n- [puml-cheat-sheet](cheatsheets/puml-cheat-sheet.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/cia-triad":{"title":"cia-triad","content":"\nSecurity had been split into three main areas\n\n- Confidentiality -\u003e Information should be protected from exposure\n- Availability -\u003e Information should not be corrupted\n- Integrity -\u003e Information should be available users without obstacles\n\n\n![slide](https://i.imgur.com/GJfb8Ph.png)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/class-diagrams":{"title":"class-diagrams","content":"\n\n[General example](https://i.imgur.com/rFmUs5r.png)\n[ERD vs class diagram](https://i.imgur.com/1kO9BDk.png)\n\n## 1 Stereotypes\nadd further meaning to fields and methods\n- e.g., \u003c\u003c unique \u003e\u003e, \u003c\u003c abstrat \u003e\u003e, \u003c\u003c interface \u003e\u003e, \n\n## 2 Packages\ngroup classes together\nbreak system to logical chunks\npackage diagram, a class diagram with nothing but packages\n\n[Packages](https://i.imgur.com/UiXZeha.png)\n\n## 3 Associations\nUML anaglogue of ERD relationsips\n- multiplicity\n- realtionshpa nd role names\n\nPlUS\n- naviagability --\u003e instances of one class can pass messages to instances of another\n- several differnt types, e.g., composition, aggregation, associateive classes\n\n### 3.1 multuplicity\n![multiplicity-1](https://i.imgur.com/1dSergW.png)\n![multiplicity-2](https://i.imgur.com/4TKsBKd.png)\n\nERDsd effectively only do zero one many\nUML can to any non negative integer\ndefault is 1\n\n### 3.2 association names\n[named associations](https://i.imgur.com/btif86K.png)\n\n- usuallya verb phrase like \"assings\", \"manages\", \"enrols in\" ...\n- more useful is conpetual level diagrams\n- optional arrow head ()\n\n### 3.3 Role names\n[role names](https://i.imgur.com/3HEG9yN.png)\n\nAt conceptual level, indicates role of class in association.\n\nAt implementation level:\n- implies a field in class at opposite end\n- should include visibility\n- closely related to navigability\n\n### 3.4 Navigability\n[navigability](https://i.imgur.com/beoNmcQ.png)\n\nspecifies whether we can \"navigate from one end of an association to another\"\naffects how we code access paths between objects\n\ne.g.,\n- loan instance can see loanitem instances it contains via private field items\n- a loanitem instance can't see loan instance that contains it\n- must alwasy include relevant role names\n- no arrows = two arrows = bidirectional\n\n#### 3.4.1 why not always bidirectional\n\n- more complex code --\u003e many references/collections to manage\n- navigation paths are not all equally important\n\t- e.g., \"what items are in this loan\" vs \"what loans does this item appear in\"\n\t- determined by requrements and typical usage\n- some classes are more \"central\"\n\t- usually at the \"one\" end of accociations\n\t- often represent transactional entities e.g., loan, sale, order\n\t- navigability readiates outwards from them\n\nthere are exceptions as always e.g., patron \u003c-\u003e item\n\n\n### 3.5 Aggregation\n[aggregation](https://i.imgur.com/FI21bfD.png)\n\none class is made up of one or more other classes\ncontainer and content instances _can_ exist separately\nusually implied by multiplicity and navigability\n\ne.g.,\n- computer is made u of several components\n- library catalogue is made up of many items\n\n\n### 3.6 Composition\n[composition](https://i.imgur.com/2ryJXSM.png)\n\nstonger form of aggregation\ncontainer and content _cannot_ exist separately\nusually implied by multiplicity and navigability\n\ne.g., \n- building contains many rooms\n- loan includes several items\n\n- coicident lifetime\n- multiplicity at least 1 at both ends\n- deleting an containter must also delete all associated contents\n- creating a container should also create some contents\n\n\n### 3.7 Associative classes\n[associative classes 1](https://i.imgur.com/Rq91xGx.png)\n[associative classes 1](https://i.imgur.com/zzOlLV1.png)\n\n- used for conceptual design\n- similar to associative entities\n\t- many to many relationship with additional independent fields\n\t- resolved into class at implementation level\n\n### 3.8 Specialisation generalisation\n[specialisation and generalisation](https://i.imgur.com/kfI2YSe.png)\n\nclass inheritance\n- e.g., book and disc are subclasses of (specialise) Item\n- inherit all public fields and methods of superclass\n- can add their own fields and methods\n- Compare with specialisation of actors and use cases\n\n## 4 Domain class model\n[domain class model](https://i.imgur.com/JFHQOFA.png)\n\nonly modles the associations among concepts from problem domain\n\ncan be at conceptual level or implementation level\n\n## 5 System class model\n[system class model](https://i.imgur.com/KsQuCd5.png)\nModels associations among domain objects and system components; implementation level only\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/color":{"title":"color","content":"\n# Color\n- design grayscale first.\n- keep luminance values from grayscale when moving to color\n- use color harmonisers\n\t- ![](https://i.imgur.com/KdwaNzi.png)\n- about 5-8% of men are colorblind (red-green, blue–yellow, total color blindness)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/combinatorial-logic-circuit":{"title":"combinatorial-logic-circuit","content":"\n\u003e [!Definition]\n\u003e Combinatorial Logic Circuit is a circuit whose digital outputs are dependent only on its digital inputs\nThey can be described using logic expressions and therefore logic gates. We assume the outputs respond immediately^[1]\n\n- current flows from + to -\n- input to a unit (e.g., LED) is at the + end\n\nThey can be defined:\n- Using a truth table\n- Using [boolean-equations](notes/boolean-equations.md) ($Q\\ =\\ A+\\ B$) \n- Using graphical symbols\n\n# Notable Examples\n- ![1 Bit half adder](https://i.imgur.com/mjCVU4I.png)\n- ![1 Bit full adder: (includes carry input)](https://i.imgur.com/yu6kS83.png)\n- ![Ripple carry adder](https://i.imgur.com/HtEIZ5t.png)\n- 3 Bit parity Generator\n\t- Adds an extra bit to the input data so that the number of ones in the output is always odd\n\t- Used for error checking\n\t- [truth table](https://i.imgur.com/KDUiJbN.png)\n\t- [boolean equation](https://i.imgur.com/mwBpnlO.png)\n\t- [circuit](https://i.imgur.com/tsgDISC.png)\n- ![7 segment displlay](https://i.imgur.com/qtPmtwR.png)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/comp-210":{"title":"comp-210","content":"\n# Assignments\nNo final exam\n- [assignment 1](notes/ass01-security-audit)\n- [assignment 2](notes/ass02-repaired-system)\n\n# Notes\n- [information-security](notes/information-security.md)\n- [mccumber-cube](notes/mccumber-cube.md)\n- [access-security-tradeoff](notes/access-security-tradeoff.md)\n- [cia-triad](notes/cia-triad.md)\n- \n\n- \n- Risks\n- Ethics and Privacy\n- Cyrptography\n- Physical security\n- Electronic Forensics\n- Authentication\n- Pen-Testing\n\n# Lectures\n- [01-big-picture](notes/01-big-picture.md)\n- [02-concepts-and-roles](notes/02-concepts-and-roles.md)\n- [03-threats-social-engineering-and-failures](notes/03-threats-social-engineering-and-failures.md)\n- [05-crypography](notes/05-crypography.md)\n\n# Archive\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/compiler":{"title":"compiler","content":"\n# What are they/what do they do\n- used to build stored *programs*\n\t- usually program are written in a *high level*  *compiled*  language\n\t\t- C, C++, Java, C#, etc\n- Output machine code in binary\n\t- This can be loaded and run by hardware\n\n# Traditional Stages of Compilation\n**lexing**: This is the step where the source code is converted into *tokens*. A token is a \"meaningful substring of source code\".\n\ne.g.: `x = 10 + y` ⇒ `[var(x), ASSIGN, int(10), PLUS, var(y)]`\n\n**parsing**:*Token Steam* is converted to *abstract syntax tree* *(AST)* . This defines the structure of the program\n\ne.g.: above output ⇒ `assign(v(x), expression(add(10, v(y))))`\n\n**optimising**: Unreachable (dead) code is removed, and other optimisations are made\n\ne.g.:  `if(false){do stuff}` would be removed\n\n**emitting**: machine code is ouput to e.g., a binary file\n\n# Modern Stages of Compilation\nSince there are many new languages being released, it is no longer practical to design a compiler for each language. So we now split compilation info a *front end* and a *back end*\n\n**Front end**: Language specific, lexing and parsing. Outputs *compiler-internal intermediate* code\n\n**Back end**: Language agnostic, optimisation. Outputs machine code to target CPU hardware\n\n# Compiler families\n- GCC - Gnu compiler collection - old and messy code\n- LLVM - low level virtual machine - cleaner code - open-source\n- Microsoft and Intel compilers\n\t- ms compilers aim to support development for windows\n\t- mentioned before: Intel compilers optimise for Intel Hardware\n\n# Output\nCompilers usually ouput *object code*. This contains machine code, but is not yet exectuable. There is another stage [linking](notes/linker.md), where the object code is *linked* with together with libraries and other languages, and made exececutable. \n\n# Java Compilers\njavac produces JVm bytecode. this bytecode was orginally run on `java` [Interpreter](notes/interpreter.md). This extra layer was initally created to help with porting java on new hardware. Now `java` recompiles to java hardware CPU. This is done 'just-in-time' in RAM and doesn't ouput machine code. The JIT compiler is triggered when code is first (or repeatedly used). \n\n# Compiler errors\nProducing good error messages is important and difficult as the compiler doesn't usually know exactly where/what the error was. Errors can occur within expanded macros\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/computer-architecture":{"title":"computer-architecture","content":"\n# Stored program computer\n![](https://i.imgur.com/wxSfxiO.png)\n\nmade up of:\n- [CPU](notes/CPU.md)\n- [memory](notes/memory.md)\n- etc\n\n# Von Neumann Architecture\n- three key concepts\n\t- data and instructions are stored in a single read-write memory\n\t- contents of memory are addressable by location, without regard to the type of data contained\n\t- execution occurs in a sequential fashion, unless explicitly altered, from one instuction to the next\n- programs and data are the same thing\n\t- and so its possible to write soure code (data) and comile them into executables (programs) that can be loaded as data and then executed as programs\n\n# Early computers\n![motorola MC6809 CPU](https://i.imgur.com/yq74Ops.png)\n![circuit diagram for 6809](https://i.imgur.com/41F0tnH.png)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/conceptual-vs-ipmlementation-models":{"title":"conceptual-vs-ipmlementation-models","content":"\nModels like ERDs are used to represent a high level conceptual overview of a system, or to as a lower level specification that can drive the implementation of the database.\n\n**Conceptual\n\n- Abstract/big-picture\n- Useful in inital design stages and for communication\n\n**Implementation\n\n- Concrete/detailed\n- Useful in documenting and specifying structure (for devs etc)\n- Should be detailed and specific enough to allow a dev to implement it without having to guess at details\n- Should be tailored to the specific implementation technologies or systems\n- \n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/consistency-and-standards":{"title":"consistency-and-standards","content":"\n![](https://i.imgur.com/H8rlxo7.png)\n\ngood and bad\n- standards (user interface guidelines) are always chaning\n\ndiffer between platforms\nevolve over time\n\ne.g., menus\n\n![](https://i.imgur.com/IfaMADw.png)\n![](https://i.imgur.com/HqYzadh.png)\n\ngeneral look of webpages  evolves over time\n\n### 1.1 Naming and teminology\n\n![](https://i.imgur.com/3PwEOmn.png)\n\nthis is bad\nyou can ask users which categories they understand/know about \n\n### 1.2 Data loss\n![](https://i.imgur.com/23IxWiN.png)\n\nstandard to minimise loss\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/consoles-terminals-shells":{"title":"consoles-terminals-shells","content":"\n- console -\u003e io device which is part of a computer (physical terminal)\n\t- console is the device: -\u003e terminal is program inside that device\n- terminal -\u003e text input output environment (can be remote)\n\t- windows terminal\n- [[notes/shell]] -\u003e program which the terminal/console sends input to which sends command to the OS\n\t- [[notes/unix-shell]]\n\t- powershell\n\t- cmd\n\t- bash, fish, zsh, ksh, sh, tsch\n\n#### 0.1.1 BREIF HISTORY\n\n1. At first only main console\n2. Then multiple terminals which allowed mulitple people to use one computer\n3. Graphics support\n4. Console + terminal merged\n5. Virtual terminals -\u003e  no need for direct hardware control -\u003e replaced by OS\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/containers":{"title":"containers","content":"\n# What are (software) containers?\n\n- Containers encapsulate a computing environment \n- Facilitates portable and reproducible use of software \n- Can wrap up application code and data, and much of OS \n- Containers are lightweight virtual machines \n- You need to boot them up, as for any OS \n- . . . but containers start up very quickly\n\n# What containers do and don’t include \n- Containers are generally Linux (virtual) machines \n\t- Even when hosted on Windows, containers are usually Linux \n\t- Microsoft Windows containers do exist though \n- Containers include the OS user space \n\t- e.g., distributions: Ubuntu, Debian, Arch. . . \n- Containers do not include Linux kernel \n\t- ... because all containers share one instance of the Linux kernel \n- Containers can’t themselves include hardware device drivers\n\n# Using containers\n- We won’t explore how containers are hosted \n- COSC349 explores how the lightweight virtualisation works \n- We focus on using others’ containers \n- Making containers usable involves: \n- Management tools to control containers \n- Means for interacting with the containerised software \n- Somewhere from which to get their starter material. . .\n\n# Container registries\n- Containers’ start up from an image \n- Think of images as a hard disk template \n- Images efficiently overlay layers of files and folders \n- Container registries store and share images: e.g., \n- Docker Hub is a popular container registry \n- GitHub Container Registry (public; launched 2020) \n- GitLab Container Registry (private) \n- All major cloud providers provide registries \n- You can run on-site, private registry too\n\n# Example container interacting with files \n- Let’s build the containers lab website\n- Input: Markdown files\n- Output: HTML website \n- Can use this container within [CI](notes/continuous-integration.md) pipelines\n- Active container can rebuild ‘live’:\n- source files are watched for changes\n- changes trigger rebuilding target files\n- can reload browser to see changes rapidly\n- Note: this example is an optional part of containers lab \n\t- `docker run −−rm −−mount \\ type=bind, source=${PWD}, target=/srv/jekyll\\jekyll/jekyll:pages jekyllbuild`\n\n# Example container interacting over network \n- Lesson builder can host an internal web server\n- Point browser running on host computer to network URL\n- Thus test built website, not just opening HTML files within it\n- Container framework can share container’s network\n- Typically expose key network ports of container on host\n- Connections routed through to container\n- Usually connections limited to interactions with the host OS\n- . . . but containers can support internet-facing servers \n\t- `docker run −−rm − i t −−mount \\ type=bind , source=$ {PWD} , target=/srv/jekyll\\ −p127.0.0.1:4000:4000\\jekyll/jekyll:3jekyllserve`\n\n# Inter-container interactions \n - Can build apps by composing multiple containers\n\t - Either or both of file/network-based sharing commonly used\n - Need to consider how to orchestrate containers\n\t - Container orchestration is a COSC349 topic\n\t - e.g., coordinating multi-container start up\n - Kubernetes is the de facto container orchestrator\n\t - Creates reliable, scalable services from containers\n\t - Supported on all major cloud providers \n\n # FYI: example multi-container application \n - Example: say you need to chart time-series data\n - InfluxDB is a dedicated time-series database\n - Grafana is a dedicated web-based charting system\n - Both are large, complex software products\n - Containers allow using them together\n - . . . without needing to figure out how to install them\n - e.g., use Docker Compose tool; there are examples on GitHub\n - Managing more than a few containers?\n - Switch over to a container orchestration tool! \n\n # Managing containerised applications \n - Containers can (do!) suffer security vulnerabilities\n - Thus, need management just like any other OS\n - Many services can notify you about security flaws\n - e.g., your dependencies may have been patched\n - Can easily upgrade containers to include security fixes\n - Upgrading live containers may break applications\n - Common: whole container-based app is rebuilt \u0026 relaunched\n - Container frameworks themselves also get hacked\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/continuous-integration":{"title":"continuous-integration","content":"\n# 1 Overview\nContinuous integration (CI) is the practice of automating the integration of code changes from multiple contributors into a single software project -  [atlassian](https://www.atlassian.com/continuous-delivery/continuous-integration) . It allows you to automatically run tests, builds, etc when the code is changed. \n\n# 2 Pipelines, stages, jobs\nA continous integration can be defined as a *Pipeline* with several *stages*, each stage with several *jobs*\n\nA continuous integration pipeline will run whenever it is triggered. It can be triggered on a schedule, manually, or whenever code is changed. These pipelines run *asynchronously* i.e., the dev doesnt't have to wait for it to complete.\n\n# 3 Triggers\nPipelines can also be run locally, and can be triggered, as you, commit, save, type etc. \n\n# 4 Output\nPipeline can produce several forms of asynchonous output such as email notifications, web badges, webhooks, etc. In addition, most VCS hosting platforms capture the terminal logs from the CI scripts.\n\n# 5 Runners\nRunners are what run the CI jobs. They are hosted and run by your git [VCS](notes/02-version-control-system.md) hosting system. You can also elect to have your hosting system trigger run that run on your local machine if you want to test your software on certain harware. Runners run on isolated infrastructure that is set up as needed to handle load variation. \n\nThis is the basic gitlab infrastructure which uses google cloud\n![300](https://i.imgur.com/HTWz2mQ.png) ![300](https://i.imgur.com/V87CeQY.png)\n\n# 6 CI Website hosting\nDue to the need to share artifacts produces by CI, most repo hosting services now also host websites. These are static websites i.e., all content is fixed. These websites are produced using Static Site Generators (SSGs). The code is hosted on the repo, which a CI pipeline converts into HTML files and publishes automatically.\n\n# 7 How to create\nMost CI frameworks use YAML for configuration. YAML  has a structured text based format similar to python and json\n\nThe CI config (in gitlab it is named `.gitlab-ci.yaml`) file goes in the top level of the repo, and is version-managed. This file specifies the stages and jobs of a pipeline, as well as indicating where the output should go.\n\n# 8 Debugging\n[debugging](notes/debugging.md) concepts should be applied\n\n1st check yaml file\n\ncommands run from shell generate an exit code. This is stored in a variable called *$?*\n\nIf $? is non-zero, then the previous command failed. Your shell script can choose to hide this is the command is expected to fail\n\n# 9 Secrets\nIf you need the CI script to log in to something, your repo hosting service can store and pass *secrets* to scripts using shell environment variables. When doing this, you need to make sure the CI script is secure, other wise someone could simply change the scripts to `echo` these variables.\n\n# 10 Other tools can have CI-like functionality\ne.g.,\n- IDEs the compile code in background\n- latexmk to auto build latex files when they change\n- Git hooks (scritpts within .git/hooks)\n\t- informational: augment commit messages\n\t- pre-update: intecepts and check commit, push, rebase\n\t- pre-populate git messages\n\t- carry out post-update cleanup tasks\n\n[10-continuous-integration-1](notes/10-continuous-integration-1.md)\n[11-continuous-integration-2](notes/11-continuous-integration-2.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/control-unit":{"title":"control-unit","content":"\n# Control unit\n![](https://i.imgur.com/bQ4eA94.png)\n\n- coordinates the operation of the computer\n- generates control signals\n\t- connect registers to the bus\n\t- control the function of the ALU\n\t- provides timing signals to the system\n\nallso associated with the decoding and executuion of instructions in a pipelined system","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/cosc-201":{"title":"cosc-201","content":"\n# Assignments\n- [[notes/assignment-02]]\n\n# Analysis\n- [aymptotic-notation](notes/aymptotic-notation.md)\n- [induction](notes/induction.md)\n- [analysis-of-recursive-algorithms](notes/analysis-of-recursive-algorithms.md)\n\n# Paradigms\n- [divide-and-conquer](notes/divide-and-conquer.md)\n\t- [unite-and-conquer](notes/unite-and-conquer.md)\n- [dynamic-programming](notes/dynamic-programming.md)\n\t- [memoization](notes/memoization.md)\n\n# Data Structues\n- [union-find](notes/union-find.md)\n- [priority-queue](notes/priority-queue.md)\n- [dynamic-linear-datatype](notes/dynamic-linear-datatype.md)\n\t- [Stack](notes/dynamic-linear-datatype.md#Stack)\n\t- [Queue](notes/dynamic-linear-datatype.md#Queue)\n- [heap](notes/heap.md)\n- [treap](notes/treap.md)\n- [hash-map](notes/hash-map.md)\n\t- [linear-probing](notes/linear-probing.md)\n- [set](notes/set.md)\n- [tree](notes/tree.md)\n\t- [binary-search-tree](notes/binary-search-tree.md)\n\t- [balancing-binary-search-trees](notes/balancing-binary-search-trees.md)\n\t- [red-black-tree](notes/red-black-tree.md)\n\t- [avl-tree](notes/avl-tree.md)\n\t- [bst-operations](notes/bst-operations.md)\n\t- [tree-traversal](notes/tree-traversal.md)\n- [graphs](notes/graphs.md)\n\n# Algorithms\n- [mergesort](notes/mergesort.md)\n- [heapsort](notes/heapsort.md)\n- [[quicksort](notes/quicksort.md)]\n\n# Lectures\n- [07-mergesort-1](notes/07-mergesort-1.md)\n- [08-mergesort-2](notes/08-mergesort-2.md)\n- [09-stacks-queues-heaps](notes/09-stacks-queues-heaps.md)\n- [10-heaps-and-heapsort](notes/10-heaps-and-heapsort.md)\n- [11-sets-maps-trees](notes/11-sets-maps-trees.md)\n- [12-binary-search-tree-operations](notes/12-binary-search-tree-operations.md)\n- [13-bst-traversals-and-balance](notes/13-bst-traversals-and-balance.md)\n- [14-balancing-bsts](notes/14-balancing-bsts.md)\n- [15-dynamic-programming](notes/15-dynamic-programming.md)\n- [16-hasing-maps-sets](notes/16-hasing-maps-sets.md)\n- [17-collision-resolution-probing](notes/17-collision-resolution-probing.md)\n- [18-hash-examples](notes/18-hash-examples.md)\n- [19-graphs](notes/19-graphs.md)\n- [20-graphs-2](notes/20-graphs-2.md)\n\n\n# Archive\n- [16-c201-archive](notes/16-c201-archive.md)","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/cosc-202":{"title":"cosc-202","content":"\n# Assignment\n- [reflective-statement-plan](notes/reflective-statement-plan.md)\n- [reflective-statement](notes/reflective-statement.md)\n\n# Outline\n- [consoles-terminals-shells](notes/consoles-terminals-shells.md)\n- [git](notes/git.md)\n- [ethics-in-cs](notes/ethics-in-cs.md)\n- [integrated-development-environments](notes/integrated-development-environments.md)\n- [branch](notes/branch.md)\n- [testing](notes/testing.md)\n- [test-driven-development](notes/test-driven-development.md)\n- [unit-testing](notes/unit-testing.md)\n- [debugging](notes/debugging.md)\n\t- [imperative programming](notes/imperative-programming-language.md)\n- [documentation](notes/documentation.md)\n- [continuous-integration](notes/continuous-integration.md)\n- [automation](notes/automation.md)\n- [software library](notes/libraries.md)\n- [application-programming-interface](notes/application-programming-interface.md)\n- [containers](notes/containers.md)\n- [linker](notes/linker.md)\n- [loader](notes/loader.md)s\n- [operating-system](notes/operating-system.md)\n- [software-licensing](notes/software-licensing.md)\n- [[security](notes/security.md)]\n\n# Lectures\n- [07-testing](notes/07-testing.md)\n- [08-debugging](notes/08-debugging.md)\n- [09-documentation](notes/09-documentation.md)\n- [10-continuous-integration-1](notes/10-continuous-integration-1.md)\n- [11-continuous-integration-2](notes/11-continuous-integration-2.md)\n- [12-automation](notes/12-automation)\n- [13-code-librarires](notes/13-code-librarires.md)\n* [14-apis](notes/14-apis.md)\n- [15-containers](notes/15-containers.md)\n- [16-compilers](notes/16-compilers.md)\n- [17-linkers-and-loaders](notes/17-linkers-and-loaders.md)\n- [18-build-tools](notes/18-build-tools.md)\n- [19-security](notes/19-security.md)\n- [20-software-licensing](notes/20-software-licensing.md)\n- [22-open-source-software](notes/22-open-source-software.md)\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/cosc-203":{"title":"cosc-203","content":"\n- [page](https://cosc203.cspages.otago.ac.nz)\n- [labs](https://cosc203.cspages.otago.ac.nz/labs/)\n- [html validator](https://validator.w3.org/nu/)\n\n# Assignments\n- [front end project](notes/front-end-project)\n- [back end project](notes/back-end-project)\n- [ethics essay](notes/ethics-essay)\n\n# Notes\n- Web\n\t- [html](notes/html)\n\t- [css](notes/css)\n\t- [javascript](notes/javascript)\n\t- [react](notes/react)\n\t- [design](notes/design)\n - Databases\n\t- [databases](notes/databases)\n - Networks\n\t- [[]]\n - Other\n\t\n\n# Lectures\n- [01-basic-html](notes/01-basic-html.md)\n- [02-basic-css](notes/02-basic-css.md)\n- [03-more-css](notes/03-more-css.md)\n- [05-javascript](notes/05-javascript.md)\n\n# Archive\n\n# Info\n- [Course Calendar](https://i.imgur.com/76tMf5e.png)\n- [Contacts](https://i.imgur.com/UAAqXTJ.png)\n- [Assessments Information](https://i.imgur.com/ZQwUMnf.png)\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/cosc-204":{"title":"cosc-204","content":"\n[page](https://cosc204.cspages.otago.ac.nz)\n\n# Assignments\n\n# Notes\n- [ASCII](notes/ASCII.md)\n- [unicode](notes/unicode.md)\n- [digital-data](notes/digital-data.md)\n- [memory](notes/memory.md)\n- [boolean-equations](notes/boolean-equations.md)\n- [combinatorial-logic-circuit](notes/combinatorial-logic-circuit.md)\n- [logic-gates](notes/logic-gates.md)\n- [transistors](notes/transistors.md)\n- [demultiplexor](notes/demultiplexor.md)\n- [sequential-circuits](notes/sequential-circuits.md)\n- [bus](notes/bus.md)\n- [control-unit](notes/control-unit.md)\n- [CPU](notes/CPU.md)\n- [ALU](notes/ALU.md)\n- [computer-architecture](notes/computer-architecture.md)\n\n- Hardware\n- Assembly\n- C\n- Operating systems\n- OS Algorithms\n- Use of Resources\n\n# Lectures\n- [01-bits-and-bytes](notes/01-bits-and-bytes.md)\n- [02-combinatorial-logic](notes/02-combinatorial-logic.md)\n- [03-sequential-logic-circuits](notes/03-sequential-logic-circuits.md)\n- [04-computer-architecture](notes/04-computer-architecture.md)\n- [05-6809-assembly](notes/05-6809-assembly.md)\n\n# Archive\n\n# Info\nBy completion of this paper students are expected to:\n\t- Understand how programs are executed on computer hardware\n\t- Demonstrate an ability to read and write assembly language programs\n\t- Understand the fundamental principles and structure of an operating system\n\t- Be able to construct programs in C and understand its role as a systems programming language\n\t- Understand core operating systems algorithms such as process scheduling and resource allocation and management\n\t- Be aware of the importance of efficient use of resources from computational, economic, and environmental viewpoints\n\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/css":{"title":"css","content":"\nCss is used to stylise [html](notes/html.md) webpages.\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/daily-notes":{"title":"daily-notes","content":"\n# daily-notes\n","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/dark-patterns":{"title":"dark-patterns","content":"\nturniing patterns against the user. \nall the dsign heuristics can be used against the user\n\n- ![oxfam example](https://i.imgur.com/mn3oK05.png): defaults to a recurring payment\n- ![comet shop example](https://i.imgur.com/nGfdk7W.png): additional product is automatically included\n- ![complicated contract](https://i.imgur.com/mTJmqwa.png) \n- ![flight booking](https://i.imgur.com/6uwauOB.png) \n- ![amazon cancel prime](https://i.imgur.com/06htsKV.png)\n- hard to cancel facebook account\n- ![FOMO](https://i.imgur.com/Ikf0DiF.png)\n\nwho is the customer of free products like tiktik, facebook, instagram. WE are not the customer, we are the animals in the zoo, the products","lastmodified":"2022-07-27T23:05:09.090085898Z","tags":null},"/notes/data-access":{"title":"data-access","content":"\nMost infosystems require persistent data. e.g.,\n- save to file\n- save to database\nSome systems require several persistent data stores. e.g., multiple databases.\n\nThere are three main approaches:\n- [file-based-storage](notes/file-based-storage.md)\n- [database-based-storage](notes/database-based-storage.md)\n\n# How to manage persistent data access\n1. domain objects interact directly with the data store\n\t- write to file or send sql statements\n\t- not easy to change\n2. domain objects interact with data store via a mediator\n\t- either standalone class or implementation of a data access interface\n\t- [data-access-object](notes/data-access-object.md)\n\t- encapsulates all access to persistent data\n\n# JDBC\n[JDBC](notes/java-database-connectibity.md) is a Framework for working with (SQL) databases in Java. It was designed to be independent of the DBMS you are using. The same java code *should* work on all SQL DBMSs (*just* change the driver)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/data-access-object":{"title":"data-access-object","content":"\n# Designing DAOs\n- general rule: one DAO per \"logical unit\" of data access\n- many DAOs are just for one class e.g., `PatronDAO`\n- some involve many classes\n\t- things like header/lines objects are always managed together\n\t- complex operations that join multiple tables or domain classes\n- different use cases (features) use different sets of DAOs e.g.,\n\t- add, find, edit patron ⇒ `PatronDAO`\n\t- lend items ⇒ `LoanDAO`, `ItemDAO`, `PatronDAO`\n- object construction and deconstruction coded into DAOs\n\n# Multiple implementation of the same DAO\ne.g.,:\n- `PatronDAO` interface\n- `PatronCollectionDAO` class for in memore data\n- `PatronJdbcDAO` class for SQL databases\n- `PatronCsv` class for CSV files\n- all classes implement the `PatronDAO` interface\n\nHaving these options allows you to easily switch between, dev, test, and prod, and privileged and non privileged access\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/database-based-storage":{"title":"database-based-storage","content":"\n- managed by DBMS\n\t- usually SQL based\n\t- also noSQL for unstructured big data\n- advantages\n\t- multi user support\n\t- transactions (failure recovery)\n\t- (centralised) constraints and referntial integrity\n\t- flexible and ad-hoc querying\n\t* manage large data\n\n# Database APIS\nAPIs #unfinished \n\n- most dbmss have a native datbase api\n\t- usually proprietry and limited to just that product\n\t- often the only option for noSQL dbmss\n- also generic database apis\n\t- work with multiple dbmss\n\t- same code works with any supported dbms\n- for sql dbmss\n\t- ODBC microsoft\n\t- JDBC java\n\t- DB-API python\n\t- PDO php\n\t- DBI perl\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/david-hume":{"title":"david-hume","content":"\n# Art\n[054-hume-on-art](notes/054-hume-on-art.md)\n\nIn his essay [the standard of taste](Attachments/texts/david-hume-of-the-standard-of-taste-pdf.pdf) Hume sets out to determine how we can arrive at a universal standard of taste\n\n\"All sentiment is right; because sentiment has a reference to nothing beyond itself, and is always real, wherever a man is conscious of it.\"\n\n\"Beauty is no quality in things themselves: It exists merely in the mind which contemplates them; and each mind perceives a different beauty.\"\n\n\"A man in a fever would not insist on his palate as able to decide concerning flavours; nor would one, affected with the jaundice, pretend to give a verdict with regard to colours. In each creature, there is a sound and a defective state; and the former alone can be supposed to afford us a true standard of taste and sentiment. If, in the sound state of the organ, there be an entire or a considerable uniformity of sentiment among men, we may thence derive an idea of the perfect beauty; in like manner as the appearance of objects in day-light, to the eye of a man in health, is denominated their true and real colour, even while colour is allowed to be merely a phantasm of the senses.\"\n\n\"Strong sense, united to delicate sentiment, improved by practice, perfected by comparison, and cleared of all prejudice, can alone entitle critics to this valuable character; and the joint verdict of such, wherever they are to be found, is the true standard of taste and beauty.\"\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/debugging":{"title":"debugging","content":"\nremoving technical faults\nisolaing and remove technical faults\na human process\n- requires creativity/disipline/knowledge\n- deepr understanding of code\n\ndebuggers are tools to help debugging\n\n## 1 common approaches\n- temporarily add output of diagnostic info -\u003e \"printf\" debugging\n- permanently include calls to logging system -\u003e route to terminal, log files etc\n\n## 2 debugging machine code\n- cpu runs code instruction by instruction\n\t- thus debugger can intervene between instructions\n\t- most cpus help debugger interrupt and resume programs\n- cpu reached current code via a sequence of calls\n\t- called **stack trace** , aka back frame, stack frame etc\n- may reach point where it cannot continue\n\t- e.g., integer division by zero, program execution must stop\n\t- stack trace of stopped program can be analysed\n\n## 3 Imperative languages\nThese are languages that are executed in a step-wise, sequentail manner using the [imperative programming](notes/imperative-programming-language.md) paradigm\n  \n- debug symbols\n\t- e.g., method named, variable named\n- source code context\n\t- line numbers\n\t- variable name\n\t- function method names\n\n## 4 doing debugging\n### 4.1 stepping skipping running\n- step into --\u003e steps one statement and steps into function calls\n- step over --\u003e a step that treats function calls as statement\n- step out --\u003e return to the instruction after the function call you're in\n- continue  --\u003e go back to running code continuously\n\n### 4.2 controlling debugger execution\nCan run normally --\u003e debugger will run when program crashes\n\nBreakpoint --\u003e debugger will stop program when/if that line is reached\n- conditional breakpoints only suspend if a condition is true\n\nWatch point --\u003e program is suspended when some data changes (e.g., variables)\n\n## 5 debugging non imperative languages\ne.g, spreadsheet (Dataflow programming)\n- no breakpoints\n- must step through _iterations of computations_\n\ne.g., Equation\n- break into smaller parts\n- try 'compile' it in multiple ways\n\ne.g., Data base query (declarative programming)\n- -reexpressign the query and comaring can be useful\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/demultiplexor":{"title":"demultiplexor","content":"\n\n# Demultiplexor\n- Mutli way swtich where the address determines which output recieves the input\n\n![2 bit address diagram and truth table](https://i.imgur.com/XQteI3j.png)","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/dependencies":{"title":"dependencies-among-attributes","content":"\n# Functional Depenencies (FDs)\nIf for any given value of attribute A there is _exactly one_ associated value of attribute B, then A _functionally determines_ B (loosely)\n\nThis is the theoretical basis for [normalisation](notes/normalisation.md), and uniqueness property of PK (A is unique with respect to B)\n\n- one to one\n- Written as: A --\u003e B\n- Equivalently, \"B is functionally dependent on A\"\n- Within a single relation only\n- every attribute functionally dependent of primary key (PK)\n \n## Example 1\n- consdier a specific student ID e.g., 123346\n- this student ID is alwasys associated witha single studnet name (e.g., jane smith)\n- even it the students name changes, that student ID will still be asociated with the name of only that on student\n- *The value of student id determines the value of student name*\n\n## Other examples\n- student ID --\u003e student name (but not vice versa)\n- car registration --\u003e car owner (but not vice versa)\n\t- rego --\u003e VIN\n\t- VIN --\u003e rego\n- student ID --\u003e name, semester address, mobile number\n- car rego --\u003e owener name\n- IRD number + year --\u003e tax payable \n- product ID + order no --\u003e quantity ordered\n\n## Anti examples\n- student ID  + name --\u003e birth date (overkill, partial dependency)\n- home address --\u003e student name\n- name --\u003e birth date\n\ne.g.,\n![](https://i.imgur.com/J0FzURg.png)\n![](https://i.imgur.com/EMSOMmC.png)\n\n\n## Using Functional dependencies\nTo determine them:\n- need detailed knowledge of thebusiness rules\n- examine existing data sets\n\t- not always practical when these are large or unknown\n\nCan be represented using funcitonal dependency diagrams (FDDs)\n\nBottom up approach\n- ERD is \"top-down\"\n- FD best used as a design validation tool\n\n## Types of functional dependencies\n### Dependencies on more that one attribute\nnon primary attributes that are dependent on two or more attributes\nalways arise with composite PKs\ne.g., \n![](https://i.imgur.com/d4fUeRD.png)\n\n### Partial Dependency\nSubset of left hand side determines right hand side\n\"extra attributes\"\n\ne.g.,\n![](https://i.imgur.com/clpV0eU.png)\n\n\n### Transitive dependency\ne.g., \n- part num determines supplier number\n- supplier number determines supplier name\n- part number determines supplier name\n\nBUT 3 is already implied by 1 \u0026 2 --\u003e redundant supplier names\n![](https://i.imgur.com/VZbxVff.png)\n![](https://i.imgur.com/df0D7Lc.png)\n\n### Multivalued dependencies (MVDs)\nif for any given value of attribute A there is a _set_ of associated values of attribute S, the a _Multidetermines_ S (loosely)\n\n- one to many\n- written: A ↠ S\n- equivalently, \"S is multiply dependent on A\"\n- Generalistion of FDs: all FDs are MVDs, but not vice versa\n- A is still unique with respect to S\n\n![](https://i.imgur.com/938t9Kd.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/design-heuristics":{"title":"design-heuristics","content":"\n- [show-system-status](notes/show-system-status.md)\n- [familiar-metaphors-and-language](notes/familiar-metaphors-and-language.md)\n- [consistency-and-standards](notes/consistency-and-standards.md)\n- [user-freedom-and-control](notes/user-freedom-and-control.md)\n- [error-prevention](notes/error-prevention.md)\n- [recognition-over-recall](notes/recognition-over-recall.md)\n- [flexibility-and-efficiency](notes/flexibility-and-efficiency.md)\n- [aesthetic-and-minimalist-design](notes/aesthetic-and-minimalist-design.md)\n- [help-and-documentation](notes/help-and-documentation.md)\n- [recognise-and-recover-from-errors](notes/recognise-and-recover-from-errors.md)\n\n[anti-design-heristics](notes/anti-design-heristics.md)\n[dark-patterns](notes/dark-patterns.md)","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/designing-studies":{"title":"designing-studies","content":"\nNeed to be more specific than \"Do you like my interface\". Need to avoid experimenter bias\n\n# Terms\n- **Comparison:** What is good\n\t- \"Yark stick\"\n- **Baserate:** how often does Y occur\n\t- requires measurin Y\n- **Correlation:** Do X and Y co-vary\n\t- Requires measuring X and Y\n- **Causes:** Does X cause Y\n\t- Requires measuring X and Y and manipulating X\n- **Manipulations:** Indepenedent variables\n- **Measures:** Dependent variables\n\t- e.g., task completion time, recall, accuracy, emotional response\n- **Precision:** Internal Validity\n\t- remove confounding factors\n\t- large sample size\n- **Generlisability:** External Validity\n\t- does this apply in the real world\n\n# Strategies for fairer comparisons\nTwo main things differ between prototype and Production: Fidelity (how \"polished the design is\", Approach (the actual design)\n\n- insert your new approach into the production setting\n- recreate the production approach in you new setting\n- scale down so youre just looking at a piece of a larger system\n- when expertise is relevant, train people up\n\n## Bad example\n![iphone keyboard study](https://i.imgur.com/Gmski8F.png)\n\nmanipulation: input style\nmeasure: words per minute\nexternal validity: not so much\n\nbenefits and drawbacks\n- not a fair example: novices vs experts\n- are the results significant\n\n## Good example\nmanipulation: input style\nmeasure: words per minute and error rate\n\n![speed](https://i.imgur.com/RvBVWt2.png)\n![errors](https://i.imgur.com/GwYZOIA.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/designing-studies-video":{"title":"designing-studies-video","content":"\n[designing-studies](notes/designing-studies.md)","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/developer":{"title":"developer","content":"\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/digital-data":{"title":"digital-data","content":"\n# What is data\n- A fact — a piece of information\n\t- corresponds to discreete facts about phenomena from which we gain information abou the world\n- The concept of a *value* is fundamental to data\n\t- e.g., 25, $356.00, April, \"this is a sentence\", colours etc\n- Vaues are abstract, they are interpretations of data\n\t- There are many way of storing the same data\n\t- e.g., 12, twelve, XII, 1100, · ··, ·----··---\n\n# How computers represent data\n- In *Binary*\n- Stored in one of two states, true/false, 1/0, on/off, voltage/no voltage\n- Each instance of a state is called a *bit*. (binary digit)\n- *Values* are represented as a sequence of bits.\n\t- e.g., 1000001\n\t- The computer doesn't \"know\" what any given sequence means, **you** know.\n\t- could be 65, A, or anything **You** want it to mean\n\n# Bits, Nibbles, Bytes\n-  The smallest unit of storage is a buit (0 or 1)\n- (for convenience) bit are grouped into larger units.\n\t- a nibble is 4 bits\n\t- a byte is 8 bits\n- For convenience bytes are given addresses, not nibbles or bits. (they are too small to work with most of the time)\n\n# Memory\nData is stored in [memory](notes/memory.md)\n\n# A Word of memory\n- The word is the number of bits the cpu uses internally, varies between manufacturers and CPUs.\n- Now its usually 64 bits\n- [amount of bits for different devices](https://i.imgur.com/nHrz1zX.png)\n\n# Characters\n- A written symbol.\n- In english are represented as a single byte, (other languages use 2 bytes or more)\n- e.g., [different types of characters](https://i.imgur.com/DBLVhw8.png)\n\n- characters are joined together to make human readable numbers and words\n\n- `char ch` \n- ch is a variable name (identifier) \n- used to label a location in the computer's memory where a byte is stored\n- when the code is compile, the name is assigned an address, in memory. The meaning of that data depends on how a human interprets it. it might be small integer, or a character, or a color etc.d\n\n- each byte (or group of bytes) represents a number which maps to a character using a mapping like [unicode](notes/unicode.md) or [ASCII](notes/ASCII.md)","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/direct-manipulation-video":{"title":"direct-manipulation-video","content":"\ne.g., better measuring cup\n\nford qquote about faster horse\n\nfour insights\n- both transit and cookware simply asking doesn't work\n- find out by going into the field\n- bring protoypes with you\n- listen to peoples own designs\n\ntwo steps each has success or failure\n- action --\u003e gulf of execution\n- evaluating the outcome --\u003e gulf of evaluation\n\n6 questions\n- determine the function\n- tell what actions\n- determine actual action\n- perform the actions\n- tell what state\n- mapping from system state and interpretation\n\nto reduce gulfs\n- visibility (perciebves affordances or signifiers)\n- feedback \n- consistency (standards)\n- non-destructive operations (undo/redo)\n- discoverability (operations discovers by exploration)\n- reliability\n\ne.g., vending machine example \n\n\n# Command line vs GUI\n\ne.g., moving a file\ngui - have continuous feedback\ncmd - have to know syntax, almost no feedback\n\ndirect manipulation\n- immdediate feedback\n- continuous represntations of objects\n- leverage metaphor (take advangates of pre-existing knowledge)\n\nsuccessful  indirection. cmd provides generalisation\n\n\neye to the future: gestures\n- solutions to menu creep?\n- even more direct?\n\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/divide-and-conquer":{"title":"divide-and-conquer","content":"\nDivide an conquer algorithms have three parts:\n\n1. pre ⇒ break apartinto two or more smaller problems whose size add up to at most n\n2. Rec ⇒ solve those problems recursively\n3. post ⇒ combine solutions into a solution of the original problem\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/docker-containers":{"title":"docker-containers","content":"\nlink:https://www.youtube.com/watch?v=eGz9DS-aIeY\n\nwhere virtual machines virtualise hardware, docker virtualises OSs. Each of the containers uses the same underlying kernel. This is why its so fast. It is also why you cant run a windows OS and a Linux OS at the same time - because they use different kernels.\n\nCrontrol groups control how much OS resources each container can use.\n\nVM:\n- hardware\n\t- hypervisor\n\t\t- windows\n\t\t- ubuntu\n\t\t- debian\n\t\t- etc\n\nDocker\n- hardware\n\t- ubuntu\n\t\t- docker\n\t\t\t- debian\n\t\t\t- ubuntu\n\t\t\t- windows\n\t\t\t- etc\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/documentation":{"title":"documentation","content":"\n## 1 Who, what where\n- Audience\n\t- users\n\t- other devs\n\t- your team members\n\t- anyone trying to understand you software\n\t- your future self\n- Locations\n\t- source code\n\t- project repo\n\t- emebedding in program\n\t- hosted separately\n- User expectations\n\t- evolving towards software that _facilitates experimentation_\n\t\t- No help docs =\u003e everything is self-explanatory\n\t- high usability\n\t- users familar with many abstractions\n\t\t- e.g., touchscreens, menus, links\n- API's\n\t- for devs writing code to interact with your code\n\t- typically coupled with docs\n\t- entirely technical audience --\u003e tool generated docs are okay\n\t- not self explanatory\n\t- used by devs unfamiliar with code base\n- Project Docs\n\t- meaningful commit msgs\n\t- extra mangement with e.g., github\n\t\t- issue tracking\n\t\t- ensures relevant material is cross linked where possible\n\t\t- can easily refer to source code\n- Source code docs\n\t- header comments\n\t\t- software licencing\n\t\t- support devs\n\t\t- indicate code ownership\n\t- in code comments on fields methods etc\n\t\t- keep in sync with code changes\n\t- descriptive variable/class/other names\n\t\n## 2 Built in language support\n- basic\n\t- syntax for code comments\n\t- indicate that the compiler should ingnore\n\t- also more advanced like python \"doc strings\"\n- Structured comments and docs\n\t- machine parseable comments\n\t\t- e.g., javadocs, perl plain old docs\n\t\t- creates a doc website\n\t\t- uses annotations e.g., @author, @returns, @param\n- Literate programming\n\t- donald knuth suggestions (1984)\n\t\t- source code should be primarily natural language documentation\n\t\t- executable code snippetrs are included within the description\n\t\t- tools are used to:\n\t\t\t- tangle the code snippets\n\t\t\t- weave out the documentation\n\t- Modern implementations\n\t\t- jupyter notebooks\n\t\t- swift playgrounds\n\t\t- r markdown\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/domain-driven-design":{"title":"domain-driven-design","content":"\n\u003eA method of designing software by designing models of the domain and creating software which conforms to those models\n\nUbiquitous language -\u003e The language a team agrees on to describe ideas in the problem domain\n- This laguage becomes more and more refined as it is used\n- This reduces misunderstandings\n\nDiagram:\n```mermaid\n\tflowchart LR\n\tsubgraph Tactical Design Tools\n\t\tsubgraph Service\n\t\t\tdirection TB\n\t\t\tB(Project)\n\t\t\tC(Layers)\n\t\t\tD(Modules)\n\t\t\tE(Design Patters)\n\t\t\tF(OOP)\n\t\t\tG(Classes)\n\t\t\tH(Objects)\n\t\t\tI(Exe, jar, zip)\n\t\tend\n\tend\n```\n\n``` mermaid\n\tflowchart LR\n\tsubgraph  Strategic Design Tools\n\t\tdirection LR\n\t\tDomain--\u003eSub-Domain1--\u003eService1\n\t\tDomain--\u003eSub-Domain2--\u003eService2\n\t\tDomain--\u003eSub-Domain3--\u003eService3\n\tend\n\n```\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/dotnet":{"title":"dotnet","content":"\n.NET is an open source developer platform for building different types of apps. \n\nA developer framework is Langages and libraries that you use.\n\nYou can use:\n- c#\n- f#\n- VB\n\non:\n- .NET core for Windows, Linux, and macOS\n- .NEt framework for websites, services, and apps on windows\n- Xamarin/Mono for mobile.\n- .NET Standard --\u003e the shared set of libraries for the above.\n\n\nASP.NET is an open source web framework for building webapps within .NET. It is cross platform\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/dynamic-linear-datatype":{"title":"dynamic-linear-datatype","content":"\nBoth are Dynamic linear data types (interface) \n\nAn abstraction of a collection of data organised \"in a line\" which supprts addition of new elements and the removal of (some) old elements\n- representation\n\t- array (preffered because of memory management)\n\t- linked list (seems more natural)\n\t- and others\n\n# Stack\nLIFO Last in first out\n\nCan be used using javas `ArrayDeque` `push` and `pop` methods\n\n# Queue\nFIFO First in first out\n\nCan be used using javas `ArrayDeque` `add` and `remove` methods\n\ne.g., [priority-queue](notes/priority-queue.md)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/dynamic-programming":{"title":"dynamic-programming","content":"\nA method of designing algorithms, where a higher amount of space is used, in order to gain reduction in time. This usually done by *remembering previous calculations*. Typically these algorithms are done *bottom-up* i.e., by computing the \"base case\" first. \n\nRecursive algorithms can often be converted to counter-controlled for/while loops by:\n- initialising memory for answers\n- working from the bottom up\n- returning the answer\n\n```java\npublic long fibDP (int n) {\n\tlong[] f = new long[n+1];\n\tf[0] = 1; f[1] = 0;\n\tfor(int i = 2; i \u003c= n; i++){\n\t\tf[i] = f[i-1] + f[i-2];\n\t}\n\treturn f[n];\n}\n```\nA similar effect can be achieved using *memoization* (caching)\n\n# DP vs memoization\nA DP algorithm will typically compute *all* simpler versions of the problem from the bottom up. When this is neccessary then DP will be faster. However if only a small proportion of the simpler cases are actually needed it may be better to use memoization. Sometimes we can reduct the storage need for DP too. e.g., in the following fibonacci example\n\n```java\npublic long fibDP (int n) {\n\tint a = 1, b = 1, c = 1;\n\tfor(int i = 2; i \u003c= n; i++){\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}\n```\n\n**Note:** Divide and conquer algorithms cannot be sped up by DP as Divide and Conquers splits into chunks with *no overlap*. This means there is nothing to remember by remembering previous calculations.\n\n# Route Counting Example\n\n![](https://i.imgur.com/AKl2fY5.png)\n\nCompute the number of routes from A to Z travelling only east or south.\n\nNumber of routes to Z is the sum of the number of routes to Z's western and northern neighbors. This is true for all nodes except for the edges.\n\nThe ideas to to fill the grid with numbers, where each node is the sum of its preceding neighbors. \n\n```java\npublic long count(int rows,int cols){\n\tlong[][] counts = new long[rows][cols];\n\t//init edges to 1\n\tfor (rows){\n\t\tfor (cols){\n\t\t\tcounts[r][c] = counts[r-1][c] + counts[r][c-1];\n\t\t}\n\t}\n\treturn counts[rows-1][cols-1];\n}\n```\n\n- since we can copute all the values in one row just from the preceding row, we could reduce the extra space requirement from rows x cols to just cols\n\n# Fibonacci numbers example\n\n$f_{0}= f_{1}= 1, f_{n}=f_{n-1}+ f_{n-2}\\ for\\  n \u003e 1$\n\nthe obvious recursive implementation requires exponential time becuase the recursive sub-problems\n- compute $f_n-1$, and\n- compute $f_n-2$\noverlap (the first generates an instance of the second in the next recurive call)\n\nDP says \"since you know you're goinf to need the values later, remember them as you compute them\", and (technically), does one more thing. \"while youre at it, since you need to know all the values, you might as well compute from simplest to most complex (bottom up)\"\n\nconvert recursive algorithms to counter controlled for or while loops.\n\n```java\npublic long fibDP (int n) {\n\tlong[] f = new long[n+1];\n\tf[0] = 1; f[1] = 0;\n\tfor(int i = 2; i \u003c= n; i++){\n\t\tf[i] = f[i-1] + f[i-2];\n\t}\n\treturn f[n];\n}\n```\n\n- initialise memorrt to store the answers for simpler problems\n- work from bottom up\n- return answer\n\n```java\nstatic HashMap\u003cInteger, Long\u003e fib = new HashMap\u003c\u003e();\npublic static long fibMEM(int n) {\n\tif(n \u003c= 1) return 1;\n\tif(!fib.containsKey(n)) {\n\t\tfib.put(n, fibMEM(n-1) + fibMEM(n-2));\n\t}\n\treturn fib.get(n);\n}\n```\n- this technique is called memoization (or caching)\n- whenever you compute a result store it somewhere before returning it\n- look it up(if you can) when needed\n- supported automatically in some languages (e.g., Python's @functools.cache, and any symbolic programming language)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/entity-relationship-diagrams":{"title":"entity-relationship-diagrams","content":"\n![](https://i.imgur.com/SIgTzZ5.png)\n\ncardinality\nidentifying vs non identifying relationship\n\nlabels are important - but not always needed\n\nassociative entity =\u003e changes many to many relationship with additional relationship\n\n# subtypes\n![](https://i.imgur.com/5sgPCxO.png)\n![](https://i.imgur.com/Q0jMI3b.png)\n\nuses:\n- model mutual exclusivity\n- better for modelling not for implementation\n\n# parallel relationship\n![](https://i.imgur.com/UJXPI1l.png)\n\ncould model as separate relationships via staff subtypes\nnot very common\n\n![](https://i.imgur.com/niEL1Y2.png)\n\nalso an example of recursive many-to-many relationships\n\n# recursive relationship\nlabels are critical\nusually 1:M can be 1:1 or M:M\n![](https://i.imgur.com/CaEgEkp.png)\n\n# dealing with data history\n![](https://i.imgur.com/cohxggK.png)\n\ncould be many to many relationships:![](https://i.imgur.com/g4ynsh2.png)\n\nso associative relationship: ![](https://i.imgur.com/NXxsJRl.png)\n\nwhat do we require:\n- for the current point in time\n- an histroical record how ⇒ must be selecetive to not use up to much space\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/error-prevention":{"title":"error-prevention","content":"\n### 2.1 Bad input\n\n![](https://i.imgur.com/54tVH7B.png)\n\ncorrect human errors\nauto completion\n\n### 2.2 helpful constraints\n\n![](https://i.imgur.com/n4HT5L9.png)\n\n### 2.3 Suggestions and autocorrection\n\n![](https://i.imgur.com/c2l9MWy.png)\n\nheavily abused by industry\n- they can influence suggestions\n\n### 2.4 Forgiving formatting\n\n![](https://i.imgur.com/ldZUMer.png)\n\n- reduce errors\n- \n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/ethics-in-cs":{"title":"ethics-in-cs","content":"\n## 1 Case studies\n\n1. [[notes/facial-recognition-in-US-riots-2021-01-06]]\n2. [[notes/anti-govt-protest-china]]\n3. [[notes/how-is-safe-enough-for-autonomous-vehicles]]\n\n### 1.1 Differences 1 vs 2\nGovt vs vigilante\n\nmy judgements contain additionl context\n\te.g., pro-democratic vs anti\n\t\nworld contains vast differences\n\thow systems of laws work\n\textent of civil liberties afforded to individuals\n\n### 1.2 Discussion\nWhen developing a technology you dont know what is could be used for\n\n## 2 Ethical handling of data\n- Data moves very quickly due to computerised systems\n- privacy act 2020\n- its unethical to ignore potential security problems\n\t- df\n\n## 3 Ethical handling of bias and errors, e.g., in AI\n- large datasets oftenb incdlude bias and errors\n\t- to AI trained on these datasets with also be biased\n\t- e.g., facial recognition trining overrepresenting white males\n- ML algorithgms are often opqaue\n\t- its not possible to understand how decisions are reached\n\t- makes asessing suitability of AI for a use case difficult\n- explainable AI\n- attacks e.g., 'trapdoors' within ML training data \n\n## 4 False or misleading claims\n- pressure to release can lead to false claims\n\t- are features fully tested\n- need to assess risks of bias\n- e.g., AWS uptime information\n\t- rumoured that service status colour is n management decision\n\t- \n\n## 5 Your responsibility\n- dont stay silent\n\n## 6 Professional reponsibilities\n- comp science per se lacks profressional standards\n- there are some prefessional bodies which encoede responsibilities\n\t- ACM coc\n\t- IEEE coc\n\t- neither are specific to NZ\n- Within NZ must consider treaty obligations\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/evaluating-designs":{"title":"evaluating-designs","content":"\n#unfinished \n\nWhy to evaluate using 'outside' people:\n- how do we know if a [prototye](notes/prototyping.md) is good\n- designer/developers are not 'fresh' -\u003e they already have experience with the product\n- designer/developers don't know what real users will do\n\n# Issues to consider\n- Reliability/precision\n\t- how accurate is your study?\n\t- Is is reproducible -\u003e if it was repeated, would you get the same result\n- Generalizability\n\t- Is your sample representative\n- Realism\n\t- Would observed behaviour also occur in the wild\n- Comparison\n\t- Shows how different options were recieved\n\t- rather than a \"people liked it\" study\n- work involved/efficiency\n\t- How cost efficient are your methods\n\n# Factors to consider when choosing an evaluation method\n- Stage in the cycle at which the evaluation is carried out -\u003e (design / implementation)\n- Style of evaluation -\u003e (lab / field)\n- Level of subjectivity or objectivity\n- Type of measurement -\u003e (qualitative / quantitative)\n- Information provided -\u003e (high-level / low-level)\n- Immediacy of response -\u003e (real-time / recollection of events)\n- Level of interference implied -\u003e (intrusiveness)\n- Resources required -\u003e (equipment, time, money, subjects, expertise, context) \n\n# Styles of evaluation\n## Laboratory Studies \n- 1st step: Designer evaluates his/her UI\n- Specialised equipment for testing available\n- Undisturbed (can be a good or bad thing) \n- Allows for well controlled experiments\n- Substitute for dangerous or remote real-world locations\n- Variations in manipulations possible / alternatives\n\n## Field Studies\n- Within the actual user’s working environment\n- Observe the system in action\n- Disturbance / interruptions (+/-)\n- Long-term studies possible\n- Bias: presence of observer and equipment\n- Needs support / disturbs real workflow\n\n# Quantitative vs Qualitative methods\n## Quantitative Measures\n- Usually numeric\n- E.g. # of errors, time to complete a certain task, questionnaire with scales\n- Can be (easily) analysed using statistical techniques\n- Rather objective\n- Most useful in comparing alternative designs\n- Test hypotheses\n- Confirm designs\n\n## Qualitative Measures\n- Non-numeric\n- E.g. survey, interview, informal observation, heuristic evaluation\n- Difficult to analyse, demands interpretation\n- Rather subjective \n- User’s overall reaction and understanding of design\n- Generate hypotheses\n- Find flaws\n\n# Stage in cycle\n## Design Stage\n- Only concept (even if very detailed) exists\n- More experts, less users involved\n- Greatest pay-off: early error detection saves a lot of development money\n- Rather qualitative measures (exceptions: detail alternatives; fundamental questions, ...)\n\n## Implementation\n- Artefact exists, sth. concrete to be tested\n- More users, less experts involved\n- Assures quality of product before or after deployment; bug detection\n- Rather quantitative measures (exceptions: overall satisfaction, appeal, ...)\n\n# Methods\n## Usability studies\n- Bringing people in to test Product\n\t- Usage setting is not ecologically valid - usage in real world can be different\n\t- can have tester bias - testers are not the same as real users\n\t- cant compare interfaces\n\t- requires physical contact\n## Surveys and focus groups\n+ quicly get feedback from large number of responses\n+ auto tally ressults\n+ easy to compare different products\n- responder bias\n- Not accurate representation of real product\n* e.g., [](https://i.imgur.com/midv8VU.png)\n\n* Focus groups\n\t* gathering groups of people to discuss an interface\n\t* group setting can help or hinder\n\t\n## Feedback from experts\n- Peer critique\n- Dogfooding\n\t- Using tools yourself\n- [heuristic-evaluation](notes/heuristic-evaluation.md)\n\t- structured feedback\n\n## Comparative experiments\n- in lab, field, online\n- short or long duration\n- which option is better?\n- what matters most?\n- can see real usage\n- more actionable\n\n## Participant observation\n- observe what people do in the actual evironment\n- usually more long term\n\t- find things not present in short term studies\n- [observation](notes/participant-observation.md)\n\n## Simulation and formal models\n- more mathmatical quantitative \n- useful if you have a theory to test\n- often used for input techniques\n- can test multiple alternatives quickly\n- typically simulation is used in conjugtion with monte carlo optimisation\n\n# Query techniques\n- [interviewing](notes/interviewing.md)\n- questionnaires\n\t- less flexible\n\t- larger samples possible\n\t- design of questionnaire is for expert only\n\t- use of standard (proven) questionnaires recommended\n\t- types of questions: \n\t\t- general (age, gender)\n\t\t- open ended \n\t\t- scalar (e.g., likert-like scales)\n\t\t- multiple choice\n\t\t- ranking\n\n# Users\n- users can come up with great ideas\n\t- lead user -\u003e need specific soluton that does not exist -\u003e often make up their own solution\n\t- extreme user -\u003e use existing solution for it's intended purpose to an extreme degree \n\t- typical user -\u003e \n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/extreme-programming":{"title":"extreme-programming","content":"\ntake current industry practices to the extreme\n- focus of proven industry practices\n- combine them innovatively to get better results\n\n# 1 Values and principles\ncommunication, simplicity, feedback, courage.\n- Planning -\u003e based on user stories \n- Testing -\u003e thorough testing at every step \n- Pair programming -\u003e watch, inspect, and trade off \n- Simple designs -\u003e based on agile modelling principles \n- Refactoring -\u003e redo and clean up as you go \n- Collective code ownership -\u003e egoless development, anyone can review and improve code \n- Continuous integration -\u003e grow the software continuously\n- On-site customer -\u003e get sign-off as you go \n- System metaphor -\u003e what should the final system look like? Small releases given to users frequently \n- Forty-hour work week -\u003e don’t overload the developers \n- Coding standards -\u003e follow industry standards for code\n\n# 2 Three ring project approach\n\n![](https://i.imgur.com/Rl5Wuwm.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/facial-recognition-in-US-riots-2021-01-06":{"title":"facial-recognition-in-US-riots-2021-01-06","content":"\ncapital riots occured on 2021-01-06\n\nthere was video from the riots which contained faces\n- facial recognition acquired a pic of each person\n- faces were uploaded to a website\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/familiar-metaphors-and-language":{"title":"familiar-metaphors-and-language","content":"\n![](https://i.imgur.com/sdNv98E.png)\n![](https://i.imgur.com/IbIBK5t.png)\n\nimitating familiar real life\n\nCategories\n- good\n\t- ![](https://i.imgur.com/7wRRBii.png)\n- bad\n\t- ![](https://i.imgur.com/vDKOuOo.png)\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/file-based-storage":{"title":"file-based-storage","content":"\ndoesn't scale well\n\n- demlimited text e.g., CSV TSV\n\t- easy to create and process\n\t- portable\n\t- lowest common denominator\n- structured text e.g., JSON, XML, YAML\n\t- many tools for querying and transforming data\n\t- portable also\n- Serialiased data Structures (*usually* binary)\n\t- more compact\n\t- easy to do\n\t- single user only\n\t- no automatic failure recovery\n\t- no querying\n\t- versioning issues\n\t- no standards\n\t- less portable\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/finite-state-machine":{"title":"finite-state-machine","content":"\nA finite state machine is a program which has a number of states called nodes with transition edges between them. You then move the state of the program to a particular state by navigating through the edges.\n\nThis can be implemented as a large switch block. However, this results code which is not suited for readability. It may be useful to define the program using some higher order structure, and create it programmatically via [2 1 Using code to create code](notes/12-automation#2%201%20Using%20code%20to%20create%20code)\n\nFor example something like a phone machine could be implemented as a finite state machine\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/flexibility-and-efficiency":{"title":"flexibility-and-efficiency","content":"\n### 4.1 Choices\n\n![](https://i.imgur.com/lUBB7EN.png#invert)\n![](https://i.imgur.com/1OaTaPg.png#invert)\n![](https://i.imgur.com/8KaFDme.png#invert)\n\nsomething with immediate effect can use switch\n![](https://i.imgur.com/COR8E7w.png#invert)\n\n![](https://i.imgur.com/EQbB1Ep.png#invert)\n![](https://i.imgur.com/QhFssbP.png#invert)\n![](https://i.imgur.com/PG2Iu9a.png#invert)\n\ngood defaults\n\n![](https://i.imgur.com/pj5Ztij.png)\n\n4.2 shortcuts and advanced options\n\n![](https://i.imgur.com/0OG7qRx.png)\n\nambient information\n\n![](https://i.imgur.com/s2zyIws.png)\n\nproactivity\n\n![](https://i.imgur.com/gmDLWMO.png)\n![](https://i.imgur.com/Izu8bQX.png)\n![](https://i.imgur.com/hiGeXW3.png)\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/front-end-project":{"title":"front-end-project","content":"\n[spec](https://cosc203.cspages.otago.ac.nz/assignments/a1/)\n\n\nLinks to sites:\n- https://jethughes.github.io/nzbirds/\n- https://cosc-203.cspages.otago.ac.nz/assignment-01/\n\nLinks to repos:\n- https://github.com/JetHughes/nzbirds\n- https://altitude.otago.ac.nz/cosc-203/assignment-01\n\n\n| Features                                                         | marks | x  |\n|------------------------------------------------------------------|-------| -- |\n| Display: all photos by default                                   | 2     | x  |\n| Display: each bird’s name in both Māori and English              | 2     | x  |\n| Display: each bird’s conservation status in both text and colour | 2     | x  |\n| Display: credit for each photo                                   | 1     | x  |\n| Form: search filtering                                           | 3     | x  |\n| Form: category filtering                                         | 3     | x  |\n| Form: Handle special characters (diacritics)                     | 1     | x  |\n| Correctness: pass the W3C Validator                              | 1     | x  |\n| Correctness: correct use of form and semantic elements           | 1     | x  |\n| Style: Responsive design                                         | 1     |   |\n| Style: looks nice                                                | 1     | x  |\n| Extra feature(s) bonus marks                                     |       |    |\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/full-assignment":{"title":"Milestone 3","content":"\n# Brain Storming\n## Concept 1 - Snowboard trick generator. \nThis will be a mobile app that snowboarders can use to automatically generate random tricks. This app will be useful because snowboarders (riders) often get tunnel vision on a certain style of tricks or even a single trick. Using a algorithm to generate tricks provides a way for them to escape this focus. It can also be used when playing a game of SNOW, which is similar to a game of SKATE.\n\n## Initial Ideas\n- customisable trick generator\n\t- trick lists --\u003e users can create lists for the generator to choose a trick from\n\t\t- some built in lists\n\t\t- share lists with friends\n\t- options\n\t\t- trick types\n\t\t\t- jump\n\t\t\t- rail\n\t\t\t- pipe\n\t\t\t- butters\n\t\t- flips\n\t\t- spins\n\t\t- grabs\n\t\t- spin direction\n\t\t- bring back or not\n\t\t- stance\n\t\t\t- regular\n\t\t\t- goofy\n- daily trick\n\t- same for all users?\n\t- auto notification\n\t- schedule\n\t\t- weekly\n\t\t- custom\n\t\t- auto when at an altitude\n- App widget with daily trick? \n- search for tricks\n\t- options similar to generator\n\t- save tricks to a list for generator\n- link with other users\n\t- methods\n\t\t- qr code\n\t\t- url/link\n\t\t- contact\n\t\t- social media\n\t- people\n\t\t- friends\n\t\t- coach\n\t\t- parents\n\t- features\n\t\t- daily/sheduled trick group\n\t\t\t- how would this work with altitude detector\n\t\t- share trick lists\n\t\t- community section for trick lists\n\t\t\t- like spotify playlists\n\t\t- users can share tutorials\n- Ease of use - (hard to use with gloves)\n\t- voice controls\n\t- gesture controls\n- goals tracking\n\t- goal lists\n\t- daily/weekly/yearly goals\n\t- trick generator can choose a trick from goals\n\t- share (or keep private) with coach and friends\n\t- trick tutorials\n\n## Final Choices\nCore features:\n- customisable generator\n\t- all options no trick lists\n- daily trick\n\t- Notification\n\t- able to set a schedule or have it go when at an altitude\n- links with friends\n\t- Do same tricks\n\t- link with QR code or url\n\nThe first core feature of the app is the customisable trick generator. It should be very easy and quick to use. This presents an interesting problem as while snowboarding, users are wearing large mittens, and the air can be very cold for hands. It would be ideal if it could be used while wearing mittens. \n\nThe second core feature of the app is the Daily Trick. This means that users get a notification with a random trick from the trick generator. This feature could allows users to get the benefit of the trick generator without having to open the app on the mountain. However, the issue here is that most people don't snowboard everyday. To get around this, I could allow the users to schedule days on which to recieve a daily trick, or I could alert them whenever they are on a mountain by monitoring their altitude. Of course the second option has some privacy issues that will need to be considered.\n\nThe third core feature of the app is the link with friends. This is a core feature because snowboarders will typically rider with a group of friends. Being able to join a 'trick group' means these groups can do the same trick and 'compete' against each other.\n\n## Existing Apps\nSimilar Apps I found:\n\n- For skateboarding: \n\t- [getatrick.com](https://getatrick.com)\n\t- skate gen mobile app\n\t- Skate Tricks\n\t- Skateboard tricks\n\t- Skate Dice\n- Freestyle Generator for inline skating, tramp and skiing\n- Scooter trick generator\n\nI was able to find only 7 apps with similar functionality to what I am planning. Of these none 5 were for skateboarding 2 for other sports and zero for snowboarding. \n\nThese 7 apps all had varying degreee of complexity. Some were just simple customizable trick generators, while others were fully fledged coaching and goal tracking apps with community features and other extras. Although I am not planning to make large complicated app, I can still draw from them for guidance as most of them did have a trick generator. \n\n### Skate Dice\nSkate dice was one of the most intresting the apps I found. It had a very unique approach using a \"shake the phone\" gesture to \"roll\" the dice. However it has a paywall for premium features such as more tricks, settings, and a \"tricktionary\".  From what I was able to use I think is was the most simple and intuitive apps. It also had an aesthetic that fit the culture of the sport. All these features combined made it very enjoyable to use. \n\nTakeaways:\n- Keep design simple\n- Maybe incorporate some gestures\n- Consider using an aesthetic wich matches the culture/sport\n\n![](https://i.imgur.com/IqOErnh.png)\n\n\n### Skate tricks\nThis app is a much more fully featured solution. It is oriented towards learning skateboarding, and keeping track of you progress while doing it. It also has a built in trick generator, and game of skate. One of the most unique features it had that the other apps didn't was a trick of the day. This is one of the core features I want to include in my app. Another interesting feature it had was a page informing the user about injury prevention.\n\n# Personas and Scenarios\n## Inital Ideas\n- kyle the casual (primary maybe secondary)\n\t- age 23\n\t- skill advanced\n\t- focus: tricks\n- aaron the coach (seconday maybe primary)\n\t- age 30\n\t- skill used to be pro, now advanced\n\t- focus teaching tricks\n- logan the learner (seconday persona)\n\t- age 16\n\t- skill intermediate\n\t- focus not sure yet, beginning to experiement with tricks\n- mac the professional (seconday persona)\n\t- age 20\n\t- skill pro\n\t- focus tricks, uses the app occaionaly with friends\n- karen the parent (negative persona)\n\t- age 45\n\t- skill intermediate\n\t- focus, groomed runs, some backcountry\n- phil the powder hound (supplementary persona)\n\t- age 40\n\t- skill advanced (not with tricks just in general)\n\t- focus off piste/backcountry, sometimes goes into park with friends/kids\n\n## Primary: Casual Kyle\n\n![](https://i.imgur.com/116a3bj.png)\n\n- Age: 23\n- Gender: Male\n- Skill Level: Advanced (Not proffessional)\n- Focus: Terrian Park\n\n### Goals\n#### Experience goals\n- wants a quick easy, no hassle, minimal effort experience. \n- does not want to appear to be a \"nerd\" or \"try hard\"\n\n#### End goals\n- wants to find new interesting tricks that he may not have thought of himself\n- wants to progress his level of snowboarding\n- wants to show off new cool tricks to his friends\n\n#### Life goals\n- wants to be a \"cool snowboarder\"\n- wants to have as much fun as possible\n\n### Behaviour\n#### Activities\n- He is a snowboader. He rides at a least a few days every week\n- has a day job, barely enough money for season pass, rides up the mountain, and equipment\n- mostly rides in the terrain park\n\n#### Attitudes\n- Likes using social apps\n\n#### Aptidudes/skills\n- has advanced knowledge of the snowboarding tricks, grabs, and variations\n- considers himself an advanced snowboarder\n- rides all the advanced features in the park.\n- can do at least a 540\n- can do a good frontboard, maybe some 270s\n- has fun in the pipe but not his favourite thing\n\n#### Motivations\n- wants to find new interesting tricks that he may not have thought of himself, to improve his skills by expanding his \"set\" of tricks.\n\n#### Scenario\nKyle wakes up in the morning at 6:45 to go snowboarding with his friends. He sees he has a notification from the trick generator app. The trick for today is a switch back lip. Kyle is excited to try the trick. Kyles friends have also seen the daily trick on their phones. When they meet up on the mountain they all learn the trick and have fun. After they have all done a switch back lip. They decide they want to try another trick. Kyle his phone out of his pocket, opens the app, which loads almost instantly, and generates a trick with only one tap.\n\n## Secondary: Logan the learner\t\n\n![](https://i.imgur.com/EIKju2f.png)\n\n- Age:13\n- Skill: intermediate\n- Focus not sure yet, beginning to experiement with tricks\n\n### Goals\n#### Experience goals\n- wants a quick easy, no hassle, minimal effort experience. \n- feels excited when using the app\n- also feels a little nervous about trying something new\n\n#### End goals\n- wants to find new tricks that he can learn with his friends, since he doesn't know many\n- wants to stay motivated to learn a new trick each day/week\n\n#### Life goals\n- Wants to have fun on the weekend\n- Wants to get excersise\n\n### Behaviour\n#### Activities\n- Snowboarder\n- lives in a town near a skifield where it is common to snowboard.\n- rides a few times a fortnight, with friends and/or family. maybe in a school program (like they have in wanaka schools)\n\n#### Attitudes\n- Likes using technology\n\n#### Aptidudes/skills\n- has been riding mostly on the groomed runs, is now getting good enough to try the terrian park.\n- has been doing some 180s maybe on sidehits.\n\n#### Motivations\n- wants to find new tricks that he can learn with his friends, since he doesn't know many\n\n#### Scenario\nLogan is snowboarding on the mountain with a group of his friends. Logan and his friends decide to go into the terrian park and try some tricks. None of his friends know what tricks to try. Logan takes his phone out of his pocket and without removing his gloves, unlocks it with face ID, and looks at the widget which is showing random trick. Logan then puts his phone back in his pocket, tells his friends the trick, and all him and his friends have fun racing to do the trick first.\n\n# Low-Fi Prototypes\n## Inital Designs\n### Navigation\nThe first thing I wanted to was get a clear picture of how each screen should interact with the others. Identified three main screens: Home, Friends, and Schedule. I also identified some supplementary screens: Trick options, other settings, and welcome, and some more optional screens: Trick lists, trick dictionary. \n\nI also listed some things that each screen should contain\n![500](Attachments/lofi-prototypes/navigation.JPG)\n\n### General protoypes\nNext I started to get down down general ideas about all of the screens. The main goal of this step for was to figure out the general flow of the app, and to get a general idea of how each screen should look.\n\nThis first two pages I was experimenting mostly with the home screen. I tried three different layouts: Top tabs, Bottom tabs, and floating bottom buttons. I also started to explore ways for the user to navigate from the home screen to the trick options screen, and the schedule screen.\n\n![600](Attachments/lofi-prototypes/general-1.JPG)\n![600](Attachments/lofi-prototypes/general-4.JPG)\n\nThe second page I explored a some variations on the floating button design. And begin  experimenting with the navigation and layout of the friends screen.\n\n![600](Attachments/lofi-prototypes/general-2.JPG)\n\nOn the third page I kept experimenting with the friends page. \n\n![600](Attachments/lofi-prototypes/general-3.JPG)\n\n## In depth prototypes\n### Home screen\nI wanted to keep the layout mostly based on googles material design. This will help with four design heuristics: Familiar metaphors and language, consistency and standards, recognition over recall, and minimalist design.  \n\nI started with creating an partly new design that combined the floating buttons, and the swipe feature for trick options. I decided against this as within material design it is not reccomended to have multiple floating buttons. I decided instead to use bottom tabs as they are the most logical, and familiar design for users. \n\nI also decided against the swipe feature to show tricks, and opted instead for a button which opened another screen.\n\nI also tried out some other designs features a black background and round buttons.\n![500](Attachments/lofi-prototypes/home-2.jpg) ![600](Attachments/lofi-prototypes/home-3.jpg)![600](Attachments/lofi-prototypes/home-1.JPG)\n\n### Other settings\n![600](Attachments/lofi-prototypes/other-settings-1.JPG)\n\n### Trick Options\nFor the trick Options I considered a few three main designs: the swipe/scroll, the modal, and the full screen.\n![800](Attachments/lofi-prototypes/trick-options-1.JPG)\n\n### Welcome\n![600](Attachments/lofi-prototypes/welcome-1.JPG)\n\n### Schedule\n![600](Attachments/lofi-prototypes/schedule-1.JPG)\n\n## Refinement\nFirstly I converted the lo-fi prototypes into Adobe XD designs.\n\n![](https://i.imgur.com/syq2HfK.png)\n\nI decided I wanted to make some chagnes to the design here so I saved this as version 1.\n\n### Schedule changes\n\nI wanted to chagne the way the schedule/altude options worked. My first rough redesign was this:\n![](https://i.imgur.com/CeYtNuP.png)\n\nI thought I could remove the separation and combine the two screens. But this didn't work so well.  However, I think the ability to switch between meters and feet was good as this improves **user control and freedom**. Also the use of the spinner for time and altitude selection will be familiar to most users. This improves use of **consistency and standards**, and **recognitiona over recall**\n\nI then decided to try a \"switch\" type design, where the user is forced to chooose between the schedule and the altitude. \n\n![](https://i.imgur.com/564G5o9.png)\n\nI think think this works much better as it **shows the system status** clearly. And has a less cluttered more **miniml, aesthetic design**. I kept the weekday selection on both screens as the might only want use the altitude system on certain days. This improves, **user control and freedom**.\n\nI also thought it might not be super what the funcitons of the two options were, especially the altitude option. So decided to add a closable info card with some information. This improves **help and documentation**\n\n![](https://i.imgur.com/KEeEbNm.png)\n\nI thought the info symbol might have looked like a button so I changed it:\n\n![](https://i.imgur.com/BIyh7Fr.png)\n\nI also changed the alignment of the weekday selection buttons. And the altitude selector\n\n![](https://i.imgur.com/QzAfEaD.png)\n\n\n### Trick options Changes\nI decied to change the way this worked. Instead of have the save cancel buttons I wanted the settings change to have immediate effect, so the user didn't have to save. This was the first redesign:\n\n![](https://i.imgur.com/0SMHkUX.png)\n![](https://i.imgur.com/aX0NUZd.png)\n\n\nThis is largely the same, except I added a head with back button and remove the bottom save and cancel buttons. Next I changed the dropdown for each of the trick types to individual screens with the commonly used right chevron icon.\n\n![](https://i.imgur.com/0amkHJG.png)\n\n### \"Color\" scheme changes\n\nAfter I had mostly finished the Layout. I changed the look to match the snowboarding \"aesthetic\", by making the app primarily black\n\n![](https://i.imgur.com/QgPjM5S.png)\n\n### More layout changes\nI decided to add the home row navigation back to the trick options screens to improve **user control and freedom**\n![](https://i.imgur.com/474XINO.png)\n\n# Hi-Fi Prototypes\n# ","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/furps":{"title":"furps","content":"\nThe furps framwork defines a robust way of defining and categorising requirements and constraints. Requirements are split into the following five categories:\n\n- F: featurs\n- U: Usability\n- R: Reliability\n- P: Performance\n- S: Supportability\n\nThere is an extended set  called furps + adds which adds:\n\n- design\n- implementation\n- interface\n- physical\n\nFor example:\n\n![](https://i.imgur.com/SLMcUtd.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/git":{"title":"git","content":"\n- Git is a tool to track changes to sets of file\n- It is the most commonly used [[notes/02-version-control-system]]\n\n## 1 Team git protocols\n\nyou can develop a team protocol for Git use\n\ne.g.,\n\n- agree to commit often\n- know what branches are being used and why\n- consider pair programming / live sharing\n- try not to touch lots of files without signalling why\n- agree who's going to edit files that maight not auto merge\n\n## 2 web based repo access control\n\n- owner of repo chooses who can push to project\n\t- maintainer -\u003e cant remove data\n\t- developer -\u003e cant manage team\n\t- reporter -\u003e cant change codebase\n\t- guest -\u003e can view\n\n### 2.1 open source collaboration\n\nyou want contributions from everyone\n\nbut you dont want to manage user-level control\n\n-\u003e pull/merge requests\n\nunknown users can fork then add a feature/bug then do a merge request which can be reviewed\n\n## 3 git repos\n\n[[cheatsheets/git-cheat-sheet|Repositories]] maintain code history\ncan be conceptualised as a graph\n\n```mermaid\n\tgraph RL\n\tA[HEAD]--\u003e1[MASTER]--\u003eB((ab348b))--\u003eC((hf33h3))\n\tC--\u003eD((3hh39h))\n\tC-.Merge.-\u003eE((n3383b))\n\t3[Branch]--\u003eE\n\tD--\u003eH((kfj383))\n\tE--\u003eG((gj4jf4))\n\tG--\u003eH\n\tH--\u003eI((fjfj39))\n\tI--\u003e2[Inital Commit]\t\n```\n```mermaid\n\tgitGraph:\n\tcheckout master\n\tcommit\n\tcommit\n\tbranch newbranch\n\tcheckout newbranch\n\tcommit\n\tcommit\n\tcheckout master\n\tcommit\n\tmerge newbranch\n\tcommit\n\tcommit\n```\n\n- nodes are commits -\u003e immutable snapshots of the tracked files\n- edges record how nodes emerged over time\n\t- arrows can be read as \"is derived from\"\n\ngit is a [[notes/02-version-control-system#4 3 Distributed Centralised]]\n\n- every team members has their own local copy of the repo\n- git repos are often syned with a server: github, gitlab,etc\n\n## 4 levels of complexity/Abstraction\n\n```mermaid\n\tgraph TD\n\tw(github gitlab from web browser)--\u003eb(graphical ide's e.g., vscode)--\u003ec(command line git)--\u003ed(low level git plumbing commands)--\u003ee(direct manipulation of records within repo's .git directory)\n\t\n```\n\n## 5 Limitations/pain points\n\n- not designed for broad usability\n\t- bottom up design stems from its implementaion,\n\t- rather than top down design from user interface\n\t- thus, command naming and syntax can be unintuitive\n- git is not suited to handling large data files\n\t- git scans whole files to generate hash codes\n\t- can use git lfs (large file support) to get around this\n- flexibility of git can lead to high cognitive load\n\t- e.g., many ways to get others' commits to your repo\n- binary files e.g., JPEG images are treated as whole\n\t- no differencing, no content merging\n- some text files may not have stable line structure\n\t- e.g., XML data can be reordered wihout changing so:\n\t\t- git can auto merge when this is destructive\n\t\t- git may get confused and force you to merge\n\t- e.g., node package-lock.json\n\t- you can turn of auto-merge if you are working with files that may be problematic\n\n## 6 advantages\n\n- git repos' data structures are well designed\n\t- clear in structure yet flexible and efficient\n- few dependencies\n\t- widely available\n\t- free and open source\n- community support around use of git is great\n\t- eforts to get researches to use version control;\n\t- github helped open source software flourish by making it easy for citizens to contribute to projects\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/graphs":{"title":"graphs","content":"\nRepresents a set of things with relationships between them.\n\n- a set of *vertices*\n- some *edges* between them\n- edges on some graphs have *weights*\n- edges on some graphs are *directed*\n\nSome graphs are named e.g, ![Q3](https://i.imgur.com/Mfd1Vzm.png)\n\n# Implementation\nshould:\n- be static\n- say if two vertices are connected in $O(1)$\n- say what the neighbors of a vertice are in $O(1)$\n\n## Hashset\narray wwith element to each verttex, and each element of the array is a *TreeSet* of its neighbors. \n\ngraph is built up by specifying size, then edges.\n\n```java\nadd edge(int v, int w){\n\tneighbors[v].add(w);\n\tneighbors[w].add(v);\n}\n```\n\nwe could also define a vertex class and use a `HashSet\\\u003cvertex\u003e`\n\nThere are many options\n\n# Traversals\n## Breadth first traversal\n![](https://i.imgur.com/iQ3TMCb.png)\nStating from v, initialise an empty queue a, and add a marker to each vertex (or make a set of seen vertices).\n\n1. add the start vertex to a queue and mark it as seen \n2. while the queue is not empty\n3. visit the first ellemnet of a qeue removing ti\n4. do someting with it (line 3.5)\n5. unseen neighbors neighbors are added to the queue marking them as seen\n6. repeat\n\n## Depth first\ninit empty *stack*, s, and add a marker to each vertex (or make a set of seen vertices)\n![](https://i.imgur.com/x916lrw.png)\n\n1. add the start vertex to a stack and mark it as seen \n2. while the stack is not empty\n3. visit the first ellemnet of a qeue removing ti\n4. do someting with it (line 3.5)\n5. unseen neighbors neighbors are added to the stack marking them as seen\n6. repeat\n\n## Cost of traversal\nwe measure complexity both in terms of veritces V and edges E.\n\nfor each vertex\n-  it occurs in some neghbor list ofot he first time at which point it is added to the list, and marked as seen\n- then at soome point it is removed\n- so $O(1)$ per vertice so $O(V)$\n\nfor each edge:\n- edge arise implicityly in the neihbor list\n- each one appreas twice, once per endpoint\n- when one appreas is causes a constant amount of work\n- also $O(1)$ per edge so  $O(E)$\n\nso $O(V + E)$\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/grouping":{"title":"grouping","content":"\nGestaltkriterien “Gestalt Principles\ufffd\ufffd? - Law of Proximity\n\nOur brain is trying to help us understand the world. For example we look for eye contact. Our brain is looking with our eyes for contrast, parrallel lines, etc. Criteria that help us understand the world. \n\nThe Gestalt priciples have identified how our functions. One of these is the law of proximity. Things that a close to each other are grouped together by our brain. \n\n![grouping example](https://i.imgur.com/m8lTltN.png)\n![grouping ui](https://i.imgur.com/EMeV5Gg.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/hash-map":{"title":"hash-map","content":"\nIn compsci a map is a comprised of a [set](notes/set.md) of keys and values. (`\u003cK, V\u003e`). For example `\u003cString, Integer\u003e`\n\nSo sets are a prerequisite for maps\n\nA hash set is just a hash map where the key is the values hash code. \n\n# Operations\nThe fundamental map operations are:\n- `Put(k, v)` --\u003e Add the this key-value pair to the map. If the present: update the key\n- `Get(k)` --\u003e returns the value associated with `` is present\n- `Remove(k)` --\u003e Removes the key `k`\n\n[BST](notes/binary-search-tree.md) can provide us with a set or map implementation whre the cost of each operation is $O(lg\\ n)$ . But his requires an underlying order on keys, which might not be needed.\n\n# Hash functions\na *hash function* takes objects from a class as input and produces a value from a fixed finite set of values (in Java, an `int`). \n\nThis sounds hard, but for commonly used classes (e.g., strings) there are already good has functions. Good enough is usually good enough. IDE can usually suggest something that is good enough. A hashcode function will usually come with an equals function to distinguish between collions and actual equal values\n\n## Collisions: Chaining/open addressing\n- array elements are called buckets\n- each bucket is a *list* of key-value pairs\n- when a mapping is added, \n\t- if empty add it (creating a new list if required)\n\t- otherwise check to see if there is a collision or an actual equality with each item of the list\n\t\t- If there is an equality -\u003e change its value\n\t\t- otherwise just add it to the list\n- get and removing are handled similarly\n\nwe need to keep the load factor (how full the map is) small so that the chains dont't get to long \n\n# Probing\nChaining (lists of k-v pairs in each bucket) breaks locailty of reference within the array and may not be suitable for high-performance implementations. \n\nIt works in java because objects are stored as references anyway, you need to look elsewhere in memory anyway. \n\nSo the advantage of probing is negated. \n\nIn C you know how many bytes of memory a k v pair will occupy. So you can store them as a continuous block of memory. Now you can take advatage of the locality of reference and the speed it provides. \n\nTo do this the contents of bucket should not be a list. they should be null, or a single kv pair.\n\neach kv pair has a *home spot* it would like to go to: this is the modulo remainder from last lecture. we can use [linear-probing](notes/linear-probing.md) to ensure the kv remains close to its home spot.\n\n# basic implementation\n```java\nV[] map = new V[53];\n\npublic V put(K key, V value){\n\tV old = map[k.id() % v.length];\n\tmap[k.id() % v.length] = value;\n\treturn old; //to match java map interface\n}\n\npublic V get(K key){\n\treturn map[k.id() % v.length];\n}\n\npublic V remove(K key){\n\tV old = map[k.id() % v.length];\n\tmap[k.id() % v.length] = null;\n\treturn old;\n}\n\n```","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/hci-ethics":{"title":"hci-ethics","content":"\n# Ethics\nsteve mann example - too far?\n\nhypocratic oath - do no harm\n\nshould there be one like this in computing?\n\nshould self driving cars protect the driver or pedestrians.\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/heap":{"title":"heap","content":"\nA tree where:\n\n1. every elements should be greater than ites children\n2. the structure should be filled from top to bottom and left to right\n\n\nTo remove an element\n\n- remove from the top, replace with the last element\n- to fix the first condition swap the top element with the highest of its children until fixed\n\n\nTo Add an element\n\n- add to the next position\n- If its larger than its parent then swap them\n\n\nHow deep is the tree?\n\n- each layer is twice as deep and the preceding one\n- layer k can hold $2^k$ elements\n- to store n elements we use k layers where $k = lg n$\n- so we need ϴ(lg n) layers\n- So any algorithm that 'walk along a branch' in while or in part will have Ο(n) complexity (assuming constant time work at each node)\n\n# 1 Overview\n[[notes/heap]]\n\n# 2 Operations\n## 2.1 Add element\nAssumptions\n- access first vacant position\n- set (or find) the value $H.q$ stored in any (occupied) position $q$\n- access parent of any given position\n- identify when we're at the root\n(all in constant time)\n\nOutcome: Change $H$ by adding x to it, while maintaining the heap conditions\n\n```\np \u003c- first vacancy, H.p \u003c- x\nwhile p is not the root and H.parent(p) \u003c H.p do\n\tswap H.parent(p) and H.p\n\tp \u003c- parent(p)\nend while\n\n```\n\n## 2.2 Remove the maximum\nOutcome: Change H by removing its maximum (i.e., root) value wile maintaining the heap conditions\n\n```\nv \u003c- H.root\nset H.root to be the value stored in the last occupied position\np \u003c- root\n\nwhile p has children\n\tif the largest value, H.c of a child of p is greater than H.p then\n\t\tswap H.c and H.p, p \u003c-c\n\telse\n\t\tBreak\n\tend if\nend while\n\nreturn v\n\n```\n\n\n## 2.3 Complexity\nIn addition, we move along a branch from an added element up to the root, fixing violations as we go\n\nIn removal, we move from the root down through some branch until all violations are fixed (can only occur if node has children)\n\nSo both loops do most Ο(lg n)\n\n## 2.4 Storage\n![](https://i.imgur.com/04qVrGQ.png#invert)\n\n - Array\n- root at position 0 and children at 1 and 2\n- children of 1 to in 3 and 4, children of 2 go in 5 and 6\n\n- first vacant pos --\u003e heap[n]\n- value at pos q --\u003e heap[q]\n- get parent of q --\u003e parent(q) = (q-1)/2\n- get children of q --\u003e (2 * q) ± 2\n- identify if q is root --\u003e q == 0\n\n## 2.5 Implementation\n\nUse java.util.PriorityQueue\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/heapsort":{"title":"heaps-and-heapsort","content":"\n\n# 3 Heap Sort\nIn place and ϴ(n lg n)\n\n![works in place](https://i.imgur.com/EbqSl4Y.png)\n\n\n- start with array\n- using itself as a heap, add the elements one at a time until all been added\n- Then remove them one at a time - the largest elements gets removed first and the place where is needs to be put gets freed from the map\n\n# 4 Heap sort vs Merge sort\nheap --\u003e in place, ϴ(n lg n)\nmerge --\u003e not in place, Ο(n lg n)\n\nMerge is preferred because\n\n- MS can take advantage of partially sorted data (hence ϴ() vs Ο())\n- MS memory accesses are good fast\n- overwrites allow for optimizations that swaps do not\n\nextra memory cost of merge sort is negligible\n\n∴ Merge sort is faster\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/help-and-documentation":{"title":"help-and-documentation","content":"\n- guide the way and show steps\n- online help\n\t- transition from built in help to links to online help\n\t- sometimes users dont have an internet connection\n\t- e.g., chrons app used all the data\n- help clearly and transparently\n\t- e.g., privacy and terms/conditions","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/heuristic-evaluation":{"title":"heuristic-evaluation","content":"\n\u003e\"Heuristics are strategies derived from previous experiences with similar problems\"\njacob nielsen and rolf molich\n\n- help find usability problems\n- small set of 3-5 evaluators examine UI\n- independently check for compliance with usability principles\n- different evaluators will find different problems\n- evaluators only communicate afterwaards\n- findings are aggregated at the end\n\n![example heuristic report](https://i.imgur.com/DfmaHlI.png)\n\n# when?\n- as part of need finding -\u003e use experts to critique existing solutions\n- before user testing -\u003e identify minor issues before user testing\n- before redesigning -\u003e learn what works and what should change\n- when you know there are problems but you need evidence -\u003e \"provide you with ammunition for design\"\n- before release -\u003e smooth off rough edges\n\n# What\n## Process\n### Phases\n1. pre evaluation training ⇒ give evaluators needed domain knowledge and information on the scenario\n2. evaluation ⇒ individuals evaluate then aggregate result\n\t1. first as individuals\n\t2. then sit all together and aggregate\n3. Severity rating ⇒ determine how severe each problem is (priority). Can do first individually and then as a group\n4. Debriefing ⇒ review with design team\n\n### Individual\ndont look search for heuristics individually\njust go through the app (like a user). If we find issues, we assign them to categories\n\nstep through design several times\n- examine details, flow, an architecture\n- consult list of usability principles\n- … and anything else that comes to mind\n\nwhich principles\n- Nielsen's heuristics\n- category specific heuristics\n\t- e.g., design goals, competitive analysis, existing designs\n\t\nuse violations for redesign/fix problems\n\nmultiple evaluators because no one finds everything\nsome will always find more than others (Rule of thumb 5 evaluators find ~75% of problems)\n\n### Severity rating\n- independently estimate after viewing\n- allocate resources to fix problems\n- estimate need for more usability tests\n\n0. not problem\n1. cosmetic problem\n2. minor usability problem\n3. major\n4. catastrophe\n\n### Debreifing\n- with evaluators observers and dev team\n- discuss general characteristics of UI\n- suggest potential imporvements\n- dev team estimate effort to fix\n- brainstorm solutions\n\n# Nielsen's ten heuristics\n[design-heuristics](notes/design-heuristics.md)\n- visibility of system status\n- match between system and world\n- user control and freedom\n- consistency and standards\n- error prevention\n- recognition rather than recall\n- flexibility and efficiency of use\n- aesthetic and minimalist design\n- help users recognize, diagnose, and recover from errors\n- help and documentation\n\n# Heuristic evaluation vs user testting\n\nheuristics        | user testing\n----------------- | --------------\nfaster            | slower\n1-2 hrs each      | \nresults pre-interpreted | \n^ done by experts | \nless accurate     | more acurate\ndoes not take into account actual users | can find issues that experts might not have\n\nvalue to alternate methods\n^ find dfferent issues\n\n![](https://i.imgur.com/YgGkBqg.png)\n\n# Extra tips how to individual\n- at least two passes each \n\t- first get get feel for flow\n\t- second to focus on specific elements\n- if a system is \"walk up and use\" or evaluators are already domain expers ⇒ no assistance is needed\n\t- otherwire might supply evaluators with scenarios\n- each evaluators should list issues separately\n- risk of repeating problematic aspect\n- may not be possible to fix all problems\n- where problems may be found\n\t- single location in UI\n\t- two or more locations that need to be compared\n\t- problem with overall structure\n\t- something is missing\n\t- ambiguous with early prototypes\n\t- sometimes ....\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/hi-fi-development":{"title":"hi-fi-development","content":"\nFirstly I converted the lo-fi prototypes into Adobe XD designs.\n\n![](https://i.imgur.com/syq2HfK.png)\n\nI decided I wanted to make some chagnes to the design here so I saved this as version 1.\n\n## Schedule changes\n\nI wanted to chagne the way the schedule/altude options worked. My first rough redesign was this:\n![](https://i.imgur.com/CeYtNuP.png)\n\nI thought I could remove the separation and combine the two screens. But this didn't work so well.  However, I think the ability to switch between meters and feet was good as this improves **user control and freedom**. Also the use of the spinner for time and altitude selection will be familiar to most users. This improves use of **consistency and standards**, and **recognitiona over recall**\n\nI then decided to try a \"switch\" type design, where the user is forced to chooose between the schedule and the altitude. \n\n![](https://i.imgur.com/564G5o9.png)\n\nI think think this works much better as it **shows the system status** clearly. And has a less cluttered more **miniml, aesthetic design**. I kept the weekday selection on both screens as the might only want use the altitude system on certain days. This improves, **user control and freedom**.\n\nI also thought it might not be super what the funcitons of the two options were, especially the altitude option. So decided to add a closable info card with some information. This improves **help and documentation**\n\n![](https://i.imgur.com/KEeEbNm.png)\n\nI thought the info symbol might have looked like a button so I changed it:\n\n![](https://i.imgur.com/BIyh7Fr.png)\n\nI also changed the alignment of the weekday selection buttons. And the altitude selector\n\n![](https://i.imgur.com/QzAfEaD.png)\n\n\n## Trick options Changes\nI decied to change the way this worked. Instead of have the save cancel buttons I wanted the settings change to have immediate effect, so the user didn't have to save. This was the first redesign:\n\n![](https://i.imgur.com/0SMHkUX.png)\n![](https://i.imgur.com/aX0NUZd.png)\n\n\nThis is largely the same, except I added a head with back button and remove the bottom save and cancel buttons. Next I changed the dropdown for each of the trick types to individual screens with the commonly used right chevron icon.\n\n![](https://i.imgur.com/0amkHJG.png)\n\n## \"Color\" scheme changes\n\nAfter I had mostly finished the Layout. I changed the look to match the snowboarding \"aesthetic\", by making the app primarily black\n\n![](https://i.imgur.com/QgPjM5S.png)\n\n## More layout changes\nI decided to add the home row navigation back to the trick options screens to improve **user control and freedom**\n![](https://i.imgur.com/474XINO.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/how-is-safe-enough-for-autonomous-vehicles":{"title":"how-is-safe-enough-for-autonomous-vehicles","content":"\n- How safe is safe enough?\n\t- its impossible to be perfect\n\t- discalimer about driving assistant in teslas\n\nNot driving youself massively reduces reaction time\n\nAllow user to set ethical bias of their vehicles AI\n\n![](https://i.imgur.com/eY5CeL6.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/html":{"title":"html","content":"\nDefines the items and the heirarchy of items on a webpage\n\nElements are made up of four things:\n- Opening and closing tags\n- Content\n- Attributes\n\nThey are stucture like so:\n- \u003ctag attribute=\"value\"\u003e hello world \u003c/tag\u003e\n\nElements can be nested within each other to create more complex arrangements\n\nThere are many types of element\n\n- Table\n- Image\n- Heading\n- div, aside, section, nav etc\n- meta, title, \n- list\n- iframe\n- svg\n- and more","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/hypotheticals":{"title":"hypotheticals","content":"\n# Is it immoral to keep free will from people if you had the power to grant it.\n\nThis is really two questions. Firstly, is free will a good thing? Secondly, if it is a good thing — is withholding it immoral? Before I answer these questions, Is deciding things for other people moral or immoral? There's no way to know what people want, and I don't think you have the right to decide for them. Thus, from a deontological perspective, I think each person wants different things and it would be immoral no matter what decision you make. The questions remains however, of whether it is immoral to not do a moral thing. I think that depends of the effort of the moral action and the amount of \"goodness\" that the actions creates. For example, it would not be immoral to not volunteer to pick up trash for 3 weeks nor to not pick trash on your walk home. But if you could remove all trash by clicking your fingers, it would be immoral to not do so. Thus the answer to your hypothetical, from a consequentialist perspective, depends on where you draw the line. In this hypothetical, since there is no effort required, the answer depends only on whether granting free will to everyone is a moral thing. I'm gonig to assume by 'content' you mean neither happy nor unhappy. I think that granting people free will would create an equal amount of sadness and happiness and the net effect would be zero. So from a consequentialist perspective it is neither moral nor immoral. However, if free will wasn't a thing, humans might as well not exist. Therefore, by granting free will you are giving meaning to the entire human race — which must be a moral thing. ","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/i201-practice":{"title":"i201-practice","content":"\n# Section A\n## 1\na) sequence diagram - to document a *sequence* of particpant interactions required to carry out a use case\nb) \n1 - Actor - a participant in the sequence\n2 - Activation Bar - indicate when a participant is doing something\n3 - message - indicate communication between participats\n\n## 2\nupdate anomaly - e.g., when a single employee is working on two projects, and we need to update their salary, it is possible to only update their salary in one location causing an update anomaly\n\nroot causes - this occired because there was redundancy within the database - the employee and his salary should only be stored in one location\n\nhow it can be solved/avoided - this can be easily avoided by normalising the database to remove redundancies.\n\n## 3\na) business functions are things that the business *ought* to be doing (not what it is doing now), for example \"accept payment from customer\". each business function essentially become a fuction or a set of functions within the information system. they do not describe the who, how, or where of the function.\n\nb) business function are typiclaly modelled using use case diagrams. in the final system they become features or a set of features\n\n## 4\n1) dont have the technical ability\n2) not legal\n3) organisational - lack of institutional will\n\n## 5\nrequirements - Requirements are something an information system should do, or some constraint it should adhere to\n\nacceptance tests - not covered\n\n## 6\nuse predictive when\n- simple requirements\n- stable/mature technologiess\n- stable environment\n- non experimental\n\n## 7\n1) how quickly? - requirements should be unambiguous\n2) shouldn't say how? - requirements hould say what and not how\n\n# Section B\n## 8\n ","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/i201-practice-2":{"title":"i201-practice-2","content":"\n# Section A\n## 1\na) a member of staff can book and appointment. when this occurs the staff member can optionally add a new customer\nb ) a member of staff can book and appointment. when this occurs the staff member must also add a new customer\nb ) a member of staff can book and appointment. when this occurs the staff member must add a new customer before the appointment is created\n\n## 2\na) this could cause an update anomly. this is because there is reduncancy as same product is stored in the database twice\nb) the database should be normalised to remve the redundancy. it could be separated into three entities: store, product, and an associative entity\n\n## 3\nthey will need to analyse the costs. this id hard because. the cost of development is uncertain due to variable salaries, time for development, testing and quality control costs. It is also near impossible to esimate the dollar values of benefits such as: improved security, market share, improved perception of company, reduced customer service costs, efficiency\n\n## 4\nrequirements - Requirements are something an information system should do, or some constraint it should adhere to\n\nacceptance tests - not covered\n\n## 5\na) adaptive - this is more suitable for systems with uncertain requirements\nb) i would use a Unified Processes approach. there are four main steps. these are inception, elaboration, construction, and transition\n\n## 6\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/idea":{"title":"","content":"#info203 \n\n1. Snowboard coaching app\n\t1. goals\n\t2. daily/manual/weekly trick generator\n\t3. \n2. Album of the day generator\n\t1. from besteveralbums.com\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/imperative-programming-language":{"title":"imperative-programming","content":"[wikipedia article](https://en.wikipedia.org/wiki/Imperative_programming)\n\nImperative programming is a paradigm in which code specifiec a series of *commands* which a computer executes to change a programs *state*\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/independent-learning":{"title":"independent-learning","content":"\n# Topics\n- [Networks](notes/networks.md)\n\n# Stand Alone Notes\n- [propogation-of-ideas](notes/propogation-of-ideas.md)\n- [model-view-controller-pattern](notes/model-view-controller-pattern.md)\n- [.NET](notes/dotnet.md)\n- [programatic-evolution](notes/programatic-evolution.md)\n- [behaviour-driven-development](notes/behaviour-driven-development.md)","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/induction":{"title":"induction","content":"\n# Induction\n## 1 PECS\nPhases of argument by induction\n\n- Preparation -\u003e most important\n- Execution -\u003e becomes routine if prep is good\n- Checking -\u003e second most important\n- Satisfaction\n\n### 1.1 Preparation\n- isolate the property that you are trying to verify and the parameter, n, associated with is\n\t- e.g., min possible size of set of rank k is $2^n$\n- Confirm by hand that for small values of the parameter, the property is true\n- Use previous cases as assumptions\n- Pause and reflect\n- If you understand what's going on -\u003e proceed to execution\n\n### 1.2 Execution\nTechnical and prescribed (once you're an expert you can take some liberties)\n\nFour parts\n- statement\n- verificatio of base case\n- inductive step\n- conclusion\n\ne.g., \n- we will prove that, for every non-negative integer $n$, *insert property here*\n- For $n = 0$, *The property* is true because *explicit verification of this case*\n- for any $n \u003e 0$, assuming *the property*  is true for $n-1$ (or, for all $k \u003c n$), *the property* is true at $n$ because *explain why we can take a step up*\n- Therefore, by induction, *the property* is true for all n.\n\n### 1.3 Checking\nBasically debugging without a compiler to find errors\n- have you forgotten anything? e.g., the base case\n- Does the inductive step work fro  0 to 1? or are they irregular\n- Make sure that you are only assuming the result for things less than $n$\n- ideally show someone and try to convince them (dont let them be polite)\n- if necessary go back to execution or preparation\n\n### 1.4 Satisfaction\nCommence satisfaction.\nConfidence +100. 😆\n\n## 2 Examples\n### 2.1 Union Find - min size for set of rank k\n\n- Initially every element is its own representative and every element has rank 0;\n- when we do a union operation, the the two reps have different ranks, the ranks stay the same\n- when we do a union operation, if the two reps have the same rank, then the rank increases\n\nminimum (and only) size of a rank 0 rep is 1\n\nto get a rank 1 representative, we form a union of either a rank 0 and a rank 1 set or two rank 0 sets\nfor the minimum possible size, it must be the second case, and the two rank 0 sets must be each of minimum size 1, so this gives minimum size for a rank 1 set of 2\n\nTo get a rank 2 rep, we form a union of either rank 2 and rank 0 or 1 set, or two rank 1 sets\nFor the minimum possible size, it must be the second cae, and the two rank 1 sets must each be of minimum size 2, so this gives minimum size for a rank 2 set of 4\n\nTo get a rank $n$ rep, we form a union of either rank $n$ and rank $k$ set for some $k\u003cn$ or two rank $n-1$ sets.\nFor the minimum possible size, it must be the second cae, and the two rank $n-1$ sets must each be of minimum size, which we are **assuming** $2^(n-1)$, so this gives minimum size for a rank $n$ set of\n\n\u003e $2^{n-1} + 2^{n-1} = 2\\times2^{n-1} = 2^n$\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/info-201":{"title":"info-201","content":"\n- [coursework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)\n\n# Outline\n- [version control system](notes/version-control-systems.md)\n- [stakeholders](notes/stakeholders.md)\n- [business-analyst](notes/business-analyst.md)\n- [developer](notes/developer.md)\n- [models](notes/models.md)\n- [systems-development-life-cycle](notes/systems-development-life-cycle.md)\n- [agile-development](notes/agile-development.md)\n- [scrum](notes/scrum.md)\n- [predictive-adaptive-spectrum](notes/predictive-adaptive-spectrum.md)\n- [domain-driven-design](notes/domain-driven-design.md)\n- [behaviour-driven-development](notes/behaviour-driven-development.md)\n- [requirements](notes/requirements.md)\n- [requirements-document](notes/requirements-document.md)\n- [requirements-guidelines](notes/requirements-guidelines.md)\n- [requirements-engineering](notes/requirements-engineering.md)\n- [requirements-elicitation](notes/requirements-elicitation.md)\n- [approaches-to-systems-development](notes/approaches-to-systems-development.md)\n- [business-functions](notes/business-functions.md)\n- [business-process](notes/business-process.md)\n- [business-process-model](notes/business-process-model.md)\n- [business-process-model-and-notation](notes/business-process-model-and-notation.md)\n- [unified-modelling-language](notes/unified-modelling-language.md)\n\t- [sequence-diagrams](notes/sequence-diagrams.md)\n\t- [use-case-diagrams](notes/use-case-diagrams.md)\n\t- [what-are-uml-diagrams](notes/what-are-uml-diagrams.md)\n\t- [use-case-diagrams](notes/use-case-diagrams.md)\n\t- [entity-relationship-diagrams](notes/entity-relationship-diagrams.md)\n\t- [class-diagrams](notes/class-diagrams.md)\n- [modelling behaviour](notes/modelling-behaviour.md)\n- [conceptual-vs-ipmlementation-models](notes/conceptual-vs-ipmlementation-models.md)\n- [redundancy-and-anomalies](notes/redundancy-and-anomalies.md)\n- [dependencies](notes/dependencies.md)\n- [normalisation](notes/normalisation.md)\n- [round-trip-engineering](notes/round-trip-engineering.md)\n- [uml-java-forward-engineering](notes/uml-java-forward-engineering.md)\n- [data-access](notes/data-access.md)\n- [data-access-object](notes/data-access-object.md)\n- [java-database-connectibity](notes/java-database-connectibity.md)\n- [SQL](notes/SQL.md)\n\n# Lectures\n- [02-version-control-system](notes/02-version-control-system.md)\n- [04-requirements](notes/04-requirements)\n- [06-business-functions-and-use-cases](notes/06-business-functions-and-use-cases.md)\n- [07-business-process-modelling](notes/07-business-process-modelling.md)\n- [08-business-patterns](notes/08-business-patterns.md)\n- [09-data-modelling-and-normalisation](notes/09-data-modelling-and-normalisation.md)\n- [10-oop-concepts-and-uml](notes/10-oop-concepts-and-uml.md)\n- [11-class-diagrams](notes/11-class-diagrams.md)\n- [12-modelling-behaviour](notes/12-modelling-behaviour.md)\n- [13-UML-sequence-diagrams](notes/13-UML-sequence-diagrams.md)\n- \n- [15-from-models-to-code-and-back](notes/15-from-models-to-code-and-back.md)\n- [16-reverse engineering](notes/16-reverse%20engineering.md)\n- [17-data-access](notes/17-data-access.md) \n- [18-advanced-sql-1](notes/18-advanced-sql-1.md)\n- [19-advanced-sql-2](notes/19-advanced-sql-2.md)\n- [20-data-integrity](notes/20-data-integrity.md)\n- [21-software-architecture-and-templates](notes/21-software-architecture-and-templates.md)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/info-203":{"title":"info-203","content":"links:[_index](_index.md)\n- [mobile-app-ass-03](notes/mobile-app-ass-03.md)\n\n# Assignments\n## Mobile App\n- [pdf](https://blackboard.otago.ac.nz/bbcswebdav/pid-2827493-dt-content-rid-18385743_1/courses/INFO203_S1DNIE_2022/Assignment3.pdf)\n- [idea](notes/idea.md)\n- [brainstorming](notes/brainstorming.md)\n- [personas-final](notes/personas-final.md)\n- [mood-board](notes/mood-board) \n\n# Outline\n- [big-picture](notes/big-picture.md)\n- [birth-of-hci](notes/birth-of-hci.md)\n- [user-experience](notes/user-experience.md)\n- [usbability](notes/usbability.md)\n- [prototyping](notes/prototyping.md)\n- [evaluating-designs](notes/evaluating-designs.md)\n- [Design Heuristics](notes/design-heuristics.md)\n\t- [help-and-documentation](notes/help-and-documentation.md)\n\t- [error-prevention](notes/error-prevention.md)\n\t- [flexibility-and-efficiency](notes/flexibility-and-efficiency.md)\n\t- [aesthetic-and-minimalist-design](notes/aesthetic-and-minimalist-design.md)\n\t- [consistency-and-standards](notes/consistency-and-standards.md)\n\t- [recognition-over-recall](notes/recognition-over-recall.md)\n\t- [user-freedom-and-control](notes/user-freedom-and-control.md)\n\t- [familiar-metaphors-and-language](notes/familiar-metaphors-and-language.md)\n\t- [show-system-status](notes/show-system-status.md)\n\t- [recognise-and-recover-from-errors](notes/recognise-and-recover-from-errors.md)\n\t- [anti-design-heristics](notes/anti-design-heristics.md)\n- [needfinding](notes/needfinding.md)\n- [participant-observation](notes/participant-observation.md)\n- [interviewing](notes/interviewing.md)\n- [storyboards](notes/storyboards.md)\n- [personas-and-scenarios](notes/personas-and-scenarios.md)\n- [mental-models](notes/mental-models.md)\n- [representation-and-distributing-cognition](notes/representation-and-distributing-cognition.md)\n- [visual-design](notes/visual-design.md)\n\t- [typography](notes/typography.md)\n\t- [layout](notes/layout.md)\n\t\t- [closure](notes/law-of-closure.md)\n\t\t- [grouping](notes/grouping.md)\n\t\t- [similarity](notes/law-of-similarity.md)\n\t- [color](notes/color.md)\n\t- [reading-and-navigating](notes/reading-and-navigating.md)\n- [hci-ethics](notes/hci-ethics.md)\n- [designing-studies](notes/designing-studies.md)\n- [assigning-participants](notes/assigning-participants.md)\n\n# Videos\n- [heuristic-evaluation](notes/heuristic-evaluation.md)\n- [storyboards-mockups-paper-prototypes](notes/storyboards-mockups-paper-prototypes.md)\n- [wizard-of-oz](notes/wizard-of-oz.md)\n- [video-prototyping](notes/video-prototyping.md)\n- [direct-manipulation-video](notes/direct-manipulation-video.md)\n- [mental-models-video](notes/mental-models-video.md)\n- [visual-design-video](notes/visual-design-video.md)\n- [designing-studies-video](notes/designing-studies-video.md)\n- [assigning-participants-video](notes/assigning-participants-video.md)\n- [running-in-person-experiments](notes/running-in-person-experiments.md)\n- [running-web-experiments](notes/running-web-experiments.md)\n- [analyzing-experiments](notes/analyzing-experiments.md)\n\n# Lectures\n- [04-evaluation-methods-birth-of-hci](notes/04-evaluation-methods-birth-of-hci.md)\n- [07-heuristic-evaluation-cont](notes/07-heuristic-evaluation-cont.md)\n- [08-personas-and-scenarios](notes/08-personas-and-scenarios.md)\n- [09-paper-prototypes-wiz-of-oz-video-prototypes](notes/09-paper-prototypes-wiz-of-oz-video-prototypes.md)\n- [10-design-heuristics-1](notes/10-design-heuristics-1.md)\n- [11-design-heuristics-2](notes/11-design-heuristics-2.md)\n- [12-design-heuristics-3](notes/12-design-heuristics-3.md)\n- [13-design-heuristics-4](notes/13-design-heuristics-4.md)\n- [14-direct-manipulation-and-mental-models](notes/14-direct-manipulation-and-mental-models.md)\n- [15-mental-models-representation-matters-distributing-cognition](notes/15-mental-models-representation-matters-distributing-cognition.md)\n- [16-distributing-cognition-and-visual-design-typography](notes/16-distributing-cognition-and-visual-design-typography.md)\n- [17-grids-grouping-alignment-reading-and-navigation](notes/17-grids-grouping-alignment-reading-and-navigation.md)\n- [18-ethics-in-hci](notes/18-ethics-in-hci.md)\n- [22-trends-in-hci](notes/22-trends-in-hci.md)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/information-security":{"title":"information-security","content":"\nInformation security is the science of protecting information assets. These include data, systems, equipment, and infrastructure. \n\n\u003e[!Definition]\n\u003e \"The preservation of confidentiality, integrity and availability of information; in addition, other properties such as authenticity, accountability, non-repudiation and reliability can also be involved.” \n\u003e (ISO27000 Information Security Management Systems – Overview and Vocabulary)\n\nThere is a continuous need for IS as the environement around it is rapidly changing.\n\nInformation systems have 6 main components\n- data\n- people\n- hardware\n- software\n- network\n- procedures\n\nIS can be split into three main components, called the [cia-triad](notes/cia-triad.md). The components are:\n- Confidentiality\n- Availability\n- Integrity\n\nPeople often use the [mccumber-cube](notes/mccumber-cube.md) to think about the security of their system and identify potential vulnerabilities. \n\nIt is impossible to create a \"perfectly secure system\". There exists a [access-security-tradeoff](notes/access-security-tradeoff.md)","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/inital-ui-designs":{"title":"","content":"[mobile-app-ass-03](notes/mobile-app-ass-03.md)\n\nCore features\n- Customisable Generator\n- Daily Trick\n- Link with friends\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/initial-ideas-mind-map":{"title":"","content":"# map\n- customisable trick generator\n\t- trick lists --\u003e users can create lists for the generator to choose a trick from\n\t\t- some built in lists\n\t\t- share lists with friends\n\t- options\n\t\t- trick types\n\t\t\t- jump\n\t\t\t- rail\n\t\t\t- pipe\n\t\t\t- butters\n\t\t- flips\n\t\t- spins\n\t\t- grabs\n\t\t- spin direction\n\t\t- bring back or not\n\t\t- stance\n\t\t\t- regular\n\t\t\t- goofy\n- daily trick\n\t- same for all users?\n\t- auto notification\n\t- schedule\n\t\t- weekly\n\t\t- custom\n\t\t- auto when at an altitude\n- App widget with daily trick? \n- search for tricks\n\t- options similar to generator\n\t- save tricks to a list for generator\n- link with other users\n\t- methods\n\t\t- qr code\n\t\t- url/link\n\t\t- contact\n\t\t- social media\n\t- people\n\t\t- friends\n\t\t- coach\n\t\t- parents\n\t- features\n\t\t- daily/sheduled trick group\n\t\t\t- how would this work with altitude detector\n\t\t- share trick lists\n\t\t- community section for trick lists\n\t\t\t- like spotify playlists\n\t\t- users can share tutorials\n- Ease of use - (hard to use with gloves)\n\t- voice controls\n\t- gesture controls\n- goals tracking\n\t- goal lists\n\t- daily/weekly/yearly goals\n\t- trick generator can choose a trick from goals\n\t- share (or keep private) with coach and friends\n\t- trick tutorials\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/integrated-development-environments":{"title":"integrated-development-environments","content":"\n# 1 Types\n\n## 1.1 Source code editors\n- editor applications to help software development\n- provide features that help editing code\n\t- auto indent, bracket matching, syntax hl, auto completion, rapid navigation\n\t- run/test code\n\n## 1.2 Integrated dev env\n- allow you to remain within one application when carrying out software development work\n\t- can edit source files\n\t- can compile source files\n\t- can run debugger\n\t- integrates version management\n- some attach tools to running applications\n\n# 2 Features\n\n## 2.1 Snippets\nThese are are often included in laguage extensions. These snippets are templates for often repeated chunks of text.\n\nFor example a snippet to create a latex slide\n\n```\n\"dframe\": {\n\t\"prefix\": \"BDF\"\n\t\"body\": \"\\\\begin{dframe}{$1}\\n \\\\1 $2\\n\\\\end{dframe}\n\t\"description\": \"New dframe\" },\n}\n```\n\n## 2.2 LSP - syntax highlighting\n- allows IDE's to communicate with a \"language enging\"\n- ides dont need \n\n- shift from syntac to semantics\n- e.g.,\n\t- vs code chck file on opening\n\t\t- lsp reports type mismatches\n\t- rich editor functionality\n\t\t- autocompletion with appropriate context\n\t\t- information displayed on mouse hover\n\t\t- jumping to definitions on mouse hover\n\t\t- safe refactoring -\u003e better than blind search and replace\n\t\t- diagnosticso -\u003e e.g., display results of unit tests within editor\n\n## 2.3 Navigation\n- within files\n\t- bracket matching\n\t- block folding\n- multi file\n\t- multiple files at the same time\n\t- rapidly jump between files\n\t- search across all files\n- collaboration e.g., live sharing \n\n# 3 Modern IDEs\n- microsoft\n\t- vscode -\u003e free open source, highly popular\n\t- visual studio -\u003e integrates mobile and cloud development\n- java enivronments\n\t- eclipse - early leader in java, supports other languages\n\t- netbeans -\u003e also includes web dev tooling\n- jetbrains -\u003e IntelliJ IDEA, pycharm, phpstorm\n- google's android studio -\u003e official android IDE\n- apple's Xcode -\u003e free, macOS/iOS focus\n\n# 4 Early programming\n- dedicated machines\n\t- punched card programmer: separate machine from computer than reads cards\n- punched cards recore code and or data in binary\n\t- grid of positions, each representing a binary digit (bit)\n\t- each position in punches out, or not\n- analgogue electronic devices where you phsyicall wire things up\n\t- gaining interest now for use in machine learning\n\n## 4.1 Bootstrapping\n- already built tools can be used to builder better tools for building better tools etc.\n- e.g., first assembler was made in maching code. But after that they could use the assember to make a better assembler\n\n## 4.2 Early dev environments\n- command line based\n\t- text based terminals\n\t- command shell is the running application\n- Can use terminal to drive interactive languages\n\t- can edit, store software code\n\t- can compile cose and run resulting executables\n- it is still practical to do software development this way\n\t- vim etc\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/interpreter":{"title":"interpreter","content":"\n# What are they/what do they do\n- \"Interactive\" tool to run *high level interpreted*  languages. \n\t- pythonm ruby, shell, R, js, PHP\n- The interpreter program runs on CPU and executes program line by ine\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/interviewing":{"title":"interviewing","content":"\n## 1 Use Cases\n- [evaluating-designs](notes/evaluating-designs.md)\n- [requirements-elicitation](notes/requirements-elicitation.md)\n- [needfinding](notes/needfinding.md)\n\n## 2 Overview\n- direct and stuctured\n- semi structured\n- usually top down\n- effective for high level interface evaluation\n- need careful planning, experts, difficult to analyse\n- not a controlled experiment technique\n\n## 3 Conducting an interview\n### 3.1 Choosing participants\n- some is better than none\n- get pople who are representive of users\n\t- users of existing similar system\n\t- non-users -\u003e why people arent using a system\n\t- e.g., lecture support system\n\t\t- teachers\n\t\t- students\n\t\t- staff\n\t\t- admins\n\t\t- parents\n\t\t- freshman\n\t\t- phd\n\t\t- international domestic\n\t\t- stronger and weaker\n\t\t\n#### 3.1.1 Recruiting\n- Craiglist (in US)\n- your network\n- cheaper for less speciales users\n- if you can convince people you are imporving the world they might volunteer\n- if they think is is for profict they will expect to be paid\n- if you cant pay -\u003e you cant use a token of appreciation\n\n### 3.2 Process\n- introduce yourself explaint he purpose\n- the interview is about them, not you?\n- begin with open, unbiased questions-\u003e then follow up\n- ask the questions, and let them answer\n- have breaks and give them time\n- have a clear separation between the general introduction, the actual interview, and post inteview discussions\n\n### 3.3 Questions to avoid:\n- leading questions\n- what would they do / like / want in a hypothetical scenario\n- how often they do things\n- how much they like things on an absolute scale\n- avoid binary questions\n\n## 4 Pros/cons\n+ free and open answers\n+ sense of active contribution\n+ oppportunity for follow up\n- time consuming and resource intensive\n- dependent of commication skills of analyst\n- location/schedule can make this impractical\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/into-the-wild":{"title":"into-the-wild","content":"\n\nhappiness is only real when shared. \n\nhenry david [083-henry-david-thoreau](notes/083-henry-david-thoreau.md)\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/java-database-connectibity":{"title":"java-database-connectibity","content":"- ![jdbc slide](https://i.imgur.com/Dy79jcM.png)\n- ![jdbs slide what is does](https://i.imgur.com/NAr95En.png)\n- ![jdb issues](https://i.imgur.com/WR7qUae.png)\n- ![alternatives](https://i.imgur.com/rYhiX8o.png)\n- ![jdbi](https://i.imgur.com/OcNKIfH.png)\n\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/karl-marx":{"title":"karl-marx","content":"\n# Marx\n\"religion is the opiate of the masses\".\n\nlived in the era after the enlightenment. Dividends of these ideas are being paid. Trade is more available. There is ever increasing demand. Small crafter gave way to manufacturers. Power is given to these people. Max's thinks this is bad.\n\nMarx liked hegels dialectic:\n- thesis\n- antithesis\n- synthesis\n\napplied this to the economic history of the world. \n\n\"the history of all hitherto existing society is the history of class struggles\"\n\nalways two classes of people, rulers, and the exploited. rulers - thesis, exploited - anithesis, then revolution - synthesis. \n\ne.g.,\n- slavery vs slave master\n- peasants vs others\n\nmanufacturers - burgoise. others - politerate\n\nwe are the exploited class of this time period. rulers could be the big financial institutions\n\njust because you dont feel exploited doesn't mean you aren't. \n\nwhy would anyone be satisfied with this arrangement? why should be accept that revolution is necessary.\n\nrulers try to maximise their time in power. video games, movies, etc. distactin us from the world. \n\nultimate method of distraction is religion\n\n\n\n\"religion is the opiate of the masses\".\n\n\n\nmeant to mitigate the pain of being exploited. it is the ultimate fanstasy world. creates acceptance in the people. wverything is all \"gods will\". good for personal happiness, not good for society. \n\nthe structure of the religion of a time period mirrors the current econmic tactic of coercion by the ruling class. \n\ne.g., \n- heirachical structure of feudal system matches the religion of the time - catholism. \n- capitalism - liberty. religion abandons heirachical structure.\n\ntell the people \"the rich go to hell\".\n\nindividual moral progress is an illusion. the only thing that matters is the moral progress of society toward an end goal - the ideal society. \n\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/law-of-closure":{"title":"law-of-closure","content":"\nAnother law is the law of closure. Where our brain tries to \"autocomplete\" things\n![closure example](https://i.imgur.com/1bcanTN.png)\n![closure UI IBM](https://i.imgur.com/MW9r7PR.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/law-of-similarity":{"title":"law-of-similarity","content":"\nAnother law is the law of similarty. Things with similar appearance are grouped by our brains. \n![similarity example](https://i.imgur.com/lVlE1z8.png)\n![similarity UI](https://i.imgur.com/8BhtgTa.png)\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/layout":{"title":"layout","content":"\nTechniques such as, [similarity](notes/law-of-similarity.md), [grouping](notes/grouping.md) and (to a lesser extent) [closure](notes/law-of-closure.md), can be used to organise and groupu our interfaces. Often the grouping and layout is done before the rest of the design.\n\nExamples:\n![find dialogue](https://i.imgur.com/RfkC6Fq.png)\n![otago uni homepage](https://i.imgur.com/FjF8c98.png)\n![tobias poster](https://i.imgur.com/P1m9XH8.png)\n\nThis is relatively easy. However, when done badly it can quickly confuse the user.\n\n**Summary**\n- alignment guides the eye and reduces clutter\n- avoid slight misalignments that undermine your ability to beacon organisation\n- we automatically notice patterns and deviations\n- when you deviate do so strategically\n- use visual proximity and scale to convey semantic information\n\n# Examples\n![scott klemmer example](https://i.imgur.com/hGc8dZm.png)\n![youtube and ny times](https://i.imgur.com/5bztsrO.png)\n![apple finder and tobias poster](https://i.imgur.com/wgsiKb6.png)\n![google, ny times, craiglist, webby awards, before and after blurring](https://i.imgur.com/wnKoBEk.png)\n![scott klemmer examples 2](https://i.imgur.com/sGmAjLv.png)\n![scott klemmer examples 3](https://i.imgur.com/wD65fJu.png)\n![amazon](https://i.imgur.com/1L6IGAi.png)\n\n# Jan Tschichold and Bauhaus\nThere was a sudden change from the right images to the left. This was partly due to advances in technology. This change was made by the Bauhaus group/school which became a way of thinking. Their ideas were inspired by architecture. The style was simple, functional, well grouped. These elements are also present in their visual design. \n\n![typography old v new](https://i.imgur.com/nbEzVeP.png)\n![bauhaus bulding](https://i.imgur.com/MlP9Lra.png)\n![penguin books](https://i.imgur.com/jOCvCkw.png)\n![magazine](https://i.imgur.com/LXsRpCb.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/libraries":{"title":"libraries","content":"\n\n# what is a software library\n\n- collections of potentailly useful code. \n- implement comon fuunctionality so you dont have to \n- e.g., \n\t- music processign\n\t- game engines\n\t- etc.\n\n- languages may include standard libraries\n- *standard library* is one that is always available within a language\n\t- e.g., Java standard library\n- these make up only a small part of the broader available library functionality\n\n\n# Pros and cons of libraries\n\n- utf-8 conversion tables and collation schemes\n\t- e.g., for comparing equality of e.g., 'M�?ori' and 'Maori'.\n\t- this equality depends on the 'collation' scheme that is being used\n\t- conversion tables and collations are need for all known languages\n\t- it is good to not have to rewite these for each piece of software\n\t- just use a library\n\n- library code quality\n\t- well written libraries can propogate great benefits\n\t- econoomies of scale from reusilng good implementations\n\t\t- somebody needs to pay for the develp ment of the library\n\t\t- needs to be maintained\n\t- There is a downside -  code homogeneity\n\t\t- all programs using the same library carry the same security bugs\n\t- if you dont know the librar;y in detail you may not be able to fully utilise it\n\n- deep experience libraries\n\t- intel creates libraries that utilise their CPUs the best\n\t- they dont have to wait for library to be made that fully utilises their hardware\n\t- \n\n# understand trasitive dependencies in libraries\nhttps://xkcd.com/2347/\n\nlibraries rely on other libraries. These are called transitive dependencies. \n\nSoftware bill of materials enumerate what you depend on.\nwhen one of the libraries you use is updates, you may need to update to .\n\n# how they are provided\n- provided within language\n- some OSs provide large amounts of functionality\n\t- e.g., apple ecosystem\n\t\t- co dev of language and OS\n\t- microsoft windows ecosystem\n\t\t- .net\n\n# your obligations from using libraries\n\nmulitple different ways to interact with libraries\n- tight integration compiler builds library code into yours\n\t- only uses parts of library that you included in your app\n\t- but upgrading library requires rebuilding the app\n- library is packed alongside you app\n\t- may bloat youu app: includes unused library parts\n- licencing of the library\n\t- legal obligations\n\n# considerations when writing libraries\n- must consider general use cases\n- proper documentation\n- future maintenance\n\t- include abstractions to facilitate incremental updates\n- version numbering is important for compatibility\n\t- minor changes wont affect existing code\n\t- major changes will affect existing code\n\n# features of Java standard libraries\n- very large\n- e.g., two flavours of I/O\n\t- traditional\n\t- async i.e., non-blocking (NIO)\n- written in java\n\t- portable across OSs\n\t- thin layer of OS specific code\n\t- this helped it to \n\t\n# FYI \"Boost\"ing C++ library support\n\nboost is a rich set of libraries for C++\n\n\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/linear-probing":{"title":"linear-probing","content":"\n[animation demo](https://echo360.net.au/lesson/0e13f645-a91f-46c6-89d9-e3c31097b960/classroom#sortDirection=desc)\n\nA method of collision resolution for [hash-maps](notes/hash-map.md). In this scheme, each cell of the map contains a single key-value pair. If there is collision a key to be added maps to a cell that is already filled, to moves to the next cell *linearly* .\n\nIn C you know how many bytes of memory a k v pair will occupy. So you can store them as a continuous block of memory. Now you can take advatage of the locality of reference and the speed it provides. \n\nRules:\n- if a kv's home is already full, we move it into the next spot (wrapping to the beginning when we reach the end) in the array.\n- the load factor is capped and the array is resized when the cap is exceeded\n\n# Costs\nFrequency of collisions and time to find a new space are proportional to the *load factor* (percetage of occupied slots).\n- **Insertion:** $O(1)$ ⇒ proportional to the number of filled blocks we search before we find an empty one.  As long as the load factor is not to high this is on average \n- **Search:** $O(1)$ ⇒ Proportional to the number of cells we search before finding the one we want or an empty cell\n- **Resize**: $\\theta(n)$ amortised[^1] to $O(1)$ ⇒ Need to copy all elements to array of about[^2] double the size.\n\n# Deletion\nwe cant just empty cells as this will break search. We could:\n1. we could replace it by a \"tombstone\" marker. This counts as \"full\" for search and load purposes, but empty for insertion.\n2. we search foward from the element we're removing until we find something that belongs in that location or earlier - swap it back into this location and repeat until an empty cell is found.\n\n[^1]: Since we are able to do about n operation before we need to resize, we can spread this cost among those operation.\n[^2]: By not doubling exactly, the modulo remainder is \"scrambled\" a bit thus reducing collions.\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/linker":{"title":"linker","content":"\n\n- Linkers facilitate use of code in multiple languages, e.g. \n\t- use C for programming speed of developer; \n\t- use Assembly language for running speed of code \n\t- But these days: often hard to beat optimising compilers! \n- Linkers effect interaction with libraries in two ways: \n\t- Static linking: build libraries’ code into your application \n\t- Dynamic linking: library connected in at load or run-time \n- Linkers facilitate interaction with OS\n\n## Static linking \n- Statically linked libraries are built into executable \n\t- We’ve previously discussed the dependency problems: \n\t\t- Every executable carries the weight of the library code \n\t\t- Also, bug fixing requires rebuilding the whole program \n- However, static linking is straightforward \n\t- e.g., nothing much OS-specific about static linking \n\t\t- Library calls are just function calls within userspace \n- Alternative is for linking not to finish at compile-time \n\t- Linker could add code to link at runtime \n\t- More commonly, linker tells OS more linking needed later \n\n## Dynamic linking \n- Dynamic linking is common on modern OSs, e.g., \n\t- DLLs on Windows: Dynamic Link Libraries \n\t- SOs on Linux, Solaris: Shared Objects \n\t- DyLibs on macOS: Dynamically loaded modules \n- One copy of dynamic library shared by all executables \n\t- efficiently uses memory: load into RAM once; share to all \n- Fixing bugs / security flaws is streamlined: \n\t- just upgrade the single copy of the library \n\t- all processes will adopt fixed library (when they next start) \n\n## Managing dynamic libraries \n- Dynamic libraries may have different ownership \n\t- Some dynamic libraries will be part of the OS distribution \n\t- Others installed along with apps that need those libraries \n- Can track installable library use with reference counters \n\t- Software installer checks whether library is already present: \n\t\t- if not, install library, set reference count to one \n\t\t- if so, increase reference count by one \n\t- Uninstaller decreases reference count: deletes if at zero \n\t- But your reference counting needs to be reliable \n\t\t- ... unlike early Windows OSs: so called ‘DLL hell’\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/loader":{"title":"loader","content":"\nAn executable file e.g., greet has to be **loaded and run** by your [OS](notes/operating-system.md). Depending on your OS and your harwdare this might need to be done differently\n\n## C program example\n[400](https://i.imgur.com/1PlLlQ5.png) [400](https://i.imgur.com/bBQp3TH.png)\n\n## OS Program loaders\nThere identify the types of file that is being executed. E.g., a  #! at the beginning of a file tells the OS which interpreter to run that file through. Otherwise it will look into the binary file, loads any dynamic libraries, and adjusts the executable code to point to shared libraries in RAM. Eventaully the OS will point the CPU at the binary machine code, first creating an OS process to contain code execution so it cannot overwrite memory belonging to another process\n\n## Java Program \"loader\"\nJava was designed to be portable, and minimose effort to port to another OS. Java \"hides\" the OS from you. It can dynamically load classes at runtime, thus avoiding an explicit linking stage. Java class loaders can read .class files. The Top-level ClassLoader is written in native code. It loads internal classes like HashMap. Then ClassLoader subclasses written in java can be loaded.\n\n## Even higher level computing abstractions\n- Java Enterprise edition\n\t- run code is exisintg application server\n\t- most of the time the app framework is running\n\t- your code injects key classes with custom business logic\n- .NET is similar\n- Web application programming\n\t- stacks offer page templating, business rules, databases\n- Cloud native application\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/logic-gates":{"title":"logic-gates","content":"\n\n# Logic Gates\n- NOT\n- AND\n- OR\n- NAND\n- NOR\n- XOR/EOR","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/low-fidelity-prototypes":{"title":"low-fidelity-prototypes","content":"\n# Inital Designs\n## Navigation\nThe first thing I wanted to was get a clear picture of how each screen should interact with the others. Identified three main screens: Home, Friends, and Schedule. I also identified some supplementary screens: Trick options, other settings, and welcome, and some more optional screens: Trick lists, trick dictionary. \n\nI also listed some things that each screen should contain\n![](https://i.imgur.com/GeFsI1N.png)\n\n## General protoypes\nNext I started to get down down general ideas about all of the screens. The main goal of this step for was to figure out the general flow of the app, and to get a general idea of how each screen should look.\n\nThis first two pages I was experimenting mostly with the home screen. I tried three different layouts: Top tabs, Bottom tabs, and floating bottom buttons. I also started to explore ways for the user to navigate from the home screen to the trick options screen, and the schedule screen.\n\n![](https://i.imgur.com/opwrdE6.png)\n![](https://i.imgur.com/p4WFba9.png)\n\nThe second page I explored a some variations on the floating button design. And begin  experimenting with the navigation and layout of the friends screen.\n\n![](https://i.imgur.com/vrW0wOS.png)\n\nOn the third page I kept experimenting with the friends page. \n\n![](https://i.imgur.com/ey0yJTT.png)\n\n# In depth prototypes\n## Home screen\nI wanted to keep the layout mostly based on googles material design. This will help with four design heuristics: Familiar metaphors and language, consistency and standards, recognition over recall, and minimalist design.  \n\nI started with creating an partly new design that combined the floating buttons, and the swipe feature for trick options. I decided against this as within material design it is not reccomended to have multiple floating buttons. I decided instead to use bottom tabs as they are the most logical, and familiar design for users. \n\nI also decided against the swipe feature to show tricks, and opted instead for a button which opened another screen.\n\nI also tried out some other designs features a black background and round buttons.\n![](https://i.imgur.com/DbOlh7s.png)\n\n![](https://i.imgur.com/CbEtGUq.png)\n![](https://i.imgur.com/D4PaDJL.png)\n\n\n## Other settings\n![](https://i.imgur.com/5QPmErT.png)\n\n## Trick Options\nFor the trick Options I considered a few three main designs: the swipe/scroll, the modal, and the full screen.\n![](https://i.imgur.com/sovj0Q5.png)\n\n\n## Welcome\n![](https://i.imgur.com/YXarRMG.png)\n\n## Schedule\n![](https://i.imgur.com/zygYzAH.png)\n\n# Version 1\nAfter getting a general Idea of the basic layout of the app, I compiled my favourite versions of each screen into one design. This allowed to informally evaluate the design and find things to change.\n\n![600](https://i.imgur.com/KlcfDxK.png) ![600](https://i.imgur.com/hDfqduV.png)\n\n# Version 2\nThe first Thing I want to change is the schedule/altitude screen. I thought I could remove the separation and combine the two screens. But this didn't work so well.  However, I think the ability to switch between meters and feet was good as this improves **user control and freedom**. Also the use of the spinner for time and altitude selection will be familiar to most users. This improves use of **consistency and standards**, and **recognitiona over recall**. I also decided to try a \"switch\" type design, where the user is forced to chooose between the schedule and the altitude. \n\nI think think this works much better as it **shows the system status** clearly. And has a less cluttered more **miniml, aesthetic design**. I kept the weekday selection on both screens as the might only want use the altitude system on certain days. This improves, **user control and freedom**.\n\nI also thought it might not be super clear what the functions of the two options were, especially the altitude option. So decided to add a closable info card with some information. This improves **help and documentation**\n\nI also wanted to change the way the trick options worked. Instead of have the save cancel buttons I wanted the settings change to have immediate effect, so the user didn't have to save. These changes are in the second row of the first page of version 2. The actual options themselves are largely the same, except I added a header with a back button and removed the bottom save and cancel buttons. Next I changed the dropdown for each of the trick types to individual screens with the commonly used right chevron icon.\n\nI also added the bottom navigation bar back to the trick options screens to improve **user control and freedom**\n\n![600](https://i.imgur.com/Tph3x0V.png) ![600](https://i.imgur.com/rcK33u8.png)\n\n# Version 3\nAfter I had mostly finished the Layout. I changed the look to match the snowboarding \"aesthetic\", by making the app primarily black. However I dont think this design was as easy to use as the normal light design.\n![600](https://i.imgur.com/VRoFhvQ.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/mary-woolstonecraft":{"title":"mary-woolstonecraft","content":"\nKnown as the \"original feminist\"\n\nLived during the renaissance with other such as [voltaire](notes/voltaire.md) and burke. She was born into a conservative household, with a drunk wifebeater for a dad. She often tried to protect her mother from him. This founded her need to protect other women. \n\nShe became a personal tutor for a family with four young girls. Each of them grew up to be successful woman. \n\nAt the time of her birth women were had almost slaves. Even the most progressive thinkers of the time had very misogynistic views. For example Rosseau said: \n\n\u003e \"the whole education of women ought ot be relative to men, to please them, to be useful to them, to make themselves loved and honoured by them, to educate them when young, to care for them when grown, to counsel them to console them, and to make life agreeable and sweet to them, these are the duties of women at all times, and should be taught to them from their infancy\"\n\nThis sounds a lot like slavery.  Women are percieved as mentally and physically inferior to men. It was this kind of thinking that Woolstonecraft was trying to abolish. She said:\n\n\u003e \"strengthen the female mind by enlarging it, and there will be an end to blind obedience, but as blind obedience is ever sought for by power, tyrants and sensualists are in the right when they endevour to keep women in the dark, because the former only wants slaves and the latter a plaything\"\n\nHere she is saying the system that oppresses women is like a tyrant. She was the first to consider the idea that equality should be for both men *and* women (wow), thus starting the pursuit of true equality.\n\nThe current cultural conventions are constantly changing. These changes usually occur is bursts as revolutions. Some progressive thinker points out a glaring injustice, then change occurs.\n\nWoolstonecraft dared to question the cultural conventions of her time. This leads to the questions: What social conventtions exists today, that we aren't questioning? Who is the tyrant now? How are we being conditioned? It is inevitable that future generations will look back at us as barbarians, in the same way we view earlier generations.\n\nAcknowlegding how arbitrary our current norms are is freeing.","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/math-202":{"title":"math-202","content":"- [site](https://www.maths.otago.ac.nz/?resOLAF)\n- [syllabus](https://www.maths.otago.ac.nz/webdata/resources/math202/2022_S2_Course_Information/Syllabus.pdf?m=1657334628)\n\n![[C:\\User\\Jet HUghes\\Documents\\Personal\\courses\\math-202\\Textbook.pdf]]\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/mccumber-cube":{"title":"mccumber-cube","content":"\nThe mccumber cube is  way of thinking about how to protect information\n\n![slide](https://i.imgur.com/5Ls2yUp.png)\n\nIt is a map that can be used to find \"holes\" within systems.","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/media":{"title":"media","content":"\n# Books\n- [The Story of Man](notes/the-story-of-man.md)\n- [The Art of War](notes/the-art-of-war.md)\n- [The Friar and the Cipher](notes/The-Friar-and-the-Cipher)\n\n# Podcasts\n- [philosophize-this](notes/philosophize-this.md)","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/memoization":{"title":"memoization","content":"\nA method of designing algorithms which is similar to dynamic programming in that previously calculated answers are stored in memory\n\n- initialising memory for answers\n- work from top down\n- whenever a result is computed store it in memory\n- look up computed values (if you can) when needed\n\n```java\nstatic HashMap\u003cInteger, Long\u003e fib = new HashMap\u003c\u003e();\npublic static long fibMEM(int n) {\n\tif(n \u003c= 1) return 1;\n\tif(!fib.containsKey(n)) {\n\t\tfib.put(n, fibMEM(n-1) + fibMEM(n-2));\n\t}\n\treturn fib.get(n);\n}\n```\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/memory":{"title":"memory","content":"\nComputer memory is a series of switches (similar to the switchboard in a house). Each switch is identified by a number and is either on or off. \n\n(High level) Programming languages allow us to name some of the locations using variables. this is easier than remembering the number of each \"switch\"\n\nThese switches are mostly located in RAM. But there are also switches within the CPU called registers\n\n# SRAM\nStatic ram is:\n- made from flip flops.\n- mostly used in the cpu cache or anywhere where only a small amout of memory is needed. \n- comparatively expensive to DRAM\n\n# DRAM\nDynamic ram is:\n- made from capacitors\n- used where a large amount of memory is needed\n- slower than SRAM\n- inexpensive\n\n# Non volatile memory\nThis is often called ROM (read only memory)\n- can also be called PROM, EPROM, EEPROM, FLASH (floating-gate flash cells not transistors )\n\n# Registers\n- Registers are memory cells with names within the CPU. \n- They hold data instructions or CPU status.\n\n## Special purpose registers\n- program counter\n\t- stores address of current instruction\n- accumulator\n\t- source of one of the operands\n\t- destination of the result\n- status flags\n\t- individaul bits store information about results of operations\n\t\t- result of last instruction was negative, zero, or postive\n\t\t- carry from most recent arithmetic operation\n\t\t- overflow occurred during the last instruction\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/mental-models":{"title":"mental-models","content":"\n- mental models are created by experience, metaphors, and analogical reasoning\n- these models are developed further through interaction with the system\n- designers (wrongly) often expect the users model to be the same as theirs\n\nA mental model mistach leads to:\n- slow performance\n- errors\n- frustration\n\n[participant-observation](notes/participant-observation.md) appretiships (and other techniques such as [evaluating-designs](notes/evaluating-designs.md)) can uncover these mismatches. \n\n## Slips vs mistakes\n\n| Slip       | Mistake                           |\n|:-----------|:----------------------------------|\n| accidental | on purpose (due to model mistach) |\n\n\n## How to create good mental models\n- [Direct Manipulation](notes/direct-manipulation-video.md)\n\t- leveraging real world metphors\n\t- this gives is a good idea of how each object works and how to control it\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/mental-models-video":{"title":"mental-models-video","content":"\nThe users mental model is how the user thinks the interface works.\n\nfor example the fridge with two dials, or the doors.\n\nThe goal is for the design to create the correct mental model in the user. Designers often expect the user to have the same mental model as them, but this is not always the true. The users model is developed through iteraction with the system\n\nThis is why its important to have other people test the system.\n\nA conceptual model mistach can lead to slow performance, erros, and frustration.\n\nMental models arise from experience, metaphor, and analogical reasoning. We can leverage what people have learnt from old interfaces to inform new ones. Our mental models are iconsistent, unstable in time, and often rife with superstition. \n\n# Slips vs Mistakes\n\nA slip is when you have the right model but accidentally do the wrong thing.\n\nA mistake is when you do what you intended, by you have the wrong mental model.\n\nSlips with be prevented by improving ergonomics or visual design.\n\nMistakes can be prevented by providing better feedback and making options more clear.\n\nre using existing designs reduced mistakes. \n\n\n# World in miniature interface\n\nfor example the seat interface\n[](https://i.imgur.com/J8d9Q0N.png)\n\n\u003e \"Is technology is providing an advantage, the correspondance to the real world must break down at some point\" - Jonathan Grudin\n\nWe should minimise the gap between current technology and new technology. \n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/mergesort":{"title":"mergesort","content":"\nMergesort is a [divide-and-conquer](notes/divide-and-conquer.md) algorithm. It works by recursively splitting the array in half then merging the two (sorted) halfs together . It has three main steps. These are:\n\n- pre-processing: split the array into two pieces\n- recurive step: sort each of the pieces \n- post-processing: merge the two pieces\n\ne.g.,\n\n7 5 3 9 1 8 2 5 4 0\n\n7 5 3 9 1 |  8 2 5 4 0\n\n7 5 | 3 9 1 | 8 2 5 | 4 0\n\n5 7 | 1 9 3 | 2 8 5 | 0 4\n\n1 3 5 7 9 | 0 2 4 5 8 \n\n0 1 2 3 4  4 6 7 8 9\n\n# 1 Implementation\n## 1.1 Merge\n\nGiven: a and b are sorted arrays. m is an array whose size is the sum of their sizes\nGet: a sorted array containing the elements of a and b\n\nKeep track of indices, ai, bi, and mi of the active location of a, b, and m.\nFind which of ai or bi is lesser (break ties is favour of a), and copy that value into m at mi, and increment mi and whichever of ai or bi was used.\nOnce ai or bi is out of range, copy the rest of the other array into the remainder of m\n\n```java\npublic static int[] merge (int[] a, int[] b){\n\tint[] m = new int[a.length + b.length]\n\tint ai = 0, bi = 0, mi = 0;\n\n\twhile(ai \u003c a.length \u0026\u0026 bi \u003c b.length) {\n\t\tif(a[ai] \u003c= b[bi]) m[mi++] = a[ai++];\n\t\telse               m[mi++] = b[bi++]\n\t}\n\n\twhile (ai \u003c a.length) m[mi++] = a[ai++];\n\twhile (bi \u003c b.length) m[mi++] = a[bi++];\n\n\treturn m;\n}\n```\n\n\n### 1.1.1 Complexity of merge\n\n$\\theta(n)$  \n\n$n$ is the sum of the lengths of $a$ and $b$ \n\nEach time we loop the parameter $mi$ must increase by one, and this parameter runs from $0$ to $n-1$ \n\nSince the total number of loop bodies executed is $n$ and each loop does a constant amount of work, the total time complexity is $\\theta(n)$  \n\n\n## 1.2 Sort\n\n```java\npublic static void mergeSort(int[] a) { \n\tint blockSize = 1; \n\twhile (blockSize \u003c a.length) { \n\t\tint lo = 0; \n\t\twhile (lo + blockSize \u003c a.length) { \n\t\t\tint hi = lo + 2*blockSize; \n\t\t\tif (hi \u003e a.length) hi = a.length; \n\t\t\tmerge(a, lo, lo + blockSize, hi); \n\t\t\tlo = hi; \n\t\t} \n\t\tblockSize *= 2; \n\t} \n}\n```\n\n\n### 1.2.1 Complexity of Sort\n\n$\\theta(n\\ lg\\ n)$\n\n\u003e In a divide and conquer algorithm where pre and pst processing work are Ο(n) and the division is into parts of size at least n for some contatn c \u003e 0 the total time complexity is Ο(n lg n) and generally ϴ(n log n)\n\n#### 1.2.1.1 Top down\n\nWe can split into the three steps to analyse this.\n\n- Pre has constant time i.e., $\\theta(1)$\n- Post has linear time i.e., $\\theta(n)$\n\nTherefore: $M(n) = \\theta(n) + 2 \\times M(n/2))$ \n\nSubstitue $\\theta(n)$ with $C \\times n$ then\n\n$$\n\\begin{align*}\nM(n) \u0026= C \\times n+2 \\times M(n/2) \\\\\n\u0026= C \\times n+2 \\times (C \\times (n/2) + 2 \\times M(n/4))\\\\\n\u0026= C \\times (2n) + 4 \\times M(n/4) \\\\\n\u0026= C \\times (2n) + 4 \\times (C \\times (n/4)) + 2 \\times M(n/8))\\\\\n\u0026= C \\times (3n) + 8 \\times M(n/8)\\\\ \\\\\n\u0026= C \\times (kn) + 2^k \\times M(n/2^k)\n\\end{align*}\n$$\n\nThis stops (at least) when we reach the base case of $n/2^k=1$ . We could stop earlier and\n\nIf we do a constant amount of work $D$ when we reach the base case we get:\n\n$$\nM(n) = C \\times (kn) + 2^k \\times D\n$$\n\nwhere $k\\leq lg(n)$ so:\n\n$$\nM(n) ≤ C \\times (n lg(n)) + D(n) = ϴ(n\\ lg(n))\n$$\n\n\n\n\n\n#### 1.2.1.2 Bottom Up\n\n- Let n be the number of elements in the array, $a$.\n- The outer while loop (controlled by blockSize, or $b$) is executed $lg(n)$ times since its upper bound is n and b is doubled each time.\n- In the inner loop, the update on lo is to add $2b$ so it is executed $n/(2b)$ times.\n- The inner loop merges two arrays of size b, so each instance does $\\theta(b)$ work.\n- That gives an upper bound on the work done in one instance of the outer loop of the form:\n\n$$\n(n/(2b)) \\times (A \\times b) = (A/2) \\times n\n$$\n\nand a matching lower bound.\n\n\n- Thus, the work done in one instance of the outer loop is $\\theta(n)$ \n- And so, the total complexity is $\\theta(n\\ lg\\ n)$.\n\nThe bottom-up version does exactly the same thing as the top-down version, just in an apparently different order, so this analysis applies to the top-down version as well.\n\n\n# 2 Variations of Mergesort\n\n[unite and conquer](notes/unite-and-conquer.md)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/mobile-app-ass-03":{"title":"mobile-app-ass-03","content":"\n[full-assignment](notes/full-assignment.md)\n\n[pdf](https://blackboard.otago.ac.nz/bbcswebdav/pid-2827493-dt-content-rid-18385743_1/courses/INFO203_S1DNIE_2022/Assignment3.pdf)\n\n[idea](notes/idea.md)\n[initial-ideas-mind-map](notes/initial-ideas-mind-map.md)\n[brainstorming](notes/brainstorming.md)\n[personas-development](notes/personas-development.md)\n[personas-final](notes/personas-final.md)\n[hi-fi-development](notes/hi-fi-development.md)\n\n- [x] brainstorming [brainstorming](notes/brainstorming.md)\n- [x] Personas and scenarios\n\t- [x] Development [personas-development](notes/personas-development.md)\n\t- [x] Primary [Primary Casual Kyle](notes/personas-final.md#Primary%20Casual%20Kyle)\n\t- [x] Secondary [Secondary Logan the learner](notes/personas-final.md#Secondary%20Logan%20the%20learner)\n- [x] Storyboard\n- [x] Low-fi Prototypes [low-fidelity-prototypes](notes/low-fidelity-prototypes.md)\n\t- [x] drawings stage 1\n\t- [x] drawing stage 2\n\t\t- [x] more alternatives for navigation diagram\n\t\t- [x] more intial designs\n\t- [x] document\n\t\t- [x] add references to design heuristics\n- [x] Hi-fi Prototype \n- [ ] Presentation\n\n\n\n\n\n \n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/model-view-controller-pattern":{"title":"model-view-controller-pattern","content":"\n**Model:** An object carrying data\n- handles data logiv\n- interacts with database\n\n**View**: The visualisation of the data that model contains\n- rendered dynamically\n\n**Controller:** Controls the data flow into model object and updates the view whenever data changes. Keeps view and model separate.\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/modelling-behaviour":{"title":"modelling-behaviour","content":"\n[relevant slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2892846-dt-content-rid-18407618_1/courses/INFO201_S1DNIE_2022/2022/lectures/lecture_12_slides.pdf), [lecture recording](https://echo360.net.au/lesson/3807232c-e251-4818-a098-c61f6a6b455a/classroom#sortDirection=desc), [relevant article](https://thevaluable.dev/anemic-domain-model/)\n\nModelling behaviour is more complex than modelling the structure of OOP systems (e.g., [class-diagrams](notes/class-diagrams.md). There are more diagram types, they are more general, and more complicated.\n\nClass do diagrams specify *some* behaviour (public vs private, method signature and implementations, api (what methods are available), inheritance and behaviour).\n\nModels of system and object behaviour cover these and also lower level sequencing and flow of control, and compartmentalisation into \"subsystems\"\n\n# 1 Inheritance\n## 1.1 Via Specialisation\nInheritance via specialisation is when something is subclass of something else. Subclasses inherit all public members of their parents. They are able to replace or customise inherited existing methods and add their own specialsed methods (including constructors). [example class diagram](https://i.imgur.com/Nul5ECp.png), [example java code](https://i.imgur.com/D7nZ2ON.png)\n\n## 1.2 Via Interface\nAn interface is a class that specifies a set of common behaviour. \n- public methods and constant fields only (no variable fields)\n- effectively an “inheritable\ufffd\ufffd? public API (no implementation) ⇒ Catalogue must implement all Search methods\n- independent of inheritance via specialisation\n- a class can implement multiple interfaces\n\n[example class diagram](https://i.imgur.com/tZX8uQT.png) \n\nin Java: \n- [example java code](https://i.imgur.com/2cXr5CM.png)\n- Examples of built-in Java interfaces: (also see INFO 202) \n- Collection: collections of objects (lists, sets, maps, …) \n- Iterable: collections that can be iterated over \n- Comparable: objects that have a concept of ordering\n\n## 1.3 Public vs Private\n- The public API defines what a class can do \n\t- e.g., read and write data, manage a list of items \n\t- effectively a “promise\ufffd\ufffd? or “contract\ufffd\ufffd? to other classes that use it \n\t- should be as stable as possible \n\n- The private implementation defines how a class behaves \n\t- e.g., data stored in memory vs. CSV files vs. SQL DBMS vs. …, unsorted lists vs. sorted vs. unique vs. … \n\t- can change to improve speed, reduce memory, redesign architecture, take advantage of new language features, …\n\t- shouldn’t be exposed to other classes\n\n### 1.3.1 Why\n- More stable public API: \n\t- doesn’t expose internal implementation details \n\t- can change internals without breaking promised behaviour\n\n- More flexible public API: \n\t- less coding required to switch implementations \n\t- can easily switch internal implementations on the fly (e.g., print receipt vs. save as PDF vs. send as email) \n- Programming to an interface (i.e., public API): \n\t- encapsulate public API into a class or (Java) interface \n\t- subclass or implement this to create specific implementations \n\t- use the top-level class or interface everywhere you would otherwise use the specialised implementations\n\n\n# 2 Behaviour\n## 2.1 Anaemic domain models\nIn an anaemic domain model the **domain objects** also called **Models** contain (mostly) only data, and very little logic.\n\nThe **services** set the properties of the models via getters and setters. This defines the logic of the application\n\n[anaemic example](https://i.imgur.com/PeaBhnX.png)\n\n**Processor objects** are often used in anaemic systems to move data between objects. Also called **services**\n\n[processor example](https://i.imgur.com/jw3Xbc1.png)\n\n\n## 2.2 Rich domain models\nIn a rich domain model logic is contained within  **real domain models**. And the service layer thin and used only for third party services.\n\nThis means that the behaviour of the domain models is encapsulated within them\n\n[rich example](https://i.imgur.com/eHmda7A.png)\n\n\n\n#unfinished \n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/models":{"title":"models","content":"\n\u003e \"A model is an informative representation of an object, person or system\"\n\nSoftware is made up of models. It is not only \"code\"\nModels can be high level (mockups etc) or low level (code)\nModels can be executable (code, ec) or not (diagrams)\n\nModels are used in [domain-driven-design](notes/domain-driven-design.md) and in  [behaviour-driven-development](notes/behaviour-driven-development.md)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/mood-board":{"title":"mood-board","content":"\n# Mood board\n- Black and white maybe an accent color\n- sharp edges\n- capital letters\n- minimal\n- bold\n- dynamic\n- harsh\n- dark background\n- image background?\n\n\n- https://stabmag.com\n\t- ![](https://i.imgur.com/zAt30SM.png)\n- https://www.pleasuremag.com\n\t- ![](https://i.imgur.com/tLJFAp9.png)\n- https://www.snowboarder.com\n\t- ![](https://i.imgur.com/TOY6gHL.png)\n- https://www.thrashermagazine.com\n\t- ![](https://i.imgur.com/KfWhHcC.png)\n- https://ridesnowboards.com/en-nz\n\t- ![](https://i.imgur.com/EPmwnVv.png)\n\t- ![](https://i.imgur.com/4MvjlyZ.png)\n- https://romesnowboards.com\n\t- ![](https://i.imgur.com/w4YTDM2.png)\n- https://www.burton.com/us/en/home\n\t- ![](https://i.imgur.com/ruTBXvQ.png)\n- https://unionbindingcompany.com\n\t- ![](https://i.imgur.com/pRNjDed.png)\n- https://thirtytwo.com\n\t- ![](https://i.imgur.com/GMUsPkq.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/movie-list":{"title":"movie-list","content":"\nTop movies\n- jojimbo\n- taxi driver\n- pulp fiction\n- rashomon\n- annihilation\n- akira\n- ghost in the shell\n- good the bad the ugly\n- perfect blue\n- \n\ndownloaded\n- salo\n- donnie darko\n- blade runner original\n- audition mike takashi\n\nTo watch\n- largent\n- the brown bunny\n- salo\n- the tree of life\n- black swan\n- ikuru (the idiot)\n- boogie nights\n- both blade runners\n- fistful of dollars\n- magnificent seven\n- godfather\n- taxi driver (rewatch)\n- suspiria (new version)\n- the passion of joan of arc\n- a matter of life and death\n- black narcissist\n- the red shoes\n- paris texas\n\ntarantinos faves\n- battle royale kinji fukasaku\n- anything else\n- the blade\n- audition mike takashi\n- boogie nights\n- dazed and confused\n- rio bravo\n- dogville\n- fight club\n- friday \n- the host\n- the insider\n- joint security area (jsa)\n- lost in translation\n- the matrix\n- memories of murder\n- police story 3 supercop\n- shaun of the dead\n- speed 1994\n- team america\n- unbreakable 2000\n- brian de palma blowout\n\namerican\n- midnight cowboy\n- easy rider\n- the last movie\n- five easy pieces\n- the king of marvin gardens\n- the last picture show\n- the deer hunter\n- the exocist\n- indiana jones and the temple of doom\n\nhorror\n- halloween\n- the thing\n- the texas chainsaw massacre\n- the evil dead\n- a nightmare on elm street\n- plague dogs\n- salvador dali experimental film un chien andalou\n- threads\n- relic\n- possesion 1981\n- occult 2009\n- last summer\n\n\naustralian\n- walkabout\n- wake in fright\n- picnic at hanging rock\n- the last wave\n- mad max\n\nindia\n- apu trilogy\n\nrussian\n- the cranes are flying\n- andre rublove\n- war and peace\n\ngermany\n- kings of the road\n- the marriange of maria bron\n- world on a wire\n- geray the wrath of god\n- fitzkoraldo\n\nsweden\n- inmar bergman entire collection\n\nfrance + italy\n- rome open city\n- bicycle thieves\n- e vilatoni\n- lestrada\n- le dolce vita\n- 8 and a half\n- fallini stariacon\n- roma\n- ill sorpasos road trip comedy though italy\n- investigation of a citizen above suspicion\n- the conformist\n- le ventura\n- eclise\n- dollar trilogy\n- once upon a time in the west\n\nfrench\n- o hazard balthazar\n- le samurai\n- le circle rouge\n- bob le flember\n- playtime\n- the discreet charm of the bugoise\n- belle de jour\n\nfrench new wave\n- breathless\n- contempt\n- four hundred blows\n- day for night\n- stolen kisses\n- the umbrellas of cherberg\n- the young girls of rochefort\n- donkey skin\n- my night at mauds\n- la collectionneuse\n- claire's knee\n- elevator to the gallows\n- cleo from 5 to 7\n- last year at marienbad\n\nanime\n- grave of the fireflies\n- your name\n\njapanese\n- stray dog\n- kurosawa dreams\n- tokyo story\n- late spring\n- good morning\n\nww2\n- the longest day \n- ivans childhood\n- night and fog\n- to be or not to be \n- the thin red line\n- the pianist\n- army of shadows\n- come and see\n- the selons de samare\n- ","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/needfinding":{"title":"needfinding","content":"\nhow to start imporving or designing inerface\nhow to identify the gap or use interface issues\n\nneeddfinding tries to identify issues, often through observational studies (qualitative)\n\n\u003e \"the trick [challenge] to finding ideas is to convince yourself that everyone and everything has a story to tell\"\n\u003e \"The other trick if finding out the difference between power and knowledge. You dont start at the top if you want to find a story, you start in the middle. Because its the people in the middle that do the work\"\n\u003e \"self conciousness is the enemy of interestingness\"\n\u003e -malcolm gladwell\n\n## 1 Methods\n- [participant-observation](notes/participant-observation.md)\n\t- Apprenticeship\n\t\t- set a partnership with the people to be observed\n\t\t- be taught the steps in the process\n\t\t- observe the practives\n\t\t- validate what you are observing with those observed as you go along\n\t\t- e.g.,\n\t\t\t- apprenticeship is eVision user \n\t\t\t- task: find in which room INFO203 is\n\t\t\t- problem: I do not have a timetable in eVision like students\n\t\t- allows you to capture the context of use and the issues and needs\n\t\t\t- what do people do now\n\t\t\t- what values and goals do people have\n\t\t\t- how are these particular activities embedded in the larger context\n\t\t\t- similarities and differences across people\n\t\t\t- other types of context that are relevant -\u003e time of day, social context\n\t\t\n- [interviewing](notes/interviewing.md)\n\t- avoid leading questions\n\t- choose sample representative of real users\n\t- often impractical\n\t- can be structured or semi-structured\n\t- effective for high level\n\n- Longitudinal studies\n\t- sporadic use -\u003e when the product is used rarely\n\t- used when you cannot use observational studies\n\t- diaries\n\t\t- scale better than direct observation (less time consuming)\n\t\t- give people a diary to copmlete\n\t\t- structred task\n\t\t- can use journals, camera, voice, video\n\t\t- tailor the recording to the context\n\t\t- may require practice, training, reminding\n\t\t\t- use of ntifications, digital calendars, phone calls\n\t- Experience sampling\n\t\t- use txt, phone calls , calendars, notifications to recieve feeback or actively remind people\n\t\t- choose interval depending on study context\n\n \n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/networks":{"title":"networks","content":"\n- [docker-containers](notes/docker-containers.md)\n- [virtual-machines](notes/virtual-machines.md)\n- [SSH](notes/ssh.md)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/normalisation":{"title":"normalisation","content":"\nformal process of eliminanting unnecessary redundancy in relations by splitting relations into smaller chunks\n\nbottom up approach\n- functional dependencies ⇒ normalised relations\n- requirements ⇒ conceptual ≫ logical is \"top down\"\n- use normalisation to verify your logical design\n\t- to ensure you haven't missed anything\n\n# 1 Pros and cons\n\n+ frees from anomalies\n+ separates data the belong to different entities\n+ reduces data redundancy\n+ doesn't bias db design infaour of certain queries at the expense of others\n\n- more relations required\n- more complex queries can imply slower performance in some DBMSs\n\n# 2 Normal forms\n- 1NF ⇒ Single valued attributes only\n- 2NF ⇒ all on-key attibutes fully dependent on PK (i.e., no dependencies on part of the PK) (no partial dependencies)\n- 3NF/BCNF ⇒ no non-key transitive dependencies\n- 4NF ⇒ no multivalued dependencies\n- 5NF ⇒ all join dependencies implied by Composite key (CKs)\n- 6NF ⇒ irreducible relations\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/object":{"title":"object","content":"# Objects\nan abastraction of somethin gin a problem domain, reflecting the capabilities of the system to keep information about it interact with it or  both\n\nentities in any of the software nmodelling int implmenation spaces that are enatly defined by their identity state and behaviour\n\nsimilar to an entity but can also incude dynamic behaviour\n\noop is programming and modelling using objects\n\n## Objects as a Model of reality\ntheoreftically objects give us better omodels of reality\n\nricher variaty of data types\n- able to more closely model complexity of real world entities\n- compart with most data bases (numbers, text, datess)\n- objects and their operations (behaviour) are self contained\n- facilitate code reuse\n\n## Basic features of objects\n\nstate\n\nbehaviour\n\n## Classes and instances\nclass : definition of object structure and behaviour\ninstance : object occurence, derived from a particular class\n\n\n## References\npointer dirctly to object _instance_ \n\n\n## encapsulation\ndecouples internal implementation from public API\n- can chagne each independently\n- e.g., performance, differnt algroithms\n- APi stability is important\n\nstate and behaviour separated into pubic and private\n- all fields should be private\n- some methods will also be private\n\n## Inheritance\nusually via specialisation - aka subclass, subtype\n\nsubclasses inherit public state and behaviour from superclass\n- can define additional properties and behaviour\n\nenable polumorphism\n- e.g., Integer and Rational both subcalss Number\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/operating-system":{"title":"operating-system","content":"\n\n# Userspace\nThis is where applications run. Computer resources are isolated in compute and data\n- cannot access memory belonging to another process\n- cannot directly access hardware\n- cannot occupy all of the CPUs time on one application\n\n# Kernal\n\"all seeing and all powerful\" The kernel sits below the userspace and manages resource allocation and directly controls harware. Usuallly you dont directly interact with the kernel when developing software. You do interact indirectly with the kernel, it permits your interactions with the environment (input/output from/to files, network, and terminals). The standard library usually insulates you from the OS kernel, may abstract over different OSs, and do operations in an OS-agnostic way.\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/participant-observation":{"title":"participant-observation","content":"\n## 1 Techniques\n- think-aloud\n- co-operative evaulation\n- paper and pencil protocol\n- audio recording\n- video recording\n- computer logging\n- user notebooks\n- post-talk walkthroughs\n\n## 2 Disadvantages\n- observation bias exists\n- coding schemes\n-  laborioua and difficult\n- experts needed, training needed\n- often a mix of multiple techniques\n- automatic protocol analysis tools available (esp. in usability labs)\n\n## 3 Use Cases\n[needfinding](notes/needfinding.md)\n[evaluating-designs](notes/evaluating-designs.md)\n[requirements-elicitation](notes/requirements-elicitation.md)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/personal-development":{"title":"personal-development","content":"\n- [goals](private/goals.md)\n- [me](private/my-religion.md)\n- [cv](private/cv.md)\n- [Plan](private/Plan.md)\n- \n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/personas-and-scenarios":{"title":"personas-and-scenarios","content":"\n# 1 Personas\nThe goals of a personas is their expectation of an end condition\n- not features, functions, taskss, activities\n\nA tool to documnet who the users are.\n- what are they trying to accomplish\n\n![](https://i.imgur.com/EOxfkSs.png)\n\na methodology to identofy and think about our users and how they use the software.\nwe want to:\n- avoid not thinking about the users\n- make sure members of development dont have different ideas of the users\n\n### 1.1.1 Goals\n1. Experience goals\nhow they feel when using the product\ne.g., ⇒ dell users want function but apple users want \"that fancy apple product\"\n\n2. End goals\ntheir motivaations for performing the task / intentded outcome\n\n3. Life goals\nWhy they want to accomplish end goals /long term desires/self-image\n\n\n### 1.1.2 Behavioural variables\n- activities ⇒ what the user does, frequency and volume\n- attitudes ⇒ how the uers thinks about the product domian and knowledge\n- aptitudes ⇒ what education and training the user has\n- motivations\n\t- why the user is engaged in the product domain \n- skills\n\n\n![](https://i.imgur.com/cWh0ex6.png)\n![](https://i.imgur.com/jEpklcL.png)\n\n\n### 1.1.3 Persona types\n- Primary persona ⇒ **Only one per interface**\n- secondary ⇒ mostly satisfied with interface for primary persona\n- supplemental \n\t- completely represent by a combination of \n\t- e.g.,\n\t- customer\n\t\t- buys the product but does not necessarily use it\n\t- served\n\t\t- affected by the use of the product but does not use it (e.g., patient for a hospital software)\n- negative\n\t- person the product is not being made for\n\n# 2 Scenarios\n\n\u003e concise, narrative description of one or more personas using a product to achieve one or more specific goals\n\nHave a good story to tell\n\n![](https://i.imgur.com/TQRKPdi.png)\n![](https://i.imgur.com/YcxfAbX.png)\n![](https://i.imgur.com/r3kTI8W.png)\n\n![](https://i.imgur.com/4EKI6Dm.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/personas-development":{"title":"personas-development","content":"\n## Inital Ideas\n- kyle the casual (primary maybe secondary)\n\t- age 23\n\t- skill advanced\n\t- focus: tricks\n- aaron the coach (seconday maybe primary)\n\t- age 30\n\t- skill used to be pro, now advanced\n\t- focus teaching tricks\n- logan the learner (seconday persona)\n\t- age 16\n\t- skill intermediate\n\t- focus not sure yet, beginning to experiement with tricks\n- mac the professional (seconday persona)\n\t- age 20\n\t- skill pro\n\t- focus tricks, uses the app occaionaly with friends\n- karen the parent (negative persona)\n\t- age 45\n\t- skill intermediate\n\t- focus, groomed runs, some backcountry\n- phil the powder hound (supplementary persona)\n\t- age 40\n\t- skill advanced (not with tricks just in general)\n\t- focus off piste/backcountry, sometimes goes into park with friends/kids\n\n# Final choices\n**Primary:** Kyle the casual\n**Secondary:**  Logan the learner","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/personas-final":{"title":"personas-final","content":"\n# Primary: Casual Kyle\n- Age: 23\n- Gender: Male\n- Skill Level: Advanced (Not proffessional)\n- Focus: Terrian Park\n\n## Goals\n### Experience goals\n- wants a quick easy, no hassle, minimal effort experience. \n- does not want to appear to be a \"nerd\" or \"try hard\"\n\n### End goals\n- wants to find new interesting tricks that he may not have thought of himself\n- wants to progress his level of snowboarding\n- wants to show off new cool tricks to his friends\n\n### Life goals\n- wants to be a \"cool snowboarder\"\n- wants to have as much fun as possible\n\n## Behaviour\n### Activities\n- He is a snowboader. He rides at a least a few days every week\n- has a day job, barely enough money for season pass, rides up the mountain, and equipment\n- mostly rides in the terrain park\n\n### Aptidudes/skills\n- has advanced knowledge of the snowboarding tricks, grabs, and variations\n- considers himself an advanced snowboarder\n- rides all the advanced features in the part.\n- can do at least a 540\n- can do a good frontboard, maybe some 270s\n- has fun in the pipe but not his favourite thing\n\n### Motivations\n- wants to find new interesting tricks that he may not have thought of himself, to improve his skills by expanding his \"set\" of tricks.\n\n### Scenario\nKyle wakes up in the morning at 6:45 to go snowboarding with his friends. He sees he has a notification from the trick generator app. The trick for today is a switch back lip. Kyle is excited to try the trick. Kyles friends have also seen the daily trick on their phones. When they meet up on the mountain they all learn the trick and have fun. After they have all done a switch back lip. They decide they want to try another trick. Kyle his phone out of his pocket, opens the app, which loads almost instantly, and generates a trick with only one tap.\n\n# Secondary: Logan the learner\t\n- Age:13\n- Gender: Any\n- Skill: intermediate\n- Focus not sure yet, beginning to experiement with tricks\n\n## Goals\n### Experience goals\n- wants a quick easy, no hassle, minimal effort experience. \n- feels excited when using the app\n- also feels a little nervous about trying something new\n\n### End goals\n- wants to find new tricks that he can learn with his friends, since he doesn't know many\n- wants to stay motivated to learn a new trick each day/week\n\n### Life goals\n- Wants to have fun on the weekend\n- Wants get excersise\n\n## Behaviour\n### Activities\n- Snowboarder\n- lives in a town near a skifield where it is common to snowboard.\n- rides a few times a fortnight, with friends and/or family. maybe in a school program (like they have in wanaka schools)\n\n### Aptidudes/skills\n- has been riding mostly on the groomed runs, is now getting good enough to try the terrian park.\n- has been doing some 180s maybe on sidehits.\n\n### Motivations\n- wants to find new tricks that he can learn with his friends, since he doesn't know many\n\n### Scenario\nLogan is snowboarding on the mountain with a group of his friends. Logan and his friends decide to go into the terrian park and try some tricks. None of his friends know what tricks to try. Logan takes his phone out of his pocket and without removing his gloves, unlocks it with face ID, and looks at the widget which is showing random trick. Logan then puts his phone back in his pocket, tells his friends the trick, and all him and his friends have fun racing to do the trick first.","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/philosophize-this":{"title":"philosophize-this","content":"\n# Episodes\n- [040-superstition](notes/040-superstition.md)\n- [054-hume-on-art](notes/054-hume-on-art.md)\n- [065-mary-woolstonecraft](notes/065-mary-woolstonecraft.md)\n- [077-marx-and-kierkegaard-religion](notes/077-marx-and-kierkegaard-religion.md)\n- [078-marx-and-kierkegaard-religion](notes/078-marx-and-kierkegaard-religion.md)\n- [079-kierkegaard-anxiety](notes/079-kierkegaard-anxiety.md)\n- [083-henry-david-thoreau](notes/083-henry-david-thoreau.md)\n- [090-nietzsche-god-is-dead](notes/090-nietzsche-god-is-dead.md)\n- [091-nietzsche-wilil-to-power](notes/091-nietzsche-wilil-to-power.md)\n- [092-nietzsche-pt3-thus-spole-zarathustra](notes/092-nietzsche-pt3-thus-spole-zarathustra.md)\n- [093-nietzsche-pt4-love](notes/093-nietzsche-pt4-love.md)\n- [094-a-look-at-suffering](notes/094-a-look-at-suffering.md)\n- [095-are-we-living-in-a-simulation](notes/095-are-we-living-in-a-simulation.md)","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/philosophy":{"title":"philosophy","content":"\n# People\n- [[soren-kiekegaard]]\n- [[karl-marx]]\n- [[henry-david-thoreau]]\n- [mary-woolstonecraft](notes/mary-woolstonecraft.md)\n- [[david-hume]]\n- [[voltaire]]\n- [[bishop-berkely]]\n- [[socrates]]\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/predictive-adaptive-spectrum":{"title":"predictive-adaptive-spectrum","content":"\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/priority-queue":{"title":"priority-queue","content":"\n- A dynamic linear data type that supports addition and removal on entrie \n- each entry hase a value and a priority (key)\n- removal returns the item with the greatest priority \n\n# Implementation\n1. stores items and priorities in an array. Add at the end ϴ(1), remove by finding the maximum and exchaning with the end element ϴ(n)\n2. stores items and their priorities in an array (or list) in sorted order. now removal is ϴ(1) bu addition in Ο(n)\n\ncan be implemented using a [priority-queue](notes/priority-queue.md)","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/programatic-evolution":{"title":"programatic-evolution","content":" 5 condiditons for evolution\n - self-replication\n - blueprint\n\t - \"genome\"\n\t - stored in us in DNA and RNA\n - inherit blueprint\n - mutation\n - selection \n\n\nwhatever reproduces, reproduces\nwhatever doesn't, doesn't\n\nevolutution converts randomness into order and complexity. Mutatations are required for survival\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/propogation-of-ideas":{"title":"Propagation of Ideas","content":"\nlink:https://ase.tufts.edu/cogstud/dennett/papers/memeimag.htm\n\nThe david and miriam mandel lecture\namerican society for aesthetics\noct 27 1989\n\nHow (or whether) are promotes human evolution or development\n\n# What is a Meme\nRichard Dawkins defines a meme as: a unit of cultural transmission, or a unit of imitation\n\n**Art:** all artifice, all human invention\n\nThe paper compares memes to genes  and explores the way they evolve similar to genes\n\n\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/prototyping":{"title":"prototyping","content":"\n# Prototyping\nQuickly creating a minimal, functioning approximate version of an idea, which reveals potential issues(feedback) that may be hard to predict(unknown unknows) otherwise\n\n\u003e\"The way to have a good idea is to have lots of ideas\" - Linus Pauling\n\n\u003e \"Prototypes are questions. Ask lots of them\"\n\nRapid Prototyping can be compared to simulated annealing\n\n## 1 Goals\n- minimise time spent\n- maximise information gained\n\t- cost of change increases with time\n- help [stakeholders](stakeholders) understand ideas\n\n## 2 Traits of a good prototype:\n- not fully complete\n- easy to change/create\n- retired/evolved quickly\n\n## 3 Insights gained from prototyping\n- Feel -\u003e Form\n- Implementation -\u003e Function\n- Role -\u003e Overall Experience\n\n![](https://i.imgur.com/DU7fMJz.png)\n![](https://i.imgur.com/aR9yOeI.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/quicksort":{"title":"quicksort","content":"\npre ⇒ select pivot and split the array\n\nrec ⇒ apply quicksort to the partitions\n\npost ⇒ not much\n\ndesigneds when sorting inplace was important\n\nworks best of primitive types as they can be stored in the fastest memory location\n\n- memory access can be localised and the comparisions are direct\n- those advantages are limited when sorting objects of reference type\n- i that case each element of the array is just a reference to where the object really is\n- so there are no local access advantages\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/reading-and-navigating":{"title":"reading-and-navigating","content":"\n# Reading and navigating\nInformation scent\n- how to represent things so people can find what they want\n\t- do they realize their options\n\t- can they figue out how to get what they want\nHow to find Poor scent\n- flailing (loss of orientation, reported or observed)\n- low confidence (in what link with will do or where it will go) (measured before and after using a web link)\n- back button (count usage of back button)\n\nLow scent navigation\n- unfamiliar terms\n- suprising categories\n- short links\n- hidden navigation\n- icons provide little information\n\t- generic icons rarely help\n\t- they help when \n\t\t- they facilitate repeat recognition\n\t\t- when you know what something looks like but not what its called\n\t\t- good redundant coding can help\n\nimproving scent\n- multiword links\n\t- specific recognisable terms\n\t- trigger words not \"clever\" terms\n\t- help accessibility\n- speaking block navigation\n\t- subheadings\n\t- explanations\n- design for glanceability\n\t- ![](https://i.imgur.com/pMNYIUB.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/recognise-and-recover-from-errors":{"title":"recognise-and-recover-from-errors","content":"\n\n- make the problem clear\n- e.g., username or password is wrong vs username is wrong\n- provide a solution and inform users (treat the users as adults\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/recognition-over-recall":{"title":"recognition-over-recall","content":"\n### 3.1 avoid codes\n\n![](https://i.imgur.com/B8sJxd6.png)\n\n### 3.2 Recognition with previews or icons\n\n![](https://i.imgur.com/UBmJl6Y.png)\n\n### 3.3 use icons that promote recognition\n\n![](https://i.imgur.com/adjt5nv.png)\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/red-black-tree":{"title":"red-black-tree","content":"\n\n\nRed Black trees\nmost used current one. Used in java treemap\n\neach node is either red or black\n\nthe rules are:\n- the root node is black (optional)\n- all null nodes are _considered_ black (convention)\n- A red node may not have a red child\n- Every path from a node to a descendant null node contains the same number of black nodes\n\nThese guarantee that the longest path frm root to null (which could alternate red and black) is at most twice as long as the shortest path (which could be all black)\n\nthe tree is full up to half its height - growing at least as fast as $2^{h/2}$\n\nthe height is logarithmic in the size sinhce th tree must be complete to the depth of half the height\n\nOperations that mnodify the tree require in the worst case $O(lg\\ n)$ recolourings and (on average a constant number) and not more than three rotations\n\n## Strategy\n- do an insertio and color the node red.\n- recolor and rotate nodes to fix violation\n- there are four scenarios\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/redundancy-and-anomalies":{"title":"redundancy-and-anomalies","content":"\n# Redundancy\nwhen values are stored repetitively in database relations\n- usually in poorly designed relations\n- - potential for anomalous data to be stored\ne.g., ![](https://i.imgur.com/8RdSNZt.png)\n\n## How it arises\n- ad hoc database\n\t- flat file\n\t- spreadsheet (no contraints)\n- Poor database design\n\t- poor analysis\n\t- poorly designed ERDs (not thinkiing properly about the relationships)\n- modifications to existing systems\n\t- \"bolting on\" new attributes\n\t- schema evolution over time\n\n# Anomalies\n## Update anomaly\nAn anomaly that occurs follows an UPDATE operation\ne.g., \n![](https://i.imgur.com/fBMd8W3.png)\n\n## Delete anomaly\nAn anomly that occurs following a DELETE operation\ne.g., \n![](https://i.imgur.com/fUGVR98.png)\n![](https://i.imgur.com/yp6KdYg.png)\n\n## Insert anomaly\nAn anomly that occurs following a INSERT operation\ne.g., \n![](https://i.imgur.com/hM1VlGs.png)\n![](https://i.imgur.com/SkdKTLP.png)\nCauses the process of putting johnson in system is delayed\n","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/reflective-statement":{"title":"","content":"### COSC202 Reflective Statement - Jet Hughes 9474308\n#### Intro\nI was honestly not expecting this paper to be as interesting as it was. The lecture were informative and interesting, and the semester-long project was a joy to work on. My team for this project was great. The member were Myself, Brad, Will, Arlo, and Riley. We communicated using Discord and used Trello for project management. We encountered a few small issues, but nothing catastrophic, and I had some clear favorite parts of the project.\n\n#### Communication\nThe first thing we had to decide as a team was how to communicate. We agreed to use Discord. I created channels for general discussion, notes and resources, and bug discussion. The bugs channel was rarely used, but the other channel, general, was very lively, and the notes and resources channel was very useful. The notes and resources channel had quick links to the lab book, and other resources. It also had a snapshot of the project tasks and the deadline. One additional thing I added to the server that was immensely useful was the git-updates channel. I set up a gitlab-discord integration which send a message to discord every time a push was made to the repo. This integration was very useful because it made it very easy to keep up with the state of ANDIE. If I were to repeat this project, I would definitely do this again.\n\n#### Project/Time Management\nThe first thing we did once communication had been established was to delegate tasks to team members. We each selected a task that we were interested in, and the rest of the tasks were to be assigned at a later date. I think this method worked very well, as each of us was able to do something we thought would be enjoyable, and the workload was very evenly distributed. We quickly realized we would need to use a project management tool. One of the group members suggested Trello, which uses a Kanban board. Since many of us had used it before, we agreed this was a good choice.  I set up a simple Trello board with 3 lists: To-do, doing, and done. Later I added, a list for ongoing tasks like commenting and unit testing, and a list for extra features we wanted to add. We were then able to easily assign team members to tasks, and track their progress with checklists. \n\n#### Main Issues\nOne main issue was that more menial tasks like commenting and creating unit tests were left unattended to. Hiding them away in the \"Ongoing\" task list was not helpful. I think a better way of doing this would have been to add commenting and unit testing to a checklist within each task. I think we should have used checklists within tasks much more in general. My final issues were the (almost) lack of a proper extra feature. Throughout the first half of the second part of the project, almost all of our team was sick. We were able to do the Posterise, negative, and extended filters, relatively quickly. But the Area Select feature created a bottleneck, blocking the drawing and crop features. Luckily, we were able to finish the rest of the features. However, we did not have an extra feature ready. Fortunately, Arlo was able to create the pen drawing feature quickly. Looking back, we should have re-delegated the tasks as soon as we knew the assigned team member was sick. This would have enabled us to avoid the bottleneck and progress faster. I also think we could have found other things to work on while waiting for Area Select [^3].\n\n#### Highlights\nMy first and top highlight was the Posterise Filter. I decided to implement this using the K-Means algorithm. I was interested to see how a k-means could be done in Java. I was able to create a first version relatively using [this](https://stackabuse.com/guide-to-k-means-clustering-with-java/) article as a guide[^1]. I had some trouble long the way, so when I got it somewhat working I had a little-jump-around-the-room celebration. On the final day of the assignment, I realized that the centroids were not actually changing and that it was essentially using random colors. Thankfully, I was able to fix the issue of the centroids not updating. However, I am still not sure if it works as intended. In retrospect, I should have done better testing for this feature. When I saw a picture split into colors, I blindly assumed that it worked, without actually checking that it was working. If I were able to go back, I would first look at the results of other implementations first, and add more testing.\n\nAnother highlight was creating my own convolve operation class[^2]. I made this to solve the problem of negative and extended filters. I think there probably was an easier way of doing this, but I thought this method would also clean up a lot of the repeated code in the filter actions. The creation of this class went a bit smoother than the Posterise filter. I had [this](http://ramok.tech/2018/09/27/convolution-in-java/) article to use as a guide. I was able to significantly simplify their code to suit my need. However, it ran *very* slowly compared to the in-built java ConvoleOp class. I briefly considered changing it to run on the GPU using a library, but thankfully, Riley was able to speed it up by changing the RBG get and set operations.\n\n#### Conclusion\nOverall I think our project was very successful. This was reflected in our mark for part one and (hopefully) part two, and by the fact that the workload was evenly distributed across the team. The main issues were the delays of commenting, the lack of thorough testing. We had a small crunch in the final hours of the project, when we had issues with saving and exporting, but thankfully we were able to get it done.  \n\n[^1]: I just realized I forgot to reference this in the Javadoc.\n[^2]: I still don't know what to call this.\n[^3]: This would have been adding comments and testing.","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/reflective-statement-plan":{"title":"reflective-statement","content":"\n# 202 Reflective statement\n\nIntro\n- What is the project\n- who was the team\n- Overall of:\n\t- Communication\n\t- Time/Project Mangement\n\t- Main Issues\n\t- Main Non-Issues\n\nCommunication\n- Discord\n\t- Notes/resources\n\t- Webhooks\n\nProject/Time Mangement\n- Division of tasks\n- Use of trello\n- Wished for use of issues\n\nMain Issues\n- slow commenting\n- lack of testing\n- sick teamates\n\nNon-Issues\n- K-means\n- Convoluter\n\nConcusion","lastmodified":"2022-07-27T23:05:09.094085886Z","tags":null},"/notes/representation-and-distributing-cognition":{"title":"representation-and-distributing-cognition","content":"\nuse representation that does not require user to memorise things. \n\n\u003e \"solving a problem simply means representing it so as to make the solution transparent\" - Herbert Simon, The sciences of the Artificial\n\nmemory games make finding pairs hard by introducing rules. This often happens in computers interfaces needlessly difficult to use\n\ndepeding on how you represent a problem, you can make is easy or hard. \n\n# Working memory\nusers have a working memory (2±2 limit). You shouldn't require users to remember anything that you could put on a screen. \n\nIf something takes a lot of time. You wil get distracted, and forget something.\n\n# Naturalness principle\n- experiemental cognition is raised when the properties of the representation match the properties of the thing being represented\n\n# Dist cognition\nwhen interfaces help people disribute cognition it can\n- exourage experimentsation\n- scaffold learning and reuce errors through reduncdancy\n- show (only) differences that matter\n- convert slow calculation into fast perception\n- support chunking, especially by experts\n- increase effieciency\n- facilitate collaboration\n\ngood representation shows only relevant information and enables:\n- comparison\n- exploration\n- problem solving\n\ndeep vs shallow interface\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/requirements":{"title":"requirements","content":"\n# 1 What are they\n\n\u003e “…descriptions of how the system should behave, application domain information, constraints on the system’s operation, or specifications of a system property or attribute.\ufffd\ufffd?  - Kotonya and Sommerville, 2001, p. 6\n\n\u003e “…a statement of need, something that some class of user or other stakeholder wants.\ufffd\ufffd? - Alexander and Stevens, 2002, p. 8\n\nRequirements are something an information system should do, or some constraint it should adhere to\n\nThere two types of requirements. Functional requirements specify what the system should do. And constraints, which limit the way in which the system should do those things.\n\n\n# 2 How are they created\n\nRequirements should be developed using the [requirements-engineering](notes/requirements-engineering.md) process. This process defined a robust way to develop requirements. It has three main steps: discovery, documenting, and maintenance. \n\nRequirements can be defined using the [FURPS](notes/furps) framework. However, this is usually overkill.\n\nRequirements can be communicated through natural language, [models](notes/models.md), [prototyping](notes/prototyping.md), \nor even formal mathematical notation\n\nGood requirements should adhere to  [these](notes/requirements-guidelines.md) guidelines.\n\nEvery development process has a different apporach to guidelines. ... #unfinished\n\n# 3 What causes bad requirements\n\n- domain and/or problem not well understood\n- misnderstandings\n- continually evolving or incomplete/abmiguous/inconsistent/overlapping/unimplementable requirements\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/requirements-document":{"title":"requirements-document","content":"\nThe requirements document is used to keep track of the requirements of a system. It hold information such as: constraints, the environment of the system, information about the domain of the system, and constraints\n\nThe requirements document should include:\n- Information about the services and functions that the system should provide (functional requirement)\n- The constraints under which the system must operate\n- The overall (emergent) properties of the system\n\t- e.g., type of server, amount of memory, etc\n- The system's environment including related systems\n- Application domain information\n- Constraints on the development process\n\t- e.g., [agile-development](notes/agile-development.md)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/requirements-elicitation":{"title":"requirements-elicitation","content":"\n- A process by which analysts gather information on what the system should do, from as many sources as possible. \n- All methods are effective but some are more efficient than others. \n- Different methods can be combined for more comprehensive fact-finding.\n\n# Characteristics of good Analysts\nImpertinence ⇒ question everything, assume nothing \nImpartiality ⇒ find the best solution to the business problem \nRelax ⇒ constraints assume anything is possible but eliminate the infeasible \nAttention ⇒ to detail be precise, comprehensive, and consistent \nReFraming ⇒ be creative and “think outside the box”\n\n# Stakeholders\n- Internal stakeholders — people within the organisation, e.g., employees, volunteers, ….\n- External stakeholders — people outside the organisation, e.g., suppliers or shipping companies.\n- Operational stakeholders — people who regularly interact with the system, e.g., accountants, factory supervisors, customers, ….\n- Executive stakeholders — people who don’t directly interact, but use the information or have a financial interest, e.g., senior managers, board of directors, regulatory authorities, ….\n\n![stakeholders diagram|300](https://i.imgur.com/W1ivdjH.png)\n\n# Information Gathering\n- Existing Information\n- Interview and discussions\n- Observew and document business process\n- Prototypes\n- Questoinnaires\n- Vendor Solutions\n\n# Validation of Requirements\n- Make sure gathered information is correct. \n- Structured walk-through: \n\t- effective way to implement quality control early in project \n\t- verify and validate system requirements \n\t- review of findings from investigation \n\t- review of models based on findings \n- Project manager responsible for system quality. \n- Schedule review soon after document creation. \n- Review conducted by experienced analyst and stakeholders, presented by analyst.\n\n# Requirements in Agile Methodologies\n\n- Requirements should be decoupled: \n\t- must be as independent as possible \n\t- identify which requirements to implement not when to implement them \n- Every iteration includes a requirements collection and prioritisation activity: \n\t- important requirements are implemented next \n\t- less important requirements held to later iterations, or not implemented at all \n\t- [scrum](notes/scrum.md): product backlog \n\t- [UP](notes/unified-processes.md): inception \u0026 elaboration phases \n\t- [xp](notes/extreme-programming.md): user stories\n\n[interviewing](notes/interviewing.md)\n\n[participant-observation](notes/participant-observation.md)\n\n\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/requirements-engineering":{"title":"requirements-engineering","content":"\n\u003e “…to cover all of the activities involved in discovering, documenting, and maintaining a set of requirements for a computer-based system.�? - Kotonya and Sommerville, 2001, p. 8\n\nRequirements engineering is a robust methodology for the development of requirements. It is made  up of three main steps.\n\n\n# 1 Discovery\n\nThis is where you identify all the requirments of the system. [requirements-elicitation](notes/requirements-elicitation.md) is done here. Many techniques such as [interviewing](notes/interviewing.md), [participant-observation](notes/participant-observation.md), [prototyping](notes/prototyping.md), and more are used here.\n\nThis is also where you should learn about the domain of the system and the stakeholders\n\n# 2 Documenting\nThis is where the requirements are specified and refined, and models and documents are created. All the requirements are compiled into a [requirements document](notes/requirements-document).\n\n# 3 Maintenance\nThis occurs throughout development and is primarly focuses on managing changes in the environment of the system. \n\nIt important to manage what is being discovered and documented. This allows you to keep the client updated and manage scope creep.\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/requirements-guidelines":{"title":"requirements-guidelines","content":"\n- understandable by all stakeholders including the users\n- non prescriptive i.e., should define what, and not how\n- correct as judged by user\n- complete. i.e., there should be nothing missing from each _individual_ requirement nor the _compete set_ requirements\n- consistent. i.e., They should not contradict each toher\n- unambiguous. i.e., There should be only one one possible interpretation\n- also\n\t- precise, concise, cohesive, feasible, relevant, up to date, testable, traceable\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/review-i201":{"title":"review-i201","content":"\n# soft. dev. methods\n- [SDLC](notes/systems-development-life-cycle.md)\n- [1 traditional](notes/approaches-to-systems-development.md#1%20traditional) (predictive) vs [1 object oriented](notes/approaches-to-systems-development.md#1%20object%20oriented) (flexible)\n- [UP](notes/unified-processes.md) (OO)\n- [scrum](notes/scrum.md)\n- [xp](notes/extreme-programming.md)\n\n# requirements engineering\n- [business-process](notes/business-process.md) re engineering \n- [requirements](notes/requirements.md)\n\t- properties of good ones [requirements-guidelines](notes/requirements-guidelines.md)\n\t- functional vs not [furps](notes/furps.md)\n\t- importance (moscow) \n- elicitation [requirements-elicitation](notes/requirements-elicitation.md)\n\t- stakeholders techniques [stakeholders](notes/stakeholders.md) [Stakeholders](notes/requirements-elicitation.md#Stakeholders)\n\t- outcome validation [Validation of Requirements](notes/requirements-elicitation.md#Validation%20of%20Requirements)\n\n# business functions and use cases\n- business functions - how to identify [1 Id business functions](notes/business-functions.md#1%20Id%20business%20functions)\n- use cases - how to model [2 Use case](notes/business-functions.md#2%20Use%20case)\n- uml use case diagrams [use-case-diagrams](notes/use-case-diagrams.md)\n\t- actors usecases [2 1 Actor](notes/use-case-diagrams.md#2%201%20Actor) [2 2 Use case](notes/use-case-diagrams.md#2%202%20Use%20case)\n \t- associations, dependencies [2 3 Association](notes/use-case-diagrams.md#2%203%20Association) [2 5 Dependency](notes/use-case-diagrams.md#2%205%20Dependency)\n\n# BPM\n- business processes and how the are modelled [business-process](notes/business-process.md) [[bsin]]\n- BPMN vs (high level) UML activity [business-process-model-and-notation](notes/business-process-model-and-notation.md) [activity-diagrams](notes/activity-diagrams.md)\n\n# Data modelling\n - erd concepts [ERD](notes/entity-relationship-diagrams.md)\n\t - subtypes [subtypes](notes/entity-relationship-diagrams.md#subtypes)\n\t - parrallel and reursive relationships [parallel relationship](notes/entity-relationship-diagrams.md#parallel%20relationship) [recursive relationship](notes/entity-relationship-diagrams.md#recursive%20relationship)\n\t - historical data [dealing with data history](notes/entity-relationship-diagrams.md#dealing%20with%20data%20history)\n - normalisation [normalisation](notes/normalisation.md)\n\t - redundancy and anomalies [redundancy-and-anomalies](notes/redundancy-and-anomalies.md)\n\t - function and multivaly dependencies [dependencies](notes/dependencies.md)\n\t - normal forms [2 Normal forms](notes/normalisation.md#2%20Normal%20forms)\n\n# Modelling object structure\n- oop concepts [10-oop-concepts-and-uml](notes/10-oop-concepts-and-uml.md)\n\t- state behaviiour encapsilation\n\t- class vs instance, object reference\n- uml diagrams [what-are-uml-diagrams](notes/what-are-uml-diagrams.md)\n\t- steriotypes, visibility, multiplicity [1 Stereotypes](notes/class-diagrams.md#1%20Stereotypes) [3 1 multuplicity](notes/class-diagrams.md#3%201%20multuplicity) \n\t- specialsation/generalisation, navigability [3 8 Specialisation generalisation](notes/class-diagrams.md#3%208%20Specialisation%20generalisation) [3 4 Navigability](notes/class-diagrams.md#3%204%20Navigability)\n\t- erd vs class diagram [4 Domain class model](notes/class-diagrams.md#4%20Domain%20class%20model) vs [5 System class model](notes/class-diagrams.md#5%20System%20class%20model)\n# object behaviour\n- inheritance [1 Inheritance](notes/modelling-behaviour.md#1%20Inheritance)\n\t- specialisation vs implementing an interface [1 1 Via Specialisation](notes/modelling-behaviour.md#1%201%20Via%20Specialisation) vs [1 2 Via Interface](notes/modelling-behaviour.md#1%202%20Via%20Interface)\n\t- separation of public private API (programming to interface) [1 3 Public vs Private](notes/modelling-behaviour.md#1%203%20Public%20vs%20Private)\n- rich vs anaemic domaini models \"processor objects\" [2 Behaviour](notes/modelling-behaviour.md#2%20Behaviour)\n- modelling behaviour with uml [modelling-behaviour](notes/modelling-behaviour.md)\n\t- sequnce diagrams [sequence-diagrams](notes/sequence-diagrams.md)\n\t- low level activity and state diagrams [activity-diagrams](notes/activity-diagrams.md) \n\n# round trip engineering\n- foward engineering [UML to Java Foward Engineering](notes/uml-java-forward-engineering.md)\n\t- erd -\u003e SQL\n\t- uml class diagram -\u003e e.g., java \n\t- correspondenc with use cases\n- reverse engineering (code \u003c- diagrams) [reverse engineering](notes/uml-java-reverse-engineering.md)\n\n# Data access\n- data persistence file vs database [Data Access](notes/data-access.md)\n- database APIs (JDBC etc) [JDBC](notes/java-database-connectibity.md)\n- DAOs [DAO](notes/data-access-object.md)\n\t\t- oner per use case (not just per domain class)\n\t\t- often programming via DAO interface\n\n# Database transactions\n- ACID [ACID](notes/18-advanced-sql-1.md#ACID)\n- what and why [Transactions](notes/18-advanced-sql-1.md#Transactions)\n- commit vs rollback [commit and rollback](notes/18-advanced-sql-1.md#commit%20and%20rollback)\n\n# SQL select\n- select from where [Select](notes/19-advanced-sql-2.md#Select)\n- sorting grouping aggregation [Aggregation and grouping](notes/19-advanced-sql-2.md#Aggregation%20and%20grouping)\n- view, inner and outer joins, subqueries [Inline views](notes/19-advanced-sql-2.md#Inline%20views) [Joins](notes/19-advanced-sql-2.md#Joins), [Subqueries](notes/19-advanced-sql-2.md#Subqueries)\n\n# data integrity\n[20-data-integrity](notes/20-data-integrity.md)\n- nulls and their issues \n- business rules, databas contrainsts, veification, validation [Validation](notes/20-data-integrity.md#Validation) [Verification](notes/20-data-integrity.md#Verification) [Check constrainsts](notes/20-data-integrity.md#Check%20constrainsts) [Primary and foreign key constraints](notes/20-data-integrity.md#Primary%20and%20foreign%20key%20constraints)\n- in-database vs outside database\n- in data base automation: sequence, triggers, stored procedures [Automation](notes/20-data-integrity.md#Automation)\n\n# softare architectures, patterns, and templates\n[08-business-patterns](notes/08-business-patterns.md)\n- monolithic vs client/server vs distributed (services) [Monolithic architecture](notes/software-architectures.md#Monolithic%20architecture)\n- separation of reponsilbilities [Separation of reponsibilities](notes/software-architectures.md#Separation%20of%20reponsibilities)\n- \"standard patters\" of design (recognise) [Generic old info sys architecture](notes/software-architectures.md#Generic%20old%20info%20sys%20architecture)\n- sysstem templates [system-templates](notes/system-templates.md)\n\n# performance and security\n- performance requirements [Performance requirements](notes/22-performance-and-security.md#Performance%20requirements)\n\t- how to quantify and measure\n\t- response time, workload, scalability\n\t- caching pooling\n\t- system reliability\n- security and integrity requirements [Integity and securuty controls](notes/22-performance-and-security.md#Integity%20and%20securuty%20controls)\n\t- consider throughout development\n\t- authentication and authorisation\n\t- principle of least privilege\n\t\t- hat a user should only have access to what they absolutely need in order to perform their responsibilities, and no more.\n\n# cost benefit analysis\n - project feasbility  [justifying a project](notes/25-cost-benefit-analysis.md#justifying%20a%20project)\n\t - need, funding, strong will\n\t - duration, priority, rick, uncertainty\n\t - should we, can we, is it worth it?\n - economic feasibility: [costs and benefits](notes/25-cost-benefit-analysis.md#costs%20and%20benefits)\n\t - costs vs benefits (tangigble/intangible)\n\t - payback time (break even), NPV, ROI","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/round-trip-engineering":{"title":"round-trip-engineering","content":"\nThis is the process of translating models into code, or vice versa. For example, ERDs to SQL, or UML to Java. The main idea is to keep the code and the diagrams sematically equivalent\n\nConverting diagrams to code is more common than the opposite, but both do occur. This is [reverse engineering](notes/uml-java-reverse-engineering.md) \n\nA model driven architecture is when the code is completely derived from diagrams. This tends to be quite difficult. A much easier approach is only using foward engineering to generate skeleton code.\n\n[uml-java-forward-engineering](notes/uml-java-forward-engineering.md) is easier with SQL and ERDs than other types as these don't consider behaviour, so the mapping is more simple than with UML and Java.\n\nAlthough this idea sounds good, it is not practical. The main argument is that code is part of the design anyway - Code is just a detailed form of a model.\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/running-in-person-experiments":{"title":"running-in-person-experiments","content":"\nin person\n- planning\n- execution\n- analyzing\n\nhigher \"bandwitdh\" of engagement\n\n# Make clear goals\n- scope\n- purpose\n\t- what you hope to learn\n- hypothesis\n\t- make a prediction\n- schedule and location\n\t- use an approprate and relevant location\n- participants\n- scenarios\n\n# Plan out steps\n- questions\n- data to be collected\n- set up\n- roles\n\t- e.g., facilitator, recorder\n\n# Create concrete tasks\nwrite them down\n\ne.g., ![example 1](https://i.imgur.com/FLApe7z.png) ![example 2](https://i.imgur.com/vsEOKjt.png)\n\n# Ethical considerations\nparticipants can feel pressured\n\nget informed consent\n\nremind them that your testing the site.. not them\n\npaticipants feel good about finding issues, not bad about not being able to do something\n\n# Experiement details\n- order\n\t- e.g., start simple, shuffle order\n- training\n\t- depends on how th real system will be used\n- DNF\n\t- set a time limit\n\t- maybe provide help if needed\n- pilot\n\t- iron out the kinks in the study design\n\t- can also find very obvious issues that should be addressed so the actual participants aren't \"wasted\"\n\n# capturing results\n- note down critical incidents\n\t- aha moments, stores to share, big problems\n- record video\n\t- lets to grab moments easily and share them\n- screen recording\n\t- depends if you are interested on their expressions or th interface\n- interupptions\n\t- yes/no\n\t- provide help in necessary\n\t- think aloud\n\t\t- need to know what users are thinking not just what they are doing\n\t\t- ask users to talk while performing tasks\n\t\t\t- what they are;\n\t\t\t\t- thinking\n\t\t\t\t- trying to do\n\t\t\t\t- any questions as they work\n\t\t\t\t- reading\n\t\t-  record or take notes\n\t\t- prompt them to keep talking\n\t\t- decide ahead of time about which things to help with\n\t\t\t- keep track of things you  helped with\n\t\t- will thinking alout give the right answers\n\t\t\t- not always\n\t\t\t- avoid specific questions\n\t\t\t- if you ask a question, people with always give an answer even it it has nothing to do with the facts\n\t\t\t- talking while doing the tasks may change how you do the task\n\n# Greeting participants\nwelcome, explain setup, scenarios,\n\n# collecting data\n- process data\n\t- observations (qualittative)\n- bottom line data\n\t- numbers\n\t- i.e., dependent variables\n\n# measuring bottom line usability\nuseful:\n- time requirements\n- success/fail\n\t- define in advance what this is\n- compare speed or # of errors\n\ndont combine with think aloud\n\n# debrief\ntell them what you goals are.\n\nlearn more holistically what they are thinking\n\n\n\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/running-web-experiments":{"title":"running-web-experiments","content":"\nrandomly split traffic to website between two versions.\n\nthen collection metrics about each version\n\nweb makes it easier to try out something new, and test if it is effective.\n\n\nsmall changes can have a significant effect. \n![example changes](https://i.imgur.com/fhmWtbh.png)\n\napplication for more than just websites.\n\nour expectations are often wrong.\nsmall chagnes (e.g., wording on a button) can have large impacts\n\n# Effective principles\n- run experiments 50 50\n\t- novice experimenters run 1% eperiments\n\t- to detect an effect you need to expose a certain number of users to the treatment (baed on power calculations)\n\t- fastest to run 50 50\n- ramp up and auto abort\n\t- start at 0%\n\t- design may be disastrous\n\t\t- bugs, other issues\n\t- slowly increase until 50%\n- pick a meaningful yardstick\n\t- avoid measures things because they are easy to measure\n- run it for long enough\n\t- sometimes first use is not the same as what people are familiar with\n- rules for random assignment\n\t- consistent - same person should see same interface\n\t- durable - truly and compelely random\n\t- independent \n- challenges and opportunities\n\t- larger theories are still hard\n\t\t- i.e., interpretation\n\t- using multiple methods together helps\n\t\t- whole is greater than sum of parts\n\t\t- combine iwth eg. in person studies\n- role on designer in online age\n\t- creating alternatives\n\t- people are often to sure of themselves\n\t- rapid experimentation means the first release is (sometimes)  less important\n\t- fail fast","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/scrum":{"title":"scrum","content":"\nIntense effort involving entire team for defined period of time\nProduct backlog - prioritied list of requirements\nProduct owner - cllient stakeholder who controls backlog\nScrum master - project manager\n\n# 1 Scrum sprint\nA time controlled mini-project to implement part of the system\n\n![](https://i.imgur.com/R3biN9h.png)\n\n# 2 Scrum  practices\nscope of sprint is frozen\n - can reduce\n - cannot expand\ntime period is kept constant\n\ndaily scrum meeting\n- what have you done since last scrum\n- what whill you do by next scrum\n- what kept you or is keeping you from compeleting your work\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/security":{"title":"security","content":"\n# Growing concern\nsince there is more software, dependencies, and they are getting increaingly complex the \"surface area\" of risk is growing.\n\nSpeed of development is more important than security.\n\nSoftware systems involve a large number of components, and this means they are more likely to have bugs.\n\n# Elements of Security\n## Confidentiality\n- Protecting data from being stolen.\n- Usually contered using encryption and/or isolation of processes\n- Encyption is not time proof.\n\t- computational power is increasing\n\n## Integrity\n- Attacks on data may aim to decieve users\n- countered using checksums\n- attacks on code are often *privilege escalation*\n\n## Availability\n- DDoS\n- countered by hosting in multiple countries\n\t- use CDNs (content delivery networks) for data objects\n\n# Dependencies\n- vulnerabilities in [libraries](notes/libraries.md) extend to your code. \n- You should\n\t- determine and examine your software bill of materials (SBOM)\n\t- subscribe to security alerts\n\t- plan to rapidly rebuild and re-release your software\n\t- use tools to scan software for know problems\n- However, still use them when appropriate\n\n# Non-Validation of user input\n- Assume user input is malicious\n- Prevent SQL injection attacks\n- Input from many sources\n\t- user docs\n\t- config files\n\t- env variables\n\n# Injection Attack\n## Example:\n```java\nString query = \"UPDATE pw='NEW_PW' WHERE user='user'\"\n```\n\nmalicious input: Bobbie' OR 1=1 wil change all passwords.\n\nuse SQL prepared statements or secure DB abstraction\n\nbuffer overruns also inject attacker's data:\n- e.g., C array that too short for data copied in from network\n- attacker overruns end of the C aray: maybe injects code.\n\n# resolving problems\n![](https://i.imgur.com/8YBGRPq.png)\n\n# Threat model\n- should character what you  want to protect against\n- writin standalone software to be used by one person\n\t- typially dont have to worry about malicious attacks (on self)\n- software on a multi-user operating system\n\t- do need to think about cross-user data leaks\n\t- all OSs are multi user\n- software that has network availability\n\t- your software can and likely will be attacked\n- targeteted by state-sponsored teams? Good Luck...\n\n# sec in dev\n- - security isn't a single requiremtn you can  tick off\n\t- it needs consideration throughtout the whole system\n\t- it is a cross-cutting concern\n\t- it is hard to retrofit\n- notion of security engineering is useful\n\t- affects design descision fromt the outset\n\t- changes how code is written and reviewed\n\t- add a specific type of testing to include\n\t- needs examination of how users interact with software","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/selenium":{"title":"selenium","content":"\nWebdriver: implements web based tests\n\nIDE: record/playback interactions with web browsers\n\nYou can mix automated and interactive options.\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/sequence-diagrams":{"title":"sequence-diagrams","content":"\n\nequence diagrams document a *sequence* of particpant interactions required to carry out a use case\n- actor \u003c-\u003e object\n\t- actors are outside the system\n\t- objects are otside the system\n\t- via a method call\n\t\t- might get a result\n- object \u003c-\u003e object\n- lifetime of interactions and objects\n\t- when they are created updated destroyed\n- time is a key aspect\n\t- [use-case-diagrams](notes/use-case-diagrams.md) dont have order\n\nThese diagrams are:\n- detailed, low level, bottom up\n- behavioural diagram\n\t- not structural\n- common in industry\n\t- along with class diagrams\n- need to be designed and read alongside corresponding class diagrams\n\t- e.g., class diagrams with inform sequences diagrams and vice versa\n\t- back and forth process\n\n\nGeneral overview example: ![annotated example](https://i.imgur.com/1myG3rU.png)\n- time goes from top to bottom\n\t- however no specific time units\n- can have actors as participants\n\t- but not usually\n\t- existence of actor usualy indicates a sequence is owned by a use case\n- interactions are indicated by messages (solid arrows)\n\t- e.g. actor to main menu\n\t\t- actor clicks a button\n\t\t- menu reacts\n\t\t- etc\n\t- messges are synchronous\n\t\t- i.e., thing sending message must wait for result\n\t- always method calls (or something that equated to a method call)\n- participants are supposed to be instances of classes\n\t- however we are usually more interested in the class name\n- the dashed lines are lifelines\n\t- can also be solid\n\t- basically indicate the existenc of something\n\t- e.g., Thingform gets destroyed, thingfinder and thing remain throughout\n- the rectangles (activation bars) indicate when an a thing is doing somethin \n\t- caused by incoming message\n\t- ended by a return\n\t- these can have sub activations\n\t\t- i.e., nested\n\t- these can be self-activations\n\t- implcit: not all methods return something\n\nrelevant slide:\n![300](https://i.imgur.com/txdVhrV.png)\n\n\n# Messages\n![example](https://i.imgur.com/XedVmng.png)\n- direction\n\t- \u003c- or -\u003e\n\t- easier to under stand if most messages are -\u003e\n\t- however this is not always possible\n\t\t- same object used by multiple other objects\n\t\t- an object calls back to the object that called it\n- can be conditions (guards) ![example](https://i.imgur.com/yWTcD1F.png)\n\t- only sent if condition is true\n\t- able to approximate if-then-else using multiple branches with exclusive conditions\n\t- this is better done in activity diagram\n- looping messages ![example](https://i.imgur.com/tcFZ4bb.png)\n\t- an asterisk idicated looping\n\t\t- repeat message until condition id false\n\t\t- send messge to each object in a collection\n\t- may also be better in activity diagram\n\n# Interaction frames (UML 2.x)\n![example](https://i.imgur.com/V1Jhnd2.png)\n- loop frame\n\t- any kind of loop\n\t- replaces * notation\n- opt frame\n\t- optional or conditional processing\n\t- can replace [] notation\n- alt frame\n\t- if-then-else\n\t- can replace [] notation\n\none thing that can cause complications is \n- when something can a top level loop which is waiting for input.\n- a cancel anytime option\n\n\n# Basic process of creation\n\n- identity participants of a use case (dont always need to use a use-case diagram)\n\t- use use case to create first version of the activity diagram. as you implement the code update the class and activity diagrams\n- identify messges required to carry out use case\n- for each message\n\t- it is always sent\n\t- is it sent conditionally\n\t- is it sent multiple times\n- assemble messages in correct sequence and attach to relevant lifelines/activations\n- add returns where necessary\n\n# Case study ATM\n\nbank is developing a new ATM system for their customers\n\nscope and requirements\n- each customer has one or mor accounts\n- transaction types are\n\t- view balance\n\t- withdraw cash\n\t- deposit funds\n- the customer can cancel at any point before final confirmation\n- customer authenticates by inserting bank card and entering four digit pin\n\nprocess\n- choose account\n- choose amount\n- check customer funds\n- check amount in cash dipenser\n- results\n\t- withdraw amount\n\t- dispense amount\n\t- remind user \n\n![use case diagram |500](https://i.imgur.com/O2mE91J.png)\n\nthis diagam is probably too general for this case\n\n![class model](https://i.imgur.com/3kX68dm.png)\n\nnote navigability of domain\n\nsequence diagram\n\n- ![part 1](https://i.imgur.com/PJJBZav.png)\n- ![part 2](https://i.imgur.com/M3jRM8g.png)\n- ![part 3](https://i.imgur.com/PhCYWsy.png)\n- ![part 4](https://i.imgur.com/L0h4nb8.png)\n\n\n\n\n[full diagram](https://blackboard.otago.ac.nz/bbcswebdav/pid-2894257-dt-content-rid-18429333_1/courses/INFO201_S1DNIE_2022/2022/lectures/lecture_13_atm-withdraw-sequence-full.pdf)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/sequential-circuits":{"title":"sequential-circuits","content":"\n\n[combinatorial-logic-circuits](notes/combinatorial-logic-circuit.md) always  produce the same outputs given the same input. Sequential curcuits on the other hand, produce different outputs depending on past history and the inputs. \n\n![combinatorial vs sequential|200](https://i.imgur.com/GbfAZ4c.png)\n\nThere are two main types of sequential circuit\n- Sychronous\n\t- this is when changes of state occur in time with a clock cycle\n\t- changes of input occur between clock pulses\n\t- state changes occur at the clock pulses\n- Asynchronous\n\t- state changes occur as the inputs occur\n\t- event driven\n\n# Main circuits\n## SR latch\nThe set reset latch is the most basic and simple sequential circuit. It is anychronous\n\n![simple sr latch with NOR gate|200](https://i.imgur.com/ay6uk33.png)\n\nThe ouput is remembered and changed basic on previous output. \n- When S (set) is pulsed Q is one and Q̄ is zero\n- When R (reset) is pulsed Q is set to zero and Q̄ is set to one\n\n## D Flip FLop\n\n![D flip flop with NAND gates|200](https://i.imgur.com/XVnK2s6.png)\n\nThe D flip flop is basically an SR connected to a clock. Making it synchronous.\n\nInstead of switching when you set or reset. The outputs change when the clock pulses. Depending on the value of the D(ata) input. \n\n[circuit simulation](https://tinyurl.com/2cafc57y)\n\n## T Flip Flop\n\n![T Flip Flop with NAND and NOR gates|200](https://i.imgur.com/CZd3aYK.png)\n\nThe T flip flop swtiches between the two outputs Q and Q̄ when\n- T(oggle) is held high\n- And the clock is cycled (from off to on to off)\n\n## JK Flip Flop\n\n![JK flip flop diagram|200](https://i.imgur.com/dFZGyMh.png)\n\nThe JK flip flop is a combination of the d flip flop and the t flip flop. \n\n| J | K | Result    |\n|:--|:--|:----------|\n| 0 | 0 | No Change |\n| 0 | 1 | Set       |\n| 1 | 0 | Reset     |\n| 1 | 1 | Toggle    |\n\nIt can be used as a toggle *and* as a d flip flop.\n\n![jk flip flop simulation](https://tinyurl.com/22pvm3sf)\n\n## Synchronous Counter\n\n ![simulation](https://tinyurl.com/25olydjb)\n ![slide|300](https://i.imgur.com/81LS7HL.png)\n\n\n## Video demonstration of some sequential circuits\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/I0-izyq6q5s?start=84\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/set":{"title":"set","content":"\nlinks: [java docs](https://docs.oracle.com/javase/7/docs/api/java/util/Set.html) for set interface\n\n\u003e A collection of items with no repetition allowed\n\nHow do we want to be able to use them? \n- We want to be able to add to them\n- And Remove from them\n- And check if it contains something\n\nThis gives us the methods:\n- `Add(x)`\n- `Remove(x)`\n- `Contains(x)`\n\nBinary search trees are data types that supprts this data type when there is an ordering on the underlying elements\nA [binary search tree](notes/binary-search-tree.md) can be used to implement a set when there is no order. [hash sets and hash maps](notes/hash-map.md) can be used when there is order.\n\n# 1 Implementations\n## 1.1 Basic set\n\nSimplest way to implement a set is using an array.\n\n[Code for basic set](https://blackboard.otago.ac.nz/bbcswebdav/pid-2890167-dt-content-rid-18354837_1/courses/COSC201_S1DNIE_2022/BasicSet.java)\n\n- Contains: Simple linear search\n- Add: Check if it is present, if not add it to the end\n- Remove: Delete the element and replace it with the last element\n\t- This leaves empty elements at the end.\n\t- So we keep track of the size\n\nAll three operations are $O(n)$ as they must all iterate over the entire set\n\n## 1.2 Ordered set\n\nA set with some underlying \"natural\" order. E.g., dictionary order for `string` objects.\n\nWe would also like to be able to do an in order traversal of an ordered set\n\nIf the set is static\n- store using sorted array\n- use binary search to find elements --\u003e $O(lg\\ n)$\n- traverse by incementing a counter --\u003e $O(lg\\ n)$ to init then $O(1)$\n\nBut then:\n- `Add(x)` Insert `x` if its not already present, so we start a search which is fine, but then insertion is $O(n)$ \n- `Remove(x)` find `x` if present, then move eyerthing beyond it back over the top --\u003e $O(n)$\n\nThis is fine if we dont expect to use the dynamic operations a lot. \n\nAnother approach might be to maintain a `main` array and a subsidary `add` and `remove` arrays and only periodically do the updates to the main array. but this gets complicated very quickly\n\nA better way of doing this is using a [binary search tree](notes/binary-search-tree.md) \n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/shell":{"title":"shell","content":"\n- start and stop OS processes\n- used to control OS\n- connect output of one OS process to input of another process -\u003e this is the idea of Unix pipes\n- manage environment variables: pass params to programs\n- parse and evaluate command line instructions from user\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/show-system-status":{"title":"show-system-status","content":"\nThis is the first of neilsens ten usability heuristics. fr\n\n- feedback depends on response time\n\t- \u003c1s just show outcome\n\t- ~1s feedback that activity is underway\n\t- \u003e\u003e1s show fractional progress time \n\n- 0.1 seconds --\u003e feels instantaneusly\n- 1 second --\u003e about the limit for flow to be uinteruippted\n- 10 seeconds --\u003e the limit for keeping users attention\n\nwhen:\n- when action is requried\n- show storage space\n- making changes\n- next steps --\u003e user input required\n- completion --\u003e some task has finished\n\n![](https://i.imgur.com/QzHRh9Z.png)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/software-architectures":{"title":"software-architectures","content":"\n\n\\# of pieces?\n- one integrated piece\n- a few distinct components\n- many distict components\n\ndoes it run:\n- on one machine\n- spread across multiple machines\n- in the cloud\n\nthese consdier ations dtermine the structure of the software we create\n\nthese have changed over time. from monolithic to distributed ![changes of distribution](https://i.imgur.com/QAxVwgn.png)\n\n## Monolithic architecture\nsystem includes all relevant code in one executable\n- e.g., UI, business logic, data management\n- self-contained\n- no significant separation of reponsibilities\n\neasy to deploy,  awkward to upgrade.\n- widely spaced \"big bang releases\"\nusually only seen in legacy systems now\n\n## service oriented architecture\nhttps://www.ibm.com/cloud/learn/soa\n\n## Separation of reponsibilities\npartition systems into logically separated parts. e.g., UI, business rules, data access, utilities\n\neasier to upgrade\n\neach part can be deployed ina different location\n\neach part is more cohesive\n- related code all in one place\n-  unrelated code cleanly separated\n- well definec interactions between parts\n- easier to design, devleop and maintain\n\ncan have \"fake data\" etc for development\n\n## Generic (old) info sys architecture\n![front middle back end](https://i.imgur.com/oPPMVfz.png)\n![client server](https://i.imgur.com/46LHAyw.png)\n\nthis is limiting and old. based more of hardware than software.\n\n## modern system example\n![modern system](https://i.imgur.com/uLVaVbQ.png)\n\n## Microservices\neverything is a service\n- APIs that can be called over the internet\n- e.g. product service, customer service\n\nsmall cohesive units of code\n- performs a single function\n- each with their \"own\" data\n\t- not necessarily its own database\n- as autonomous as possible\n- independent and effectively disposable\n\t- very scalable\n\t- auto matic load management\n- can run many redundant instances concurrently\n\n\nA system is a collection of services\n\nmost common implementation architecture for modern distributed information systems and web apps\n\n## serverless computing\ntradtional web app deployment usually still involves one or more identifiable servers\n- includes microservice baed aps\n- server may be virtualised\n- generally require per sserver configuration\n\nserverless eliminates the \"server\" concept\n- just deploy code into the cloud\n- no server config needed\n- a form of *utility computing*\n- e.g., google app engine\n\n## Function as a service\n\nlogical extreme of serverless computing\n\ndeploy individual functions into the cloud\n- no real concept of a \"app\"\n- fits well with microservice acrchitecture\n- very lightwright - fast and scalable\n- application logic only ⇒ dont store any data\n\ncomponentised highly distributed software\n\nideal for on-demand computing\n\ne.g., AWS lambda, google cloud functions, microsoft azure functions etc\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/software-licensing":{"title":"software-licensing","content":"\nWhat does it mean for people to use your software. What responsitilities do you have\n\ncommon perception: open source versus commercial\n\n- cost of aquiring source code\n- avalability of softrwares source code\n- restrictions on use of software source code\n\ncommercial software is often closed source\n- nothing stops paid for software having visible source \n\n# Why add them\n- to choose how you code can be used\n\t- deny open permission for other to reuse you code\n\t- ensure that those using your code credit you\n\t- controlling commercial use\n- protect yourself from legal risks\n\t- licensing will make your intentions specific\n- code with no license: author's copyright holds!\n\t- recall this default discussed in academic integrity policy\n\n# Free\n- Free as in freedom\n\t- reffered to as 'free as in speech'\n\t- often less ambiguous term 'libre' is used\n- Free as in no cost\n\t- also referred to as 'free as in beer'\n\t- less ambiguous term 'gratis'\n- \"Free software\" potentially means either or both\n\n# copyleft\ncopyleft licences add their requirements to derivatives\n\nfirst was GNU general public license (GPL)\n- four freedoms: run, study, share, and modify software\n- using of GPL software requires your softwarw to be GPLed too\n- FYI linux and the GNU Compiler Collection are GPLed\n\nlesser GPL: can be used in closed source\n- but modified LGPL components must be released LGPL\n\n# Creative commons\nallow selection of facets\n- all CC licences include attribution of author -**BY**\n- athors can choose to disallow commercial use -**NC**\n- derivative works allowed unless marked no-derivatives-**ND**\n- derivatives allows? can require (viral) share alike-**SA**\n\nAlso CC0 \"no rights reserved\" release to public domain\n\nCC-licenced content you may have used recently\n- code of track exchange sites licenced by CC BY-SA\n- cosc202 lecture notes are released by CC BY-NC-SA\n\n# use unambiguous open source teminology\navoid  just saying 'free open source software'. potentially unclear what notion of 'free' is in use\n\n- FLOSS - free libre open source software\n\t- clear in covering both types of 'free'\n\nviral licencing - may not be interpreted 'libre' free. The licences impose restrictions on use. even if those restrictions are net beneficial\n\n# software dist. without source code\n- freeware - software is free\n- adware - software is supported by advertising\n- shareware - software requires eventual payment\n- retail software - software required up-front payment\n\nif selling software apply a licence\n- need to think about consumer protection laws\n- likely can get 'cookie-cutter' lcences that you can customise\n- seek legal advice\n\n# dual licensing\nfree, libre, open source can be multiply licenced\n- e.g., FLOSS for non-commercial use\n- but commercially licenced otherwise\n\nopen source approaches have benefits:\n- potentially many eyes on code checking for security flaws\n- avoid lock-in to opaque commercial implementations\n\ncan licence different software components differently\n- e.g., closed source MacOS runs over open source Darwin\n\n# How to add licences into code\nproject should include complete lcence text: add file LICENSE in top-level project directory\n\nsafest to also add short licence comments to every file\n- better survives files being copied to othe projects\n- e.g., should the license file get lost accidentally\n\nGit Hub and simiar bring licencing into the main UI. THey assist lifting licence informatio as searchable metadata. search engines like google iamges can scan for licences\n\n# Incompatibility\nconsider developiing software that combines two FLOSS code based that have differnce code licences. It may be impossible to satisfy both licences simultaneously. In these cases the licences are said to be incompatible.\n\n# software patents\ngenerally 'no'. these create headaches. NZ does not permit them\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/soren-kiekegaard":{"title":"soren-kiekegaard","content":"\nFather of existentialism\n\n\"Anxiety is the dizziness of freedom\"\n\n# Religion\n[078-marx-and-kierkegaard-religion](notes/078-marx-and-kierkegaard-religion.md)\n\nThe function of religion is to organise a commitment to a particular way of life\n\nDisagreed with [marx](karl-marx)'s opinion that \"religion is the opiate of the masses\"\n\nLoss of the individual\n- lost in infinte\n- lost in finite\n\nHe thought the best way to avoid these states was to take a \"leap of faith\" (toward religion), and that the bible was a system for bringing about the highest form of us an an individual\n\n# Anxiety\n[079-kierkegaard-anxiety](notes/079-kierkegaard-anxiety.md)\n\n\"Anxiety is the dizziness of freedom\"\n\n\"The biggest danger, that of losing oneself, can pass off in the world as quietly as if it were nothing; every other loss, an arm, a leg, five dollars, a wife, etc. is bound to be noticed.\"\n\n\"Anxiety may be compared with dizziness he, whose eye happends to look down into the awning abyss becomes dizzy. But what is the reason for this? It is just as much in his own eyes as in the abyss. Anxiety is the dizziness of freedom.\"\n\nPeople can be lost in the finite or in the infinite. When we are balancing between the infinite and the finite we experience this anxiety, which imbues a sense of dread. After dread comes despair. Despair is a sickness of the spirit, and is often unnoticable. \n\nPeople try to \"hide\" from this despair by attaching themself to something \"earthly\". This is similar to Kant idea of outsourcing things from what is enlightenment. \n\nWhen we are experiencing anxiety we are coming closer to our true self.\n\n\"What I really lack is to be clear in my mind what I am to do, not what I must know what matters is to find a purpose, to find a truth that is true for me. to find the idea for which I am willing to live and die. That is what my soul thirst for as the african desert thirst for water\"","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/ssh":{"title":"ssh","content":"\n# What is it\ntelnet was a set of protocols for one xomputer to control another. This was not secure\n\nTelnet then spawned secure shell (SSH). This encytped\n\nThe computer to be controlled needs to be running an SSH server. \n\nTo connect to and control the device with the server we need to install SSH software on the device we will use to connect\n\nto login: ssh username@ip-address then enter password\n\n# Where is it used.\n\nWhile users access a server by TLS or HTTP(S), admins access a server using SSH via the command line. \n\nIt can also be used for automated operations. Usually this will also invole file transfer using SCP for SFTP\n\n\n0 juyt \n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/stakeholders":{"title":"stakeholders","content":"\nPeople with interest in successful implementation\n\nthree primary groups\n- users\n- clients -\u003e pay for and own systems\n- technical staff -\u003e ensure system operation\n\nAnalyst should id every type of stakeholder during [systems-development-life-cycle](notes/systems-development-life-cycle.md)\n\n### 0.2 users as stakeholders\nhorizontal user roles -\u003e information flow across dept's\n- ?\n\nvertical user roles -\u003einformation needs of staff, middle management, senior execs\n- business users perform day to day operations\n- information users need current information\n- mangement users need summary information\n- executive users need strategic information\n- external users may have access to the systems\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/storyboards":{"title":"storyboards","content":"\nmockup of user scenarios\n\nproblem with sketches\n- hard to capture dynamics of interation over times=\n- captures user interface not user behaviour\n\na good storyboard should tell a story\nshort and concise\nlow fidelity\nnot about pretty picures. ⇒ about communicating ideas\n\nShows:\n- setting\n\t- people\n\t- environment\n\t- task being done\n- sequence\n\t- what steps\n\t- what leads someone to the app\n\t- task task\n- satisfaction\n\t- what is the users motivation\n\t- what does it enable people to accomplish\n\t- what need does the system fill\n\n\n![](https://i.imgur.com/dyZIPH9.png)\n![](https://i.imgur.com/YE27hWp.png)\n![](https://i.imgur.com/uOqAl4o.png)\n\n\n# 1 pros\n+ holistic focus ⇒ helps emphasoze how an interface accopmlishes a task\n+ avoid commitment to a particular UI\n+ helps get all the stakeholders on the same page in terms of the goal\n\n\n# 2 Tips\ntell a story\n![](https://i.imgur.com/NTpXK14.png)\n\n- base it off the scenario\n\nplay with the angle/perspectives\n\n![](https://i.imgur.com/aJ11kgo.png)\n![](https://i.imgur.com/aBSoHwJ.png)\n\nsimplify and develop vocabulary/your own style\n![](https://i.imgur.com/jwDROAW.png)\n\n\nusing tracing and templates\n![](https://i.imgur.com/wwf7ab3.png)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/storyboards-mockups-paper-prototypes":{"title":"storyboards-mockups-paper-prototypes","content":"\nFidelity will increase over time.\n![200](https://i.imgur.com/7qmn859.png)\n\n## Storyboarding\nfocus on the **task**\ncommunicate flow\nnot about pretty pictures\nuse timelimits ≈10 mins\n\n### shows\n- settings\n\t- people \n\t- environment\n\t- task\n- sequence\n\t- steps\n\t- what leads a user to use the app\n\t- what task\n- satisfaction\n\t- why do they use the app\n\t- what do they accomplish\n\t- what needs does the system fill\n\n### Benefits\n- holistic focus\n- avoids commitment to an interface\n- helps get stakeholders onthe same page\n\n### Examples\n![](https://i.imgur.com/9PzIGWg.png)\n\n\n## Paper prototyping\nmockup of UI on computer\n![](https://i.imgur.com/aGq3VKp.png)\n\n\n### tips\n- store materials in one place\n- work quickly\n- complex parts of interfaces can be verbally roleplayed\n- backgrounds can be used to contain protoypes and provide context\n- you can mix and match hardware and software\n- when appropraite include matching OS elements\n\n- get users to add to the design\n- get stakeholders incolved\n\n\n## Digital mockups\n![](https://i.imgur.com/LOSt7gZ.png)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/system-templates":{"title":"system-templates","content":"\n\u003c% tp.file.cursor(4) %\u003e\n# System templates\nsome standard patterns is system design\n\nespecially with respect to structural requirements\n- database\n- domain classes\n- names of entites/classes may vary but pattern is the same\n\nbroadly similar structures for similar problem domains\n- e.g., retaiol, scheduling, HR\n- main difference mostly is small details\n\n## the heirarchy\n![hierarchy](https://i.imgur.com/uGcao6S.png)\n\nrepresents a chian of \"containment\" relationships\n\nchild and parent entities linked by FK (often composite)\n\nexamples\n- division, department, employee\n- student, programme enrolment, paper enrollment, assessment result\n\n## the associative entity\n![associative entity example](https://i.imgur.com/JQM0LTd.png)\n\nresolution of a many-to-many relationship\n\nassociative entiteis may or may not have additional attributes.\n\n## Headers/lines\n![header line example](https://i.imgur.com/MH7mRRi.png)\n\n![more examples](https://i.imgur.com/aHGKqV7.png)\n\nhead is associative with one or more other entities.\n\nline is associated with only one thing\n\n### parallel header lines\n![parallel header/lines](https://i.imgur.com/CDPLeXG.png)\n![other examples](https://i.imgur.com/rG5Jr49.png)\n\nsecond example has more direct association between sale and shipment.\n\n## general systems\n![Point of sale ERD](https://i.imgur.com/S7YhvAa.png)\ndont always need all of the things\n![booking system ERD](https://i.imgur.com/AOjrHkC.png)\n![inventory system ERD](https://i.imgur.com/vdEjRh7.png)\n\nmany more e.g., payroll, scheduling/timetabling, tracking\n\n![more examples possibly dated](http://www.databaseanswers.org/data_models/index.html)\n\n# summary\ndont always need to create data model from scratch, need to adapt any template to suit your scenario\n\ndont deinveltht the wheel\n\n![revision questions](https://i.imgur.com/LKRU7lh.png)\n\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/systems-development-life-cycle":{"title":"systems-development-life-cycle","content":"\n\nProvides overall framework for managing the systems\nThere are many methodologies to help guide us through this cycle\nEach methodology sits on the [predictive-adaptive-spectrum](notes/predictive-adaptive-spectrum.md)\nA very common methodology at the moment is [agile-development](notes/agile-development.md)\n\n## 1 Phases\n### 1.1 Analysis \n^2d7976\n- Lots of communication with [stakeholders](notes/stakeholders.md)\n- Gather detailed information\n- define system requirements\n- prioritise requirements (what is risky, what brings value to business) -\u003e increase proability of success\n- develop UI dialogs ([prototyping](notes/prototyping.md)' where the user can interact with the system)\n- evaluate requirments\n- review reccomendations with management\n\n## 2 Business process re-engineering\nmethod of organising company\n- streamline processes to be efficient and efffective\n- question basic assumptions\n\nuse ICT to help with BPR \n\nsys analyst may find opportunites to improve processes\n- any project can include components of BPR\n\nsimpler business processes -\u003e simpler requirements -\u003e simpler system\n\n## 3 Requirements\n- [requirements](notes/requirements.md)\n- [requirements-elicitation](notes/requirements-elicitation.md)\n- Something the system should do \n- Some constraint the system should have\n- Can be functional or non functional\n- Good requirements prevent failure\n\n## 4 SDLC Variations\n- different terminology\n- change focus on people\n- change speed of development\n\t- [prototyping](notes/prototyping.md)\n\t- Rapid application development (RAD)\n\n## 5 Failure\nmain goal: Avoid project failure\n- complete fail implies nothing delivered\n- Types of fail\n\t- cost overruns\n\t- sw quality issues\n\t- missed deadlines\n\t- unhappy [stakeholders](notes/stakeholders.md)\n\nSuprisingly very common with large projects\n\nreasons for fail: \n![](https://i.imgur.com/Q091Xtg.png)\n\n\n**coding rarely causes problems**\n\n![](https://i.imgur.com/N36Cd0E.png)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/templates":{"title":"templates","content":"\n- [[templates/Day]]\n- [[templates/note-header]]\n- [[templates/course]]\n- [[templates/post]]\n- [date-day](private/templates/date-day.md)\n- [DailyTemplate](private/templates/DailyTemplate.md)\n- [induction-proof-template](private/templates/induction-proof-template.md)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/terminology":{"title":"terminology","content":"\n**rank:** the number of dimensions in the output of a transformation *or* the number of dimensions in the columce space\n**column space:** the set of all possible outputs Av is the column space of A\n**full rank:** When the rank equals the number of columns\n**null space/kernel:** the space of all vectors that become null following a transformation\n **span:** a set of all linear combination of two vectors\n **linear combination:** an expression constructed from a set of terms by multiplying each term by a constant and adding the results\n ","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/test-driven-development":{"title":"test-driven-development","content":"\ntests are developed before the code\n\nare a spec of what the code should do\n\nfirst they fail ⇒ as you develop, they pass\n\n+ quantifiable progress of code\n\n\u003e tests are not always bug free\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/testing":{"title":"testing","content":"\n- most software will contain bugs\n- bug severity if not always equivalent to bug priority\n- testing is seeking out bugs\n- some test types\n\t- unit tests\n\t- integration tests ⇒ check units work together\n\t- end-to-end tests ⇒ check behaviour of whole program\n\n## 1 Limitations\n- testing every code path is impossible\n\t- halting problem - cant fully analyse code using code\n\t- proved by alan turing in 1936\n\n- good test design focuses on _key cases_ to pass and fail\n- not probe interaction between units\n\t- this should be done by integration testing\n\n- testing may afffect behaviour of code\n\t- testing framework may affect the order of esecution\n\t- testing framework may change execution speed\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/the-art-of-war":{"title":"the-art-of-war","content":"\n# 1 Estimates\n\n\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/the-story-of-man":{"title":"the-story-of-man","content":"\n# African Origins\n\n# The Peopling of the Earth\n\n# Putting down roots\n\n# 4000 BC\n\n# The Invention of the State\n\n\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/transistors":{"title":"transistors","content":"\n\n# Transistors\n![simple transistor diagram|100](https://i.imgur.com/oBuNR9m.png)\n\n- B: Base ⇒ A swtich connecting C to E\n\t- open (C is disconnected from E) when supplied 0v\n\t- closed (C is connected to E) by applying +5V\n- C: Collector\n- E: Emitter\n\nPossible to create NAND gate using just transistors ∴ possible to create all logic gates using only transistors [^3]\n\n\n[^3] : They dont actually do it this way (see lab)","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/treap":{"title":"treap","content":"\nTreaps\nLink betwen heaps and trees that uses randomisation\n\nI we are added items to a bst in random order then an unbalanced situation would be possible but highly unlikely. \n\na treap (portmanteau of tree and heap) is designed to achieve this even in the elements are not added in random order\n\nwhen we add an element, we give it a random priority. Then after doing normal BST insertion we perform a series of rotations to fix the heap-ordering issues\n\nthe effect is that the elements look as if they were inserted in decending order of priority. SInce the priorities were randomly chosen, that means that at any time we see a BST which  \"thinks\" that is elements were added in random ord\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/tree":{"title":"tree","content":"\nnot so much a data type. More of a data concept of a way in which data can be organised\n\nThe first example we saw was with the chains of representatives in [union-find](notes/union-find.md)\n\nThe type required for the ordered [set](notes/set.md) data type is the binary tree\n\nTrees in general:\n- Consists of *Nodes*\n- One node is distinguished and called the *root*\n- Each node, except the root, has a unique *parent*\n- Any chain that moves from a mnode to its parent , its grandparent etc, eventually reaches the root.\n- The *children* of a nore arll the nodes of which it is the parent\n- Nodes may (and usually do) have additional data associated to them. (does not affect the structure)\n- Nodes with no children are *leaves*\n\nFor example: \n\n- *cat* is the root (root is drawn at the top)\n- the parent of *dog* is cat*,* of *rat* is *emu*\n- some nodes have two children, one has three (*emu* ) and some have none.\n\n![300](https://i.imgur.com/EsrTuFL.png#invert)![300](https://i.imgur.com/bQmzPaU.png#invert)\n\nThe only differnce between these two trees is the *order* of the elements. \n\nWe need to specify whether this makes them different or not. In computer science, order usually *does* mater. These are sometimes called*plane trees*.\n\nSometimes there are fixed slots for the children e.g., \n\n[binary-search-tree](notes/binary-search-tree.md)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/tree-traversal":{"title":"tree-traversal","content":"\nVisit each node in the tree once. So we need to visit n, all the nodes in L, and all the nodes in R. We can do this in four different ways\n\n- **Preorder:** Root, left, right\n- **Postorder:** Left, right, root\n- **Inorder:**  Left, Root Right (produces ordered list in a [BST](notes/binary-search-tree.md))\n- **Level order:** root, all the roots children, all their children, etc  \n\n[examples](https://i.imgur.com/vsZtkIp.png)\n\nCreating an BST from an array using the [Add Operation](notes/bst-operations.md#Add%20Operation) operation then doing an inorder traversal is effectively a [quicksort](notes/quicksort)\n\n# Code\nUsually traversals ideas used in algorithms, not independent methods\n## Pre order\n```java\nprivate void preorder(Node n, ArrayList\u003cString\u003e r){\n\tif(n==null) return;\n\tr.add(n.key); //add this node the reults\n\tpreorder(n.left, r); //traverse the left subtree\n\tpreorder(r.right, r); //traverse the right subtree\n}\n```\n\n## Post order\n```java\nprivate void postorder(Node n, ArrayList\u003cString\u003e r){\n\tif(n==null) return;\n\tpostorder(n.left, r); //traverse the left subtree\n\tpostorder(r.right, r); //traverse the right subtree\n\tr.add(n.key); //add this node the reults\n}\n```\n\n## In order\n```java\nprivate void inorder(Node n, ArrayList\u003cString\u003e r){\n\tif(n==null) return;\n\tinorder(n.left, r); //traverse the left subtree\n\tr.add(n.key); //add this node the reults\n\tinorder(r.right, r); //traverse the right subtree\n}\n```\n\n## Level order\nOnly traversal that  is not naturally recursive. Maintains a [queue](notes/dynamic-linear-datatype.md) of pending visits. Using a [stack](notes/dynamic-linear-datatype.md) with this methods produces a preorder\n\n```java\npublic Arraylist\u003cString\u003e levelorder() {\n\tArrayList\u003cString\u003e result = new ArrayList\u003c\u003e();\n\tif(isEmpty()) return result;\n\tArrayDeque\u003cNode\u003e q = new ArrayDeque\u003c\u003e();\n\tq.add(root)\n\twhile (!q.isEmpty()) {\n\t\tNode n = q.remove()\n\t\tresult.add(n.key);\n\t\tif(n.left != null) q.add(n.left);\n\t\tif(n.right != null) q.add(n.right);\n\t}\n\treturn result;\n}\n```","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/typography":{"title":"typography","content":"\nmost common fonts\n- gill sans\n- helvetica\n- calibri\n- arial\n- times\n\nthree types of fonts\n- serif\n- sans serif\n- handwritten\n\npoint size\n![100](https://i.imgur.com/9lMGK1g.png)\n\nleading depends on the font and the user setting but usually is 20% of the font\n![100](https://i.imgur.com/eABpxfK.png)\n\nx height depends on the font.\n- smaller x height adds \"elegance\"\n- larger x height isbettwe to low res displays\n![250](https://i.imgur.com/BvPCazi.png)\n\nascenders and descender usually correlates with x height (small x-height \u003e large ascenders and descenders)\n![400](https://i.imgur.com/Iv7FK4F.png)\n\nweight: usually regullar and bold, also light semibold, ultrabold\n![400](https://i.imgur.com/YboKpT7.png)\n\nsans serifs have less line width variation\n![400](https://i.imgur.com/3GkpMf3.png)\n\nsome fonts provide small caps and lowercase numbers\n![](https://i.imgur.com/lEYKFl8.png)\n\n\n\n- serif hypothesis\n\t- serif fonts are easier to read\n\t- preferable for long stretches of text because serifs provide anchors and guide the eye\n\t- not proven\n\nmore info on the top than the botton\n![300](https://i.imgur.com/XEF8nlr.png)\n\nexpectation plays an important role\n![300](https://i.imgur.com/Uu6B2bQ.png)\n\n\n\n## which font to use?\n- depends on context\n- recoomentations\n\t- slides and posters sans serif\n\t- printed text serif\n\t- web sans serif\n\t- sans serif is better in lower resolutions\n\t- combinations: (header sans, text serif)\n\t- comic sans good for dyslexia\n\t- logos should catch the eye\n\n \n![300](https://i.imgur.com/T80gQOA.png)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/uml-java-forward-engineering":{"title":"uml-java-forward-engineering","content":"\nsimilar to ERD to sql. \n\nuse case diagrams - more about system structure and features\n**class diagram - java class\n- doesn't have to be java\n- could be any oop language\nsequence, activity, state etc, may or may not be useful. \nsome code can be automatically generated.\n\ncustom methods cannot be generated automatically. things like getters and setters can be generated automatically.\n\n## Steps\n1. uml class -\u003e java class (in its own file) (dont overdo it) (e.g., librarian)\n\t1. use conceptual vs implementation level diagrams\n2. assign data types to explicit class fields\n3. add fields implied by associations\n\t1. unidir ⇒ field in class at tail of --\u003e\n\t2. bidir ⇒ field in class at both ends \u003c--\u003e\n\t3. multi = 1 ⇒ simple field (e.g., string)\n\t4. multi \u003e 1 ⇒ appropraite collection type (e.g., arraylist, hashmap etc)\n4. field visibilty normally private (should match class diagram)\n5. add constructors if needed\n6. add public getter and setter methods (trivial, can be auto generated)\n7. add remaining public or private methods (includilng implemented interfaces)\n\n## Visibility of fields and methods\n![visibility of fields and methods](https://i.imgur.com/0xM09La.png)\n\n## use case diagrams\n[use-case-diagrams](notes/use-case-diagrams.md)\neach use case represents a feature. often items in a menu. sub cases can be sub menu items (extnd, include, require) (sometimes).\n\nactors *can* correspond to domain classes.\n\none use case might require/use several classes. e.g., UI, processor, or data classes.\n\n## other behavioural diagrams\n**sequence:\n- could be used for looping and branching\n**activity:\n- low level in particular\n- can be used to generate some code\n- would require discipline in diagram conventions\n\t- by this point you are basically writing code in graphical form anyway\n\t- might as well just write the code anyway\n**state: \n- most useful/likely to be use for code\n\t- states machines are tedious\n\t- [finite-state-machine](notes/finite-state-machine.md)\n- often translate to some kind of lookup mechanism\n- fairly easy to generate correspoding code\n- boils down to some kind of index.\n- however these are not used very often\n- once this code is generated is hard to fix manually\n\t- better to just change the diagam and regenerate the code\n\n## subclasses\n![employe diagram example](https://i.imgur.com/EAiVEkt.png)\n![eployee code example](https://i.imgur.com/bighWWJ.png)\n![code continued](https://i.imgur.com/Hxcho66.png)\n\n- this example is contrived\n- salariedemployee and waged employee inherit all public and protected methods of employee (including getters and setters, not including constructors)\n- salariedEmpoyee and waged employee each have thier own computePay method\n\n## Interfaces\n![diagram](https://i.imgur.com/pN660p0.png)\n![code](https://i.imgur.com/iDyoeSE.png)\n\n- generally preffered to subclasses\n- both salaried and waged employees must implement the computePay method\n\n# Domain class model vs ERD structure\n- erd are about long term storage. data persistence\n- domain models are about application process, temporary storage. \n- database and class structures dont need to be the same\n- but you do need to be able to map between them\n\n![domain class model vs erd structure](https://i.imgur.com/feN6a9W.png)\n\n# Example: Library system\ne.g., \n![library example uml diagram](https://i.imgur.com/u4CNXOb.png)\nthe five horizontal items could be meny items. there will be some kind of authorisation for senior librarians. we probably wouldn't make seniour and junior librarian as differnce classes. there is not really any benefit, doing this would be overkill. We should use a single librarian class with `type` field. this field can be used for authorisation. The apply fine use case is an optional sub task. It could be implemented in many ways: checkbox on return form, sub menu item, automatic. shelve item is a differnt, its more of a business process. only thing need in the code it the change the status of the item. \n\n![class diagram](https://i.imgur.com/VjyvYPe.png)\n\n![code part 1 Loan class](https://i.imgur.com/6VoV54C.png)\n![code part 2 Loan class 2](https://i.imgur.com/Q8yptdE.png)\n![code part 2 Loan class 3](https://i.imgur.com/4Xst3ys.png)\n\n\n## Multiplicity\n![](https://i.imgur.com/yJIH7dK.png)\n\nmih multiplicity of - ⇒ can create instances of Loan withou providing any associated LoanItem instances\n\nmin multiplicity 1 ⇒ must provide associated Loan instand when creating a LoanItem instance\n1. create loan and loanItem then use LoanItem.setLoan()\n2. use a custom LoanItem constructor to pass Loan object\n\n![multiplicity code ](https://i.imgur.com/RKa9NBy.png)\n\nunidirectional association are preffered as here we need to link things birdirectionally. this example is contrived, in real life it would not be done this way.\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/uml-java-reverse-engineering":{"title":"uml-java-reverse-engineering","content":"\n\n# Java -\u003e UML reverse engineering\nreverse of [uml-java-forward-engineering](notes/uml-java-forward-engineering.md)\n\n- parse java docs and generate corresponding uml diagrams\n- useful to generate models of existing systems\n- code usually has more detail than can be represented in diagrams\n- automated diagram layout likely to be ugly ⇒ manual clean up\n- some language specific features may not translate\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/uni-notes":{"title":"uni-notes","content":"\n## 2022 S1\n- [cosc-201](notes/cosc-201.md)\n- [cosc-202](notes/cosc-202.md)\n- [info-201](notes/info-201.md)\n- [info-203](notes/info-203.md)\n\n## 2022 s2\n- [cosc-203](notes/cosc-203.md)\n- [cosc-204](notes/cosc-204.md)\n- [comp-210](notes/comp-210.md)\n- [math-202](notes/math-202.md)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/unicode":{"title":"unicode","content":"\n## Unicode\n![unicode](https://i.imgur.com/GEtVItW.png)\n\n- Other non roman languages\n\t- greek, arabic, chinese, hebrew, japanese, thai etc.\n\t- atrology symbols\n\t- emoji etc\n- Unicode\n\t- developed by the Unicode Consortium\n\t- coordinated with ISO/IEC 10646\n\t- a 21-bit code with 144,697 characters from 159 scripts\n\t- unicode maps from character numbers (code points) into glyphs (graphical representations)\n\t- Some(many) are reserved","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/unified-modelling-language":{"title":"unified-modelling-language","content":"\n- [what-are-uml-diagrams](notes/what-are-uml-diagrams.md)\n- [use-case-diagrams](notes/use-case-diagrams.md)\n- [class-diagrams](notes/class-diagrams.md)\n- [entity relationship diagram](notes/entity-relationship-diagrams.md)\n- [activity-diagrams](notes/activity-diagrams.md)\n\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/unified-processes":{"title":"unified-processes","content":"\noop development\nuses UML for modelling\nfour phase life cycle\n- inception\n- elaboration\n- construction\n- transition\n\n![](https://i.imgur.com/wV46UVm.png)\n\n##### best practices\n- develop iteratively\n- define and mange system requirements\n\t- effectively managing changes in requirements\n- use component architectures\n- create visual models (UML)\n- verify quality \n- Control changes\n\n##### Values and principles\nValues:\n- **individuals and interactions** over processes and tools \n- **working software** over comprehensive documentation \n- **customer collaboration** over contract negotiation\n- **responding to change** over following a plan\n\nTwelve modelling principles:\n\n\u003e Build only necessary models that are useful and at the right level of detail\n\n- Software is your primary goal — don’t get distracted by\ndocumentation or models.\n- The next effort is your secondary goal — be aware of next\nstep versions or revisions.\n- Minimise modelling — only build what helps move the project\nforward.\n- Embrace change, change incrementally — take small steps\nthat keep you on track and that can be reversed if necessary.\n- Model with a purpose — to understand and communicate.\n- Build multiple models — look at problems from different\nperspectives.\n- Build high-quality models and get feedback — from [stakeholders](stakeholders), other developers.\n- Focus on content, not representation — always focus on stakeholder needs; informal hand-drawn models are often fine.\n- Communicate and learn from each other.\n- Know your models and how to use them.\n- Adapt to specific project needs.\n- Maximise stakeholder ROI.\n\n![](https://i.imgur.com/feq3EQ3.png)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/union-find":{"title":"union-find","content":"\n## 1 Example\n- We have 12 'objects'\n- *Some* pairs have been connected\n- Nodes with a sequence of edges between them form a group\n\t- e.g., 0 5,   2,   1 4 6 9,   3 8 10 11,    7\n\t- \n![](https://i.imgur.com/9iRxZoh.png)\n\n- Groups with no connecting edges are *disjoint* sets\n\n## 2 Requirements\n- Make(n) - make a set of n vertices with no edges between them\n- Union(x, y) - connect x and y by an edge (merge their two groups)\n    - y becomes the representative node for the whole group\n    - e,g,. Union(2, 1)\n\t\t- now : 0 5    2 1 4 6 9    3 8 10 11    7\n\t\t- the representative node of the new group is 1\n\t\t- the number of groups is always : n - number of union operations between elements of different groups\n- Find(x) Find and return a representative of the group the x belongs to.\n    - If x and y are in the same group then Find(x) == Find(y)\n    - \n\n## 3 Implementation\n### 3.1 UF 1\n\n```java\n\tint[] reps;\n\tpublic void make(int n){\n\t\treps = new int[n];\n\t\tfor(int = 0; i \u003c n; i++) reps[i] = i;\n\t}\n\n\tpublic int find(int x){\n\t\treturn reps[x];\n\t}\n\n\tpublic void union(int x, int y){\n\t\trx = reps[x]\n\t\try = reps[y]\n\t\tfor i = 0 to n-1\n\t\t\tif reps[i] = rx then\n\t\t\t\treps[i] = ry\n\t\t\tend if\n\t\tend for\t\n\t}\n``````\n\n\n Operation   | Cost | reason\n-------------|------| --\n make        | $\\Theta(n)$ | filling n place of an array\n find(x)     | $\\Theta(1)$ | find value in array is constant\n union(x, y) | $\\Theta(n)$ | When x and y's rep are different, the whole array must be examined\n\nTotal possible number of union calls where x and y's rep are different is n-1\nSo the Total possible cost of all union calls is $\\theta(n^2)$ \n\n### 3.2 UF 2\n\n``` java\n\tint[] reps;\n\tpublic void make(int n){\n\t\treps = new int[n];\n\t\tfor(int = 0; i \u003c n; i++) reps[i] = i;\n\t}\n\n\tpublic int find(int x){\n\t\tif(reps[x]==x) return x;\n\t\treturn find(reps[x]);\n\t}\n\n\tpublic void union(int x, int y){\n\t\treps[find(x)] = find(y);\n\t}\n```\n\nOperation   | Cost | reason\n-------------|------| --\n make        | $\\Theta(n)$ | filling n place of an array\n find(x)     | $\\Theta(n)$ | need to look through chain nodes for representative\n union(x, y) | $\\Theta(n)$ | bounded by two calls to find\n\nTotal possible number of union calls where x and y's rep are different is n-1\nSo the Total possible cost of all union calls is $\\theta(n^2)$ \n\n### 3.3 UF 3\n\nFor each rep, let its rank be the length of the longest chain of local reps that reaches it\nWhen union(x,y) make the rep with the larger rank the rep of the other\nIf equal ranks -\u003e make the second the rep of the first\n\n``` java\n\tint[] reps;\n\tint[] rank;\n\tpublic void make(int n){\n\t\treps = new int[n];\n\t\trank = new int[n];\n\t\tfor(int = 0; i \u003c n; i++) reps[i] = i;\n\t}\n\n\tpublic int find(int x){\n\t\tif(reps[x]==x) return x;\n\t\treturn find(reps[x]);\n\t}\n\n\tpublic void union(int x, int y){\t\t\n\t\trootUnion(find(x), find(y))\n\t}\n\n\t//x and y are known to be representatives\n\tprivate void rootUnion(x, y){\n\t\tif(rank[x] \u003e rank[y]){\n\t\t\treps[y] = x;\n\t\t} else if (rank[y] \u003e rank[x]){\n\t\t\treps[x] = y;\n\t\t} else { //rank[x] == rank[y]\n\t\t\treps[x] = y;\n\t\t\trank[y] ++;\n\t\t}\n\t}\n```\n\nOperation   | Cost | reason\n------------|------| --\n make        | $\\Theta(n)$ | filling n place of an array\n find(x)     | $\\Theta(lg\\ n)$ | rank is bounded by $lg\\ n$\n union(x, y) | $\\Theta(lg\\ n)$ | bounded by two calls to find\n\nTotal possible number of union calls where x and y's rep are different is n-1\nSo the Total possible cost of all union calls is $\\theta(n^2)$\n\ntrade off means this requires an extra $\\theta(n)$ space\n\n#### 3.3.1 Min size of set of rank k\n\n- for k = 0 -\u003e size must be at least 1\n- for k = 1 -\u003e size must be at least 2\n\nfor larger k -\u003e the set must have been formed by the union of two sets of rank k-1. So its size must be at least twice the min size of a set of rank k-1\n\n--\u003e min size of set of rank k is $2^k$\n\n\u003ea set of rank k must contain at least $2^k$ elements\n\u003e $\\therefore$ The maximum rank of an element is $\\log_2(n)$  -\u003e $lg(n)$\n\nsince the time for $Find$ is big-$\\theta$ of the rank of the representative found we get $O(lg n)$ bounds for both find and union\n\n^we used $O$ not $\\theta$  because we dont know that the worst case will always occur.\n\nIf could happen that the sequence of Union operations does not create a rank that is as big as i could be\n\n^this is an example of a semi-formal proof by [induction](notes/induction.md)\n\n### 3.4 UF 4\nChange find so it implements path compression to \"flatten\" the chains. When we follow tht path to a nodes representative we \"learn\" the final result\n\npath compression occurs during find when we the chain of links from an element to its representative with a direct link (and do the same along the chain)\n\n```java\n\tif (x != reps[x]) {\n\t\treps[x] = find(reps[x]);\n\t}\n\treturn reps[x];\n```\n\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/unit-testing":{"title":"unit-testing","content":"\n- divide code into units ⇒ test those units\n\n- consider appropriate scale\n\t- depends on type of code project as well as language\n\t- object oriented: classes? methods?\n\t- procedural: functions? modules?\n\n- test each unit independently\n\t- frequently\n\t- often after each commit/push\n\t- can run tests if parallel\n\t- may need to build environment in which tests run\n\n# 1 supports useful principles\ncan support complementary work by team members\nearly discovery of problems\ncan help with documentation and specification\n- unit tests can be a form of executable specification\n- helps team members understand requirements\n\n# 2 Test environment\nconsider code that interacts with a database\n- you cant let that code write to a real database\n- but you want to check that writes were performed\n\ncommon solution is to create a fake database\n- class that mocs database operations\n- can also test error handling by returning error codes\n\nmock up the database with a pretend model that returns fixed results to query\n- be careful not to mock up data base incorrectly\n\ncan be a pre-recorded interaction\n\n# 3 Test life cycle\n- set up test environment\n- run test code\n- check results\n- aggregate results into test summary\n\nsimple test: run method ⇒ check value\ntests may chack that code fails appropriately\n- crash when expected\n- exceptions are generated\n\n# 4 Language support\nlanguage may have bilt in testing support\n- e.g., Go and Rust have command line tools to run tests\n\nExternal tools can often work well too\n- e.g., java code annotations can mark tests\n- java ignores most annotations, but testing tools (JUnit)  can use them\n- annotations are symbols that begin with @ in source code\n\nwe want to distinguish between tests and normal code\n- also should support for sqapping in/out mocking code\n\n# 5 JUnit\ntest classes have a particular filename pattern\n\nannotate test methods with @Test\n\nother annotations\n\n- @BeforeAll and @BeforeEach (and after)\n- @RepeatedTest\n\nJUnit 5 also supports dynamically generated tests\n\n# 6 TestNG\nbased off JUnit and fixes some it it's problems\n\n- provides control over threading\n\t- run tests in parallel\n\t- also tests for parallelism bugs\n\t- multithreaded code i hard to debug\n- data driven testing\n- also\n\t- integration testing\n\t- end to end testing\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/unite-and-conquer":{"title":"unite-and-conquer","content":"\n5 | 8 | 2 | 3 | 4 | 1 | 7 | 6\n\n5 8 | 2 3 | 1 4 | 6 7\n\n2 3 5 8 | 1 4 6 7\n\n1 2 3 4 5 6 7 8\n\n\n```java\n\tpublic static void mergeSort(int[] a) {\n\t\tint blockSize = 1;\n\t\twhile(blockSize \u003c a.length) {\n\t\t\tint lo = 0;\n\t\t\twhile (lo + blockSize \u003c a.length) {\n\t\t\t\tint hi = lo + 2*blockSize;\n\t\t\t\tif (hi \u003e a.length) hi = a.length;\n\t\t\t\tmerge(a, lo, lo + blockSize, hi);\n\t\t\t\tlo = hi;\t\t\t\n\t\t\t}\n\t\t\tblockSize *=2;\t\t\n\t\t}\t\n\t}\n\n```\n\nouter loop is executed lg n times, where n is the length of a\n\ninner loop proceeds  until we find a block that \"runs out of elements\"\n\ninner loop is having 2 x blocksize added each time, to runs most n/2 x blocksize\n\ninside inner is call to merge which is ϴ(blocksize)\n\n\n### 0.1.1 complexity from bottom up\n\n- $n$ is the numbe of elemetns in a\n- outer loop is executed\n\n### 0.1.2 improvments\nsome arrays have sections that are already sorted\n\nyou canm\n\n### 0.1.3 timsort\nused by python java rust etc\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/unix-shell":{"title":"unix-shell","content":"\n- most common command shell (macOS, linux, android, ios)\n- bash is another common shell\n- windows shells:\n\t- cmd.exe (legacy)\n\t- powershell (more powerful than bash)\n\t- many ways to run bash\n\n## 1 Unix shell good/bad\n\n- good\n\t- embodies unix principle: separation of concerns\n\t- minimal -\u003e shell just manages interaction of other small tools\n\t- highly programmable; supports complex automation\n- bad\n\t- has quirkiness that can trip everyone up\n- tradeoffs\n\t- Shell can be perfect to some tasks; terrible for others\n\t- extremely powerful however also difficult to learn to use\n\nshells are in cosc202 as lowest-level, common means for controlling computers during software development\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/usbability":{"title":"usbability","content":"\nThe extent to which a product cn be used by specifies users to achieve specified goals with effectivenesss, efficiency, and satisfaction in a specified context of use.\n\nUsability is how well a product can be used by specific users to achieve goals effectively efficiently and with satisfaction in a specific context\n\n![](https://i.imgur.com/da2LAxG.png)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/use-case-diagrams":{"title":"use-case-diagrams","content":"\n- specifies the participants (actors) and the relationships between them\n- high level view of what a system does (not how) and who uses it\n- represent users perspective of a system\n- used mainly in requirements specification and early system dev\n- effectively a todo list\n\n## 1 pros\n+ informal,flexible, easy to construct\n+ easily understood\n\t+ improve communication between users and developers\n\t+ can be used to confirm requirements\n+ provide overview\n+ link analysis to design\n+ can be used to inform subsequent dev tasks\n\t+ derive test cases\n\t+ prioritise imlementation tasks\n\t+ help clarify new feature requests or bug reports\n\n## 2 Notation\n\n### 2.1 Actor\n- roles that people have when interacting with the system\n- external systems or hardware that are essential to system operation\n\n![](https://i.imgur.com/PtZlwjO.png)\n\n### 2.2 Use case\n- discrete unit of system functionality\n- activity from perpective of an actor\n- can be abstract or focused\n- say nothing about flow or behaviour\n- map to ⇒ menu items, forms, reports, etc\n\n![](https://i.imgur.com/LiSjoef.png)\n\n### 2.3 Association\n- relationship (interaction) between actor and use casel\n- actor can be associated with more than one use case\n- use case can be associated with more than one actor\n \n![](https://i.imgur.com/ySvfY3Y.png)\n\n### 2.4 Specialisation/generalisation\n- actors and use cases can be orgainsed into special/general hierachies\n\t- acotrs can be specialisations of another actor\n\t- same for use cases\n\t- mutually exclusive\n\t- similar to inheritance\n\n![](https://i.imgur.com/cw21m6L.png)\n\n### 2.5 Dependency\n - occur between use cases\n\t - one case extends the behaviour of another\n\t - one case includes the behabiour of another\n\t - one case requires the behaviour of another\n - read in direction of arrow\n - indicate opportunities for reuse of functionality\n\n![](https://i.imgur.com/Liv9gan.png)\n\n#### 2.5.1 Extends dependency\n- use cases can have optional, subordinate tasks\n- useful with specialised actors\n\n![](https://i.imgur.com/f2CNebR.png)\n\n#### 2.5.2 Includes dependency\n- use cases that have mandatory, subordinate tasks\n- does not indicate sequence, only that they must happen\n\n![](https://i.imgur.com/8exIQtK.png)\n\n#### 2.5.3 Requires dependency\n- mandatory, _independent_ tasks, that must be completed first\n- forces sequence\n- use sparingly\n\n![](https://i.imgur.com/ZjAnIry.png)\n\n## 3 development of use case diagrams\norganise related use case diagrams into use case model\n- have have multiple levels of detail\n- group related diagrams into packages\n\n### 3.1 example methods\n- user goal technique ⇒ simple\n- event decompositition technique ⇒ more comprehensive\n\n### 3.2 top down\nidentify actors ⇒ identify use cases ⇒ detail use cases\n\t- who will enter and/or recience information\n\t- what other systems will interact with the system\n- prioritise use cases\n- further develop use case, starting with highest priority\n- structure overall use case model\n\n\u003e **avoid specifying the sequence**\n\n### 3.3 bottom up\ncreate scenario ⇒ generalise scenario ⇒ organise use case model\n\n## 4 Examples\n![](https://i.imgur.com/ZCgEN9I.png)\n![](https://i.imgur.com/LuOYfhy.png)\n![](https://i.imgur.com/1ZOgZR9.png)\n![](https://i.imgur.com/Y9E8ao2.png)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/user-experience":{"title":"user-experience","content":"\n\u003e \"encompasses all aspects of the end users interaction with the company, its services, and its products\" - Jakob Nielsen and Don Normann\n\nMarketing, branding, etc.\n\n![](https://i.imgur.com/oA6p1ZH.png)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/user-freedom-and-control":{"title":"user-freedom-and-control","content":"\nwant to give the user the feeling they can freely explore the app\nand the freedomto control it\n\n- general flow\n- undo/redo\n\ne.g., ![](https://i.imgur.com/zF5LDVx.png)\ne.g., ![](https://i.imgur.com/eqfs1D6.png)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/version-control-systems":{"title":"version-control-systems","content":"\nVCSs (version control systems) Are systems to keep track of changes to a set of files\nE.g., [[git]]\n\n## 0.1 Goals\n- allow collaboration\n- track changes\n- restoring previous versions\n- finding out origins of issues\n- backups\n- not restrict workflow\n\n## 0.2 Terms\n[[cheatsheets/git-cheat-sheet]]\n\n## 0.3 Discipline\n- Pull/Push Regularly\n- Use topic/features branches to keep main clean\n- Dont use -f\n\n## 0.4 Types\n### 0.4.1 Centralised VCS\n- Data is stored in one single central location\n- Access is remote\n- Checkout can block other devs\n\n```mermaid\n\tgraph TD\n\tsubgraph Centralised Repo\n\t\tBoris-. commit .-\u003eR((Repository))-- checkout --\u003eBoris\n\t\tR-- checkout --\u003eDoris-. commmit .-\u003eR\n\t\tR-- checkout --\u003eDennis-. commmit .-\u003eR\n\tend\n```\n\n### 0.4.2 Distributed VCS\n\n![](https://i.imgur.com/IVXAaFF.png)\n\n- Data is stored on every access point\n- Good\n\t- more robust -\u003e each dev has a backup\n\t- Don't need internet\n- Bad\n\t- Hard to keep track of \"main\" files\n\n### 0.4.3 Distributed + Centralised\n- Main files are stored on central repo\n- Each user also has their own copy locally\n\n![](https://i.imgur.com/BxC8Tiq.png)\n\n## 0.5 Sensitive information\n- Passwords and other credentials among other things\n- Data should be stored as encrypted blobs\n\t- [BlackBox](https://github.com/StackExchange/blackbox)\n\n## 0.6 Forking\n- Cloning into a new remote repo in your account\n- Allows community to contribute to projects without giving them write access to the original repo\n- Process\n\t- Create a fork of a project\n\t- Make Changes\n\t- Pull request to merge fork back into project\n\t- Admins of project can acccept modify or reject pull request\n\t\n## 0.7 software dev needs file wrangling\nmany copies of a project's source code files needed:\n\n- facilitating different developers private code experiments\n- working on fixing bugs in code\n- developing new features\n- reviewing code changes\n- managing releases of sofware products\n\t- using [[git]]\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/video-prototyping":{"title":"video-prototyping","content":"\n## 1 benefits\n- cheap and fast\n- great communication\n- can serve as spec for devs\n- ties interface design to tasks\n\n## 2 fidelity\nlow-fi 2-5min brainstorm\nmid-fi 1-4 paper prtotypes video\nhi-fi slick +fancy for investors/management\n\n## 3 shows\n- like a storyboard, the whole tasks\n\t- motivvationa and success\n- draw on tasks you've observed\n- illustrate importand tasks\n- help scope minimum viable poduct\n- forces you to make design decisions in a new way\n\n## 4 steps\n- outline (maybe use storyboards)\n- fin to extemporize\n- equiment\n\t- a camera (not fancy needed)\n\t- people\n\t- realistic location\n- focus on the message more than production values\n\n## 5 considerations\n- silent(with title cards) or with audio\n\t- audio can be finicky\n- interface can be anything\n\t- mockups, paper prototypes, code\n- can show success and failure of interfaces an failure\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/virtual-machines":{"title":"virtual-machines","content":"\nlink: https://www.youtube.com/watch?v=wX75Z-4MEoM\n\n\n# What is a virtual Machine\nA computer inside a computer. A computer contains hardware, cpu, ram , storage, etc. To use it we must install an OS. You think that to use another OS, you need another computer. But you can actually but this \"computer\" inside your existing computer.  This is done using a hyper visor\n\n# What is a Hypervisor\nThis is a fancy word for an application you install. A good one to use is called virtualbox. The job of the hypervisor is to control computers inside you computers. These virtual computers \"think\" they are real computers.\n\n## Type 1\nInstalled on the hardware. e.g., VMware. Can be installed on any computer. Typically used in companies on large servers. \n\n## Type 2\nInstalled on a \"host OS\". Vitual machines use \"guest\" OSs.\n\n# Why would you want a hyper visor\n- safe and secure for learning hacking\n- to learn different operating systems\n- to try breaking stuff\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/visual-design":{"title":"visual-design","content":"\ncombine text and graphics. how to represent?\n\n- whitespace for grouping\n- size contrasts for heiarchy\n- variable scale and weight\n- colors\n\n\nthree goals\n- guide\n- pace\n- message\n\nThree tools\n- [typography](notes/typography.md)\n- [layout](notes/layout.md)\n- [color](notes/color.md)\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/visual-design-video":{"title":"visual-design-video","content":"\nwhitespace conveys grouping\n\nsize contrasts indicate heirarchy\n\ntry to make informatio that matters conme through clearly\n\n- guide - convery structure, relative importanct relatiosnhps\n- pace - draw people in, help orient, provide hooks to dive deep\n- mesage - express meaning and style, breathe life into the content.\n\nThree basic tools\n- typography\n- layout\n- colour\n\n\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/voltaire":{"title":"voltaire","content":"\n# Superstition\n[040-superstition](notes/040-superstition.md)\n\nRejected Religion of his time. Believed in cosmological god. \n\n\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/what-are-uml-diagrams":{"title":"what-are-uml-diagrams","content":"\nA standard set of constructs and notation defined by the object management group for creating [models](notes/models.md)\n\n**specify what not how**\n\n- activity diagrams\n\t- high level for business prcesses workflows\n\t- low level for dtailed business logicP\n- advantages\n\t-  describe workflows\n\t- specify relative processing rder of activites\n\t- simple\n\t- can be shown to stakeholders for checking and confirmation\n\nenables implementation-independent specification of:\n- user/system interactions\n- partitioning of responsibility\n- integration with larger or existing systems\n- data flow and dependency\n- order of operations (algorithms and processes)\n- concurrent operations\n\n## 1 why is is useful\n- helps develop efficient effective correct designs\n- better communication with project stakeholders\n- gives a big picture view of the project system\n- independent of specific programming languages or development processes\n- de facto standard for modelling OO systems\n\n## 2 what it is not\n- visual modelling software\n- a programming languages\n- a software development process, method, or methodology\n\n## 3 Types of diagram\n### 3.1 structural\n\n![](https://i.imgur.com/zS15EFj.png#invert)\n\n### 3.2 behavioural\n\n![](https://i.imgur.com/4lj2QIt.png#invert)\n\n### 3.3 Linked diagrams\neach digram type models a dfiferenct aspect of the system\nmany of the diagrams link to each other\n- e.g., use case, sequence, activity\n- e.g., object, communication\n\ne.g.,\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null},"/notes/wizard-of-oz":{"title":"wizard-of-oz","content":"\n\nmaking interactive app quickly with minimal code\n\nsimulate interactive behaviour with human operators\n\n- make interactive app without much code\n\t- front end interface\n\t- remote wizard controls user interface\n\t- makes sense with is faster/cheaper/easier than making the real thing\n- get feedback from users people\n\t- hi-fi users think its more real\n\t- low-fi: more license to suggest changes\n\n## 1 making wizard protoypes\n- find scenarios to protoypes\n- create UI skeleton\n- develop hooks for wizard input\n- decide where and how the wizard will provide input\n\t- remember not to fake stuff that it not feasible in real life\n- rehearse wizard rile with colleague\n\n## 2 running wizard protoypes\n- practivce with friend\n- recruit users\n\n- two roles:\n\t- facilitator ⇒ pprovides tasks and takes notes\n\t- wizard ⇒ operaties interface\n\n- user feedback\n\t- think aloud\n\t- retrospective\n\t- heuristic evaluation\n\n- debrief users\n\n\n## 3 used throughout development\nuser can do less and less and the prototyp comes closer to realisation\n\n## 4 advatages\n- fast\n- variable\n- more real than papar prototypes\n- finds bugs and pronlems with design\n- places user at center\n- can envision challenging to built application\n- ability to look foward and \"use\" tech that isn't created yet\n\n\n## 5 Disadvatages\n- simulations may misrepresent otherwire imperfect tech\n- mya simulate techs that not not exist (and mnay never)\n- require training and can be inconsistent\n- playing the wizard can be exhausting\n- some features are difficult to simulate\n- may not be appropriate\n","lastmodified":"2022-07-27T23:05:09.098085873Z","tags":null}}