{"/":{"title":"Notes","content":"\n- [Uni Notes](notes/uni-notes.md)\n- [Blockchain Project](notes/veracity.md)","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/.trash/Test":{"title":"","content":"","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/.trash/Untitled":{"title":"","content":"","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/CIP/CIP-Documentation":{"title":"Untitled\"","content":"\n# File Structure\n\n.\n└── 01 Definition\n    ├── Animation\n    ├── Assets\n    │   ├── Audio\n    │   ├── Audio_Translate\n    │   └── PDF\n    ├── Output Files\n    ├── Output_Translate\n    ├── Premiere\n    ├── Story Files\n    └── Story Files_Translate\n\t\t\n\t\t\t\nAnimation: Contains the After Effects files for Each scene. Folder ending with `_translation` include text that needs to be translated using\nAssets/Audio: Contains the English version of the audio for the module\nAssets/Audio_Translate: Contains the Translated versions of the audio for the module\nAssets/PDF: Contains the translated scripts as PDF and .docx\nOutput Files: Contains the English MP4 video for each scene in the module\nOutput_Translate: Contains the translated MP4 videos for each scene in the module for each of the languages\nPremiere: Contains the Adobe Premiere file for the module and relevant automatically created Adobe folders. The Archive subfolder contains old versions of this file\nStory Files: Contains the English versions of the Storyline file\nStory Files_Translate: Contains the Storyline files for each language. There is a folder for each language. Each folder has the `.story` file and a another folder containing the subtitle file and the intro, outro, and main video files.\n\n\n# Translation Process\n\nScript Translate\n\nAnimation\n\nVoice\n\nPremiere\n\nStoryfile\n\nReview\n\nFixes\n\n- recieve translated scripts\n- input sentences into voxcoda\n- translate animations\n- when translated voice is recieved edit together with video in premiere\n- in storyline\n\t- for each new language create a template\n\t- for each new module\n\t\t- update headings\n\t\t- create quiz (text and voice)\n\t\t- add videos\n\t\t- add subtitles to main video\n\t\t- add script pdf to resources\n\t\t- ","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/Chocolate-sauce":{"title":"","content":"Tbsp butter\nTbsp cocoa\nMelt\n\nAdd water/milk\nOptional sugar\n\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/Shopping":{"title":"","content":"Indian\nPork chops\nPork noodles\n\nRice\nMilk\nChips\nTomatoes Tim plus fresh\nMushroom\n\n\nSun, venison pasta\nMon chops\nTue nachos\nWed pork noodle\nThur sausages\nFri curry\n\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/cheatsheets/bash-tricks":{"title":"","content":"#cheatsheet \n\n**Busy waiting\n\n```\nwhile sleep 0.5; do\n\t//do something\ndone\n```\n\n\n\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/cheatsheets/git-cheat-sheet":{"title":"git-cheat-sheet","content":"\n## 1 Commands\n- Clone -\u003e create local copy of remote repo\n- Commit -\u003e save changes to local repo\n\t- Packages logically related collection of changes and save the permanently is repos history\n\t- Each commit should address single well defined task\n\t- Commits should be small and regular\n\t-  Should contain a brief, informative, message\n\t\t- one line -\u003e \u003c50 (commit needing more than this are likely too large)\n\t\t- multi line -\u003e \u003c72\n\t\t- well defined, shared terminology\n\t\t- consider what other devs need to know\n- Stash -\u003e temporarily store uncommited changes\n- Push -\u003e Upload changes from local repo to remote\n- Pull -\u003e Download and merge changes from remote repo into local repo (fetch + merge)\n- Merge -\u003e Merge changes from one brach into another\n\t- merge when:\n\t\t- pulling changes from remote into your repo\n\t\t- merging from branch into main codebase\n\t- Can merge any branch into any other branch\n\t- good idea to regularly rebase specialised persistent branches to keep them in sync with the more general main codebase\n\t- rebase topic branches before merging into main\n\t\t- helps to deal with merge conflicts\n\t\t- only branch is broken if you mess up\n\t\t- can test for breakage before merging to main \n\t- Merging is usually automatic\n\t\t- sometimes merge algorithm can't resolve conflicting changes to the same code\n\t\t\t- e.g., two devs  change the same method at the same time\n\t\t\t- conflict must then be manually resolved\n\t\t- All VCS will check that your repo is up to date before pushing, and force you to push if not \n- Tag -\u003e name a particular commit e.g., for a release\n\n## 2 Terms\n- Head -\u003e most recent commit on Current branch\n- [[branch]] -\u003e Split current dev path into two to work on e.g., a bug or a feature\n- Repository -\u003e Where the codebase/file are stored\n\t- Contains meta-data about the previous vesions etc\n- Merge commit -\u003e commits which are derived from multiple parent commits\n- Git tag -\u003e e.g., v 1.0\n\t- cannot be move by commits\n\t- record metadata","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/cheatsheets/latex-cheat-sheet":{"title":"latex-cheat-sheet","content":"\nhttps://wch.github.io/latexsheet/latexsheet-0.png\nhttps://wch.github.io/latexsheet/latexsheet-1.png\n\n\n$\\theta$\n\n$\\leq \\geq$\n\n\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/cheatsheets/puml-cheat-sheet":{"title":"puml-cheat-sheet","content":"\n- [activity diagram docs](https://plantuml.com/activity-diagram-beta)\n- [use case diagram docs](https://plantuml.com/use-case-diagram)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/1":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-31\n\u003e Never deny a diagnosis but do deny the negative verdict that may go with it.\n\u003e — \u003ccite\u003eNorman Cousins\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| 203 writeup              | 2hr    |        |\n| 201 assignment           | 2hr    |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## 1 Todo's\n- [x] 13:00 Info201 Lecture\n\n## 2 Lecture/Labs\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [x] 16:00 Info201 Lecture\n\n## 3 Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 1hr Question 1\n\t- [ ] 45min Question 2\n\t- [ ] 30min Question 3\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [ ] 120mins write up\n\t\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n- [ ] save open file state\n\n## 4 Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n## 5 Timetable\n![](https://i.imgur.com/86a1hDy.png)\n\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n\n\n\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-07":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n#### TODO\n- [x] mark off cosc202 lab\n- [x] cosc 202 lecture\n- [x] cosc 201 lab\n- [x] 201 lecture 3\n\n\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-08":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n#### TODO\n- [x] cosc 201 lecture\n- [x] info 203 lecture\n- [ ] info 201 lecture\n- [x] 202 lab (help with grep for {)\n- [x] stocks notes\n- [x] review\n- [x] look at flats\n- [x] fixes for polish 2,4,5,\n- [x] fixes for polish 6 \n- [x] review 201 lecture notes\n\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-09":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n#### TODO\n- [x] 203 Lecture\n- [x] module 08 swedish fix\n- [x] polishes fixes 7 8 10 14 \n- [x] 203 tutorial\n- [x] 201 tutorial\n- [ ] copy key\n- [x] post long point vids / send to leeto\n- [x] start cosc201 lab03\n\n\n\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-10":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n#### TODO\n- [ ] copy key\n- [x] 3 examples for 203 assignment\n- [x] polish fixes\n- [x] 202 lecture\n- [x] cosc 201 lab\n- [x] info 201 lecture\n- [x] get out meat\n- [x] refactor 201 notes\n- [x] cosc 201 lecture\n\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-11":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-11\n## Todo's\n- [ ] work on norwegian modules or polish fixes\n- [x] 30 min typing\n- [x] 202 lab\n- [x] info 201 lecture\n- [x] info 201 lab\n\n## Stocks\n\n\n## Daily metrics\n- typing time: 27\n- typing avg: 57\n\n- work time: 0\n\n- [x] exercise\n- [x] surf\n- [x] leave house\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n\n![[ ]]","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-12":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-12\n## Todo's\n- [ ] ...\n## Stocks\nbrief notes\n\n## Daily metrics\n- typing time: \n- typing avg: \n\n- work time: \n\n- [x] exercise\n- [x] surf\n- [x] leave house\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-14":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-14\n## Todo's\n- [x] review notes from saturday sunday and toaday\n- [x] 202 lecture at 11:00\n- [x] 201 lab\n- [x] upload module 03 and fix 08\n- [x] 4th example for 203 What is Usability\n- [x] put hdmi cable back\n- [ ] add git usage note\n- [x] start 201 assignment 1\n- [ ] watch 203 videos 1-2\n\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-15":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-15\n## Todo's\n- [x] refactor git notes\n- [ ] watch 203 videos\n- [x] call dad\n- [ ] spending review\n- [x] 203 lecture\n- [x] 201 lecture\n- [x] info 201 lecture\n- [x] 202 lab\n- [ ] norwegian modules\n- [x] review notes for today\n- [x] refactor 203 notes\n- [x] 201 lab part 1, 2\n- [ ] review dropping info 201/202\n\n# Daily Laws\n## Mind\n\u003e 'Cause all that's gonna do really is accelerate the anxieties that I wish I could alleviate\n\u003e I'm ready to lose my mind, but instead I use my mind\n\n## Body\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#:)\n![[ ]]","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-16":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-16\n## Reminders\n- [ ] investigate python position \n- [ ] python ai weekly review\n\n## Todo's\n- [x] Norwegian 4\n- [x] Lecture 203\n- [x] tut 203\n- [x] tut 201\n- [x] review notes\n- [x] review dropping 201\n- [x] spending review\n- [x] refactor 203 notes\n- [x] learn about heading links\n- [ ] 203 assignment\n\n| task                      | e time | r time |\n| --------------------------| ------ | -------|\n| no   4                    | 2hrs   | 1hr40  |\n| review notes              | 0.5hr  | 28mins |\n| review 201                | 0.5hr  | 11mins |\n| spending review           | 0.5hr  | 1.5hrs |\n| refactor 203 notes        | 0.5hr  | 2hrs   |\n| learn about heading links | 15min  | 3mins  |\n\n# Daily Laws\n## Mind\n\u003e 'Cause all that's gonna do really is accelerate the anxieties that I wish I could alleviate\n\u003e I'm ready to lose my mind, but instead I use my mind\n\n## Body\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-17":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-17i\n## Reminders\n- [x] investigate python position \n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Todos\n- [ ] 203 assignment\n- [ ] 201 assignment\n- [x] typing\n- [ ] norwegian 05, 06\n- [x] lecture 202\n- [x] lab cosc 201\n- [x] lecture info 201 \n- [ ] info201 lecture notes use case diagrams\n- [x] review notes\n \n| task                     | e time | r time |\n| -------------------------| ------ | -------|\n| norwegian 05 04          | 2.5hr  |        |\n| typing                   | 0.5hr  | 0.5hr  |\n| 203 ass                  | 2hr    | 4hr    |\n| cosc 201 ass             | 1hr    |        |\n| lecture 202              | 1hr    | 1hr    |\n| lab cosc 201             | 1hr    | 0mins  |\n| lecture info 201         | 1hr    | 1hr    |\n| python job               | 0.5hr  | 10mins |\n| review notes             | 0.5hr  | 5mins  |\n\n# Daily Laws\n## Mind\n\u003e 'Cause all that's gonna do really is accelerate the anxieties that I wish I could alleviate\n\u003e I'm ready to lose my mind, but instead I use my mind\n\n## Body\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-18":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-18i\n## Reminders\n- [ ] python ai weekly review\n- [ ] my own password manager\n- [ ] \n\n## Todo's\n- [ ] 203 assignment\n- [ ] 201 assignment\n- [ ] norwegian 05, 06\n- [ ] info201 lecture notes use case diagrams\n- [x] 202 brightness\n- [ ] 202 add comments \n\n| task                     | e time | r time |\n| -------------------------| ------ | -------|\n| 202 brightness           | 2hr    | 2hr    |\n| 202 add comments         | 15min  |        |\n| norwegian 4 5 6 7        | 4hr    |        |\n| 201 lecture notes        | 1hr    |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n\n# Daily Laws\n## Mind\n\u003e 'Cause all that's gonna do really is accelerate the anxieties that I wish I could alleviate\n\u003e I'm ready to lose my mind, but instead I use my mind\n\n## Body\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-19":{"title":"","content":"[[notes/daily-notes]]\n\n---\n↑\n\n# 2022-03-19\n## Reminders\n- [ ] \n## Todo's\n- [ ] \n\n| task                     | e time | r time |\n| -------------------------| ------ | -------|\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n\n# Daily Laws\n## Mind\n\u003e 'Cause all that's gonna do really is accelerate the anxieties that I wish I could alleviate\n\u003e I'm ready to lose my mind, but instead I use my mind\n\n## Body\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]\n- [ ] python ai weekly review\n- [ ] my own password manager\n- [ ] \n- [ ] 203 assignment\n- [ ] 201 assignment\n- [ ] norwegian 05, 06\n- [ ] info201 lecture notes use case diagrams\n- [ ] 202 add comments ","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-20":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-20i\n## Reminders\n- [ ] \n## Todo's\n- [ ] \n\n| task                     | e time | r time |\n| -------------------------| ------ | -------|\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n\n# Daily Laws\n## Mind\n\u003e 'Cause all that's gonna do really is accelerate the anxieties that I wish I could alleviate\n\u003e I'm ready to lose my mind, but instead I use my mind\n\n## Body\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\ninfo 201 [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket:%5B%5B%2FLabs%2FLab%2002%2FLab%202%3A%20Git%20and%20GitBucket%5D%5D)\n![[ ]]\n- [ ] \n- [ ] \n- [ ] python ai weekly review\n- [ ] my own password manager\n- [ ] \n- [ ] 203 assignment\n- [ ] 201 assignment\n- [ ] norwegian 05, 06\n- [ ] info201 lecture notes use case diagrams\n- [ ] 202 add comments ","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-21":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-21\n| task                     | e time | r time |\n| -------------------------| ------ | -------|\n| info 201 assignment      | 1hr    |        |\n| info 201 lab             | 1.5hr  | 1hr    |\n| cosc 201 assignment      | 1hr    | 3hr    |\n|                          |        |        |\n|                          |        |        |\n| norwegian 12             | 1.25hr | 1.5hr  |\n|                          |        |        |\n|                          |        |        |\n\n\n## Assignments\n- [ ] 5pm 21st March ⇒ 201 assignment\n- [ ] 5pm 1st April      ⇒ info 201 assigment\n\n### Cosc 202 tasks\n\n## Todo's\n- [ ] info 201 lab\n- [ ] \n\n## Lectures/labs\n- [x] 202 lecture @ 11:00\n- [x] cosc 201 lab @ 12:00\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Links\ncosc 202 [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\ninfo 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n![[ ]]\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-22":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-22\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| Lectures and labs        | 5hr    | 3hr    |               \n| Norwegian 13 14          | 2.5hr  | 3hr    |\n| Info 201 Assignment      | 1.5hr  | 0hr    |\n| Review notes             | 1hr    | 1hr    |\n\n## Assignments\n- [ ] 5pm 1st April            ⇒ cosc 201 assignment\n\t- [ ] 60mins write up\n- [ ] 5pm 25th March      ⇒ info 201 milestone 1\n\t- [ ] 30mins process transcript\n\t- [ ] 30mins summary and scope\n\t- [ ] 120mins functional requirements\n\t- [ ] 30mins non functional requirements\n\t- [ ] 15mins glossary\n\t- [ ] 30mins follow-up checklist\n- [ ] 5pm 1st April            ⇒ info 203 assignment 2\n\t- [ ] Find group\n\t- [ ] 30mins heuristic evaulations\n\t- [ ] 120mins write up\n\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n## Todo's\n- [ ] info 201 lab\n- [x] Norwegian 13 14\n- [x] review notes for today\n\n## Lecture/Labs\n- [x] 10:00 Info203 Lecture\n- [x] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [x] 14:00 Cosc202 Lab\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-23":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-23\n\u003e But man is not made for defeat. A man can be destroyed but not defeated.\n\u003e — \u003ccite\u003eErnest Hemingway\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| norwegian 17 16          | 2hr    | 1hr    |\n| info 201  transc         | 30m    | 1.5hr  |\n| info 201 summary and sc  | 30m    | 1hr15  |\n| info 201 functional reqs | 1.5hr  | -      |\n| review notes             | 15min  |  15m   |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## Todo's\n- [x] info 201 lab 3pm\n- [x] review notes\n\n## Lecture/Labs\n- [x] 13:00 Info201 Lecture\n- [x] 10:00 Info203 Lecture\n- [x] 14:00 Info203 Tutorial\n- [-] 16:00 Cosc201 Tutorial\n\n## Assignments\n- [ ] 5pm 1st April            ⇒ cosc 201 assignment\n\t- [ ] 60mins write up\n- [ ] 5pm 25th March      ⇒ info 201 milestone 1\n\t- [x] 30mins process transcript\n\t- [x] 30mins summary and scope\n\t- [ ] 120mins functional requirements\n\t- [ ] 30mins non functional requirements\n\t- [ ] 15mins glossary\n\t- [ ] 30mins follow-up checklist\n- [ ] 5pm 1st April            ⇒ info 203 assignment 2\n\t- [ ] Find group\n\t- [ ] 30mins heuristic evaulations\n\t- [ ] 120mins write up\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n- [ ] \n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-24":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-24\n\u003e When deeds and words are in accord, the whole world is transformed.\n\u003e — \u003ccite\u003eZhuang Zhou\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| Norwegian 15 01          | 2hr    |        |\n| Functional reqs          | 3hr    |        |\n| Non Functional reqs      | 2hr    |        |\n| Review Notes             | 30m    | 1hr    |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## Todo's\n- [ ] \n\n## Lecture/Labs\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 16:00 Info201 Lecture\n\n## Assignments\n- [ ] 5pm 1st April            ⇒ cosc 201 assignment\n\t- [ ] 60mins write up\n- [ ] 5pm 25th March      ⇒ info 201 milestone 1\n\t- [ ] 120mins functional requirements\n\t- [ ] 30mins non functional requirements\n\t- [ ] 15mins glossary\n\t- [ ] 30mins follow-up checklist\n- [ ] 5pm 1st April            ⇒ info 203 assignment 2\n\t- [ ] Find group\n\t- [ ] 30mins heuristic evaulations\n\t- [ ] 120mins write up\n\t\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-25":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-25\n\u003e He who has imagination without learning has wings but no feet. — \u003ccite\u003eJoseph Joubert\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| Review notes             | 15m    | 15min  |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n\n## 1 Todo's\n- [ ] 11:00 Cosc202 Lecture (debugging)\n- [x] 12:00 Cosc201 Lab\n- [ ] 16:00 Info201 Lecture (advanced data modelling - patterns)\n\n## 2 Lecture/Labs\n- [x] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture (mergesort 2)\n- [ ] 12:00 Info201 Lab (use case diagrams)\n\n## 3 Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 60mins write up\n- [x] 5pm 25th March      ⇒ info 201 milestone 1\n\t- [x] 120mins functional requirements\n\t- [x] 30mins non functional requirements\n\t- [x] 15mins glossary\n\t- [x] 30mins follow-up checklist\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [ ] Find group\n\t- [ ] 30mins heuristic evaulations\n\t- [ ] 120mins write up\n\t\n### 3.1 Cosc 202 tasks\n- [ ] save open file state\n- https://trello.com/b/Fk7lAfEG/andie\n\n## 4 Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-27":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-27\n\u003e Be glad of life because it gives you the chance to love, to work, to play, and to look up at the stars.\n\u003e — \u003ccite\u003eHenry van Dyke Jr.\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## Todo's\n- [ ] 11:00 Cosc202 Lecture (debugging)\n- [ ] 16:00 Info201 Lecture (advanced data modelling - patterns)\n- [ ] 11:00 Cosc201 Lecture (mergesort 2)\n- [ ] 12:00 Info201 Lab (use case diagrams)\n\n## Lecture/Labs\n\n## Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 60mins write up\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [ ] Find group\n\t- [ ] 30mins heuristic evaulations\n\t- [ ] 120mins write up\n\t\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n- [ ] \n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-28":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-28\n\u003e Everything that happens as it should, and if you observe carefully, you will find this to be so.\n\u003e — \u003ccite\u003eMarcus Aurelius\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| Past Lectures            | 4hr    |        |\n| Today's lectures         | 2hr    | 2:20   |\n| Cosc 201 assignment      | 1hr    | 1hr    |\n| Info 203 assignment      | 1hr    |        |\n| Review notes             | 30min  | 15min  |\n| Norwegian 1 15           | 2hr    | 1h14   |\n| 202 work                 | 1hr    | 1hr    |\n## Todo's\n- [x] andie work\n- [ ] 11:00 Cosc202 Lecture (debugging)\n- [x] 16:00 Info201 Lecture (advanced data modelling - patterns)\n- [ ] 11:00 Cosc201 Lecture (mergesort 2)\n- [ ] 12:00 Info201 Lab (use case diagrams)\n\n## Lecture/Labs\n- [x] 11:00 Cosc202 Lecture\n- [x] 12:00 Cosc201 lab\n\n## Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 1hr Question 1\n\t- [ ] 45min Question 2\n\t- [ ] 30min Question 3\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [x] Find group\n\t- [ ] 1hr heuristic evaluations\n\t- [ ] 120mins write up\n- [ ] save open file state\n\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-29":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-29\n\u003e Be as you wish to seem.\n\u003e — \u003ccite\u003eSocrates\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| past lectures            | 2h     |        |\n| Norwegian 15             | 1.5h   |        |\n| todays lectures          | 3hr    |        |\n| heruistic evals          | 3hr    |        |\n| review notes             | 5min   | 5min   |\n|                          |        |        |\n\n## Todo's\n- [x] 11:00 Cosc202 Lecture (debugging)\n- [x] 11:00 Cosc201 Lecture (mergesort 2)\n- [ ] 12:00 Info201 Lab (use case diagrams)\n\n## Lecture/Labs\n- [x] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [x] 14:00 Cosc202 Lab\n\n## Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 1hr Question 1\n\t- [ ] 45min Question 2\n\t- [ ] 30min Question 3\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [ ] 3hr heuristic evaluations\n\t\t- [ ] ohyay\n\t\t- [x] skype\n\t\t- [ ] discord\n\t- [ ] 120mins write up\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-30":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-30\n\u003e Get busy living or get busy dying.\n\u003e — \u003ccite\u003eStephen King\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| norwegian 15             | 2hr    | 2hr    |\n| review notes             |  5min  |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## Todo's\n- [ ] 12:00 Info201 Lab (use case diagrams)\n- [x] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n\n## Lecture/Labs\n- [x] 10:00 Info203 Lecture\n- [x] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n\n## Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 1hr Question 1\n\t- [ ] 45min Question 2\n\t- [ ] 30min Question 3\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [x] 3hr heuristic evaluations\n\t\t- [x] ohyay\n\t\t- [x] discord\n\t- [ ] 120mins write up\n\t\n### Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n\n## Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## Timetable\n![[ ]]\n\n## Links\n### cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-03-31":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-03-31\n\u003e If you think you can, you can. And if you think you can't, you're right.\n\u003e — \u003ccite\u003eHenry Ford\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## 1 Todo's\n- [x] 13:00 Info201 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n\n## 2 Lecture/Labs\n- [x] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [x] 16:00 Info201 Lecture\n\n## 3 Assignments\n- [ ] 5pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 1hr Question 1\n\t- [ ] 45min Question 2\n\t- [ ] 30min Question 3\n- [ ] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [ ] 120mins write up\n\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n\n## 4 Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-01":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-01\n\u003e I will give you a definition of a proud man: he is a man who has neither vanity nor wisdom one filled with hatreds cannot be vain, neither can he be wise.\n\u003e — \u003ccite\u003eJohn Keats\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n| 203 Assignment           | 3hr    | 3hr    |\n| review notes             | 30min  | 30min  |\n| 201 Assignment           | 3hr    |        |\n| Swedish fixes            | ?      |        |\n| 202 Work                 | 1hr    |        |\n\n## 1 Todo's\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 12:00 Cosc201 Lab\n\n## 2 Lecture/Labs\n- [r] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n## 3 Assignments\n- [ ] 12pm 1st April       ⇒ cosc 201 assignment\n\t- [ ] 1hr Question 1\n\t- [ ] 45min Question 2\n\t- [ ] 30min Question 3\n- [x] 5pm 1st April       ⇒ info 203 assignment 2\n\t- [x] 120mins write up\n\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n\n## 4 Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-02":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-02\n\u003e We all live with the objective of being happy; our lives are all different and yet the same.\n\u003e — \u003ccite\u003eAnne Frank\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## 1 Todo's\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 12:00 Cosc201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n## 2 Lecture/Labs\n\n\n## 3 Assignments\n\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n\n## 4 Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-03":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-03\n\u003e I'm not interested in age. People who tell me their age are silly. You're as old as you feel.\n\u003e — \u003ccite\u003eElizabeth Arden\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## 1 Todo's\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 12:00 Cosc201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n## 2 Lecture/Labs\n\n\n## 3 Assignments\n\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n- [ ] save open file state\n\n## 4 Projects\n- [ ] python ai weekly review\n- [ ] my own password manager\n\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n\n\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-04":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-04\n\u003e If you light a lamp for somebody, it will also brighten your path.\n\u003e — \u003ccite\u003eBuddha\u003c/cite\u003e\n\n| task                     | e time | r time |\n| ------------------------ | ------ | ------ |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n|                          |        |        |\n## 1 Todo's\n\n## 2 Lecture/Labs\n- [x] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n## 3 Assignments\n\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n\n## 4 Projects\n- continuously integrate obsidian notes to website\n\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 12:00 Cosc201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n- [ ] save open file state\n- [ ] python ai weekly review\n- [ ] my own password manager","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-05":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-05\n\u003e If you smile when no one else is around, you really mean it.\n\u003e — \u003ccite\u003eAndy Rooney\u003c/cite\u003e\n\n| # | task                                        | P | A | e time | r time |\n|---|---------------------------------------------|---|---|--------|--------|\n| 2 | 201 Lecture                                 | 2 | 2 |        |        |\n| 3 | One no fix                                  | 1 |   |        |        |\n| 1 | Cosc 201 Lab                                | 3 |   |        |        |\n|   |                                             |   |   |        |        |\n|   |                                             |   |   |        |        |\n|   |                                             |   |   |        |        |\n|   |                                             |   |   |        |        |\n|   |                                             |   |   |        |        |\n\n\u003e SCORE: 33%\n\n## 1 Todos\n- [ ] 12:00 Cosc201 lab\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n## 2 Lecture/Labs\n- [x] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [x] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## 3 Assignments\n\n### 3.1 Cosc 202 tasks\n- https://trello.com/b/Fk7lAfEG/andie\n\n## 4 Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## 5 Timetable\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-06":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-06\nRaw Power - The Stooges - spotify:album:6mxbG8KrOTZIxlP4gzaliM\n\n| # | task                    | P | A | e time | r time |\n|---| ------------------------|---|---|--------| ------ |\n| 1 | one norwegian fix       |   |   |        |        |\n| 2 | 1hr 202 work            |  |   |        |        |\n| 3 | decide about 203 ass    |  |   |        |        |\n| 4 |                         |  |   |        |        |\n| 5 |                         |  |   |        |        |\n| 6 |                         |  |   |        |        |\n| 7 |                         |  |   |        |        |\n| 8 |                         |  |   |        |        |\n\n\n\u003e SCORE: \n\n## 1 Todos\n- [ ] 12:00 Cosc201 lab\n- [x] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## 2 Lecture/Labs\n- [x] 10:00 Info203 Lecture\n- [ ] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n\n## 3 Assignments\n\n## 4 Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## 5 Timetable\n![[ ]]\n\n## 6 Links\n### 6.1 cosc 202 \n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 6.2 info 201\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-07":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 1 2022-04-07\n\nScreamadelica - Primal Scream - spotify:album:3Kkocxhs4Ek537j67DFNd7\n\n## 1.1 Todos\n- [x] 12:00 Cosc201 lab\n- [ ] 12:00 Info201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [x] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n- [x] Add review meta data to new vault\n- [ ] inquire about dataview in quartz\n\n## 1.2 Lecture/Labs\n\n- [x] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [x] 16:00 Info201 Lecture\n\n## 1.3 Assignments\n\n- [ ] 203 Assignment 3\n\t- [ ] Decide individual or not\n\n## 1.4 Projects\n\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## 1.5 Links\n### 1.5.1 cosc 202\n- [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 1.5.2 info 201\n\n- [tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#\n- [Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-08":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 1 2022-04-08\n\nAutobahn - Kraftwerk - spotify:album:0DzC0tyowMi2O9QfkDRvfJ\n\n## 1.1 Todos\n- [x] Info201 Lab 05\n- [ ] info 201 lab 04\n- [ ] Cosc201 Lecture\n- [ ] Cosc201 Tutorial\n- [ ] inquire about dataview in quartz\n- [ ] Cosc201 Lab Shuffle\n- [ ] Assignment 3\n- [x] Decide individual or not\n\n## 1.2 Lecture/Labs\n\n- [x] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 06\n\n## 1.3 Assignments\n\n## 1.4 Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## 1.5 Timetable\n\n![[ ]]\n\n## 1.6 Links\n\n### 1.6.1 cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 1.6.2 info 201\n\n[tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-09":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 1 2022-04-09\n\nToys In The Attic - Aerosmith - spotify:album:36IxIOGEBAXVozDSiVs09B\n\n## 1.1 Todos\n- [x] Cosc201 Lecture 11\n- [x] Cosc201 Lecture 12\n- [x] info 201 lab 05\n- [ ] info 201 lab 05\n- [ ] 12:00 Info201 Lab 06\n- [ ] Start Assignment 3\n- [x] Cosc201 Tutorial\n- [ ] inquire about dataview in quartz\n- [x] review notes\n\n- [ ] Cosc201 Lab Shuffle\n## 1.2 Lecture/Labs\n\n\n\n## 1.3 Assignments\n- Start - keep notes\n\n## 1.4 Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## 1.5 Timetable\n\n![[ ]]\n\n## 1.6 Links\n\n### 1.6.1 cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### 1.6.2 info 201\n\n[coursework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n\n[Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-10":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-10\n\nBryter Layter - Nick Drake - spotify:album:7w9Og10Tdkh3nqrVD1D5IW\n\n## Todos\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] Cosc201 Lab Shuffle\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n\n## Lecture/Labs\n\n\n## Assignments\n\n\n## Projects\n- python ai weekly review\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n- [lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n- [coursework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-11":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-11\n\nLayla And Other Assorted Love Songs - Derek \u0026amp; The Dominos - spotify:album:5iIWnMgvSM8uEBwXKsPcXM\n\n## Todos\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [x] Cosc201 Lab Shuffle\n- [ ] change testing of contrast and brightness andie\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n\n## Lecture/Labs\n\n- [x] 11:00 Cosc202 Lecture\n- [x] 12:00 Cosc201 lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-12":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-12\n\nSynchronicity - The Police - spotify:album:28eOriEfl7IGbQDNvWIWXK\n\n## Todos\n- [ ] remote desktop for IT work\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] change testing of contrast and brightness andie\n- [x] upload 203 notes for disability services\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n\n## Lecture/Labs\n\n- [x] 10:00 Info203 Lecture\n- [x] 11:00 Cosc201 Lecture\n- [x] 13:00 Info201 Lecture\n- [x] 14:00 Cosc202 Lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-13":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-13\n\nListen Without Prejudice Vol. 1 - George Michael - spotify:album:4lGS8HxU3NYaQxfU0wx2r1\n\n## Todos\n- [ ] remote desktop for IT work\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] change testing of contrast and brightness andie\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n\n## Lecture/Labs\n\n- [x] 10:00 Info203 Lecture\n- [ ] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-14":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-14\n\nHappy Sad - Tim Buckley - spotify:album:20CYfxjKvqXkCXBhAgOE39\n\n## Todos\n- [ ] remote desktop for IT work\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] change testing of contrast and brightness andie\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n- [ ] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n\n## Lecture/Labs\n\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 16:00 Info201 Lecture\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)\n","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-15":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-15\n\nSmile - Brian Wilson - spotify:album:4Uc6YCjpfyjj02rZfg2EUv\n\n## Todos\n- [ ] remote desktop for IT work\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] change testing of contrast and brightness andie\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n- [ ] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 16:00 Info201 Lecture\n\n## Lecture/Labs\n\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-16":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-16\n\nNo Sleep 'Til Hammersmith (Live) - Mot�rhead - spotify:album:6DJEPyUk9Vqvq5Rh8HD7D8\n\n## Todos\n- [ ] remote desktop for IT work\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] change testing of contrast and brightness andie\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n- [ ] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 16:00 Info201 Lecture\n\n## Lecture/Labs\n\n\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.355075093Z","tags":null},"/daily_notes/2022-04-18":{"title":"","content":"[[notes/daily-notes]]\n\n---\n\n# 2022-04-18\n\nTonight's The Night - Neil Young - spotify:album:5FTx6W84UUU14n29QV4saY\n\n## Todos\n- [ ] remote desktop for IT work\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] change testing of contrast and brightness andie\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n- [ ] 14:00 Info203 Tutorial\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 16:00 Info201 Lecture\n\n## Lecture/Labs\n\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- bug-tracker\n\t- \n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-04-19":{"title":"","content":"[2022-04-18](daily_notes/2022-04-18) \u003c\u003c [[notes/daily-notes]] \u003e\u003e [2022-04-20](daily_notes/2022-04-20)\n\n---\n\n# 2022-04-19\n\nGiant Steps - The Boo Radleys - spotify:album:6347aGYak5Dsi0hwPMMpmj\n\n## Todos\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n- [ ] 16:00 Cosc201 Tutorial\n\n## Lecture/Labs\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-04-20":{"title":"","content":"[2022-04-19](daily_notes/2022-04-19) \u003c\u003c [[notes/daily-notes]] \u003e\u003e [2022-04-21](daily_notes/2022-04-21)\n\n---\n\n# 2022-04-20\n\nGiant Steps - The Boo Radleys - spotify:album:6347aGYak5Dsi0hwPMMpmj\n\n## Todos\n- [ ] info 201 lab 04\n- [ ] info 201 lab 06\n- [ ] work through 202 labs\n\t- [ ] 04\n\t- [ ] 05\n\t- [ ] 06\n- [ ] 16:00 Cosc201 Tutorial\n\n## Lecture/Labs\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-04-21":{"title":"","content":" t\u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-24](daily_notes/2022-04-24)\n\n---\n\n# 23-04-22\n\nJohn Barleycorn Must Die - Traffic - spotify:album:2TjodugH6rA5ZHPsWVErmw\n\n## Todos\n\n## Lecture/Labs\n\n\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-04-23":{"title":"","content":"t\u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-24](daily_notes/2022-04-24)\n\n---\n\n# 2022-04-23\n\n## Todos\n\n## Lecture/Labs\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n![[ ]]\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-04-24":{"title":"","content":"t \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-24](daily_notes/2022-04-25)\n\n---\n\n# 23-04-22\n\nJohn Barleycorn Must Die - Traffic - spotify:album:2TjodugH6rA5ZHPsWVErmw\n\n## Todos\n\n## Lecture/Labs\n\n\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Timetable\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-04-25":{"title":"","content":"[2022-04-25](daily_notes/2022-04-25) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-27](daily_notes/2022-04-27)\n\n---\n\n# 26-04-22\n\nSelected Ambient Works 85-92 - Aphex Twin - spotify:album:7aNclGRxTysfh6z0d8671k\n\n## Todos\n\n## Lecture/Labs\n\n- [ ] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-04-26":{"title":"","content":"[2022-04-24](daily_notes/2022-04-24) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-27](daily_notes/2022-04-27)\n\n---\n\n# 26-04-22\n\nSelected Ambient Works 85-92 - Aphex Twin - spotify:album:7aNclGRxTysfh6z0d8671k\n\n## Todos\n- book (or not) flights for holiday\n- watch 203 videos\n- [Plan](private/Plan.md)\n\n## Lecture/Labs\n\n- [x] 10:00 Info203 Lecture\n- [x] 11:00 Cosc201 Lecture\n- [x] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n- CI notes site\n- my own password manager\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-04-27":{"title":"","content":"[2022-04-26](daily_notes/2022-04-26) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-28](daily_notes/2022-04-28)\n\n---\n\n# 27-04-22\n\nCee-Lo Green... Is The Soul Machine - Cee Lo Green - spotify:album:0wdleLMeNmGUHChsmx9svt\n\n## Todos\n- [ ] 14:00 Cosc202 Lab\n- [ ] use 1001 albums api\n\n## Lecture/Labs\n\n- [x] 10:00 Info203 Lecture\n- [x] 14:00 Info203 Tutorial\n- [x] 16:00 Cosc201 Tutorial\n\n## Assignments\n- Mobile app\n* c201 ass\n* i201 ass\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/INFO201_Assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-04-28":{"title":"","content":"[2022-04-27](daily_notes/2022-04-27) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-29](daily_notes/2022-04-29)\n\n---\n\n# 28-04-22\n\nDr. Octagonecologyst - Dr. Octagon - spotify:album:23DJ3KNE5JXi61G31T2Kni\n\n## Todos\n- [ ] 14:00 Cosc202 Lab\n- [ ] use 1001 albums api\n\n## Lecture/Labs\n\n- [x] 11:00 Cosc202 Lecture\n- [x] 12:00 Cosc201 Lab\n- [x] 16:00 Info201 Lecture\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-04-29":{"title":"","content":"[2022-04-28](daily_notes/2022-04-28) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-04-30](daily_notes/2022-04-30)\n\n---\n\n# 29-04-22\n\nA Hard Day's Night - Beatles - spotify:album:6wCttLq0ADzkPgtRnUihLV\n\n## Todos\n- [ ] 14:00 Cosc202 Lab\n- [ ] use 1001 albums api\n\n## Lecture/Labs\n\n- [ ] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-04-30":{"title":"","content":"[2022-04-29](daily_notes/2022-04-29) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-01](daily_notes/2022-05-01)\n\n---\n\n# 30-04-22\n\namerican dream - LCD Soundsystem - spotify:album:4AF1M7bGCFL3LHCtXUUXw5\n\n## Todos\n- [ ] 14:00 Cosc202 Lab\n- [ ] use 1001 albums api\n- [ ] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n## Lecture/Labs\n\n\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-01":{"title":"","content":"[2022-05-08](daily_notes/2022-04-30) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-10](daily_notes/2022-05-02)\n\n---\n# 01-05-22\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-02":{"title":"","content":"[2022-05-01](daily_notes/2022-05-01) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-03](daily_notes/2022-05-03)\n\n---\n\n# 02-05-22\n\nWho's Next - The Who - spotify:album:5MqyhhHbT13zsloD3uHhlQ\n\n## Todos\n- [ ] use 1001 albums api\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n\n## Lecture/Labs\n\n- [x] 11:00 Cosc202 Lecture\n- [x] 12:00 Cosc201 lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-03":{"title":"","content":"[2022-05-02](daily_notes/2022-05-02) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-04](daily_notes/2022-05-04)\n\n---\n\n# 03-05-22\n\nLed Zeppelin III - Led Zeppelin - spotify:album:6P5QHz4XtxOmS5EuiGIPut\n\n## Todos\n- [ ] use 1001 albums api\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n\n## Lecture/Labs\n\n- [x] 10:00 Info203 Lecture\n- [x] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [x] 14:00 Cosc202 Lab\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-04":{"title":"","content":"[2022-05-03](daily_notes/2022-05-03) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-05](daily_notes/2022-05-05)\n\n---\n\n# 04-05-22\n\nMeat Is Murder - The Smiths - spotify:album:5DM1qCdgGt2zbknnsVn1Ca\n\n## Todos\n- [ ] use 1001 albums api\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n- [ ] 13:00 Info201 Lecture\n\n## Lecture/Labs\n\n- [x] 10:00 Info203 Lecture\n- [x] 14:00 Info203 Tutorial\n- [x] 16:00 Cosc201 Tutorial\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-05":{"title":"","content":"[2022-05-04](daily_notes/2022-05-04) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-06](daily_notes/2022-05-06)\n\n---\n\n# 05-05-22\n\nThe Notorious Byrd Brothers - The Byrds - spotify:album:5UI2X5VAmgu9xrlXDd5U7B\n\n## Todos\n- [ ] use 1001 albums api\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n- [x] 13:00 Info201 Lecture\n\n## Lecture/Labs\n\n- [x] 11:00 Cosc202 Lecture\n- [x] 12:00 Cosc201 Lab\n- [x] 12:00 Info203 Tutorial\n- [ ] 16:00 Info201 Lecture\n\n## Assignments\n- Mobile app\n\t- Brainstorming\n\n## Projects\n- python ai weekly review\n\n## Links\n\n### cosc 202\n\n[lab book](https://cosc202.cspages.otago.ac.nz/lab-book/COSC202LabBook.pdf)\n\n### info 201\n\n- [cousework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [Assignments tiddlywiki](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-06":{"title":"","content":"[2022-05-05](daily_notes/2022-05-05) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-07](daily_notes/2022-05-07)\n\n---\n# 06-05-22\n[Planet Rock: The Album - Afrika Bambaataa](spotify:album:3qX0GugLujpIodkT6r06hf)\n\n## Todos\n- [ ] use 1001 albums api\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n- [ ] 13:00 Info201 Lecture\n- [ ] 16:00 Info201 Lecture\n- [ ] info 202 api's lecture\n\n## Lecture/Labs\n- [ ] 09:00 Cosc202 Lab 7yhbn ,9 \n- [ ] 11:00 Cosc201 Lecture\n- [x] 12:00 Info201 Lab\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-07":{"title":"","content":"[2022-05-06](daily_notes/2022-05-06) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-08](daily_notes/2022-05-08)\n\n---\n# 07-05-22\nPump - Aerosmith - spotify:album:4VWobt8JHr24Gq2qUZK7DB\n\n## Todos\n- [ ] use 1001 albums api\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n- [ ] 13:00 Info201 Lecture\n- [ ] 16:00 Info201 Lecture\n- [ ] info 202 api's lecture\n- [ ] 09:00 Cosc202 Lab 7\n- [ ] 11:00 Cosc201 Lecture\n\n## Lecture/Labs\n\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-08":{"title":"","content":"[2022-05-07](daily_notes/2022-05-07) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-09](daily_notes/2022-05-09)\n\n---\n# 08-05-22\n[Pump - Aerosmith](spotify:album:4VWobt8JHr24Gq2qUZK7DB)\n[Hey! No running in the back-arc basin!](https://imgs.xkcd.com/comics/deep_end.png)\n\n\n## Todos\n- [x] use 1001 albums api\n- [x] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab 8\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture 18\n- [ ] info 202 api's lecture\n- [ ] 11:00 Cosc201 18\n\n## Lecture/Labs\n\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-09":{"title":"","content":"[2022-05-08](daily_notes/2022-05-08) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-10](daily_notes/2022-05-10)\n\n---\n# 09-05-22\n[Dog Man Star - Suede](spotify:album:1LgpJjBJIRQhkJ01oZR3Cn)\n![Hey! No running in the back-arc basin!](https://imgs.xkcd.com/comics/deep_end.png)\n\n\n## Todos\n- [ ] 12:00 Info201 Lab 8\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture 18\n- [ ] info 202 api's lecture\n- [x] 11:00 Cosc201 18\n\n## Lecture/Labs\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-10":{"title":"","content":"[2022-05-09](daily_notes/2022-05-09) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-11](daily_notes/2022-05-11)\n\n---\n# 10-05-22\n[The Modern Lovers - The Modern Lovers](spotify:album:5BPCP7WSGBG4br2o4WRmd8)\n![Hey! No running in the back-arc basin!](https://imgs.xkcd.com/comics/deep_end.png)\n\n\n## Todos\n- [ ] 12:00 Info201 Lab 8\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture 18\n- [ ] info 202 api's lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n\n## Lecture/Labs\n- [ ] 10:00 Info203 Lecture\n- [x] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-11":{"title":"","content":"[2022-05-10](daily_notes/2022-05-10) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-12](daily_notes/2022-05-12)\n\n---\n# 11-05-22\n[Rising Above Bedlam - Jah Wobble's Invaders Of The Heart](spotify:album:2TXvjVOhfNjAYpRpODqmVb)\n![OpenStreetMap was always pretty good but is also now *really* good? And Apple Maps's new zoomed-in design in certain cities like NYC and London is just gorgeous. It's cool how there are all these good maps now!](https://imgs.xkcd.com/comics/maps.png)\n\n\n## Todos\n- [ ] 12:00 Info201 Lab 8\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture 18\n- [ ] info 202 api's lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n- [ ] 10:00 Info203 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Lecture/Labs\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-12":{"title":"","content":"[2022-05-11](daily_notes/2022-05-11) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-13](daily_notes/2022-05-13)\n\n---\n# 12-05-22\n[Darklands - The Jesus And Mary Chain](spotify:album:1vtsYpapUeoDNMJOWRql9b)\n![OpenStreetMap was always pretty good but is also now *really* good? And Apple Maps's new zoomed-in design in certain cities like NYC and London is just gorgeous. It's cool how there are all these good maps now!](https://imgs.xkcd.com/comics/maps.png)\n\n## Todos\n- [ ] 12:00 Info201 Lab 8\n- [ ] Info201 Lecture 14\n- [x] Info201 Lecture 18\n- [ ] info 202 api's lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n- [ ] 10:00 Info203 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n\n## Lecture/Labs\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 12:00 Info203 Tutorial\n- [ ] 16:00 Info201 Lecture\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-13":{"title":"","content":"[2022-05-12](daily_notes/2022-05-12) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-14](daily_notes/2022-05-14)\n\n---\n# 13-05-22\n[Darkness on the Edge of Town - Bruce Springsteen](spotify:album:4KT6G8fj8EEIfsyr75hbgc)\n![We carefully sampled the general population and found that most people are familiar with acquiescence bias.](https://imgs.xkcd.com/comics/selection_bias.png)\n\n\n## Todos\n- [ ] Cosc201 lab\n- [ ] Cosc201 Lab\n- [ ] Info203 Lecture\n- [ ] Info203 Lecture\n- [ ] Info201 Lab 8\n- [ ] Info201 Lecture\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture\n- [x] Cosc202 Lecture\n- [ ] cosc 202 api's lecture\n- [ ] Cosc202 Lecture\n\n## Lecture/Labs\n- [x] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab                   \n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)\n\n\n ","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-14":{"title":"","content":"[2022-05-13](daily_notes/2022-05-13) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-15](daily_notes/2022-05-15)\n\n---\n# 14-05-22\n[The Who Sell Out - The Who](spotify:album:2nbxElNcpz1C8LudsOW3ZH)\n![A medicine that makes you put two dots over your letters more often is a di�retic.](https://imgs.xkcd.com/comics/crepe.png)\n\n\n## Todos\n- [ ] Cosc201 lab\n- [ ] Cosc201 Lab\n- [ ] Info203 Lecture\n- [ ] Info203 Lecture\n- [ ] Info201 Lab 8\n- [ ] Info201 Lecture\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture\n- [ ] cosc 202 api's lecture\n- [ ] Cosc202 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab                   \n\n## Lecture/Labs\n\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-15":{"title":"","content":"[2022-05-14](daily_notes/2022-05-14) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-16](daily_notes/2022-05-16)\n\n---\n# 15-05-22\n[Rust Never Sleeps - Neil Young \u0026 Crazy Horse](spotify:album:5m2MQk77aAXPhwI6Ges8X5)\n![A medicine that makes you put two dots over your letters more often is a di�retic.](https://imgs.xkcd.com/comics/crepe.png)\n\n\n## Todos\n- [ ] Cosc201 lab\n- [ ] Cosc201 Lab\n- [ ] Info203 Lecture\n- [ ] Info203 Lecture\n- [ ] Info201 Lab 8\n- [ ] Info201 Lecture\n- [ ] Info201 Lecture 14\n- [ ] Info201 Lecture\n- [ ] cosc 202 api's lecture\n- [ ] Cosc202 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab                   \n\n## Lecture/Labs\n\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-16":{"title":"","content":"[2022-05-15](daily_notes/2022-05-15) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-17](daily_notes/2022-05-17)\n\n---\n# 16-05-22\n[The Specials - The Specials](spotify:album:7kHtInr7Es2tPk5QJO6y6c)\n![A medicine that makes you put two dots over your letters more often is a di�retic.](https://imgs.xkcd.com/comics/crepe.png)\n\n## Today\n- [x] Cosc201 lab 11\n- [x] 11:00 Cosc201 Lecture graphs\n- [x] Info201 Lab 9\n- [x] Info201 Lab 8\n- [x] Info201 Lecture 19 sql part 2\n- [x] Info203 Lecture\n- [x] Info203 Lecture\n- [x] 1hr 203 work\n\n100%\n\n## Backlog\n- [ ] Cosc201 Lab 12\n- [ ] Info201 Lab 3\n- [ ] Info201 Lab 4\n- [ ] Info201 Lab 7\n- [ ] Info201 Lab 10\n- [ ] Info201 Lab 11\n- [ ] Info201 Lecture 20 database\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] cosc 202 api's lecture\n- [ ] Cosc202 Lecture\n- [ ] Cosc202 Lab 19\n\n## Lecture/Labs\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab 13\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-17":{"title":"","content":"[2022-05-16](daily_notes/2022-05-16) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-18](daily_notes/2022-05-18)\n\n---\n# 17-05-22\n[Black Sabbath - Black Sabbath](spotify:album:2T6jeELx5BqH4GMLObBy10)\n![A medicine that makes you put two dots over your letters more often is a di�retic.](https://imgs.xkcd.com/comics/crepe.png)\n\n## Today\n- [ ] 10:00 Info203 Lecture\n- [x] 1hr ass work\n- [ ] 11:00 Cosc201 Lecture\n- [ ] Cosc201 Lab 12\n- [x] Info201 Lecture 20 database\n- [x] Info201 Lab 10\n- [x] Cosc202 Lecture\n- [x] some 202 work\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n- [ ] Info201 Lab 3\n- [ ] Info201 Lab 4\n- [ ] Info201 Lab 7\n- [ ] Info201 Lab 11\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc 202 api's lecture\n- [ ] Cosc202 Lab 19\n- [ ] Cosc201 lab 13\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-18":{"title":"","content":"[2022-05-17](daily_notes/2022-05-17) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-19](daily_notes/2022-05-19)\n\n---\n# 18-05-22\n[Floodland - Sisters Of Mercy](spotify:album:2I5WCmOZo17YkcEwjXbLvc)\n![Donate now to help us find a cure for causality. No one should have to suffer through events because of other events.](https://imgs.xkcd.com/comics/health_data.png)\n\n## Today\n- [ ] 10:00 Info203 Lecture\n- [ ] 10:00 Info203 Lectur  vc dbe\n- [x] Cosc201 Lecture\n- [ ] Cosc 202 api's lecture\n- [x] Info201 Lab 3\n- [ ] 1hr ass work\n- [x] review today\n- [x] review extra\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] Cosc201 Lab 12\n- [ ] Cosc201 lab 13\n- [ ] 13:00 Info201 Lecture\n- [ ] Info201 Lab 4\n- [ ] Info201 Lab 7\n- [ ] Info201 Lab 11\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] 14:00 Cosc202 Lab\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n- weather api in daily note\n- drop shipping site\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://open.spotify.com/album/23DJ3KNE5JXi61G31T2Kni?si=-zZEHXIxT2qOEN6_Ns5C5Ql)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-19":{"title":"","content":"[2022-05-18](daily_notes/2022-05-18) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-20](daily_notes/2022-05-20)\n\n---\n# 19-05-22\n[New York Dolls - New York Dolls](spotify:album:2xbTV0Awe4Qm5caUVuPbMr)\n![Donate now to help us find a cure for causality. No one should have to suffer through events because of other events.](https://imgs.xkcd.com/comics/health_data.png)\n\n## Today\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [x] Info201 Lecture 21\n- [x] Cosc 202 api's lecture\n- [x] Info201 Lab 4\n- [ ] review\n- [x] 202 work\n- [x] 10:00 Info203 Lecture\n- [x] 2 hr ass work\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] Info203 Lectures x2\n- [ ] Info201 Lecture 22\n- [ ] Cosc201 Lab 12\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-20":{"title":"","content":"[2022-05-19](daily_notes/2022-05-19) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-21](daily_notes/2022-05-21)\n\n---\n# 20-05-22\n[Highway to Hell - AC/DC](spotify:album:10v912xgTZbjAtYfyKWJCS)\n![Oh sure, I know Keira Knightly, from the first movie in that series by The Land Before Time producer. You know, the franchise with the guy from Jurassic Park and Ghostwriter, and script work by Billie Lourd's mom?](https://imgs.xkcd.com/comics/mainly_known_for.png)\n\nAAPL : 137.44 \nSP500 : 3900.79 \nTSLA : 709.42\n\n## Today\n- [ ] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n- [ ] review\n- [ ] email about labs c201\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] review\n- [ ] Info203 Lectures x2\n- [ ] Info201 Lecture 22\n- [ ] Cosc201 Lab 12\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-21":{"title":"","content":"[2022-05-20](daily_notes/2022-05-20) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-22](daily_notes/2022-05-22)\n\n---\n# 21-05-22\n[The Age Of The Understatement - The Last Shadow Puppets](spotify:album:2y3Rm0cT1xbf2NoTQwKv99)\n![Thank you to Katie Mack for teaching me about this effect, and to Janelle Shane for describing redshifts as 'like galaxies sinking into a pool of dilute blood,' which is how I'll see them from now on.](https://imgs.xkcd.com/comics/angular_diameter_turnaround.png)\n\nAAPL : 137.64 \nSP500 : 3901.36 \nTSLA : 663.9\n\n## Today\n\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n- [ ] review\n- [ ] email about labs c201\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] review\n- [ ] Info203 Lectures x2\n- [ ] Info201 Lecture 22\n- [ ] Cosc201 Lab 12\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-22":{"title":"","content":"[2022-05-21](daily_notes/2022-05-21) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-23](daily_notes/2022-05-23)\n\n---\n# 22-05-22\n[ - ](spotify:album:)\n![Thank you to Katie Mack for teaching me about this effect, and to Janelle Shane for describing redshifts as 'like galaxies sinking into a pool of dilute blood,' which is how I'll see them from now on.](https://imgs.xkcd.com/comics/angular_diameter_turnaround.png)\n\nAAPL : 137.59 \nSP500 : 3901.36 \nTSLA : 663.9\n\n## Today\n- [x] Info203 Lectures x2\n\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] Cosc201 Lab 12\n- [ ] Cosc201 follow up email about labs\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-23":{"title":"","content":"[2022-05-22](daily_notes/2022-05-22) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-24](daily_notes/2022-05-24)\n\n---\n# 23-05-22\n[Q: Are We Not Men? A: We Are Devo - Devo](spotify:album:1u2Qni8cVRptDTaA00fmBC)\n![Thank you to Katie Mack for teaching me about this effect, and to Janelle Shane for describing redshifts as 'like galaxies sinking into a pool of dilute blood,' which is how I'll see them from now on.](https://imgs.xkcd.com/comics/angular_diameter_turnaround.png)\n\nAAPL : 137.59 \nSP500 : 3901.36 \nTSLA : 663.9\n\n## Today\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] Cosc201 Lab 12\n- [ ] Cosc201 follow up email about labs\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-24":{"title":"","content":"[2022-05-23](daily_notes/2022-05-23) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-25](daily_notes/2022-05-25)\n\n---\n# 24-05-22\n[Q: Are We Not Men? A: We Are Devo - Devo](spotify:album:1u2Qni8cVRptDTaA00fmBC)\n![The film is set in 2018, but when Commander Bremberly chases the hologram through Times Square, there's a billboard for Avengers: Age of Ultron. Depending on the date, that billboard would have been advertising either Infinity War or this movie.](https://imgs.xkcd.com/comics/goofs.png)\n\nAAPL : 143.11 \nSP500 : 3973.75 \nTSLA : 674.9\n\n## Today\n- [x] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n- [ ] Cosc201 Lab 12\n- [ ] Cosc201 follow up email about labs\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-25":{"title":"","content":"[2022-05-24](daily_notes/2022-05-24) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-26](daily_notes/2022-05-26)\n\n---\n# 25-05-22\n[Playing With Fire - Spacemen 3](spotify:album:0Ju8YUtJB0RMw8NZXgXe6n)\n![The film is set in 2018, but when Commander Bremberly chases the hologram through Times Square, there's a billboard for Avengers: Age of Ultron. Depending on the date, that billboard would have been advertising either Infinity War or this movie.](https://imgs.xkcd.com/comics/goofs.png)\n\nAAPL : 140.48 \nSP500 : 3941.48 \nTSLA : 628.16\n\n## Today\n- [x]] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n- [ ] Cosc201 Lab 12\n- [ ] Cosc201 follow up email about labs\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-26":{"title":"","content":"\n\n[2022-05-25](daily_notes/2022-05-25) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-27](daily_notes/2022-05-27)\n\n---\n# 26-05-22\n[Sweet Baby James - James Taylor](spotify:album:2NEQ5Q4sBbUHVVx3Wf8TEZ)\n![Also, they're getting increasingly worried that someone will accidentally hit the 'retract' button, and that the end of the cable thrashing around as it winds up could devastate the Earth's surface.](https://imgs.xkcd.com/comics/voyager_wires.png)\n\nAAPL : 140.38 \nSP500 : 3978.73 \nTSLA : 658.8\n\n## Today\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 12:00 Info203 Tutorial\n- [ ] 16:00 Info201 Lecture\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n- [ ] Cosc201 Lab 12\n- [ ] Cosc201 follow up email about labs\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lab 7\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-27":{"title":"","content":"[2022-05-26](daily_notes/2022-05-26) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-28](daily_notes/2022-05-28)\n\n---\n# 27-05-22\n[Exile On Main Street - The Rolling Stones](spotify:album:5dBQ20ppdPxo5bqkoeTKnN)\n![Also, they're getting increasingly worried that someone will accidentally hit the 'retract' button, and that the end of the cable thrashing around as it winds up could devastate the Earth's surface.](https://imgs.xkcd.com/comics/voyager_wires.png)\n\nAAPL : 143.75 \nSP500 : 4057.84 \nTSLA : 707.73\n\n## Today\n- [x] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [x] 12:00 Info201 Lab\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 16:00 Info201 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-29":{"title":"","content":"[2022-05-28](daily_notes/2022-05-28) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-30](daily_notes/2022-05-30)\n\n---\n# 29-05-22\n[Mermaid Avenue - Billy Bragg](spotify:album:0yTmT1i6yHb5EVyJOmIwGw)\n![300](https://i.scdn.co/image/ab67616d0000b273bee802eae45543f3010c2ca9)\n![The combination croquet set/10-lane pool can also be used for some varieties of foosball and Skee-Ball.](https://imgs.xkcd.com/comics/field_topology.png)\n\nAAPL : 149.61 \nSP500 : 4158.24 \nTSLA : 759.63\n\n## Today\n\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 16:00 Info201 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-30":{"title":"","content":"[2022-05-29](daily_notes/2022-05-29) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-05-31](daily_notes/2022-05-31)\n\n---\n# 30-05-22\n[Selling England By The Pound - Genesis](spotify:album:2tSRe2rkdJvZWMOIZpu6lk)\n![300](https://i.scdn.co/image/f652cc4d0f26b21e6f6d1d6a971b1241122d8804)\n![The combination croquet set/10-lane pool can also be used for some varieties of foosball and Skee-Ball.](https://imgs.xkcd.com/comics/field_topology.png)\n\nAAPL : 149.61 \nSP500 : 4158.24 \nTSLA : 759.63\n\n## Today\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 lab\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 16:00 Info201 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n- [ ] Info201 Lecture 22 performance and security\n- [ ] Info201 Lecture 14 activity and state diagrams\n- [ ] Cosc202 Lecture 21 optimisation\n- [ ] Cosc202 Lab 19\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-05-31":{"title":"","content":"[2022-05-30](daily_notes/2022-05-30) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-01](daily_notes/2022-06-01)\n\n---\n# 31-05-22\n[Eagles - Eagles](spotify:album:51B7LbLWgYLKBVSpkan8Z7)\n![300](https://i.scdn.co/image/ab67616d0000b273c13acd642ba9f6f5f127aa1b)\n![They're robust against quantum attacks because it's hard to make a quantum system that large.](https://imgs.xkcd.com/comics/d65536.png)\n\nAAPL : 149.61 \nSP500 : 4158.24 \nTSLA : 759.63\n\n## Today\n- [ ] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-06-01":{"title":"","content":"[2022-05-31](daily_notes/2022-05-31) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-02](daily_notes/2022-06-02)\n\n---\n# 01-06-22\n[New Wave - The Auteurs](spotify:album:7dJLDJkGND4ovSCRL4r4bk)\n![300](https://i.scdn.co/image/4ae385ee00c33a777f88df5537d57d6d12314d60)\n![They're robust against quantum attacks because it's hard to make a quantum system that large.](https://imgs.xkcd.com/comics/d65536.png)\n\nAAPL : 149.61 \nSP500 : 4132.15 \nTSLA : 758.26\n\n## Today\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-06-02":{"title":"","content":"[2022-06-01](daily_notes/2022-06-01) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-03](daily_notes/2022-06-03)\n\n---\n# 02-06-22\n[Pink Moon - Nick Drake](spotify:album:6LoD5uGEynY4eqstWDFKhg)\n![300](https://i.scdn.co/image/7eca64a5f6819743522fadcbe2a0020aa63f0391)\n![An x-ray gyroscope is used to determine exactly which toppings they included in the pita.](https://imgs.xkcd.com/comics/types_of_scopes.png)\n\nAAPL : 149.61 \nSP500 : 4101.23 \nTSLA : 740.37\n\n## Today\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 12:00 Info203 Tutorial\n- [ ] 16:00 Info201 Lecture\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-06-03":{"title":"","content":"[2022-06-02](daily_notes/2022-06-02) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-04](daily_notes/2022-06-04)\n\n---\n# 03-06-22\n[Here Are the Sonics - The Sonics](spotify:album:4vqaqoTEbNyeeSHJA6KpdM)\n![300](https://i.scdn.co/image/e7a07ba6460b230291cc571ff3df941183ae9bcf)\n![An x-ray gyroscope is used to determine exactly which toppings they included in the pita.](https://imgs.xkcd.com/comics/types_of_scopes.png)\n\nAAPL : 149.61 \nSP500 : 4176.82 \nTSLA : 775\n\n## Today\n- [ ] 09:00 Cosc202 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 12:00 Info201 Lab\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 12:00 Info203 Tutorial\n- [ ] 16:00 Info201 Lecture\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 10:00 Info203 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 14:00 Cosc202 Lab\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-06-05":{"title":"","content":"[2022-06-04](daily_notes/2022-06-04) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-06](daily_notes/2022-06-06)\n\n---\n# 05-06-22\n[All That You Can't Leave Behind - U2](spotify:album:7a5U0GPoAvT3gvEY66FRuN)\n![300](https://i.scdn.co/image/515919e9fd8a091bc103384e8a0460c0c30aad0d)\n![I can't speak for your other subjects, but MY motion was as smooth and natural as the framerate allowed.](https://imgs.xkcd.com/comics/motion_blur.png)\n\nAAPL : 149.61 \nSP500 : 4108.54 \nTSLA : 703.55\n\n## Today\n\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 10:00 Info203 Lecture\n- [ ] 10:00 Info203 Lecture\n\n- [ ] 12:00 Info201 Lab\n- [ ] 16:00 Info201 Lecture\n- [ ] 13:00 Info201 Lecture\n\n- [ ] 12:00 Cosc201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc201 Lecture\n\n- [ ] 11:00 Cosc202 Lecture\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-06-08":{"title":"","content":"[2022-06-07](daily_notes/2022-06-07) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-09](daily_notes/2022-06-09)\n\n---\n# 08-06-22\n[Little Earthquakes - Tori Amos](spotify:album:1pFUGy3ABpLRRE3oNMPbDb)\n![300](https://i.scdn.co/image/27141e7eef911d0085b3f9ba91bd1baa963a65f0)\n![Oh yeah, I didn't even know they renamed it the Willis Tower in 2009, because I know a normal amount about skyscrapers.](https://imgs.xkcd.com/comics/or_whatever.png)\n\nAAPL : 148.62 \nSP500 : 4160.68 \nTSLA : 716.66\n\n## Today\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 10:00 Info203 Lecture\n- [ ] 10:00 Info203 Lecture\n- [ ] 12:00 Info201 Lab\n- [ ] 16:00 Info201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-06-09":{"title":"","content":"[2022-06-08](daily_notes/2022-06-08) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-10](daily_notes/2022-06-10)\n\n---\n# 09-06-22\n[Little Earthquakes - Tori Amos](spotify:album:1pFUGy3ABpLRRE3oNMPbDb)\n![300](https://i.scdn.co/image/27141e7eef911d0085b3f9ba91bd1baa963a65f0)\n![It's believed to be related to the Stellar Sea Cow.](https://imgs.xkcd.com/comics/shuttle_skeleton.png)\n\nAAPL : 147.95 \nSP500 : 4115.77 \nTSLA : 725.6\n\n## Today\n- [ ] 11:00 Cosc202 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 12:00 Info203 Tutorial\n- [ ] 16:00 Info201 Lecture\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n- [ ] 10:00 Info203 Lecture\n- [ ] 16:00 Cosc201 Tutorial\n- [ ] 10:00 Info203 Lecture\n- [ ] 10:00 Info203 Lecture\n- [ ] 12:00 Info201 Lab\n- [ ] 16:00 Info201 Lecture\n- [ ] 13:00 Info201 Lecture\n- [ ] 12:00 Cosc201 Lab\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc201 Lecture\n- [ ] 11:00 Cosc202 Lecture\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/daily_notes/2022-06-10":{"title":"","content":"[2022-06-09](daily_notes/2022-06-09) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-06-11](daily_notes/2022-06-11)\n\n---\n# 10-06-22\n[Bad Company - Bad Company](spotify:album:6DaTfshdfMQiM00Yw1CG3J)\n![300](https://i.scdn.co/image/bced88d2be33cab73adbb5ab2db47a5c78a76488)\n![It's believed to be related to the Stellar Sea Cow.](https://imgs.xkcd.com/comics/shuttle_skeleton.png)\n\nAAPL : 142.67 \nSP500 : 4017.82 \nTSLA : 719.12\n\n## Today\n\n# Review\n```dataview\nlist from #lecture where sr-due = date(today)\n```\n\n## Backlog\n\n## Projects\n- python ai weekly review\n- spotify clone\n\n## Links\n- [202 lab book](C:\\Users\\Jet%20Hughes\\Documents\\Personal\\COSC202LabBook-2.pdf)\n- [i201 cousework](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [i201 Assignments](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)\n\n## Today's log","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/01-basic-html":{"title":"01-basic-html","content":"\n[slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2932183-dt-content-rid-18925536_1/courses/COSC203_S2DNI_2022/COSC203_lecture1.pdf)\n\n\n\n[html](notes/html.md)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3 Main parts\n- html - structure\n- css - styles\n- javascript - interactivity\n\n# HTML\nElement:\n- opening tag\n- closing tag\n- content\n- attributes\n\nMultimedia and Tables\n- images vector graphics\n- video and audio\n- iframe\n- tables","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/01-bits-and-bytes":{"title":"01-bits-and-bytes","content":"\n[memory](notes/memory.md)\n[unicode](notes/unicode.md)\n[characters](notes/characters.md)\n[digital-data](notes/digital-data.md)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# What is data\n- A fact — a piece of information\n\t- corresponds to discreete facts about phenomena from which we gain information abou the world\n- The concept of a *value* is fundamental to data\n\t- e.g., 25, $356.00, April, \"this is a sentence\", colours etc\n- Vaues are abstract, they are interpretations of data\n\t- There are many way of storing the same data\n\t- e.g., 12, twelve, XII, 1100, · ··, ·----··---\n\n# How computers represent data\n- In *Binary*\n- Stored in one of two states, true/false, 1/0, on/off, voltage/no voltage\n- Each instance of a state is called a *bit*. (binary digit)\n- *Values* are represented as a sequence of bits.\n\t- e.g., 1000001\n\t- The computer doesn't \"know\" what any given sequence means, **you** know.\n\t- could be 65, A, or anything **You** want it to mean\n\n# Computer memory\n- SImilar to the switch board in your home\n- Each switch has a number\n- they are all always there\n- you can switch the state by flipping the switch\n\n - Each switch has:\n\t - A address/location (swtich number)\n\t - A value (on/off)\n\n- computer languages allow us to name some of the locations, its easuer than remembering its number (variable)\n\n\n# Bits, Nibbles, Bytes\n-  The smallest unit of storage is a buit (0 or 1)\n- (for convenience) bit are grouped into larger units.\n\t- a nibble is 4 bits\n\t- a byte is 8 bits\n- For convenience bytes are given addresses, not nibbles or bits. (they are too small to work with most of the time)\n\n# A Word of memory\n- The word is the number of bits the cpu uses internally, varies between manufacturers and CPUs.\n- Now its usually 64 bits\n- [amount of bits for different devices](https://i.imgur.com/nHrz1zX.png)\n\n# Characters\n- A written symbol.\n- In english are represented as a single byte, (other languages use 2 bytes or more)\n- e.g., [different types of characters](https://i.imgur.com/DBLVhw8.png)\n\n- characters are joined together to make human readable numbers and words\n\n- `char ch` \n- ch is a variable name (identifier) \n- used to label a location in the computer's memory where a byte is stored\n- when the code is compile, the name is assigned an address, in memory. The meaning of that data depends on how a human interprets it. it might be small integer, or a character, or a color etc.\n\n## ASCII Character Code\n![ascii code](https://i.imgur.com/NbBtm1v.png)\n\n1. The computer uses ch as a integer index into a pre-existing table \n2. the computer screen is made up of a thousand little dots called pixels. theyre in a rectangular grid like a table.a\n\n- [ascii code example](https://i.imgur.com/9uvKRVo.png)\n\n- There are several tables that describe what to draw\n\t- fonts describe how to draw them\n- ASCII (american standard code for information) describes what should be drawn for Roman (english like) alphabets\n- e.g.,\n\t- A 1000001 (65)\n\t- B 1100001 (97)\n\t- 9 0111001 (57)\n- There are only a few letter numbers and punctuation marks. The remaining ASCII code are non-printing and have other meaning (line feed, for feed, tab etcc)\n- ASCII characters are stored using 7-bits\n\t- so there are 128 (2^7) possible characters\n\t- stored as a byte with the 8th bit set to zero\n\t- For sorting purposes characters are compared on their numeric value (called the *collating sequence*)\n\t- 'A' is before 'Z' but 'a' is after 'Z'!\n\n## Unicode\n![unicode](https://i.imgur.com/GEtVItW.png)\n\n- Other non roman languages\n\t- greek, arabic, chinese, hebrew, japanese, thai etc.\n\t- atrology symbols\n\t- emoji etc\n- Unicode\n\t- developed by the Unicode Consortium\n\t- coordinated with ISO/IEC 10646\n\t- a 21-bit code with 144,697 characters from 159 scripts\n\t- unicode maps from character numbers (code points) into glyphs (graphical representations)\n\t- Some(many) are reserved\n\n\n# Homework\n- How are character strings (e.g. “hello world”) stored in a computer?\n- Is this different between different programming languages (for example; C and Java)?","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/01-information-assurance":{"title":"01-information-assurance","content":"\n- [information-security](notes/information-security.md)\n- [mccumber-cube](notes/mccumber-cube.md)\n- [access-security-tradeoff](notes/access-security-tradeoff.md)\n- [cia-triad](notes/cia-triad.md)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# In the news\n\n- [Axie hack](https://thehackernews.com/2022/07/hackers-used-fake-job-offer-to-hack-and.html)\n- \n\n# Why info sec\n- more interconnected\n\t- more exposure\n- software devs need to know about security\n- often security is an afterthought\n\t- this is bad\n- IS proatects the ability of an organisation to function\n\t- also protects reputation\n\n# What is security\n- protecting assets from harm or damage\n- related concepts\n\t- nation security (political security)\n\t- safety (health)\n\t- environmental security (clean environement)\n\t- information security \n\t- economic security (stability of ecomony)\n\n# What is information secuity\n- focus of protecting information assets\n\t- data, systems, equipment, infrastructure\n- intentional and accidental risks\n\n\u003e \"The preservation of confidentiality, integrity and availability of information; in addition, other properties such as authenticity, accountability, non-repudiation and reliability can also be involved.” \n\u003e (ISO27000 Information Security Management Systems – Overview and Vocabulary)\n\n# Continuous need\n- environment is rapidly changing\n- innovation is rapid\n- cloud computing\n- more ICT capabilities introduce new attack vectors\n\n# Components of Info systems\ncan all be sources of attacks\n\n- data\n\t- e.g., bank: unauthorised acces to data\n- people\n\t- e.g., social engineering\n- hardware\n\t- e.g., physical security (usually)\n- software\n\t- e.g., most common\n- netowrk\n\t- e.g., lost os possibilities for attack\n- procedures\n\t- e.g., back: inside knowledge of faults within the business, that can be exploited\n\n# CIA Triad\nhow security has been appraoched by industry for ages\n\n- Confidentiality\n\t- having information protected from exposure\n\t- blocking unauthorised access\n- Availability\n\t- authentic state of information\n\t- preventing corruption etc.\n\t- e.g., checksum, hash check etc\n- Integrity\n\t- information being available to users without obstables \n\t- DDoS\n\nOther models have been developed\n- [slide](https://i.imgur.com/GJfb8Ph.png)\n\n# McCumber Cube\n- a way to think about how to protect your information\n- [slide](https://i.imgur.com/5Ls2yUp.png)\n\n- a map\n- can be used to find \"holes\"\n\n# Access Security tradeoff\n- perfect info security is impossible\n- unrestricted access is dangerous\n- completely secure would not allow access to anyone\n- balance is key\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/02-basic-css":{"title":"02-basic-css","content":"\n- [slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2963251-dt-content-rid-18931782_1/courses/COSC203_S2DNI_2022/COSC203_lecture2%281%29.pdf)\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/02-combinatorial-logic":{"title":"02-combinatorial-logic","content":"\n- [slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2954102-dt-content-rid-18888626_1/courses/COSC204_S2DNI_2022/L2%20-%20Combinatorial%20Logic.pdf)\n\n\n\n- [transistors](notes/transistors.md)\n- [combinatorial-logic](notes/combinatorial-logic.md)\n- [boolean-equations](notes/boolean-equations.md)\n- [logic-gates](notes/logic-gates.md)\n- [demultiplexor](notes/demultiplexor.md)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Circuit basics:\n- current flows + to -\n- input to a unit (e.g., LED) is the + end\n\n# Combinatorial Logic Circuit\n\u003e [!Definition]\n\u003e Combinatorial Logic Circuit is a circuit whose digital outputs are dependent only on its digital inputs\nThey can be described using logic expressions and therefore logic gates. We assume the outputs respond immediately^[1]\n\nThey can be defined:\n- Using a truth table\n- Using boolean equations ($Q\\ =\\ A+\\ B$) \n- Using graphical symbols  \n\n- [1 Bit half adder](https://i.imgur.com/mjCVU4I.png)\n- [1 Bit full adder: (includes carry input)](https://i.imgur.com/yu6kS83.png)\n- [Ripple carry adder](https://i.imgur.com/HtEIZ5t.png)\n- 3 Bit parity Generator\n\t- Adds an extra bit to the input data so that the number of ones in the output is always odd\n\t- Used for error checking\n\t- [truth table](https://i.imgur.com/KDUiJbN.png)\n\t- [boolean equation](https://i.imgur.com/mwBpnlO.png)\n\t- [circuit](https://i.imgur.com/tsgDISC.png)\n- [7 segment displlay](https://i.imgur.com/qtPmtwR.png)\n\n# Boolean Equations\n\nPrecedence\n- NOT is unary, so it has the highest precedence\n- AND is mulitply, so it comes next\n- OR is like plusl, to it comes last\n\n![Precedence table|200](https://i.imgur.com/jPlrVwW.png)\n\nCreating boolean equations:\n- for each row where output is 1\n- write the equation as a function of the inputs  (using AND)\n- Write the final equation, putting OR between each clause\n- [example](https://i.imgur.com/RoBTEfH.png)\n\n# De Morgan's Theorum\n- !(A + B) = A! \u0026 !B\n- !(A + B + C + ... + X) = !A \u0026 !B \u0026 !C \u0026 ... \u0026 !X\n- [truth table](https://i.imgur.com/QegVxkx.png)\n- any boolean function can be represented as the sum of logical products\n- All combinatorial circuits can be described using just one gate type (either nand or nor) [^2]\n\n# Transistors\n![simple transistor diagram|100](https://i.imgur.com/oBuNR9m.png)\n\n- B: Base ⇒ A swtich connecting C to E\n\t- open (C is disconnected from E) when supplied 0v\n\t- closed (C is connected to E) by applying +5V\n- C: Collector\n- E: Emitter\n\nPossible to create NAND gate using just transistors ∴ possible to create all logic gates using only transistors [^3]\n\n# Demultiplexor\n- Mutli way swtich where the address determines which output recieves the input\n- [2 bit address diagram and truth table](https://i.imgur.com/XQteI3j.png)\n\n# Logic Gates\n- NOT\n- AND\n- OR\n- NAND\n- NOR\n- XOR/EOR\n\n\n\n\n[^1] : In real circuits propagation delay must be considered, hence the clock cycle on CPUs\n[^2] : The Apollo Guidance Computer used about 5600 NOR gates and no other gate types!\n[^3] : They dont actually do it this way (see lab)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/02-concepts-and-roles":{"title":"02-concepts-and-roles","content":"\n- [slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2956897-dt-content-rid-18930757_1/courses/COMP210_S2DNI_2022/Lecture_02%281%29.pdf)\n\n# News\n- [more personal email scams](https://theconversation.com/email-scams-are-getting-more-personal-they-even-fool-cybersecurity-experts-186009)\n\t- They have more knowledge about your personal information\n- [deakin university attack](https://australiancybersecuritymagazine.com.au/up-to-10000-students-targeted-in-deakin-university-cyberattack/)\n\t- staff credentials were leaked and acces to students information was gathered\n- [rusian hackers attack lithuania](https://www.reuters.com/world/europe/russian-hacker-group-says-cyber-attacks-continue-lithuania-2022-06-28/)\n- [attacks against india](https://www.indiatoday.in/india/story/prophet-row-international-hackers-cyber-attacks-india-nupur-sharma-remark-1961941-2022-06-13)\n- [retbleed attack affects AMD and Intel CPUs (spectre-based speculative-execution attacks)](https://thehackernews.com/2022/07/new-retbleed-speculative-execution.html)\n\n# Vulnerabilities\n- a potential weakness in an asset\n\t- or in its defense security control\n- e.g., flaws in software packages or an unprotected system port\n\nexploit is the technique used to attack\n\n- [RAND report r-609-1 (1979)](https://i.imgur.com/GEVLIq1.png)\n- need to be aware of vulnerabilities\n\ne.g.,\n- websites can steal browser data via extension APIs\n\n# Security services and control\n- services\n\t- the intended security goal or property (C.I.A provides the three main security services)\n\t- confidentiality\n\t- integrity\n\t- awareness\n- controls\n\t- the mechanisms employed to implement the services\n\t- encryption\n\t- firewalls\n\t- awareness\n\n## Controls\n- physical controls\n\t- facility protection\n\t- guards\n\t- locks\n\t- monitoring\n\t- environment controls\n\t- intrustion detection\n- technical controls\n\t- network security\n\t- cryptography\n\t- forensics\n\t- user authentication\n\t- etc\n- administrative controls\n\t- policies\n\t- standards\n\t- procedures\n\t- guidelines\n\t- personnel screening\n\t- awareness training\n\n- Preventive \n\t- e.g., \"prevent exposure of critical information\"\n\t- control - e.g., encrpytion\n- detective\n\t- e.g., \"we want to warn attempts of intrustions\"\n\t- control - e.g., intrusion detection systems\n- corrective\n\t- reduce/fix damage\n\t- e.g., \"we want to repair our system in case of errors\"\n\t- conrtol - e.g., restoration point mechanisms (e.g., version control systems like [git](notes/git.md))\n\n- we need security controls for all info states:\n\t- storage\n\t\t- information storage containers\n\t\t- electronic, physical, human\n\t- transmission\n\t\t- physical or electronic\n\t- processing\n\t\t- physical or electronic\n\n# CIA\n- a security service provides a high level security property\n\n## Confidentiality\n- information should not be available to unauthorised people\n- divided into:\n\t- secrecy: protecting business data\n\t- privacy: protecting personal data\n\t- anonymity: hide who is engaging in what actions\n- threats: information theft, unintentional disclosure\n- controls: encyption, access control, perimeter defense\n- general controls: secure systems development, and incident response\n\n## Integrity\n- data integrity: should not be corruped, tampered, altered with etc in an unauthorised manner\n- system inegrity: accuracy and completeness\n- threats: data and system corruption, loss of accountability\n- controls: \n\t- hashing, cryptographic integrity check and encryption\n\t- authentiation, access control\n\t- digital signing\n\t- config management and change control \n- general controls: Secure Systems Development and Incident Response\n\n## Availability\n- information should be accessible and usable upon demand by an authorised entity\n- main threat: DoS\n- controls:\n\t- redundancy of resources\n\t- load balancing\n\t- software and data backups\n- general controls: Secure Systems Development and Incident Response\n\n## Additionally properties\n- accuracy - free from mistakes and erors\n- authenticity - genuine or original\n- utility - serve a purpose (e.g., census data)\n- possession - ownership or control (importat for privacy)\n\n# Privacy and Actors\n- [facebook gdpr](https://techcrunch.com/2018/04/17/facebook-gdpr-changes/)\n\n## GDPR\n- To protect specific aspects of information that may be related to natural persons (personal information) \n- Prevent unauthorized collection and storage of personal information \n- Make sure your personal information is correct \n- Ensure transparency and access for data subjects \n- Provide adequate information security (C.I.A) around personal information \n- Define clear responsibilities around personal information \n- GDPR became EU law on 25 May 2018 (General Data Protection Regulation)\n\n- [who can see my email](https://i.imgur.com/34R3hJx.png)\n\n## Actors\n- threat actors\n\t- those responsible for the security incident\n- (security) Hacker\n\t- uses technical skills and knowledge to uncover bugs or exploits\n- Attacker\n\t- may use other (non-technical) means to exploit data and system (the malicious intention is what matters here)\n\n- intelligence agencies\n- law enforcement\n- nation states\n- independents (hackers, criminals, private surveillance, manufacturers etc)\n\n- [motivaitions](https://i.imgur.com/74qgpsc.png)\n\n## Skills and focus of actors\n- low skill \u0026 low focus\n- high skill \u0026 low focus\n- high skill \u0026 high focus\n\t- intelligence agencies\n\t- highly sophicticated\n\n# Shared responsibility\n- business needs first\n- [information securty functions](https://i.imgur.com/apXn7Qb.png)\n- [protecting the functionality of an organization](https://i.imgur.com/pT1nL8E.png)\n- [enablling safe operation of applications](https://i.imgur.com/Ytzlqhc.png)\n- [safeguarding technology assets in organizations](https://i.imgur.com/gNgScT8.png)\n\n# Balance\n\n- [balance](https://i.imgur.com/df1LZuP.png)\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/02-version-control-system":{"title":"02-version-control-system","content":"\n[git](notes/git.md)\n\n[VCS](notes/version-control-systems.md)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/03-agile-methodologies":{"title":"03-agile-methodologies","content":"\n\u003e guilding philosphy to develop info systems in unkown, rapidly changing evnironments\n\n\"Chaordic\"\n\n[The agile manifesto](https://www.agilealliance.org/agile101/the-agile-manifesto)\n\n# 1 [scrum](notes/scrum.md)\nDevelopment is split into many short (~30 day) \"sprints\" of intense focus where the entire team is involved\n\n# 2 [Extreme Programming](notes/extreme-programming.md) (XP)\ntaking current industry practices to the extreme\n\n# 3 [Unified Processes](notes/unified-processes.md) (UP)\nInterative and incremental  architecture-centric which has four main phases\n- inception\n- elaboration\n- construction\n- transition\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/03-more-css":{"title":"03-more-css","content":"\n[slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2964467-dt-content-rid-18940944_1/courses/COSC203_S2DNI_2022/COSC203_lecture3%281%29.pdf)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/03-sequential-logic-circuits":{"title":"03-sequential-logic-circuits","content":"\ncomb log. circuits always produce the same output with the same inputs\n\nSequential logic circuit output depends not only on the inputs but also past history (memory)\n\n![combinatorial vs sequential](https://i.imgur.com/GbfAZ4c.png)\n\n\nTwo types:\n- synchronous\n\t- changes of state happen in time with a clock cycle\n\t- input changes occur between clock pulses\n\t- state changes occur at the clock pulses\n- asynchronous\n\t- We will not be studying these\n\t- State changes occur as changes in inputs occur\n\t- Event driven\n\n\n# Memory circuits\n- Set-reset latch ![sr latch](https://i.imgur.com/mhXd77i.png)\n- D-type flip-flop ![delay flip flop](https://i.imgur.com/IpQfNRm.png)\n- T-type flip-flop ![t flip flop](https://i.imgur.com/SZn2J94.png)\n- JK-type flip-flop ![jk flip flop](https://i.imgur.com/OgfTehO.png), ![jk flip flop 2](https://i.imgur.com/8zJvDuw.png) [simulation](https://tinyurl.com/2bewwd7h)\n- synchronous counter ![simulation](https://tinyurl.com/25olydjb), ![slide](https://i.imgur.com/81LS7HL.png)\n\n# State transition\n\n\"if you are here and you get this then go here\"\n\nbasis of all computing  (turing machine)\n\nThe computer memory is the current state, the instruction is where to go next","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/03-threats-social-engineering-and-failures":{"title":"03-threats-social-engineering-and-failures","content":"\n# News\n- kiwis urged to get new passwords by government cybersecurity agency (\"big password energy\")\n- ukraine cyber agency reports cyber attack surge\n- plymouth households hit by clarion housing cyber attack\n- facebook \"unintentionally uploaded\" 1.5 million peoples email contacts without their consent\n- threat maps: https://threatmap.checkpoint.com/ThreatPortal/livemap.html\n\n# Threats\nevents are circumstances that has the **potential** (risk) to adversely affect assets (reducing their value)\n- e.g., possibility of text messages stop working -\u003e phone loses value\n\n# Attack\nintentional or unintentional (e.g., lightning) **acts** that can damage or compromise assets.\n- the actual act of attacking\n- can be passive attack: e.g., stumble accross information accidentaly\n\n# Exploits\n- the **techniques** used\n\n# Vulnerabilities\n- the potential weaknesses in assets or in their defensive control systems\n- e.g., try to find weakpoints in a castle\n\n# Arms race\nsecurity is a never ending arms race. Security is improving but so are the number of potential exploits\n\n# 12 groups of threats\n![](https://i.imgur.com/d5i1wpA.png)\n\n## Intellectual property\n- creation ownership and control of original ideas\n- common breaches include software priracy\n- two organisatons investigate software abuse\n\t- software and information industry association (SIIA)\n\t- business software alliance (BSA)\n- enforcement of copyright laws has been attempted with technical security mechanisms (e.g., watermark, you need an account, must register the software, etc)\n\n## deviations in quality of service\n- when a product is not delivered as expected\n- info systems depend of successful operation of many interdependent support systems\n- internet, communications, power irregularities, all affect the availability of information systems\n- internet:\n\t- ISP failures can considerably undermine the availability of information\n\t- outsourced web hosting assumes responsibility for all internet service as well as for the hardware and the web site operaing system software. \n\t- terms of service ensure that these services are guaranteed\n- communication and other provider service issues include\n\t- other untilities: telephone, water, wastewater, garbage collection\n\t- these all affect the companies ability to function\n- power irregularities\n\t- pwer exess, shortages, losses\n\t- sensitive equipment vulnerable to and easily damaged by fluctuations\n\t- controls can be applied to manage power quality e.g., UPS\n\n## espionage or trespass \n- unauthorized attempts to gain illegal access to information\n- competitive intelligence vs industrial espionage vs cyber terrorism\n- shoulder surfing \n- controls mark the virtual boundaries of an organisations\n\t- controls oftentimes let trespassers know they are encroaching on an organizations cyberspace\n\t- hackers use skill, guile, or fraud, to bypass controls protecting others information\n\t\t- expert\n\t\t\t- develop scripts and exploits\n\t\t\t- master of many skills\n\t\t\t- of create software (malware etc) and share with others\n\t\t\t- minority\n\t\t- novice\n\t\t\t- script kiddies\n\t\t\t- more common\n\t\t\t- use scripts written by experts\n\t\t\t- do not understand the systems the are hacking\n\t\t\t- packet monkeys: script kiddies that use worms to overload systems\n\t\t- cracker\n\t\t\t- cracks or removes software protections designed to precent unauthorized duplication\n\t\t\t- also crack passwords\n\t\t- phreaker\n\t\t\t- hacks the public telephone system to make free calls or disrupt services\n\t\t\t- more specific\n- also includes password attacks\n\t- brute force- tried all possible combinations\n\t- dictionary - include information related to the target user\n\t- rainbow tables - a hacker with access to encrypted password, they can find the corresponding plaintext in a dataset called a rainbow table\n\t- social engineering - e.g., attacks as posing at IT professionals to gain access toa systems information (normally by contacting other employees)\n\n# Forces of nature\n- fire, flood, lightening, earthquake, eruptions, etc.\n- can use controls to protect against these\n- very dynamic\n- unpredicatble\n\n# Human errors or failure\n- actions performed without malicious intent or ignorance (by an authorised user)\n- inexperience\n- improper training\n- incorrect assumptions\n- employees are among the greatest threats to an organisations data\n- e.g, \n\t- accidental deletion\n\t- revelation of classified data\n\t- entry or erroneous data\n\t- storage in unprotected areas\n\t- failure to protect information\n- can be prevented with training, ongoing awareness activites, and controls\n\n# Social engineering\n- using social skills to convince people to reveal access credentials or other valuable information to an attacker\n- used for a broad range of malicious activities through human interactions\n\n![kevin mitnick quote](https://i.imgur.com/Q7ChU37.png)\n\nDeveloping trust is a powerful technique in social engineering\n- people are naturally helpful and trusting\n- ask during seemingly innocent conversations\n\t- slowly ask for increasingly imprtant information\n- lean company lingo, names of people, names, servers etc\n- cause a problem and subsequently offer your help to fix it\n- talk negatively about common enemy\n- talk positively about common hero\n\nInducing strong emotions\n- you won a prize etc\n- excitement \n- fear\n- confusion\n\ninformation overload technique\n- reduce targets ability to sctrutinize arguments proposed by attacker\n- trigger by\n\t- providing a lot of information\n\t- providing arguments from an unexpected angle, whicih forces the victim to analyse the situation from a new perspective which requires additional mental processing\n\nReciprocation\n- technique that exploits our tendency to return a favour\n- even if first favour was not requested\n- even if the return favour is more valuable\n- double disagreement\n\t- if the attacker created a double disagreement and gives in one, the victim will have the tendency to ive in the other\n- expectation\n\t- if the victim is requested to give the first favour, they will believe that the attacker becomes a future ally\n\ntendency to obey authority\n- milgram experiement\n\ndont be a commitment creep\n- people have a tendency to follow commitments even when is might be unwise\n\ninformation exortion is the practive of requesting a ransom for your valuable information\n- ransomware\n\n# Attacks\nrepresent intentional or unintentional acts that can damage or compromise assets\n- range from petty to vandalism to organized sabotage\n- defacing\n- threats are rising\n- cyberterrorism/warfare is much more sinister form of hacking\n\n## Types of attacks\n- Virus - code segments that attach to existing program and take control of access to the targeted computer\n- Worms - replicate themselves until they completely fill available resources like memory and hardrive space\n- Tojan Horses - malware disguised as helpful, intersting or necessary pieces of software\n- Polymorphic threat - actually evolves to elude detection\n- Virus and worm hoaxes - nonexistent malware that employees waste time spreading awareness about\n- back door - gain access to system or network using known or previously unknown/newly discovered access mechanism\n- DoS - attacker sends a large number of connection or information requests to a target\n\t- target becomes overloaded and cannot respond to legitamate requests for service\n\t- may result in crach or inability to perform ordinary functions\n- DDoS - coordinated stream of requresets is launched against a target from many locations\n- Mail bombing (also a DoS - attacker routes large quantities of e-mail to a target to overwhelm them\n- Spam (unusoliciited commercial e-mail) - more a nuisiance than an attack, is emerging as a vector for some attacks\n- packet sniffer - monitors data traveling over network, can also be used for legit purposes, but can be used to steal data\n- spoofing -\u003e technique used to gain unauthorized access; intruder assumes a trusted IP address\n- pharming - attacks browsers address bar to redirect users to a illegitamate site for the purpose of obtaining private information .e.g., DNS cache poisoning\n\t- make the DNS change to point to an illegitamate site instead of the real site\n- man-in-the-middle - an attack monitors (sniffs) the network packes, modifies them, and inserts them back into the network.\n\n# failure\n\u003e A failure occur when our security mechanisms (controls), hardware, or information systems have failed to protect our assets\n\nTechnical Hardware Failures (or Errors) occur when an equipment is distributed containing a unknown or known flaw \n- They can cause the system to perform outside of expected parameters, resulting in unreliable service or lack of availability. \n- Some errors are terminal and some are intermittent. \n\t- Intel Pentium CPU failure – the floating point operation bug (loss over 475 million). \n\t- Mean time between failure (or mean time to failure): measures the amount of time between hardware failures or to failure.\n\n## Spectre \u0026 meltdown\nhttps://meltdownattack.com/\n\n![](https://i.imgur.com/SI9QzRv.png)\n\n## Technical Software Failures or Errors \n- Large quantities of computer code are written, debugged, published, and sold before all bugs are detected and resolved. \n- Combinations of certain software and hardware can reveal new software bugs. \n- Entire Web sites are dedicated to documenting bugs. \n- Open Web Application Security Project (OWASP) is dedicated to helping organizations create/operate trustworthy software and publishes a list of top security risks.\n\n## The Deadly Sins in Software Security \n- Buffer overruns \n- Catching exceptions \n- Command injection \n- Cross-site scripting (XSS) \n- Failure to handle errors \n- Failure to protect network traffic (e.g., by not using WPA in a local wifi) \n- Failure to store and protect data securely (e.g., access control) \n- Failure to use cryptographically strong random numbers \n- Format string problems \n- Neglecting change control\n- Improper file access\n- Improper use of Secure Sockets Layer (SSL)\n- Information leakage\n- Integer bugs (overflows/underflows)\n- Race conditions\n- SQL injection\n- Trusting network address resolution\n- Unauthenticated key exchange\n- Use of magic URLs and hidden forms\n- Use of weak password-based systems\n- Poor usability\n\n# Technological obsolescence\n\u003e when antiquated/outdated infrastructure can lead to security issues\n\n- Proper managerial planning should prevent technology obsolescence.\n- IT plays a large role\n\n# Theft\noccurs when taking of another’s physical, electronic or intellectual property\n- Physical theft is controlled relatively easily\n- Electronic theft is a more complex problem as the evidence of crime is not really apparent (e.g., you don’t notice the theft as you would for a physical object)\n\n# what to do\n- Don’t panic!\n- Knowledge and Education are key.\n- You make more progress by fixing the problem than by fixing the blame. (H.B. Wolfe)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/04-authentication-authorisation-passwords":{"title":"04-authentication-authorisation-passwords","content":"\n- [authorisation](notes/authorisation.md)\n- [authentication](notes/authentication.md)\n- [passwords](notes/passwords.md)\n\n\n\n\n\n\n\n# Authentication\n- proof of identity\n- need to be sure a user is who they say they are before you can trust them\n- usually done via a unique identifier\n\t- unique username\n- and a secret that is only known by the authorised user\n\t- password\n\t- biometrics\n\t- 2fa code\n\n## MFA\n- many secrets\n- protects user/system in the case that a password is disclosed\n- additional secrets generated at the time of use.\n\t- short lived\n\t- if found - attackers have a small windoe to exploit\n- e.g.,\n\t- sms message\n\t- authenticator app\n\n# Authorisation\n- verifying that a user is allowed to access the operation that they are attempting to access\n- requires explicit check in the system for restricted operatons\n\t- some code that check if the roles assigned to the authenticaed user intersect the roles required for the current operation\n- use is assigned a **role** that defines the operations they are allowed to perform\n- e.g.\n\t- custoemer - can view products, and see retail prices\n\t- sales rep - can view products and see retail and cost prices\n\t- manager - can add/delete/modify products\n\t- admin - can change system configuration. can assign roles to users\n\n# Authentication and Authorisation\n- one is useless without the other\n- many security vulnerabilities are caused by inexperienced/incompetent programmer creating systems that only have one or the other\n- authenticaion without authorisation can lead to *path traversal* flaws\n\t- changing the url path to find admin sites\n- authorisation without authenticaion is the equivalent of blindly trusting your users.\n\n# Passwords\n- not good\n- lots of bad advice\n- we are lazy\n- \"safe\" passwords are difficult to enter on touch screen devices\n- to many accouts\n\n## entropy\n- amount of randomness\n- measure of the number of guesse an attacker would need to brute foarce\n- $E = log_2(A^L)$ \n- A = size of alphabet\n- L = length of password\n- E = entropy in bits\n- 80 bits is \"safe\"\n\t- would take decades\n- 6 digits passoword - 29 bits (took 4 seconds to brute force)\n- + uppercase and numbers - 36 bits","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/04-computer-architecture":{"title":"04-computer-architecture","content":"\n- [memory](notes/memory.md)\n- [control-unit](notes/control-unit.md)\n- [bus](notes/bus.md)\n- [CPU](notes/CPU.md)\n- [ALU](notes/ALU.md)\n- [computer-architecture](notes/computer-architecture.md)\n\n\n\n\n\n\n\n\n\n\n\n- tristate buffer [slide](https://i.imgur.com/2Kb419g.png)\n- ![memory write](https://i.imgur.com/PExnbFm.png) [circuit simulator](https://tinyurl.com/2bmqovqz)\n- ![memory read](https://i.imgur.com/GZwxuaA.png)\n\n# Bus\n- data bus\n- address bus\n- control bus\n\n- conmmunicate between parts of the computer\n- only one transmitter at a time\n- only addressed device can respond\n- 2 levels\n\t- internal\n\t- external\n\n# Memory\n- memory size is dependent on bus size\n\t- 2n bytes for n-lines on the address bus\n\t\t- 2^8=256B, 2^16=64KB, 2^32=4GB, 2^64=16EB\n\n- flip flops are grouped into bytes (or larger)\n\t- each byte has an address\n\t- to write\n\t\t- present the address and the data\n\t\t- tell chip to write\n\t- to read\n\t\t- present the address\n\t\t- tell the chip to read\n\t\t- look at the data\n\n## Static RAM (SRAM)\n- memory made from flip flops is called static RAM\n\t- used mostly in CPU cache\n\t- or anywhere where only a small amount is needed\n\t- expensive\n\n## Dynamic RAM (DRAM)\n- made from capacitors\n- used where large amount of RAM is needed\n- slower than SRAM\n- inexpensive\n\n## Non-Volatile Memory\n- often called ROM (read only memory)\n\t- can also be called PROM, EPROM, EEPROM, FLASH\n- flash\n\t- uses floating-gate flash cells, not quite a transistor\n\n# ALU\n![](https://i.imgur.com/wLJhTSG.png)\n\n- performs arithmetic\n\t- add, subtract, etc.\n- logical operations\n\t- and, or, shift, etc\n- subunits\n\t- lofical operations\n\t- addition\n\t- multiplication and dividion\n\t- shifting\n\t- comparison\n\t- logical tests (if, \u003e0, \u003c0, =0, \u003c=0, etc)\n\n# Control unit\n![](https://i.imgur.com/bQ4eA94.png)\n\n- coordinates the operation of the computer\n- generates control signals\n\t- connect registers to the bus\n\t- control the function of the ALU\n\t- provides timing signals to the system\n\nallso associated with the decoding and executuion of instructions in a pipelined system\n\n# Registers\n![](https://i.imgur.com/32rVBFW.png)\n\n- memory cells with names\n- hold data, instructions, or CPU status\n- various sizes, (8, 16, 32, or 64, or larger (512))\n- hold data typically the same width as memory words\n- registers for accessing memory typically the same with as the address bus\n\nSpecial purpose registers\n- program counter\n\t- stores address of current instruction\n- accumulator\n\t- source of one of the operands\n\t- destination of the result\n- status flags\n\t- individaul bits store information about results of operations\n\t\t- result of last instruction was negative, zero, or postive\n\t\t- carry from most recent arithmetic operation\n\t\t- overflow occurred during the last instruction\n\n# CPU\n![](https://i.imgur.com/NxDLkuN.png)\n\n# Computer\n![](https://i.imgur.com/DSa47Jy.png)\n\n# Instructions\n- bit patterns\n- can be split into a number of fields\n\t- operation to be executed\n\t- the address in memory\n\t- which registers (or memory cells) to use as operands\n\t- where to place the result (registers or memory)\n\n# Stored program computer\n![](https://i.imgur.com/wxSfxiO.png)\n\n# Von Neumann Architecture\n- three key concepts\n\t- data and instructions are stored in a single read-write memory\n\t- contents of memory are addressable by location, without regard to the type of data contained\n\t- execution occurs in a sequential fashion, unless explicitly altered, from one instuction to the next\n- programs and data are the same thing\n\t- and so its possible to write soure code (data) and comile them into executables (programs) that can be loaded as data and then executed as programs\n\n# Early computers\n![motorola MC6809 CPU](https://i.imgur.com/yq74Ops.png)\n![circuit diagram for 6809](https://i.imgur.com/41F0tnH.png)\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/04-evaluation-methods-birth-of-hci":{"title":"04-evaluation-methods-birth-of-hci","content":"\n- [evaluating-designs](notes/evaluating-designs.md)\n- [birth-of-hci](notes/birth-of-hci.md)\n\nPossible exam questions\n- Define User Experience!\n- Difference User Experience - Usability\n- Describe applications where the subject’s satisfaction is of less importance than effectiveness and efficiency\n- Compare the advantages and disadvantages of a laboratory based and a field based evaluation of a user interface?\n- Describe the different characteristics of quantitative and qualitative measurements in HCI!\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/04-requirements":{"title":"04-requirements","content":"\n[requirements](notes/requirements.md)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/040-superstition":{"title":"040-superstition","content":"\n\"falsely attributing somet cause to some affect\"\n\ne.g., apple is preventing me from going to doctor\n\nmore common than commonly thought\n\nmost people are mistaken about the true causes of things\n\ne.g., sports fan thinkgs type of beer they drink affects outcome of game\n\n## on happiness\nmost people want to be happy\n\nso emulate people who are happy. they see rich people who are happy and think the cause of their happiness is their material things. eventualty realise than not all rich people are happy\n\nsocrates - \"happy is he who is content with the least\"\n\nhappiness lies in low expectations\n\nif basic needs aren't met would you be necessarlly be unhappy? -\u003e no you can still be accepting of that\n\n∴ happiness lies in acceptance\n\nwhat is acceptance: accepting what you have and what is in your future. so is happiness being fully present in this moment. when have money you are able to do this more easily \n\n## back to supersition\n\nThese ^ are all superstitious conclusions. we are all gulity of things like these. \n\nIt is good to periodically examine our own superstitions. However, if we know they're superstitions, why do we have them?\n\nhuge \"enemy\" during the enlightenment\n\n### The enlightenment\nrelatively short (relative to history), made up of three key generation of people who had ideas on the backs of each other.\n\nways to describe:\n- the ultimate awakening of mankind - start the snowball of reason\n- others say the snowball had been rolling since the middle ages (aristotle). enlightenment is just the culmination\n- fueled by religion - the counter reforation of the curch\n- propaganda - thinker propped up by people to give legitamacy to new way of thinking\n\nregardless it was transformative - attempt to abolish superstition is all areas of thought\n\n### bishop berkley\naboish superstitions with senses. \n\nwhat we percieve with our senses is not reality \"veil of perception\"\n\nwe have an idea of reality in our mind far from actual reality\n\nunderneath is some \"true\" reality. \n\nberkely questioned this assumption\n\nthe only thing we need to interact with is our  \"idea\" of reality\n\n\"immaterialist idealist\"  also a monist (the one substance is mind) and impericist (all knowledge is derived from sense experience)\n\nwe never experience the supposed \"real\" world, so how do we know it exists\n\n\"if a tree falls and noone sees it does it fall\" - if there was nobody or notging aroud to percieve it is wouldn't exists. but there is one entity that is perpetually aware of everything in the universe - God\n\nHe is the first in this line of thinking\n\ntyring to preserve the idea of god.\n\ngave rise to idealism - emanual kant\n\n\nhow did he get to this line of reasoning? why ask these questions? maybe because he was trying to preserve god. once matter is a substance that explained itself, what is stopping god from being removed. therefore. why does this physical stuff even need to exists at all\n\n\n### Voltaire\nnot a big fan of the religion of his day\n\nevolved throughout his life - deist -\u003e theist -\u003e ? Belived in the cosmological god.\n\ncommon to be anti-semetic. most peopole because mad at \"people who killed jesus\". valtaire was mad because jews made christianity able to exist. \n\neasy for us to project our time period onto voltaire. chistianity - islam - judaism, were different than they are now. they represented something bad to volatire (enemies of supersitions and tolerance). volatire wanted toleration, he thought that god was more that what these religions had laid out so far. \n\n#### letters concerning the  english nation\nanallysing system of govern in england after reformation following the (3) civil wars, knowing there would be a revolution in france soon\n\nliked some elements. they were producing good thinkers (newston, bacon, hobbs, and more)\n\ntrying to understand elements of english cuture and how they differed from france. in order to help the french revolution\n\nappreciates their system of religous tolerance. why do people of differenet religions get along so well. maybe because there are many different forms of religions. \n\nif there was only one religion - there would be no need for government\nif there were two religions - they would be fighting (e.g., democrat vs rebuplican)\n\nso more that two is best. no religion feels threatened by another religion.\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/05-6809-assembly":{"title":"05-6809-assembly","content":"\n\n- [6809](notes/6809.md)\n\n\n# Warnings\n- different CPU architectures have their own machine codes and their own assembly languages\n- assembly language programs are **not** portable across CPU architectures (e.g., 6809 to x86 ARM) but are often backwards compatible (e.g., x86_64 family)\n\n# Working up\n- High level languages\n\t- ↓ Compiler ↓\n- Assembly language\n\t- ↓ Assembler ↓\n- Machine code\n\t- ↓ Instruction Set ↓\n- Hardware\n\n# Motorola MC6809 CPU\n- 6809 (1978) 9000 transistors\n- Apple M1 Ultra (2022) 114,000,000,000 transistors\n\n![Image of 6809 CPU chip](https://i.imgur.com/DuKNuX1.png)\n\n# Machine Code\n- Computers are controlled by bit-patterns. \n- These patterns determine what the CPU does and to which memory location\n\t- Assign values to registers\n\t- load registers from memory\n\t- add numbers to registers\n\t- store registers in memory\n\t- and so on\n- This is called machine code\n\nIt is not very easy to programm this way\n- slow\n- not human readable\n- difficult to debug\n- etc\n\nTo make the process easier, we assign names to the numbers. This allows us to program symbolically. We call this assembly language programming\n\n## Programmer's Model\n\nThe programmer's model of a computer is not the same as the hardware model. The hardware makes the computer look a particular way to the programmer\n- e.g., your computer could have several memory chips in it, but it looks like one continuous block of memory\n\n## 6809 Memory\n- 64KB memory\n\t- called *memory space* or *address space*\n- each byte in numbered from $0000 to $FFFF\n\t- $ means hex (base 16)\n\t- for our purposes, all memory locations exist\n\t- so the computer memory is just an array\n\t\t- `unsigned char memory[65536]`\n\t- the 6809 memory is conceptually broken into **pages** of 256 bytes each\n\t- the first page is called zero page ( all address are of the form $00xx)\n\t- the second page is called page 1 ($01xx)\n\t- and so on\n\n## 6809 Registers\n\n![6809 registers table](https://i.imgur.com/Icvj7BJ.png)\n\n- Registers are like global variables\n- some are general purpose (X, Y)\n- some are broken down like a `struct` or `union`\n\t- D is made u of A and B\n\t- Write to A or B and D changes\n\t- Write a 16 bit value to D\n\t\t- Read each byte usinig A or B\n- some have special meaning\n\t- DP - direct page register, can beused to make instuctons that refer to the same memory page faster\n\t- PC - the program counter, stores the location of the instruction that is currently being executed\n\t- S - system stack pointer is just an index into the byte array we call memory [diagram](https://i.imgur.com/vImSjAJ.png)\n\t\t- e.g., we can say `lds #$BCD7` - `S=0xBCD7`\n\t\t- it's more useful to say `pshs a` - `memory[--S]=A`\n\t\t- or `puls a` - `A = memory[S==]`\n\t\t- this is why we call it a stack pointer\n\t- U - user stack pointer, like S but used for in routine (function) calls to \n\t- CC - condition codes, hold information about the result of previous operations\n\t\t- E - Entire\n\t\t- F - FIRQ mask (on 1)\n\t\t- H - half carry\n\t\t- I - IRQ mask (on 1)\n\t\t- N - negative\n\t\t- Z - zero\n\t\t- V - overflow\n\t\t- C - carry (ripple carry adder pushes and pulls carry from here)\n\n## Instruction Set\n- Determined by the CPU designers\n- instructions consist of one or more fields\n\t- the mnemonic **opcode**\n\t\t- e.g., return from subroutine (`rts`)\n\t- and (optionally) parameters called **operands**\n\t\t- e.g., GOTO (`bra more`)\n\t- instuctions are often of different lengths\n\t\t- `rts` one byte on the 6809\n\t\t- `bra more` is two bytes on the 6809\n\t\t- On ARM32 they are all 32-bits (4 bytes)\n\n### Syntax\n- normally case sensitive\n- syntax\n\t- `\u003clabel:\u003e\u003copcode\u003e\u003coperands\u003e;\u003ccomment\u003e`\n- labels\n\t- Start with a letter and ends with a colon (can be alphanumberic)\n- Operands\n\t- \\# immediate (if no # is given then it's an address)\n\t- $ hex value\n\t- % binary value\n- Examples\n\t- Load A with the value $0F\n\t\t- this is like A = 0x0F\n\t\t- `lda #$0F`\n\t- Load A with the value stored at memory location $000F\n\t\t- This is like: `A = memory[0x0F]`\n\t\t- `lda $0F`\n\t- Transfer the value stored in B into A\n\t\t- This is like `A = B`\n\t\t- `tfr b,a`\n\n### Opcodes\n- lda / ldx / ldy\n\t- load a value into the given register\n- sta / stx / sty\n\t- store the value of the register back into memory\n- tfr\n\t- transfer from one register to another. (tfr b,a)\n\nthe hard part is the missing instructions\n- 6809 has no `div` or `sqrt`\n\n![opcode table](https://i.imgur.com/VUGYHPi.png)\n\n### Functional Groups\n- Instructions exist for \n\t- data transfer\n\t\t- between registers\n\t\t- betwen registers and memory\n\t\t- push and pull from stack\n\t\t- [instructions](https://i.imgur.com/nMQuwma.png)\n\t- data processing\n\t\t- arithmetic, logical, shift operaitons\n\t\t- [instructions](https://i.imgur.com/67Els9d.png)\n\t\t- [instructions 2](https://i.imgur.com/gMhKiVb.png)\n\t- test and jump / branch\n\t\t- check bits in the flag resister and conditional jump\n\t\t- [test and jump instructions](https://i.imgur.com/q0GImXS.png)\n\t\t- ![branch instructions](https://i.imgur.com/OBNIwMj.png)\n\t- input ouput\n\t\t- instructions that access the zero page\n\t\t- `out` and `in` instructions on x86\n\t- control\n\t\t- interrupt handling\n\t\t- [instructions](https://i.imgur.com/Mj4PYC2.png)\n\n## 6502 Fibonacci in Machine Code\n\nExample program:\n\n- 4C 13 00 00 00 00 00 00 \n- 00 00 00 00 00 00 00 00 \n- 00 00 00 A2 10 A9 01 8D \n- 10 00 8D 11 00 8D 12 00 \n- A9 31 8D 0F 00 8D 0F 00 \n- AD 10 00 6D 11 00 8D 12 \n- 00 69 30 8D 0F 00 AD 11 \n- 00 8D 10 00 AD 12 00 8D \n- 11 00 CA D0 E3\n\n[visualisation of comuter](http://www.visual6502.org/JSSim/expert.html?loglevel=0\u0026a=0000\u0026d=4C130000000000000000000000000000000000A210A9018D10008D11008D1200A9318D0F008D0F00AD10006D11008D120069308D0F00AD11008D1000AD12008D1100CAD0E3)\n\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/05-cryptography":{"title":"05-cryptography","content":"\n# news\n- zodiac killer code cracked\n- twitter leak\n\n# Brief history\n- study of secret messages\n- confidentiality of [cia-triad](notes/cia-triad.md)\n- also small role in integrity (authentication of message, and sender)\n- history of cyprtopgraphy is interwined with information technology\n\nLanguage use for communication seems to be part of human nature: perhaps the use of covert lanuage is too\n\n## need for confidentiality\n\"nothing to hide: nothing to fear\" look at edward snowdens corrolary\n\nWe all have legit needs for privacy. Cryptography provides technical measure for ensuring this privacy.\n\n## history\n- caesar cipher\n\t- simple substitution scheme (rotation)\n\t- vulnerable to cryptanalysis\n\t- key is a single integer\n\t- symmetrical (same key for encrypt and decrypt)\n\t- so ciphertext has the same patterns as the plaintext e.g., letter frequencies\n\t- this leads to cryptanalysis: systematic ways of determining the encryption scheme\n\t- modern ciphers aim to make the cipher text resemble *noise* (random data)\n\n# General process\n- encrypt\n\t- plaintext + key =\u003e ciphertext\n\t- key is a secret\n- decrypt\n\t- ciphertext + key =\u003e plaintext\n\nmathmatically\n- c = e(p, k)\n- p = d(c, k)\n\n# Terminology\n- copy later\n\n# Plaintext\nrefers to unencypted message. In the digital age the messages are often not plain text (ascii, unicode, etc).\n\ndigital crypto schemes normally work on the binary data (images, .docs, .txt, mp4 etc.)\n\n# Conventions\n- alice, bob, charlie, etc\n- mallory -\u003e malicious\n- etc\n- public vs private domains\n\t- assume communication is public\n\t- assume information is prepared and consumed in private domain\n\n# Randomness\n- a lack of predicability\n- no patterns\n- stochastic (can be analysed but not predcted) vs deterministic\n\nused for\n- one time pad\n- generating key-pairs\n- generating salts for password hashing\n- seeding pesudo random number generators\n\nhumans are not good at randomness\n- e.g., see patterns when there are none\n- e.g., random dot pattern\n- shuffle algorithm\n- gambers fallacy\n\ncomputers have the same problem: they are deterministic\n- cannot really produce true random numbers\n- CSPRNGS crypto secure pseudo random number generators\n- hardware entropy generator\n\nentropy pool\n- modern OSs implement an entropy pool that processes can draw on when the need random data\n\t- some systems provide blocking and non-blocking random source devices\n\t\t- blocking: will stop when entropy is exhausted\n\nhow to prove randomness\n- cannot prove\n- but can check for uniformity, bias, distribution etc. \n- difficult with small samples\n- can identify data that is unlikely to be random\n\t- (rngtext, diehard, dieharder etc)\n\n# Future\n- arms race\n- parallell co-ordination\n- quantum copmuting/cryptography could radically change the field\n\t- already being developed and investigated\n- security practitioners are are already developing things for quantum computing. ","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/05-javascript":{"title":"05-javascript","content":"\n# Javascript\n## DOM\n- JS can access and change all the elements of an HTML document\n- When a webpage is loaded, the browser creates a DOM of the page\n- The HTML DOM model is contructed as a tree of Objects\n\n![HTML DOM Diagram|300](https://i.imgur.com/2TZ2i1c.png)\n\nJS can:\n- change elements\n- change attributes\n- change styles\n- remove elements\n- add new elements\n- react to events\n- create new events\n\nJS is \n- descriptive\n- structued\n- interpreted\n\ncan be linked externally\n- `\u003cscipt src=\"script.js\" defer\u003e\u003c/script\u003e`\n- `defer` ensures that the js is loaded after the html (in a specific order)\n- `async` ensures that the js is run as soon as it is loaded (not in a specific order)\n\ntyping\n - js is dynamically typed\n - you dont need to specify the type of variable\n\nevents\n- e.g., click, hover, resize etc\n- smoke alarm analogy\n\t- fire is the event\n\t- alarm is the listener\n\t- sound of the alarm is the handler\n\ncookies\n- websites can use JS to store cookies on client machines.\n- usually server 'serve' the file to the user and nothing else\n- cookies allow to server to remember information about the client\n- `document.cookie`\n\nlimitations\n- cannot write to files (apart from cookies)\n- cannot execute programs on client computer\n- cannot establish a connection to any server except the one it came from (apart from re-directing to a new site)\n- cannot read history of brower (but is can cause the brower to move around in the history list)\n- not supposed to be able to open an invisible window\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/054-hume-on-art":{"title":"054-hume-on-art","content":"\nTastemaker:\n- strong sense\n\t- able to see and experience the art (i.e., not blind, deaf etc)\n- delicate taste (perceptive of delicate sentiment)\n\t- should be able to see what makes a piece of art good\n- practice\n- free of prejudice\n\t- Nostalgia\n\t- Novelty\n\t- Complexity\n\t- And more\n- comparison\n\nThere is something consistent about art. The greatest scientist may not be the greatest of all time, but the greatest artists are strangely timeless.\n\nAll sentiment is right; because sentiment has a reference to nothing beyond itself, and is always real, wherever a man is conscious of it.\n\nBeauty is no quality in things themselves: It exists merely in the mind which contemplates them; and each mind perceives a different beauty.\n\nA man in a fever would not insist on his palate as able to decide concerning flavours; nor would one, affected with the jaundice, pretend to give a verdict with regard to colours. In each creature, there is a sound and a defective state; and the former alone can be supposed to afford us a true standard of taste and sentiment. If, in the sound state of the organ, there be an entire or a considerable uniformity of sentiment among men, we may thence derive an idea of the perfect beauty; in like manner as the appearance of objects in day-light, to the eye of a man in health, is denominated their true and real colour, even while colour is allowed to be merely a phantasm of the senses.\n\nThus, though the principles of taste be universal, and nearly, if not entirely, the\nsame in all men; yet few are qualified to give judgment on any work of art, or establish their own sentiment as the standard of beauty.\n\nStrong sense, united to delicate sentiment, improved by practice, perfected by comparison, and cleared of all prejudice, can alone entitle critics to this valuable character; and the joint verdict of such, wherever they are to be found, is the true standard of taste and beauty.\n\nIt is plainly an error in a critic, to confine his approbation to one species or style of writing, and condemn all the rest. But it is almost impossible not to feel a predilection for that which suits our particular turn and disposition. Such preferences are innocent and unavoidable, and can never reasonably be the object of dispute, because there is no standard by which they can be decided.","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/06-6809-programming":{"title":"06-6809-programming","content":"\ndifficult\n- no variables\n- GOTO not loops\n- only compare ints and bytes\n- not really routines\n- all vars global\n- case sensitive\n\n# Hello World\n\n- need a routine that given a string will print each chracter one at a time\n- need to know how to print\n\n## Routines\n```\nroutine:\n\trts\n```\n\n- no params\n- no local vars\n\ncalling routine\n- lbsr, bsr, jsr\n- very subtle differences\n- we use bsr (branch to subroutine)\n\n```\nbsr routine\n```\n\n## Iteration\nuse GOTOs\n\n```\n\tclra           //A = 0\nmore:\n\tcmpa #$06      //compare A to $06\n\tbeq done       //if equal, branch to done\n\tinca           //increment a\n\tbra more       //branch to more\ndone:\n```\n\n- comparison only compares and sets flags in CC\n- you then branch on the result\n\t- `beq bge` etc\n- other intructions set flags to\n\t- `lda` etc\n- so\n\n```\nlda $45\nbeq somewhere\n```\n\n## 6809.uk text screen\n![](https://i.imgur.com/dC1idMA.png)\n\nwrite h to top left\n```\nlda #'H'\nsta $0400\n```\n\nadd an 'e' beside that\n```\nlda #'E'\nsta $0401\n```\n\n## print routine\n![](https://i.imgur.com/IEiGKtj.png)\n\n- pass the address of the string in Y\n- \"address\" - the index into the memory array the hold the first character of the string\n- use $00 to end the string\n\n## algorithm\n- print a string\n\t- Load a character from memory\\[Y] \n\t- Move on to the next character (Y++) \n\t- Compare the character to $00 If equal exit this routine \n\t- Write the character to the screen \n\t- Move on to the next screen location \n\t- GOTO start\n\nPUTS() 1\n\n```\n;\n; \nRoutine: PUTS \n; Pass the address of the string in Y \n; \nPUTS: \n\tldx #$0400 ; start of screen \nmore: \n\tlda 0,y ; current char -\u003e A  (load y into a)\n\tleay 1,y ; increment y \n\tcmpa #$00 ; was it a zero? \n\tbeq done ; if it was 0 then return \n\tsta 0,x ; write  (store a in x)\n\tleax 1,x ; increment x \n\tbra more ; repeat \ndone: \n\trts ; return from this routine\n```\n\nusing a as a temp variable\n\nread from y to x\n\n### constants\n```\nldx #$0400 ; start of screen\n```\n\n- this is a hard coded constant\n- the assembler replaces instances of screen with $0400 when it assembles the code\n\n```\nscreen EQU $0400 ; start of screen\nldx #screen\n```\n\n### post increment\n\nloaded A with 0 bytes past where Y point then increment Y\n```\nlda 0,y ; current char -\u003e A \nleay 1,y ; increment y\n```\n\ncan do this in one go\n```\nlda 0,y+\n```\n\ncan do the same with x\n```\nsta 0,x+\n```\n\n\nPUTS() 2\n```\n;\n; \nRoutine: PUTS \n; Pass the address of the string in Y \n; \n\nscreen EQU #$0400 ;start of screen\n\nPUTS: \n\tldx #$screen ; start of screen \nmore: \n\tlda 0,y+ ; current char -\u003e A\n\tcmpa #$00 ; was it a zero? \n\tbeq done ; if it was 0 then return \n\tsta 0,x+ ; write\n\tbra more ; repeat \ndone: \n\trts ; return from this routine\n```\n\n\n## CC set on load\nCC is set on an `lda` so if we loaded a zero then the Z flag will be set so we dont need cmpa\n```\nlda 0,y+ ; current char -\u003e A \nbeq done ; if it was 0 then return\n```\n\n## storing x, y, a\nneed to add an insruction to save them at the start and restore them at the end\n```\npshs a,x,y\npuls a,x,y\n```\n\nthere are other ways to do this\n\n```\n; Routine: PUTS \n; Pass the address of the string in Y \n; \nscreen EQU $0400      ; start of screen \n\nPUTS: \n\tpshs a,x,y        ; save a, x, and y \n\tldx #screen       ; start of screen \nmore: \n\tlda 0,y+          ; current char -\u003e A \n\tcmpa #$00         ; was it a zero? \n\tbeq done          ; if it was 0 then return \n\tsta 0,x+          ; write \n\tbra more          ; repeat \ndone: \n\tpuls a,x,y        ; restore a, x, y \n\trts               ; return from this routine\n```\n\n\n## calling the routine\n```\n\n```\n\n- label (message) to mark a sequence of bytes stored in memory\n- 0 at the end puts out routine only stops when is sees the $00\n\nthen\n```\nmessage:\n\t.byte \"HELLO WORLD\", 0\n\nSTART:\n\tldy #message\n\tbsr puts\n\trts\n```\n\n\n# assembler\n- compiles assemble to machine code\n- can also dissamble machine code\n\nassembler create a listing file that gives the location, machines lcode, and assembly of the program \n![](https://i.imgur.com/a3DEdyj.png)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/06-async-javascript":{"title":"06-async-javascript","content":"\nAsync programming allows you to start a potentially long running task have still be able to interact while it it running\n\n# general process\n- start the task\n- return immediately so other tasks can run\n- notify us with result when the task is finished\n\n# promises\n- an object returned by an async function\n- represents the current state of the operation\n- when the promise is returned to the caller it not always finished\n- the promise object has methods to handle the eventual success or failure of the operation\n\n``` javascript\nconst fetchPromise = fetch('https://url.url.json')\n\nfetchPromise\n\t.then((reponse) =\u003e {\n\t\treturn response.json();\n\t})\n\t.then((data) =\u003e {\n\t\tconsole.log(data[0].name)\n\t})\n```\n\neach `.then` itself returns another promise which also has a `.then` method. This is called **promise chaining**\n\n\n## promise statuses\n\n**pending:** the promise is created but the task has not finished yet\n**fulfilled:** the task has finished successfully -\u003e `then()` is called\n**rejected:** the task has failed -\u003e `catch()` is called\n**settled:** fulfilled or rejected\n\n## combining promises\n\n```javascript\nPromise.all([fetchPromsise1, fetchPromsise2, fetchPromsise3]) //it is fullfilled once and if all the promises are fulfilled\nPromise.any([fetchPromsise1, fetchPromsise2, fetchPromsise3]) //it is fulfilled once any one of the promises is fullfilled or all are rejected\n```\n\n# Async and await\nlooks like sync code but is actually async\n\nasync functions always return a promise\n\nthe `await` keyword can only be used in async functions. It makes the code wait at that point untill the promise is fulfilled\n\n``` javascript\nasync function myFunction(){\n\tconst response = await fetch('https://mdn.github.io/learningarea/javascript/apis/fetching-data/can-store/products.json');\n}\n```\n\n# error handling\nthe fetch API can throw errors\n\nto handle these, promise objects have a `catch` method. this is similar to a `.then` but only trigger when there is an error.\n\n``` javascript\nconst fetchPromise = fetch('https://url.url.json')\n\nfetchPromise\n\t.then((reponse) =\u003e {\n\t\treturn response.json();\n\t})\n\t.then((data) =\u003e {\n\t\tconsole.log(data[0].name)\n\t})\n\t.catch((error) =\u003e {\n\t\tconsole.error('could not get products: ${error}')\n\t})\n```\n\n# JSON\n\nJavasript Object Notionation\n\n``` json\n[\n\t{\n\t\t\"name\": \"john\",\n\t\t\"type\": \"person\"\n\t},\n\t{\n\t\t\"name\": \"bob\",\n\t\t\"type\": \"person\"\n\t},\n\t{\n\t\t\"name\": \"sally\",\n\t\t\"type\": \"person\"\n\t},\n]\t\n```","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/06-business-functions-and-use-cases":{"title":"06-business-functions-and-use-cases","content":"\n[approaches-to-systems-development](notes/approaches-to-systems-development.md)\n\n1. What are the two main approaches to systems development and how do they differ\n\n- object oriented - system is a collection of objects\n- tranditional - system is a collectin of processes\n\n[business-functions](notes/business-functions.md)\n\n2. What are business functions\n\nthings that a business *ought* to be doing not who, how, structure, tech\n\n3. What is a use case\nan interaction between a role and a system to achieve a goal\n\n4. What is a use case diagram used for\na high level descruption of how people interact with a system\n\n[use-case-diagrams](notes/use-case-diagrams.md)\n\n- dependencies\n\t- includes\n\t- excludes\n\t- requries\n\nwhat is the difference between requries and indludes\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/06-hashing-binary-public-key-cryptography":{"title":"06-hashing-binary-public-key-cryptography","content":"\n- ![terminology](https://i.imgur.com/p3b7Z0i.png)\n\n# news\n- pegasus project\n- cutting internet cables\n\n# Hash function\n- yields a small, districtive value (hash or digest) from an arbitrarily sized input.\n- one way function\n\t- non-invertable\n- uniform size (each ouput eqaully likely)\n- deterministic (same input maps to same output)\n- possibility of collisions (b-day paradox, potential attacks)\n\nmessage =\u003e hash() =\u003e hash\n\nalso\n- can be used for data structures\n\t- [hash-map](notes/hash-map.md)\n\t- lots of theory\n\t- often use modular arithmetic\n\t- usually have more complicated algorithms than mod\n\n## in crypto\n- needs to be\n\t- impossible to reverse\n\t- difficult to find collision\n\t- uniform length output (tunable)\n\t- must account for every bit of information in a message\n\t- must be sensitive to changes input (avalancge effect)\n\t- ouput should no contain apparent iinformation (appears random)\n\t- easily computed (usually)\n\t\t- for passowords should be slow\n\t\t- makes brute force attacks take time\n\t\t- key strechting (repeated application of hash)\n\t\t- use complex memory access patterns to defeat esp\n\neffectively a digital fingerprint;\n\n## collision probability\n\n$v = a^l$\n\n- ![theory slide|400](https://i.imgur.com/EqydQtI.png)\n- ![example slide|400](https://i.imgur.com/xEKxhIT.png)\n- ![reverse example slide|400](https://i.imgur.com/eWjhqjv.png)\n\ncan also be used to compare complexity of passwords\n- ![passwords slide](https://i.imgur.com/GdaMF4r.png)\n- should have about 80 bits of entropy\n\n\n- ![collision probability slide|400](https://i.imgur.com/auwVphr.png)\n\n## uses of hashing\n- ![hashing security appplications slide|400](https://i.imgur.com/v5T9yTB.png)\n- ![2|400](https://i.imgur.com/B9fgkGv.png)\n\n## good algorithms\n- ![safe|400](https://i.imgur.com/BlvhRJw.png)\n- ![not-safe|400](https://i.imgur.com/6ssAVGK.png)\n\n\n# One-time-pads\n- basic idea\n\t- generate single-use truly-random key they is at least as long as the plaintext\n\t- combine the key with the plaintext using XOR one bit at a time\n\t- resulting ciphertext looks like random noise\n\t- decryption must use same key (symmetric)\n\n## limitations\nimpossible to crack, if properly implemented.\n- but key must be shared\n- key distribution problem\n- need long, truly random, one time keys\n\t- must be used only once\n\n# assymetric cryptography\nuses different but mathematically related keys for encrption and decryption\n\n![asymmetric enryptio process|400](https://i.imgur.com/6fLEB5Z.png)\n\n![symmetric diagram|400](https://i.imgur.com/hGaHUWO.png)\n\n![asymmetric enryption diagram|400](https://i.imgur.com/0gp24Re.png)\n\n\n\n# digital signatures\nencryption + signing. signing verfies authenticity of sender\n\n![signing|400](https://i.imgur.com/kSqMnNC.png)\n![signin diagram|400](https://i.imgur.com/f9LSnIA.png)\n\nstream ciphers vs block ciphers\n\none bit at a time vs chunks\n\nreciprocal cipher\n![slide|400](https://i.imgur.com/fzxBWM9.png)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/065-mary-woolstonecraft":{"title":"065-mary-woolstonecraft","content":"\nroyal humane society - resusitation\n\nsaved mary woolstone craft from the river thames and resusitated after attempted suicide\n\nsuicide is crazy - all our intellect decides the only way is to end it all\n\nborn april 27th 1759\n\nrenaissanece - voltaire rossueau, burke\n\nborn into conservative household - dad was a drunk wifebeater\nshe tried to protect her mother\n\nlead to need to protect other women\n\nhelped her sister escape from bad marriage\n\nbecomes personal tutor to family with four young daughters\n* dfa\n\t- they were similar to other women of that age\n\t- conditioned to become a \"good wife\"\n\t\t- be quiet, loog good in a corset\n\t\t- sexual \"plaything\"\n\t\t- submission leads to a \"good life\"\n\t\t\t- not critical thinking etc\n\t- after being taught bny mary were incedibly succesful\n- despite reconsideration about slaves, there were no  reconsiderations as women as slaves \n- john locke - tabula rossa - \"maybe the content of someones character is dependent on their previous experiences\" \n\t- jean jaque rosseau emilie - education of men versus education of women\n\t\t- women - \"the whole education of women ought ot be relative to men, to please them, to be useful to them, to make themselves loved and honoured by them, to educate them when young, to care for them when grown, to counsel them to console them, and to make life agreeable and sweet to them, these are the duties of women at all times, and should be taught to them from their infancy\"\n\t\t- sounds like slavery\n\t- this is what woolstone craft is reponding to \n\t\t- \"strengthen the female mind by enlarging it, and there will be an end to blind obedience, but as blind obedience is ever sought for by power, tyrants and sensualists are in the right when they endevour to keep women in the dark, because the former only wants slaves and the latter a plaything\"\n\t\t- the system that opreses womens is like a tyrant,\n\t\t- women are percieved and mentally and physically inferior to men\n\t\t- chicken vs egg, women always stupid or have men made them stupid \n\t\t- introduced the idea that equality is for women and men (wow)\n\t\t- pursuit of true equality\n- read edomnd burke reflections (exalted tradition as ultimate guide))\n\t- mary rejected this - tradition should be questioned\n\t-  \n- after death was castaged for being a vixen \"whore\"\n\t- had many children without marrying\n\t- marraige laws were virtually legal slavery this is why she didn't marry\n- dared to questiont the social convention around her, while being hated\n- \"successful life\"\n\t- back then -\u003e \"submissive to husband who buys everything\"\n\t- now -\u003e \"?\" this is still happening - might be just as bad\n\t- what about men\n\t- \"admirable behaviour\" - contantly changing, with the culture and world - same for most cultural conventions\n\t- what is reponsible for this change\n\t\t- happen in bursts \"revolutions\"\n\t\t- some one points out a glaring injustice, then change occurs\n\t\t- philosophy and religion\n - who/what is the tyrant now - how am i being conditioned now.\n - futured generation will hate us as we have earlier generations\n\t - \"ill just defend the best behaviour set I know of\"\n\t - acknowleding how arbitrary our current norms are is freeing\n\t - what conditioning might have led to a convicts behaviour, can we change it\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/07-6809-advanced":{"title":"07-6809-advanced","content":"\n# addressing modes\n- implied `inca`\n- immediate `lda #$00`\n- extended `LDA $31FE` \n- extended indirect `LDA [$31FE]` or `LDA [HERE]` points to a memory location which specifies another memory location\n- direct `LDA $ff` or `lda \u003cHERE`\n- register `trf X,Y`\n- indexed `LDA $311E, X` use memory location that is the sum of the operands\n\t- `LDA ,X`\n\t- `LDA $23,X`\n\t- etc\n- indexed indirect `LDA [$10, X]`\n- relative `BEQ HERE`\n\t- BEQ does a short branch\n\t- LBEQ does a long branch\n\t- the value is relative to HERE\n- program counter relative `LDA TABLE,PCR ; A = the value stored at TABLE`\n\t- if all memory references are relative, then the program cna be loaded anywhere is memory, and will still work. It is said to be **relocatable**\n\n![operand cheat sheet](https://i.imgur.com/mA7Y8bE.png)\n\n# Calling conventions\nall global vars. this is discouraged in high level languages\n\nThe calling convention is the set of rules that describe \n- How to pass parameters \n- How to return a result \n- Which registers a routine may alter\n\n## CMOC\na 6809 C compiler\n\ncallling conventions\n- A routine must preserve Y, U, S and DP \n- A routine may change A, B, X and CC \n\n- Parameters are pushed on the stack in the reverse order \n- The caller pops them off the stack after the call \n\n- char parameters are promoted to int \n- unsigned char are promoted to unsigned int \n\n- Return 8-but values in B \n- Return 16-bit values in D \n\n- We’re not going to talk about passing a struct by value\n\n### example in C\nparameters\n``` c\nuint16_t two_params(uint8_t first, uint16_t second) { \n\treturn first + second; \n} \n\nuint16_t call_one(void) { \n\treturn two_params(204, 431); \n}\n```\n\n```\n```\n\nlocal variables\n\n``` c\nuint16_t one_param(uint16_t xyzzy) { \n\tuint16_t val = xyzzy; \n\treturn val; \n}\n```\n\n```\n_one_param \n\tPSHS U \n\tLEAU ,S \n\tLEAS -2,S \n\t* Formal parameter(s): \n\t* 4,U: 2 bytes: xyzzy \n\t* Local non-static variable(s): \n\t* -2,U: 2 bytes: val \n\tLDD 4,U \n\tSTD -2,U \n\tLEAS ,U \n\tPULS U,PC\n```\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/07-business-process-modelling":{"title":"07-business-process-modelling","content":"\n- understand core conepts related to business process mondelling\n- learn about commonly used business process modelling notations\n- understand the elemeents of a UML activity diagram\n\n1. What is a business process\n- [business-process](notes/business-process.md)\n- [business-process-model](notes/business-process-model.md)\n- [business-process-model-and-notation](notes/business-process-model-and-notation.md)\n- [unified-modelling-language](notes/unified-modelling-language.md)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/07-cryptography-applications":{"title":"07-cryptography-applications","content":"\n\ninterest doesn't have low level security\n- this would decrease compatibility\n- easier to add this at hosts and software layer\n\n# Layer model\n- each layer of network hides information about lower levels and adds information for higher levels\\\n- transmission is only at physical layer\n\nOSI model - more complicated but most common\n\nTCP model\n- application (http etc)\n- transport (tcp etc)\n- network (IP)\n- data link (ethernet, wifi)\n- physical layer\n\n# End to end principle\n- add \"smarts\" at the endpoints\n- easier to change these than the middle\n\t- keep middle simple, scalable, dumb\n- KISS\n\n# security not built in\n- originall no security\n- security was added\n\t- http -\u003e https\n\t- ssl (secure socket layer) has been replaced by tls\n\t- tls (transport layer security)\n\t- ftp - sftp (file transfer)\n\t- scp (secure copy)\n\t- ssh (secure shell)\n\n# security certificates\n- client needs to authenticate the server\n\t- also vice versa\n- need to establish secure connection\n- trusted third parties are used to sign server host's certificates\n- \"tree of trust\"\n- based on public key crypto\n\n# GPG\nGNU privacy gurad (free libre open source) work alike for PGP\n\n![GPG example|400](https://i.imgur.com/9f2TJl2.png)\n\n# S/MIME\ncryptography for email\n\nsecure multipupose internet mail expensions\n\noften not used, as it is not usually built in\n\n# Crypto\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/07-heuristic-evaluation-cont":{"title":"07-heuristic-evaluation-cont","content":"\n[heuristic-evaluation](notes/heuristic-evaluation.md)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/07-js-server-vs-client-side":{"title":"07-js-server-vs-client-side","content":"\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/07-mergesort-1":{"title":"07-mergesort-1","content":"\n[mergesort](notes/mergesort.md)\n\n[quicksort](notes/quicksort.md)\n\n[divide-and-conquer](notes/divide-and-conquer.md)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/07-testing":{"title":"07-testing","content":"- [testing](notes/testing.md)\n- [test-driven-development](notes/test-driven-development.md)\n- [unit-testing](notes/unit-testing.md)\n\n- understand that testing is useful for detecting bugs\n- contrast different types of testting\n- descrive the principle of test driven development\n- explain how unit tests are developed\n- indicate how languages integreate unit test support\n- apppreiciate limitation of software testing\n\n# Flash cards\n## Testing\nwhat are unit tests::Testing individual pieces of code \u003c!--SR:!2022-5-521,3,270--\u003e\nwhat are integration tests::tests checking that code works together \u003c!--SR:!2022-5-521,3,270--\u003e\nwhat are end-to-end tests::tests that check the behaviour of the while program \u003c!--SR:!2022-5-521,3,270--\u003e\nwhat is the halting problem::you cant fully analyse code using code \u003c!--SR:!2022-5-521,3,270--\u003e\n\n## TDD\nwhat is TDD::a software dev. methodology where tests are written before code \u003c!--SR:!2022-5-521,3,270--\u003e\n\n## Unit testing\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/077-marx-and-kierkegaard-religion":{"title":"077-marx-and-kierkegaard-religion-pt1","content":"\nsomething changes when you an actual photo of a philosopher. they become people, not enigmas (e.g., socrates). \n\n# Marx\n\"religion is the opiate of the masses\".\n\nlived in the era after the enlightenment. Dividends of these ideas are being paid. Trade is more available. There is ever increasing demand. Small crafter gave way to manufacturers. Power is given to these people. Max's thinks this is bad.\n\nMarx liked hegels dialectic:\n- thesis\n- antithesis\n- synthesis\n\napplied this to the economic history of the world. \n\n\"the history of all hitherto existing society is the history of class struggles\"\n\nalways two classes of people, rulers, and the exploited. rulers - thesis, exploited - anithesis, then revolution - synthesis. \n\ne.g.,\n- slavery vs slave master\n- peasants vs others\n\nmanufacturers - burgoise. others - politerate\n\nwe are the exploited class of this time period. rulers could be the big financial institutions\n\njust because you dont feel exploited doesn't mean you aren't. \n\nwhy would anyone be satisfied with this arrangement? why should be accept that revolution is necessary.\n\nrulers try to maximise their time in power. video games, movies, etc. distactin us from the world. \n\nultimate method of distraction is religion\n\n\n\n\"religion is the opiate of the masses\".\n\n\n\nmeant to mitigate the pain of being exploited. it is the ultimate fanstasy world. creates acceptance in the people. wverything is all \"gods will\". good for personal happiness, not good for society. \n\nthe structure of the religion of a time period mirrors the current econmic tactic of coercion by the ruling class. \n\ne.g., \n- heirachical structure of feudal system matches the religion of the time - catholism. \n- capitalism - liberty. religion abandons heirachical structure.\n\ntell the people \"the rich go to hell\".\n\nindividual moral progress is an illusion. the only thing that matters is the moral progress of society toward an end goal - the ideal society. \n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/078-marx-and-kierkegaard-religion":{"title":"078-marx-and-kierkegaard-religion-pt2","content":"\n# Kierkegaard\ndisagreed with marx. said progress is a conglomeration of individuals.\n\nthought it was likely that a world would emerge where people were no longer individuals. he thought there would more people living vicariously through others, than there were individuals. \n\ncolloseum example\n\ntwo pitfalls that make you less of an idividual\n- lost in infinite\n\t- \"anxiety is the diziness of freedom\"\n\t- \"analysis paralysis\"\n\t- need to take action\n\t- not using the ability to freely act - losing a part of your individuality\n- lost in finite\n\t- \"mindlessly following cultural and social conventions\"\n\t- usually unaware of their state\n\t- e.g., cows think they are freely acting, but they are actually folliwing the herd\n\ncan be in both states\n\nThe only way to stop thinking of the endless sea of possibilities is to \"make a leap of faith\". you can become an individual. \"leap of faith\" towards christianity.\n\nwas disgusted by the religion of his time. thought everyone was doing it wrong. \n\n\"Christendom is pampered with the nonsense that the Christian God is a decent and harmless chap a good fellow and especially a friend of female business and the beginning of children. All human effort tends towards hurting each other let us unite, etc. Naturally, this happens under all sorts of high sounding names, love and sympathy and enthusiasm  the carrying out of some grand plan and the like. This is the usual hypocrisy of the scoundrels we are, but the truth is that in a herd, we are free from the standard of the individual, so millions of men live and die, they're just numbers and the Numerical becomes the horizon, that is to say, they are just copies, and Christianity which, in the divine love wants every one to be an individual, has been transferred by human bungling into precisely the opposite\"\n\nthe bible is a system for bringing about the highest form of us as an individual.\n\nthe function of religion is to organise a commitment to a particular way of life. create own religion experiment\n\ncreates a \"cheatsheet\" for life.\n\navoid being lost is infinite or finite. so faith is the ultimate act of reason\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/079-kierkegaard-anxiety":{"title":"079-kierkegaard-anxiety","content":"\n\"anxiety is the dizziness of freedom\"\n\n\nthe biggest danger in this life is the loss of yourself. you might not realise you are in this situation.\n\nmost people are lost\n- lost in finite\n- lost in infinite\n\ntruly being a self required the realisation that you must make a choice\n\nwhen we are stuck between the two we experience \"dizziness\". we start catasrophizing.\n\nessense of anxiety - fear of some future outcome that we may have no control over\n\n\"Anxiety may be compared with dizziness he, whose eye happends to look down into the awning abyss becomes dizzy. But what is the reason for this? It is just as much in his own eyes as in the abyss. Anxiety is the dizziness of freedom.\"\n\nanxiety is the reaction we have to the sheer number of possibilites. What if i make a mistake?\n\nthis makes us uncomfortable, imbues a sense of *dread*. most peolple to avoid this. the road to becoming a self is tough. \n\nafter dread becomes despair. most people spend their life here. comes from the attempt to rid yourself of yourself. Despair is a sickness of the spirit. A disease affecting your emotional state. Its not always clear that you are in this state, you can be in despair and still seem like a happy person.\n\n\"most men are subjective toward themselves, and objective towards all others. Fightfully objective sometimes. but the task is precisely to be objective towards oneself, and subjective towards all others.\"\n\nmany types of despair. e.g., sickness of despair over something earthly. conflating identity with something external to yourself. \n\nUsing something to distract yourself from your state of despair. similar to kant idea of outsourcing things. echoes of buddism. \n\nwhile you are feeling anxiety you are becoming closer to your true self. \n\naim to find a \"truth that is true for me\"\n\nreject hegel notion that our choices are a product of our culture. \n\nfather of existentialism","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/08-business-patterns":{"title":"08-business-patterns","content":"\n[entity-relationship-diagrams](notes/entity-relationship-diagrams.md)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/08-debugging":{"title":"08-debugging","content":"\n[debugging](notes/debugging.md)\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/08-intro-to-c":{"title":"08-intro-to-c","content":"\nDeveloped 1972 for Unix\n\n- widely used\n\t- compilers esxist for most OSs and architectiures\n- diverse use\n\t- OSs, device drivers, protocol stacks\n\t- less so for application software\n- low level\n\t- language features map to CPU features \n- not Object Oriented\n\t- no classes etc\n\n\u003e “C is an imperative procedural language supporting structured programming, lexical variable scope, and recursion, with a static type system. It was designed to be compiled to provide low-level access to memory and language constructs that map efficiently to machine instructions, all with minimal runtime support. Despite its low-level capabilities, the language was designed to encourage cross-platform programming. A standards-compliant C program written with portability in mind can be compiled for a wide variety of computer platforms and operating systems with few changes to its source code.” - wikipedia\n\n``` c\n#include \u003cstdio.h\u003e\n\nint main(int argc, const char *argv[])\n{\n\tputs(\"Hello World\");\n\treturn 0;\n}\n```\n\n# \\#include\njava uses .class files, C uses .c and .h\n- .c for implementation\n- .h for extern declarations (similar to `public`)\n\njava uses `import`, C uses `#include`\n\n``` c\n#include \u003cstdio.h\u003e\n#include \"myfile.h\"\n```\n\n- `#include` literally includes the file with the given name right there into the file eing compiled\n- in `hello_world.c` we include `stdio.h` so we can call `puts()`\n\n# Routines\n``` c\nint main(int argc, const char *argv[])\n{\n\n}\n```\n\nroutines can be scoped to just the source code file\n- `static int eleven(void`\n\nroutines must be declared bfore being used\n- `extern int eleven(void):`\n\n# if, const, for, while, do, case etc same as java\n\n# Types\n\n```\nchar\nfloat, double\nint, short, long\nsigned, unsigned\nvoid\n```\n\n![integer ranges](https://i.imgur.com/5gmgTer.png)\n\n## sizeof\n- to find out size of any type (built-in or user defined)\n\n## stdint\n![stdint.h](https://i.imgur.com/7W6T0y5.png)\n\n## Structs\n- like classes but without methods\n- all fields public\n- you can have structs in structs\n\n## typedef\n- any type can be given a new name using typedef\n\n```\ntypedef struct\n\t{\n\t\tfloat x, y, z;\n\t} coordinate;\n```\n\n## static\n- the scope of this routine is local to this file\n- this variable maintains its value between calls\n\n```\nvoid keeper(void) { \n\tstatic uint64_t times_called = 0; \n\ttimes_called++; \n\tprintf(\"Count:%llu\\n\", times_called); \n}\n```\n\n## typecasting\nlike java\n```\nuint64_t y = 1024;\nunit32_t x = (unit32_t) y;\n```\n\n## Keywords to ignore\n- auto\n\t- all local variables are auto\n- register\n\t- deprecated\n\n## keywords to think about\n- volatile\n\t- do not optimize accesses to this variable\n\t\t- might be changed by another thread or a harware event\n\t- you're likely to see this in operating system souce code\n\t- you're likely to see this in multithreaded programs\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/08-mergesort-2":{"title":"08-mergesort-2","content":"\n[mergesort](notes/mergesort.md)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/08-personas-and-scenarios":{"title":"08-personas-and-scenarios","content":"\n- [personas-and-scenarios](notes/personas-and-scenarios.md)\n- [storyboards](notes/storyboards.md)\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/08-web-frameworks":{"title":"08-web-frameworks","content":"\n\n[slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2969691-dt-content-rid-19006823_1/xid-19006823_1)","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/083-henry-david-thoreau":{"title":"083-henry-david-thoreau","content":"\ntrancendentalist\n\ngraduated harvard, got a job as a school teacher. He was against corporal punishment and quit. opponent of slavery, conservationist. \n\nhow to persuade people to agree? \n\nare you oblisged to agree with the majority ina democracy or the opposite.\n\nread self reliance by ralph waldo emerson. meant to teach the importatnce of being an \"individual\" - \"there comes a time in every mans education, when he arrives at the conviction that envy is ignorance, that imitation is suicide that he must take himself for better or for worse as his portion\" \n\nas a human we need to find out who we are. none of us are born with this knowledge so we conform with what others are doing. but imitation is suicide of your individuality. \n\nbest thing to do is figure it out for yourself. objective truth is hard to define\n\ntrancendentalism -\u003e takes other ideas, and creates an approach to life needs meaning, and that one must find this meaning himself. aim to understand personal truth about the way things are. \n\nsociety is in conspiracy againt the manhood of its members. \n\nsociety promotes conformity, protects the mentally and physically lazy. obstacle blocking living individualy\n\nthe more you own , the more your stuff owns you. \n\ntry to \"fix yourself using material things\". not only material things, also e.g. travel. \n\nwhen people are given freedom they act like everyone else.\n\n\n ","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/09-data-modelling-and-normalisation":{"title":"09-data-modelling-and-normalisation","content":"\n- [redundancy-and-anomalies](notes/redundancy-and-anomalies.md)\n- [dependencies](notes/dependencies.md)\n\nwia functional dependecy::when some attribute has exactly one associated other attribute \nwia transitive dependency:: A→B, B→C [Transitive dependency](notes/dependencies.md#Transitive%20dependency) \u003c!--SR:!2022-5-521,3,250--\u003e\nwia partial dependency:: when a subset of the left determines the right\u003c!--SR:!2022-5-521,3,250--\u003e\nwia multivalued dependency::when something has a set of associated values of another attribute \n\n- [normalisation](notes/normalisation.md)\n\nwhat is normalisation::formal process of eliminanting unnecessary redundancy in relations by splitting relations into smaller chunks","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/09-documentation":{"title":"09-documentation","content":"\n[documentation](notes/documentation.md)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/09-intro-to-c-2":{"title":"09-intro-to-c-2","content":"\n# Variables and Pointers\n\n```\nva memory[3]\n*va memory[memory[3]]\n**va memory[memory[memory[3]]]\n```\n\n`*` is known as **dereferncing**\n`**` is known as **double-dereferncing**\n\n## Names and places\nnames are allocated to emmory locations of declaration\n\n`\u0026b;` wherever in memory b is stored\n\n## Why Pointers\n- abstractions\n\t- dont need to know which \"object\" to manipulate\n- ability to change a parameter\n- multiple return values from a routine\n- efficiency\n\t- dont need to copy anything to pass a pointer\n\n## Call by value\n- The value of the variable is passed to the called routine.\n- changes to the parameter do not propogate to the caller\n\n## Call by address\n- address of parameter is passed to the rountine\n- changes do propogate back to the caller\n- more efficient because we only need to pass a pointer and not a value\n\n### Multiple results\n- c routine can return at most one value\n- you can use input parameters which are pointers for \"returning\" results\n\n### Arrays\n- strings\n\t- terminated by \"\\0\"\n- argc, argv[]\n\t- length specified\n- null terminated\n\t- array of pointers\n\n### Pointer arithmetic\n- ++ move a pointer fowards in an array\n- -- move a pointer back in an array\n- these operations are \"type aware\" and increment (the pointer) by the size of the elements of the array","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/09-paper-prototypes-wiz-of-oz-video-prototypes":{"title":"09-paper-prototypes-wiz-of-oz-video-prototypes","content":"\n- [wizard-of-oz](notes/wizard-of-oz.md)\n- [video-prototyping](notes/video-prototyping.md)\n- [storyboards-mockups-paper-prototypes](notes/storyboards-mockups-paper-prototypes.md)\n\n# Paper protoypes\n\n- brainstorming. e.g., ![](https://i.imgur.com/IKIEHon.png)\n- refinement of design and communicating ideas. e.g., ![](https://i.imgur.com/A7paq38.png)\n- -   evaluating interfaces\n\nExample of previous years 203 work\n![](https://i.imgur.com/NvgJA8n.png)\n\n# Digital prototypes\n\nPast 203 work\n![](https://i.imgur.com/d4b22ZM.png)\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/09-stacks-queues-heaps":{"title":"09-stacks-queues-heaps","content":"\n- [dynamic-linear-datatype](notes/dynamic-linear-datatype.md)\n\t- [Stack](notes/dynamic-linear-datatype.md#Stack)\n\t- [Queue](notes/dynamic-linear-datatype.md#Queue)\n- [priority-queue](notes/priority-queue.md)\n- [heap](notes/heap.md)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/09-web-databases-networks":{"title":"09-web-databases-networks","content":"\n[slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2970235-dt-content-rid-19019218_1/courses/COSC203_S2DNI_2022/COSC203_lecture9.pdf)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/091-nietzsche-wilil-to-power":{"title":"02-nietzsche-wilil-to-power","content":"\n\nWhy do we do things: usually to be happy. some might say — no i life my life to serve i sacrifice i volunteer etc — but this still on some level, brings them happiness. \n\nBut then why do people to so many things that make them unhappy (e.g., jealousy, guilt). Some people say (in a very shopenhauer approach to things) that these things happen because of survival, the will to life. \n\nbut then if the goal was survival, why do people go skydiving etc. Its more complex than just survival\n\nNietzsche says its not will to happiness, its not will to survival, its will to power. by power he means becoming who you are, finding yourself, self expression. \n\nWe are a part of the animal kingdom, we are part of an ecosystem. other animals e.g., bears have a will to power, to imporve their curcumstances. We are the same, but we have big brains so their are more ways to achieve this. \n\nsome people say this notion of a will to power, extends to the entire universe. it it possible that by looking at our own existense we can learn about stars, planets etc. \n\nthe will to power could be anything: large business, my tiny cabin in the woods by a surf spot. It's whatever you want. \n\n\nThere are things we must overcome find get this \"power\". Humans have many differnt ideas conditioned into us that we need to overcome before we become our true self\n\n\n\n\nsince we exist in this world as individual agents exerting our will power, everything else is the same. all the different wills to power often condtradict each other. we dont have control over the universe, about who hits my car, etc. we have no ultimate control over the world. this is usually solves by focusing on controlling the internal world: buddism, stoicism, etc. \"pain is certain, suffering is optional\". however this diminishes value of good things. \n\nNietzsche says that earthly attachment is necessary and, the solution is to try as hard as we can to control as much as possible.\n\nthe reason most people dont do anything extraordianry is becaue of fear or laziness. \n\nthe worst thing is a fear of failure. we should take calculated risks. embrace the danger, embrace pain. most people run from pain and try to minimiise is. pain serves a purpose to us. its the only way we grow as people. \n\nthe only way to experience the most intense highes is to experience the most intense pain. its only people with courage who will summit the mountain. \n\nits easy to manufacture the most comfortable life. \n\nthought experiment: what if you had to repeat your life over and over again, without changing anything, how pecious does each decision become then?","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/092-nietzsche-pt3-thus-spole-zarathustra":{"title":"092-nietzsche-pt3-thus-spole-zarathustra","content":"\nIn this episode nietzsche talks about the  \"overman\". How there are three stages of life\n- the camel where we carry other people burdens and dont question why\n- the lion where we rebel and stop doing things for other people, questioning why\n- the child where we realise we dont have to reject everything, and we become like \"a child at play\"\n\nthen after these three there is the overman which is like an infinitely perfect person.\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/093-nietzsche-pt4-love":{"title":"093-nietzsche-pt4-love","content":"\nThis episode is about love. We talked about the idea of love from platos symposium\n\nhe says love is like a ladder with 6 steps\n- love for a particular body\n- love for all bodies\n- love for souls\n- love for laws and institutions (Love for the practice, custom or foundation that are derived from people with beautiful souls.)\n- love for knowledge\n- love for beauty itself\n\nis is commonly thought that when you find love for a higher rung, you no longer have love for the lower rungs. for example, once a person finds love of the soul, he might think that love of the body is merely lust.\n\nHowever, some people think the opposite. When you climb the ladder, you better understand the previous rungs","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/094-a-look-at-suffering":{"title":"094-a-look-at-suffering","content":"\nniel degrasse tyson said two things to live your life by\n- know more today than you did yesterday\n- limit the suffering of others\n\nIs the second one something we should all do?\n\nfyodor dostoyevsky says suffering is a necessary part of human life.\n\nHow do we define human progress?\n\nTranshumanism/hedonistic imperative\n- we limit physical pain by drugs (this seemed unrealistic to earlier humans)\n- why not limit all pain and place ourselves in an eternal state of bliss\n- we are the last of a dying breed\n- the last to exist in the \"darwinian pathology of conciousness\"\n\nThis idea has a lot of implications: \n- if we cant feel any pain, will we still be able to experience pleasure? will life become numb?\n\t- one arugment is that yes we will since people who are in almost constant pain still know they are in pain\n- Will we still be motivated (to make things better) to create new things, experiement, improve our condition etc\n- \"mental strength\" (e.g., stoicism, buddism) might be unnecesary \n- future generation will look at us the way we looked at e.g., plato (how different their world is)\n- we base a lot of judgements (eg., what is progress) on limiting suffering \n- deeper more complex emotions (pleasure)?\n\nDream thought experiment\n- if every time you slept and had a dream you lived a ful 75 year lifetime in that dream\n- at first you would live a perfect life, you would have everything you wanted: money, sex, etc\n- but eventually this would get boring and you'd introduce variance and things out of your control\n- then after some time, you'd want to not know you were even dreaming at all\n- at this point, you are just living in real life\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/095-are-we-living-in-a-simulation":{"title":"095-are-we-living-in-a-simulation","content":"\nThis question is becoming more and more popular. \n\nbreif note about descartes \"cogito ergo sum\". I think before I am. He systematically doubted everything and realised that the only thing he couldn't doubt was that since he was able to doubt, and he was thinking, he must exist. From this base be built up a sort of proof that the world is real. But it wasn't very good and he made many assuptions along the way.\n\nDrake equation: calculated the probability of other life based on number of planets, galaxies etc. Gave rise to the fermi paradox: why are there no aliens.\n\n2005 paper about are we living in a simulation presented three options:\n1. we go extinct before we are able to create the technology\n2. we reach the point where we can but for some ethical or otherwise reason we dont want to \n3. we do develop the technology and we do create simulations. In which case since there is only one base reality and many simulated ones, we are most likely living in a simulation.\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/098-schopenhauer-metaphysics-and-love":{"title":"098-schopenhauer-metaphysics-and-love","content":"\nAgreed with Kant (sorta)\n\nThought that things have a \"true form\". But unlike kant thought that everything\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/10-continuous-integration-1":{"title":"10-continuous-integration-1","content":"\n[continuous-integration](notes/continuous-integration.md)\n\n1. explain the term continuous integration\n2. describe different purposes for CI\n3. indicate how CI jobs are usually triggered\n4. understand implications of CI running asynchronously\n5. Exlplain how to manage output from CI jobs\n6. describe role of stages and jobs within gitlab pipelines\n7. indicate how CI specifications are stored\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/10-design-heuristics-1":{"title":"10-design-heuristics-1","content":"\n## 1 Wizard of OZ\n[wizard-of-oz](notes/wizard-of-oz.md)\nsimulating machine behavior with human operators\n\n## 2 Video prototyping\n[video-prototyping](notes/video-prototyping.md)\n\n## 3 Creating and comparing alternatives\ncreate multiple ideas in parallel rather than one after the other \n\n![](https://i.imgur.com/zPrMKlz.png)\n\n## Functional fixation\nThis is when you get tunnel vision about some design. This causes you to not consider other possible alternatives.\n\nFor example with nail problem, almost nobody consider using the nails it the way that is needed.\n![](https://i.imgur.com/h1c095B.png)\n\n## 4 Design heuristics\n[design-heuristics](notes/design-heuristics.md)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/10-heaps-and-heapsort":{"title":"10-heaps-and-heapsort","content":"\n[heapsort](notes/heapsort.md)\n\n\n# 1 Overview\n[[notes/heap]]\n\n# 2 Operations\n## 2.1 Add element\nAssumptions\n- access first vacant position\n- set (or find) the value $H.q$ stored in any (occupied) position $q$\n- access parent of any given position\n- identify when we're at the root\n(all in constant time)\n\nOutcome: Change $H$ by adding x to it, while maintaining the heap conditions\n\n```\np \u003c- first vacancy, H.p \u003c- x\nwhile p is not the root and H.parent(p) \u003c H.p do\n\tswap H.parent(p) and H.p\n\tp \u003c- parent(p)\nend while\n\n```\n\n## 2.2 Remove the maximum\nOutcome: Change H by removing its maximum (i.e., root) value wile maintaining the heap conditions\n\n```\nv \u003c- H.root\nset H.root to be the value stored in the last occupied position\np \u003c- root\n\nwhile p has children\n\tif the largest value, H.c of a child of p is greater than H.p then\n\t\tswap H.c and H.p, p \u003c-c\n\telse\n\t\tBreak\n\tend if\nend while\n\nreturn v\n\n```\n\n\n## 2.3 Complexity\nIn addition, we move along a branch from an added element up to the root, fixing violations as we go\n\nIn removal, we move from the root down through some branch until all violations are fixed (can only occur if node has children)\n\nSo both loops do most Ο(lg n)\n\n## 2.4 Storage\n![](https://i.imgur.com/04qVrGQ.png#invert)\n\n- Array\n- root at position 0 and children at 1 and 2\n- children of 1 to in 3 and 4, children of 2 go in 5 and 6\n\n- first vacant pos --\u003e heap[n]\n- value at pos q --\u003e heap[q]\n- get parent of q --\u003e parent(q) = (q-1)/2\n- get children of q --\u003e (2 * q) ± 2\n- identify if q is root --\u003e q == 0\n\n## 2.5 Implementation\n\nUse java.util.PriorityQueue\n\n# 3 Heap Sort\nIn place and ϴ(n lg n)\n\n- start with array\n- using itself as a heap, add the elements one at a time until all been added\n- Then remove them one at a time - the largest elements gets removed first and the place where is needs to be put gets freed from the map\n\n# 4 Heap vs Merge\nheap --\u003e in place, ϴ(n lg n)\nmerge --\u003e not in place, Ο(n lg n)\n\nMerge is preferred because\n\n- MS can take advantage of partially sorted data (hence ϴ() vs Ο())\n- MS memory accesses are good fast\n- overwrites allow for optimizations that swaps do not\n\nextra memory cost of merge sort is negligible\n\n∴ Merge sort is faster\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/10-intro-to-c-arrays-malloc-free":{"title":"10-intro-to-c-arrays-malloc-free","content":"\n# Arrays\n- must declare with size\n\n``` c\nuint32_t array[10];\nfloat matrix[5][6];\ndouble balance[5] = {1000.0, 2.0, 3.4} //last two elementes will be initalised to zero\ndouble balance[] = {1000.0, 2.0, 3.4} //size is calculated automatically\n```\n\n- do not have methods\n\t- array.size etc\n- not bounds checked\n\t- can write past the end\n- to know must keep trach yourself or use sentinel value\n\t- 'H' 'e' 'l' 'l' 'o' '\\0' \u003c- sentinel value\n\n``` c\n//find the length of an array\nsize_t strlen(const char *of){\n\tchar *check = of;\n\t\n\twhile(*check != '\\0')\n\t\tcheck++;\n\t\n\treturn check - of;\n}\n```\n\n# quoted strings\n- \"Hello World\"\n- must be const - not allowed to change them\n\t- `const char *hello_world = \"hello world\"`\n- can use then in place of char arrays\n\n# Memory\nwhen we decalre an array we are saying \"choose somewhere in memory to put this number of that and call it thing\"\n\n```c\nthat thing[this];\n\nuint_t byte_array[1024];\n```\n\n- compiler chooses somewhere in memory\n- the name of the array maps to the location\n\n## segments\n- ![diagram](https://i.imgur.com/owQcqhJ.png)\n- translation between virtual and physical pages\n- compiler knows\n\t- where in memory program is stored\n\t- how much global data you use\n\t- where the stack is\n\n## malloc\n- \"memory allocate\"\n- always in bytes\n\n```c\nuint8_t *space = malloc(16); //give me 16 bytes of space\nuint64_t *block = malloc(sizeof(*uint64_t) * 16);\nuint64_t *another = malloc(sizeof(*another) * 16); //better: can change type without breaking it\n```\n\n\n## free\n**when you have finished using an allocated block you must free that block**\n\n```c\nuint64_t *block = malloc(sizeof(*block) * 16); //better: can change type without breaking it\n//do something\nfree(block);\n```\n\n- never free memory you didn't allocate\n- never free the same memory twice\n- must call free before you lose the pointer to the block of memory\n\n## bugs\n- malloc'd block is too small\n\t- buffer-overrun\n- didn't free a block\n\t- memory leak\n- malloc and free small units a large number of times\n\t- memory fragmentation\n- free same block more than once\n\t- corrupt memory management routines\n\t- lots of space between blocks that is too small to be used\n- using memory after it has been freed\n\t- it have been re-used by malloc","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/10-oop-concepts-and-uml":{"title":"10-oop-concepts-and-uml","content":"\n1. what is the concept of encapsulation and how is it enforced for objects\n2. how does and object refernce differ from a relational foreign key\n3. give an example of how difference UML diagram types can be linked when modelling a system\n\n- [object](notes/object.md)\n- [unified-modelling-language](notes/unified-modelling-language.md)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/10-routes-controllers":{"title":"10-routes-controllers","content":"\n[slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2971203-dt-content-rid-19033355_1/courses/COSC203_S2DNI_2022/COSC203_lecture10%281%29.pdf)\n\n# Routes and controllers\n## MVC model\n- design pattern\n- used in ios development\n\nroutes - foward requests to appropriate controller functions\ncontroller functions - get data from models, create html, display data, and return to view\nviews (templates) - used by controllers to render data\n\n## Routes\n - a section of express code that assocaites an HTTP verb, and url path, and a function to handle that pattern\n - route is a middleware created by `var router = express.Router();`\n\n### route path\n- define endpoints at which requests can be made\n- can be string patterns similar to regex\n\n## route parameters\n- named url segments used to capture values at specific positions in the url\n- e.g., `/:user/`\n- captures values are stored in `req.params` object\n- names must be made up of \"word characters\"\n\n## route functions\n- express middleware — must respond to or call another function in the chain\n- each functionis added to the middleware chain and is executed in order\n\n## middleware\n- objects that have access to req, res, and the next middleware function in the req-res cycle\n- e.g.,\n```\napp.use()\napp.METHOD()\nrouter.use()\nexpress.static\nexpress.json\nexpress.urlencoded\napp.use(cookieParser())\n```\n\n- middleware can\n\t- execute code\n\t- change the req and response objects\n\t- end the req-res cycle\n\t- call next middleware function in stack\n\n## forms\n- in html — a  collection of elements inside \u003cform\u003e\u003c/form\u003e tags, containing a submit element\n- used to collect user input\n- flexible - can colect many different types of input\n- secure - can send data in post requests with cross site request forgery protection\n\ne.g., \n``` html\n\u003cform action=\"/login\" method=\"post\"\u003e\n\t\u003clabel for=\"username\"\u003eUsername\u003c/label\u003e\n\t\u003cinput id=\"username\" type=\"text\" name=\"username_field\" value=\"\"\u003e\n\t\u003cinput tupe=\"submit\" value=\"OK\"\u003e\n\u003c/form\u003e\n```\n\nsequence\n- display form\n\t- blank or prepopulated fields\n- recieve data from user in HTTP post request\n- validate and sanitze data\n- if invalid - redisplay form with error messages, and user populated fields\n- if valid - perform required actions\n- redirect user to other page\n\n### validation and sanitization\n- required fields\n- correct format etc\n- remov/replace malicious input\n- can use express-validator module\n\n``` js\nconst {body, validationResult} = require('express-validator');\n\n[\n//...\n body('name', \"Empty name\")\n  .trim() //remove whitespace\n  .isLength({min: 1}) //check length\n  .escape(), //escape potentially dangerous chars\n]\n```\n\n### form routes\n- router.get() - serve page\n- router.post() - process request\n\n![](https://i.imgur.com/H1BXggu.png)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/11-class-diagrams":{"title":"11-class-diagrams","content":"\n[class-diagrams](notes/class-diagrams.md)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/11-continuous-integration-2":{"title":"11-continuous-integration-2","content":"\n1. Appreciate that GitLab is a complex software\n2. Understand where CI jobs scripts get run\n3. explain why repository servers can host websites\n4. Understand how gitblab dternmimines awhen a CI script failed\n5. Describe a way in which CI scripts scan handle secrets\n6. Outline uses of local git hook scripts\n\n[continuous integration](notes/continuous-integration.md)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/11-design-heuristics-2":{"title":"11-design-heuristics-2","content":"\n- [Show System Status](notes/show-system-status.md)\n- [Familiar Metaphors And Language](notes/familiar-metaphors-and-language.md)\n- [User Freedom And Control](notes/user-freedom-and-control.md)\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/11-sets-maps-trees":{"title":"11-sets-maps-trees","content":"\nA [set](notes/set.md) is :: a collection of elements with no repetition allowed \u003c!--SR:!2022-5-527,9,250--\u003e\n\nA [hash-map](notes/hash-map.md) is :: a set of key value pairs \u003c!--SR:!2022-5-526,8,250--\u003e\n\nA [tree](notes/tree.md) is :: a general concept of a way of organising data. \u003c!--SR:!2022-5-528,10,250--\u003e\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/11-struct-and-union":{"title":"11-struct-and-union","content":"\n# Struct\nnot a calss\n- class like *composite data type* called struct\n- POD plain old data\n\n## declare\n```\nstruct \u003cname\u003e{\n\t\u003ctype\u003e\u003cname\u003e;\n\t\u003ctype\u003e\u003cname\u003e;\n} \u003cvariable\u003e;\n\nstruct point_2d {\n\tdouble x;e\n\tdouble y;\n} point;\n```\n\ntypically an anonymous struct is declared and then given a name with typedef\n\n```\ntypedef struct {\n\tdouble x;\n\tdouble y;\n} point_2d;\n```\n\nThis is the common convention now.\n\n## initalize\n```\npoint_2d location = {0.0, 1.0}; //initalizers\npoint_2d location = {.y = 1.0, .x = 0.0}; //designated initalizers\n```\n\n## accessing\nuse the `.`\n\n```\npoint_2d location;\n\nlocation.x = 0;\nlocation.y = 1;\n```\n\n## shallow copy\ncopy the members including pointers\n- but not the things the pointers point to\n\n![shallow copy example 1|200](https://i.imgur.com/w3B3ce0.png)\n![shallow copy example 2|400](https://i.imgur.com/mL5QION.png)\n\n both point to the same memory location.\nwhen you change one - they both change.\n\n## passing to routines\n### by value\nneed to copy the whole objcet, usually slower\n```\nvoid thing_print(thing object) {\n\tprint(\"%f \",object.value)\n\tprint(\"%f\\n\", object.string)\t\n\tobject.value = object.value -1; //does not affect first because it is a copy of object\n}\n\nthing_print(first)\n```\n\n### by address\nusually faster. less data coming off and onto the stack\n```\nvoid thing_print(thing *object) {\n\tprint(\"%f \",object-\u003evalue) //struct-\u003efield === (*struct).field\n\tprint(\"%f\\n\", object-\u003estring)\t\n\tobject-\u003evalue = object-\u003evalue -1; //does not affect first because object is a pointer to first\n}\n\nthing_print(\u0026first)\n```\n\n## returning\n- return by value\n- never return a pointer to somthing on the stack\n\n# Queue\n- enqeue to tail\n- dequeue from head\n- FIFO\n\n![diagram|400](https://i.imgur.com/nD0AxGd.png)\n\n## enqueue with pointers\nqueue is a linked list\n`NULL` as sentinel value at end\n\n![diagram linked list|400](https://i.imgur.com/WFCbQjR.png)\n\n- go down list till we find null\n- create new object (`malloc`), value = 123, pointer = NULL\n- change null in final object to the new object\n\n```\ntypedef struct q_item {\n\tint value;\n\tstuct q_item *next;\n} queue_item;\n\n//for convenience we have a struct for the queue\ntypedef struct {\n\tqueue_item *head;\n} queue;\n```\n\nconstructor\n```\nqueue *queue_new(void){\n\tqueue *this = malloc(sizeof(queue));\n\tthis-\u003ehead = NULL;\n\treturn this;\n}\n```\n\nenqueue\n![enqueue code|400](https://i.imgur.com/suaKfi9.png)\n\ndequeue\n![dequeue code|400](https://i.imgur.com/u3mKX5R.png)\n\n# Structs as view\n```\ntypedef struct q_item {\n\tint value;             //4-byte integer\n\tstruct q_item *next;   //8-byte pointer\n} queue_item;\n```\n\n![](https://i.imgur.com/ObfIzew.png)\n\nstruct is a view where the members are laid out consecutively\n\n# Union\nmultiple views of the same memory\n- each line in the declaration is a different view\n\n```\ntypedef union {\n\tstruct {\n\t\tuint8_t a, b, c, d;\n\t};\n\tuint32_t integer;\n} two_views;\n```\n\n![diagram|100](https://i.imgur.com/qL8KnW5.png)\n\n## endianess\nbig-endian vs little-endian\nsome computer store the most significatn byte first, other store the least significant byte first\n\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/11-view-templates":{"title":"11-view-templates","content":"\n[slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2972656-dt-content-rid-19051721_1/courses/COSC203_S2DNI_2022/COSC203_lecture11.pdf)\n\n![mvc model diagram|400](https://i.imgur.com/Ini1bwk.png)\n\n# view templates\n## pug\npug is a view engine.\n``` js\napp.set('views', path.join(__dirname, 'views'))\napp.set('view engine', 'pug')\n```\n\na pug file \n- defines an html template\n\ne.g.,\n```\ndoctype html \nhead \n  title Pug \n  script(type= \"text/javascript\"). \n    if (foo) bar(1 + 5) \nbody \n  h1 Pug - node template engine \n  #container.col //auto makes div with classs\n    p You are amazing \n    p Pug is a terse and simple templating language. \n```\n\n### extending views\n- you can declare a base template and then extend it, replacing jus the bits you want to change\n\n![extending template example|400](https://i.imgur.com/nwF5Vlc.png)\n","lastmodified":"2022-12-19T01:23:07.359075088Z","tags":null},"/notes/12-automation":{"title":"12-automation","content":"links: [cosc-202-lectures](notes/cosc-202-lectures.md), [slides](https://cosc202.cspages.otago.ac.nz/lectures/L12-automation.pdf)\n\n---\n\n[automation](notes/automation.md)\n\n---\n\n# Garbage notes\n\nThe use of automatic equipment in a production process. We desire to remove repetive work within software development\n\n1. Automation within existing tools\n2. Tools that control other tools\n\nThis automation should be designed to be efficient and easy to use quickly for a useful purpose. It should also be reliable and safe\n\nDont spend more time automating than the time you will save. It's good to periodically re-check whether maintaining/developing an automation is warranted\n[Relevant xkdc](https://i.imgur.com/RvYHIUW.png)\n\n# 1 Beware\n\nAutomation bugs can rapidly cause big messes which can be difficult to undo\n\nSo it is useful to do a 'dry run' first to check you automation works\n\nAs always, keep backups\n\n\n# 2 Automating GUI's\n\n- Windows: AutoHotkey\n- macOS: Open Scripting Architecture\n- Linux: most tools aren't GUI-only\n\n\n# 3 Automating web apps\n\n[selenium](notes/selenium) can automate access to websites.\n\n\n# 4 Macros and snippets\n\n[integrated-development-environments](notes/integrated-development-environments.md) can create macros. For example within vscode you can define snippets. These are are often included in laguage extensions. These snippets are templates for often repeated chunks of text.\n\nFor example a snippet to create a latex slide\n\n```\n\"dframe\": {\n\t\"prefix\": \"BDF\"\n\t\"body\": \"\\\\begin{dframe}{$1}\\n \\\\1 $2\\n\\\\end{dframe}\n\t\"description\": \"New dframe\" },\n}\n```\n\n\n## 4.1 Programming language macros\n\nMany programming languages include macros. These are \"text replacement\" macros.\n\nFor example you can define a macro \"pi 3.14....\". This will then be expanded  when the program is compiled\n\n\n## 4.2 Shell automation\n\nMost command [shell](notes/shell.md) faciliate automation using shell scripts with loops and conditions.\n\nThese are more suited to quick and simple tasks, as more with more complex tasks it is hard to handle edge cases and quirks.\n\nA good way to make scripts safetly is to test the steps interactively before making them into a script\n\nIf a script is becoming complex, it is worth switching to python or some other language\n\n\n## 4.3 Office 365 automation\n\nOffice 365 has built in tools for automation. You can record macros using a GUI. You can use Visual Basic for applications. They also have a tool called Power Automate or Flow, which is used for building cloud based automations between products. This can faciliate forms of [continuous-integration](notes/continuous-integration.md)\n\n[Example Flow](https://i.imgur.com/Liiqzlh.png)\n\n# 5 Using tools to automate other tools\n\n## 5.1 Using code to create code\n\nYou can you a program to product source code. For example you can write a java program to generate java code. This is suited for producing repetitive error prone source code. \n\nFor example. You are building a command line tool. You want to have a help option. You can create a YAML definition to define command line arguments. You could then create code to parse this YAML and create generate the source code. \n\n[finite-state-machine](notes/finite-state-machine.md) are another example of something that may benefit from being created programatically\n\n\n## 5.2 Code generation using spreadsheets\n\nSpreadsheets allow a mix of pattern (using formula) and exceptions (overriding formula for a particular row). This allows you to \"eye ball\" your shell commands.\n\nFor example. each row is a command invocation. Columns build up command's invocation, including formulae. Then use concatenate function to join text from other columns. And copy and paste the rows into your shell\n\nThis is useful for idempotent commands. i.e., change happens once. As nothing bad will happen if a command is run twice\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/12-binary-search-tree-operations":{"title":"12-binary-search-tree-operations","content":"\nRecall [binary-search-tree](notes/binary-search-tree.md)\n\n[binary search tree operations](notes/bst-operations.md)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/12-design-heuristics-3":{"title":"12-design-heuristics-3","content":"\n- [Consistency And Standards](notes/consistency-and-standards.md)\n- [Error Prevention](notes/error-prevention.md)\n- [Recognition Over Recall](notes/recognition-over-recall.md)\n- [flexibility-and-efficiency](notes/flexibility-and-efficiency.md)\n- [Aesthetic and Minimalist Design](notes/aesthetic-and-minimalist-design.md)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/12-ethics-and-computing":{"title":"12-ethics-and-computing","content":"\n# what is ethics\n![example definitions|400](https://i.imgur.com/5A6nmkB.png)\n\n- concerned with the fundamental issues of practical decision making. what actions should we take or not take?\n\nrequirements for an ethical system\n- must be usable and practical\n- need to be able to learn it, and use it\n\nneed to maintain respect for others views\n\n# normative ethics\n- the study of ethical behaviour\n- investigates questions regarding how someone should act\n\nthree approaches\n- deontology (duty or rule based)\n- utilitarianism (consequentialism)\n- virtue ethics (character based)\n\n## deontology\n- categorical imperitive - instrinsically valid principles that are good in and of themselves\n\t- must be obeyed always\n\t- e.g., dont murder people\n- immanuel kant\n- fundamental assumption that each person has intrinsic worth and deserves basic respect\n- may be disagreements about principles involved - e.g., inherent universal ethics, religious laws, or cultural values\n\n## utilitarianism\n- maximise happiness and wellbeing for people\n- john stuart mill\n- practical approach, does not consider the rights of those who disagree, minorities, or the powerless\n\n- identify various courses of action, ask who will be affeced by each acction, and what benefits or harms with be derived from each\n- the ethical action is the one that provides the greatest good for the greatest number\n\n- best for everyone overall\n\n## virtue ethics\n- focues on character of individuals and developing qualities of virtue or excellence.\n- being a moral person rather than rule or action oriented\n- aristotle\n- eudaimonia - state of happiness, blessedness, or well-being\n- golden rule - treat other the way you want to be treated\n- golden mean - balance between extremes\n\t- e.g., courage - cowardice - recklessness\n\n## problems with ethical theories\n- virtue\n\t- depend on community having similar beliefs, values and close relationsihps\n- deontology\n\t- how to decide on common rules when different groups have opposing views\n\t- what is a \"right\" choice results in bad consequences\n- utilitatianism\n\t- harming a minority and benefiting a majority doesn't build mutually beneficial relationships.\n\t- can legitimise doing wrong by claiming that it is justified by the outcome\n\t- how do you know the outcome of thier choices\n\t- bad results can be explained away\n\n## bad examples\n![czarist russia vs russian revolution|400](https://i.imgur.com/6PVESbU.png)\n\nunforseen consequences can occur\n\n# applied ethics\n- association for computing machinery (ACM)\n- ![applied ethics slide|400](https://i.imgur.com/NUDInYq.png)\n\nacm code\n- concern for human well being\n- protecting individual rights and autonomy\n- do no harm (well inteded actions can lead to harm)\n- people should always be the central concern in computing\n\n![acm 1.1|400](https://i.imgur.com/N1jc50w.png)\n![acm 1.2|400](https://i.imgur.com/rcMzx7X.png)\n![acm 1.3|400](https://i.imgur.com/tUrFHVC.png)\n![acm 1.4|400](https://i.imgur.com/3g7Q2Jt.png)\n\n![acm 2.1|400](https://i.imgur.com/ZbW5Ius.png)\n![acm 2.5|400](https://i.imgur.com/otCEEWY.png)\n\n![acm 3.1|400](https://i.imgur.com/uIrA0uy.png)\n![acm 3.7|400](https://i.imgur.com/sM2jCUH.png)\n\n# censorship and misinformation\n- fire and fury documentary\n- disinformation project\n\n- what is it\n- what is censorship\n- how do we know what information is accurate\n- searchiing forinformation\n- why is this relevant to us\n- who decides what is legitimate information\n- how can science help with decisions\n\n## replication crisis\n![slide|400](https://i.imgur.com/iABMGCY.png)\n\ndoes funding influence the results that are obtained\n\n## controversial issue\n![ivermectin issue|400](https://i.imgur.com/LtRwXCk.png)\n\n##\n![points to consider slide|400](https://i.imgur.com/HommQ9Y.png)\n![summary slide|400](https://i.imgur.com/rQdBdjP.png)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/12-modelling-behaviour":{"title":"12-modelling-behaviour","content":"[slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2892846-dt-content-rid-18407618_1/courses/INFO201_S1DNIE_2022/2022/lectures/lecture_12_slides.pdf)\n\n[modelling-behaviour](notes/modelling-behaviour.md)\n\n- method signatures\n- inheritance of behaviour\n- lower level sequencing and flow of control\n- compartmentalisation into \"subsystems\"\n\n1. Compare and contrast the two typical approaches to inheriting behaviour in OO systems. \n2. What does it mean to “program to an interface�? and why is this important?\n3. Compare and contrast “rich�? versus “anaemic�? domain models with regards to behaviour.\n4. Give an example of a “processor�? in the context of OO system design and explain why these are useful.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Garbage Notes\n# 1 Example of Linked UML (not realistic)\n\n![](https://i.imgur.com/SAp9l60.png)\n\n![200](https://i.imgur.com/sDLFeRe.png) ![150](https://i.imgur.com/JXSxAKy.png) ![200](https://i.imgur.com/RhQZdep.png)\n\n# 2 Inheritance\n\n## 2.1 Inheriting behaviour via specialisation\n\ne.g., \n\n- subclass of item\n\t- inherit all public members of Item\n\t- can replace or customeise any intherited method\n\t- can add their own specialised methods (including constructors)\n\t- can’t concurrently be subclasses of anything else (single inheritance)\n- Things that know how to use Item will also accept Book or Disc.\n\n![](https://i.imgur.com/Nul5ECp.png)\n\n\n### 2.1.1 Specialisation in Java\n\n![300](https://i.imgur.com/D7nZ2ON.png)\n\n\n## 2.2 Inheriting behaviour via implenting an interface\n\n![](https://i.imgur.com/tZX8uQT.png)\n\n- Search specifies a set of common behaviour.\n\t- public methods and constant fields only (no variable fields)\n\t- effectively an “inheritable�? public API (no implementation) ⇒ Catalogue must implement all Search methods\n\t- independent of inheritance via specialisation\n\t- a class can implement multiple interfaces\n- Things that know how to use Search will also accept Catalogue.\n\n### 2.2.1 Interface in java\n\n![](https://i.imgur.com/2cXr5CM.png)\n\n- Examples of built-in Java interfaces: (also see INFO 202) \n- Collection: collections of objects (lists, sets, maps, …) \n- Iterable: collections that can be iterated over \n- Comparable: objects that have a concept of ordering\n\n## 2.3 Public API vs private implementation\n\n- The public API defines what a class can do \n\t- e.g., read and write data, manage a list of items \n\t- effectively a “promise�? or “contract�? to other classes that use it \n\t- should be as stable as possible \n\n- The private implementation defines how a class behaves \n\t- e.g., data stored in memory vs. CSV files vs. SQL DBMS vs. …, unsorted lists vs. sorted vs. unique vs. … \n\t- can change to improve speed, reduce memory, redesign architecture, take advantage of new language features, …\n\t- shouldn’t be exposed to other classes\n\n## 2.4 Why public and private are decoupled\n\n- More stable public API: \n\t- doesn’t expose internal implementation details \n\t- can change internals without breaking promised behaviour\n\n- More flexible public API: \n\t- less coding required to switch implementations \n\t- can easily switch internal implementations on the fly (e.g., print receipt vs. save as PDF vs. send as email) \n- Programming to an interface (i.e., public API): \n\t- encapsulate public API into a class or (Java) interface \n\t- subclass or implement this to create specific implementations \n\t- use the top-level class or interface everywhere you would otherwise use the specialised implementations\n\n## 2.5 Java collection interface example\n\n- A collection is a container for groups of objects: \n\t- e.g., lists, sets, stacks, trees, … \n\t- common behaviour (public API): add, remove, count items, … \n\t- specialised behaviour (private implementation): indexing, uniqueness, sorting, … \n- Java’s Collection interface defines common behaviour: \n\t- add() or remove() items \n\t- get size() of collection \n\t- … \n- All Java collection types implement Collection. \n\nAnything coded to work with Collection will accept *any* Java collection type. (e.g., ArrayList, HashSet, TreeMap, …)\n\n### 2.5.1 Bad example\n\n![](https://i.imgur.com/89PjFdT.png)\n\n- Internal details (ArrayList) are exposed in public API. \n- What if requirements change so that each product can appear only once? (requires HashSet) \n- Could change all ArrayList to HashSet, but: \n\t- need to update everywhere getAllProducts() and getProductsByName() are called! (⇒ massive breakage potential) \n\t- what if requirements change again\n\n### 2.5.2 Good Example\n\n![](https://i.imgur.com/j33SjYm.png)\n\n\n- Public API specifies Collection. (general) \n- Private implementation uses ArrayList. (specific) \n- Everything outside Inventory sees only Collection. (internal details not exposed)\n- Can switch to HashSet, TreeSet, … without breaking anything.\n\n# 3 Behaviour in Domain models\n\n## 3.1 Rich domain models\n\n- True OO involves sending objects “native instructions�? beyond basic getter/setter methods: \n\t- e.g., they can save, display, update, validate, etc., themselves \n\t- often requires communicating with other objects \n- Advantages: \n\t- better encapsulation ⇒ more scope for reuse \n\t- methods are highly cohesive (focused) \n\t- natural fit with programming to an interface \n- Disadvantages: \n\t- many “chicken and egg�? situations ⇒ harder to use \n\t- bordering on taking things too far (too much abstraction) \n\t- well beyond comfort zone of many developers (“exotic�?)\n\n### 3.1.1 Rich domain example: Library system\n\n![](https://i.imgur.com/TCNp6vY.png)\n\n\n## 3.2 Contrast with anaemic domain models\n\n- Objects have relatively little “native�? behaviour: (if any) \n\t- mostly just state \n\t- don’t inherit from anything else (class or interface) \n\t- getters/setters don’t really encapsulate much \n\t- methods manipulate only internal state (no external communication) \n\t- generally referred to as JavaBeans in Java (also POJO) \n- Require a lot of “plumbing�? code to shift data into and out of objects so we can do something useful with it. \n- De facto standard for most programmers/systems\n\n![](https://i.imgur.com/snGpG4m.png)\n\n\n## 3.3 Reducing the plumbing in anaemic models \n\n- Frequently need to move data between domain objects and other (sub)systems, e.g.: \n\t- GUI components (see INFO 202) \n\t- data stores (also see Lecture 17) \n\t- barcode management subsystem \n\t- shipping (sub)system \n\t- inventory (sub)system \n\t- … \n- “Processor objects�? can encapsulate these interactions: \n\t- effectively “(sub)system APIs�? that group related behaviour \n\t- either classes or (Java) interfaces, as appropriate \n\t- methods take relevant domain objects as arguments \n- Third-party frameworks can reduce the amount of code you need to write even further. (see INFO 202)\n\n![](https://i.imgur.com/EoX8sTA.png)\n\n# 4 Lecture summary \n\n- There are a variety of behavioural diagrams in UML. \n- Behaviour can be inherited directly via specialisation, or indirectly by implementing an interface. \n- interfaces decouple public API from private implementation \n- programming to an interface \n- Domain models can be “rich�? or “anaemic�?. \n- anaemic more common \n- use “processors�? to encapsulate “plumbing�? code\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/12-pen-testing":{"title":"12-pen-testing","content":"\n# News\n- DOC mt cook ransomware\n\n# Pen Testing\nintrustion detection, system monitoring, penetration testing\n- prevention detection analysis\n- some ovelap with forensices\n- IT interesting in prevention and detection\n- security specialists more interesting in analysis\n\n## Terminology\n- hacker \n\t- was originially positive - enthusism etc\n\t- became negative through public media (wargames 1983, Hackers 1984)\n\t- cracking can mean bad hacking\n- white hat - good\n- black hat - bad\n- others:\n\t- grey hat - may violate laws to discover vulnerabilites for good reasons\n\t- script kiddie - uses ready made exploits\n\t- hacktivist - hacks for political/social causes (e.g., Anonymous \"Anon\")\n\t- cyberwarfare\n\n## People\n- kevin mitnick\n- robert tappan morris\n\t- morris worm (to measure size of internet)\n- dan kaminsky\n- wietse venema\n\n## Risk assessment\nevaluate potential risks so you an safegurad against them\n- consider pobability and severity\n\t- e.g., risk matrix\n\t- SEP (Severity, Exposure, Probability) model\n\t- account to cost of safeguarding\n\t- remember complex attacks may be difficult to carry out\n- limitations\n\t- probabilites and severity are estimatse\n\t- limitations of qualitative assessment\n\t- subjectivity\n\n### Attack surface\ndescribe not how vulnerable you are but what vulnerabilites you have\n- refers to all potential vulnerabilities\n\t- includes social engineering etc\n- more components of system = greater attack surface\n- more widely available = greater attack surface\n- principle of leasts privilege\n\n![example risk matrix|400](https://i.imgur.com/RHVe8Vn.png)\n\n### SEP model\n- takes into account severity exposure (attcak opporunities), and probability using weighted scores\n- severity 1-5 — potential consequences\n- exposure 1-4 — frequency or duration of opportunity for attack to occur\n- probability 1-5 — likelihood of consequences given exposure instance.\n- overall risk is S x E x P\n\nOnce score is calculated, the course of action can be determined using the following table.\n![actions table|400](https://i.imgur.com/qWCvGgI.png)\n\n### Security through obscurity\nan optimistic/idealist approach. Better to think of STO as a pseudosecurity measure\n\n### Shannon's Maxim\n\"The enemy knows the system\", i.e., assume that any security mechanism is not secret.\n\n### Kerckoff's Principle (crypto specific)\nA cryptosystem should be secure even it its inner workings (though not the key) are know to an attacker\n\n### Questions to consider\n- what are the stakes?\n\t- why might you be a target?\n- who are your potential adversaries?\n- what resources might they have?\n- what is the cost to safeguarding against plausible attacks?\n- can you put a monetary value on your data or uptime?\n\n# Intrusion detection\nKnowing that an attack has happened, who did it etc\n\n- \"logging in\"/\"logout\" the event is logged\n- log files get large to rotation (splitting, compression and culling) is used\n- need to have a policy of retention and level of detail for log files\n- unix-like systems tend to use a standard format (plain test, one line per event, with a timestamp)\n- may need specialised tools to searching logs for relevant events\n\t- correlations, etc\n\nmany levels\n- system wide events (startup/shutdown)\n\t- often includes memory dump\n- authentication events (log in/log out, sudo commands)\n- network level (esp in conjunction with firewall rules)\n\t- log attempts to access ports\n- service specific (e.g., web server, db server, SSH)\n\n![example web server log](https://i.imgur.com/b6XDvJj.png)\nclient ip, timestamp, request, response code, data length\n\n## system monitoring in general\nattacks will often incur ususual loads on the system\n- more CPU usage\n- high login attempt frequency\n- large number of running processes\n- (unusuallly) high memory use\n- unusual or high network activity (DDoS or incoming attack)\n- unusual disk/io usage\n\nstandard tools\n- top\n\t- busiest processes - and their information (CPU, Memory)\n\t- general system information (cpu usage, num processes, network, etc)\n- ","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/12-pointers-to-routines":{"title":"12-pointers-to-routines","content":"\ncompiler ⇒ converts high level language description of program into assembly description of the program\nassembler ⇒ converts assebly language description into machine code description\nloader ⇒ loads program into memory, loaded at $4000\n\ndata has an address in memory, so does the application. Therefore functions must also have an address in memory which we can access\n\n# pointers to routines\n\n```\nint (*method)(int param)\n```\n\nto assign a pointer to a routine\n\n```\nmethod = square;\n```\n\nto call the routine\n```\nresult = method(6);\n```\n\n\n## basic example\n![pointer to routine example|400](https://i.imgur.com/qLy2uh3.png)\n\n## pointer as member of a struct;\npointers to routines can beused anyqhere variables can\n\n- member of struct\n![|200](https://i.imgur.com/03utoNr.png)\n\n- parameter to other routine\n![|200](https://i.imgur.com/cwjCgBg.png)\n\n# modules\n\nwe can break programs into functional modules\n- each modules excapsulates one behaviour\n- give us a way of data hiding\n\nadd pointer to structs as parameters to methods in modules\n- call this an abstract data type ADT\n- we communicatre with an ADT via its public interface\n\t- so that the implementation details are hidden\n\n![queue ADT|400](https://i.imgur.com/pk2kOE2.png)\n\nmethod in this struct are \"black box\"\n\nwe gain\n- abstraction\n\t- our queue has a print method, so could out stack, tree, and so on\n\t- we call ob-\u003eprint() without needing to know (exactly) which print method is called\n\n## constructor\ncreates object, initialises it and sets up function pointers\n![constructor|400](https://i.imgur.com/HM6P3QI.png)\n\n## destructor\ngood to use. help with closing things and freeing memory\n\n\n# modules overview\nc programs consist of .c and .h files\n- put ADT declarations in the .h (header) files\n\t- we can `#include` these files if we want to use the ADT in a program\n- put routine implementations in .c files\n\n## queue header\npragma says include only once: prevent include loops\n![queue.h|400](https://i.imgur.com/gpcNZG0.png)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/13-OS-intro":{"title":"13-OS-intro","content":"\n# why learn OS\n- security\n- optimisation\n- wierd bugs\n- \"crown of programming\"\n- understand hardware better\n- embedded sys and IoT\n- co-design of hardware and software\n\n# what is an OS\n![big picture diagram|400](https://i.imgur.com/9O1YR0p.png)\n-  a program (also called OS kernel) loaded onto RAM first when pc is turned on\n- OS kernel (in kernel space) has highest privilege and can access any hardware directly\n- user programs (in user space) cannot acces hardware unless permitted otherwise by the OS kernel via service request (sys call)\n\n\u003e a program (OS kernel) that manages the different aspects of the opereration of the machine and runs with the highest privilege in a protected domain\n\nmanages:\n\t- processes\n\t- data storage\n\t\t- ram, file systems\n\t- io devices\n\t\t- network\n\t\t- ui\n\t- security and protection\n\n## kernel vs user space\n- cpu can check space of software via  flag in status word\n- when interrupt or sys call occurs, the flag is ser to kernel space\n- kernel\n\t- protected space where software can access hardware\n\t- OS kernel is run in kernel space\n- user\n\t- other software is run in user space\n\t- non privilege space where softwar cannot access hardware\n\t- unless permitted by kernel\n\n## process management\na process is a program in execution\n- a program is not a process\n\nprocess management involves\n- creating and deleting processes \n- scheduling processes \n- suspending and resuming processes \n- process synchronisation \n- process communication \n- deadlock handling\n\n## storage manangement\nstorage: \n- primary (RAM)\n- secondary (hard drive)\n- tertiary (floppy disks, tapes, cd, etc)\n\nstorage manangement involves:\n- Allocating and deallocating storage \n- Keeping track of storage in use and free storage \n- Transferring data between primary and secondary storage\n\nDefn: the file system is the mechanism by which the user accesses/manipulates sotred data in secndary storage like hard disk\n\n## io device managment\n- A computer system can include a very wide range of I/O devices: keyboards, mice, printers, hard disks, CD-roms, etc etc etc. \n\nI/O device management includes tasks like: \n- tracking the status of each device \n- allocating devices to particular processes \n- deallocating devices \n- scheduling tasks for individual devices (e.g. disk scheduling) \n- these functions are built into modules called device drivers; each device needs one device driver to manage the hardware and serve the requests from user applications via the OS kernel.\n\n### UI\nDefn: the shell is the program through which the user interactins with the operating system\n\ntwo types:\n- icon based point and click\n- keyboard commands e.g., UNIX\n\t- harder to learn but more powerful and flexible\n\n# history\n- No OS\n- batch systems\n- spooling\n- time sharing\n- real time\n- ","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/13-UML-sequence-diagrams":{"title":"13-UML-sequence-diagrams","content":"\n[sequence-diagrams](notes/sequence-diagrams.md)\n\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/13-bst-traversals-and-balance":{"title":"13-bst-traversals-and-balance","content":"\n[tree-traversal](notes/tree-traversal.md)\n[balancing-binary-search-trees](notes/balancing-binary-search-trees.md)","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/13-code-librarires":{"title":"13-code-librarires","content":"\n[software library](notes/libraries.md)\n\n- Explain what a software library is \n- Describe reasons for/against using libraries \n- Understand transitive dependencies in libraries \n- Appreciate your obligations from using libraries \n- Outline considerations when writing libraries \n- Highlight features of the Java standard libraries","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/13-databases-1":{"title":"13-databases-1","content":"\n# What is a database\n- an integrated collection of data\n- implicit properties\n\t- represents some aspect of th real world, called miniworld\n\t- is a coherent collection of data with inherent meaning\n\t- is designed built and populated with data for a specific purpose\n\n## DBMS\n- a software system designed to store, manage, and facilitate access to the database\n- Oracle, SQL erver, MySQL, MonogDB\n\n## Application program\n- a program that provides access to the dtabase by sending queries and requests for data to the DBMS\n\n![data base system diagram|400](https://i.imgur.com/3xzWCw6.png)\n\n# This course\n- modelling and design of DBs \n- programming  (SQL + appliation development)\n- DBMS implementation\n\nspecifiically *relational databases*\n- ER modelling\n- datbase normalisation\n- SQL\n\n## relational vs nosql\nrelation is better for structured data, nosql is better for abstract data, as it is more flexible\n\n# Data modelling\nfirst step in designing database\n- create a data model for a specific problem domain\n\na model is Defn: a collection of concepts that can be used to describe the structure of a database such as data types, relationsips, and contraints that should hold for the data\n\nschema Defn: a collection of metadata that describes the logical view of a database\n\nnoSQL databases are either schema-free or have relaxed schemas\n\n![example database schema|400](https://i.imgur.com/09ATkHZ.png)\n\n## conceptual data modelling\nmodel the data close to the way the users percieve the data\n\nER model\n- popular high level conceptual model\n- uses diagrammatic notations - er diagram (ERD)\n\nthree notations\n- chens notation\n- crows foot notation\n- UML notation\n\n# Example\n![example data|400](https://i.imgur.com/t3fjN78.png)\n![examle chen notation diagram|400](https://i.imgur.com/5a2TCXm.png)\n\n# how to model\n## entities\n- a thing in the real world with independent existence\n\t- physical existence\n\t- conceptial existence\n\nentity type is a collection of entities with the same attributes — represented by a rectangle\n\n![example entity type|200](https://i.imgur.com/70VJhDg.png)\n\n## attribute\n- a property of an entity\n\t- simple (atomic) e.g, first name\n\t- composite (can be divided) e.g., address\n\t- single value e.g., id number\n\t- multi value e.g., siblings\n\t- stored - by default\n\t- derived - drawn as dashed ovals e.g., age is derived from birth date\n\t- key\n\t\t- unique\n\t\t- simple or composite\n\t\t- underlined in ERD\n\n![example attributes|300](https://i.imgur.com/D50Uxad.png)\n\n## relationships\na relationship model the connection between entitiy types\n\ne.g., each employee works for one department\n\nrelationship type is a set of relationsihps among entities from the particular entity types\n\t- represented by diamonds\n\n![example relationship|400](https://i.imgur.com/5ZmJerl.png)\n\n\nrelationship types can have attributes\n\n properties\n - degree\n\t - binary [binary relationship|200](https://i.imgur.com/QDpdMo7.png)\n\t - n-ary [n-ary relationship|300](https://i.imgur.com/7oIJP5j.png)\n- cardinality for binary relationships\n\t- one to one\n\t- one to n\n\t- m to n\n- participation\n\t- total participation\n\t\t- marked by double line\n\t\t- relationship is required\n\t- partial\n\t\t- marked by single line\n\t\t- relationsihp is not required\n\n![cardinality examples|300](https://i.imgur.com/DmHQaVc.png)\n![participation example|300](https://i.imgur.com/hH0v4bR.png)\n\n## weak entities\n- regular types have key attributes\n\n- weak types do not have their own key attributes\n- they are identified by their relationship with another entity\n- this creates and identifying relationship\n- must have a total participation constraint\n- the other entity type is called the identifying or owner entity type\n- denoted by double lined rectable and double lined diamond\n- have a partial key\n\t- a set of attributes that uniquiely identify the weak entities that are related to the same owner entity\n\n![weak entity example|300](https://i.imgur.com/4JMDcN7.png)\n\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/13-design-heuristics-4":{"title":"13-design-heuristics-4","content":"[aesthetic-and-minimalist-design](notes/aesthetic-and-minimalist-design.md)\n[help-and-documentation](notes/help-and-documentation.md)\n[recognise-and-recover-from-errors](notes/recognise-and-recover-from-errors.md)\n[anti-design-heristics](notes/anti-design-heristics.md)\n[dark-patterns](notes/dark-patterns.md)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/13-pen-testing-2":{"title":"13-pen-testing-2","content":"\n# Intrusion detection cont.\n## Auditing\na thorough prces of investiagtina nd analaysing aa system for vilnerabilities \n- e.g., pen testing\n- \ncan also refer to logging (esp. in a databse context)\n\n## Firewalls\nprotect aginst network intrusions\n- built in or third party\n\t- built in - integration quality of control. ofen light convenince features maybe no GUI\n- black/whitelist\n- mandatory access control on routers\n\t- mandatory access control\n\t\t- e.g., block a netork port\n\t\t- block icmp packets (some sytems are vulnerable)\n- application level filtering for desktop systems\n\t- finer grained control for linking rules to applications themselves (processes)\n\t- router doesn't know about applications\n\t- may not trust an aplication to connect o a web server but do trust other.\n\t- dont have to block everything on that webserver\n- provide altering and logging (avoid crying wolf)\n\t- \"end user alert fatigue\"\n\n\u003e northcutt and novak - network intrusion detection\n\n\n## Intrustion detection systems\n- often bundled with commercial routers, network storage devices (NAS, SAN) - \"cloud storage within organisation\"\n- can also be host based (HIDS)  \"situated aroud network\"\n- intrusion can be identified by know signatures (like pattern-based virus scanners)\n- can also be anomaly-based (using heuristics)\n\n## other intrusion detection topics\n- file integrity checking\n\t- hash checking to detect changes\n- backup and recovery\n\n## keeping up to date with vulnerabilites\n- CERT NZ\n- US-CERT\n- CVE at MITRE\n- NVD (us NIST national vulnerabilities database)\n- conferences such as DEF CON\n\n# Sting operations\ndeliberately place sofware where it will interact with attacks, somewhat resembling a police sting operation.\n\n## Honeypot\n- decoy service used to attact attackers\n- divert attackers from real service\n- identify attack origin - analyse attack - create countermeasures\n- honey-nets - co-ordiniated honeypots. - analyse malware infection behaviour (malware epidemiology)\n- bogus email address lists to hinder spammers\n- individual e-mail address can be used to gather and analyse spam smessages\n\n## Tarpits\n- similar to honeypots but for *slowing* attack not diverting\n- often deployed as a proxy server in front of the real service\n\t- talks to a web server as a client on behalf of another client\n\t- intermediate between client and server\n\t- logging, throttling,  \n\n## Heroic human tarpits\n- ![videos|400](https://i.imgur.com/ZqQqBi1.png)\n\n## DNS blackholes/sinkholes\n- aka real time blackhole list (RBL)\n- anti-spam measure, widely used by ISPs\n- traditional SMTP is highly vulnerable to abuse\n\t- STMP assumes people \"will be nice\". \n\t- you can list whoever you like as the sender\n- open mail relays are readly exploited by spammers\n\t- mail servers recieve email from anywhere and send to anyone\n\t- exlpoited by spammers\n\t- can usually be identified by AI and sent to blackholes\n- use existing DNS protocols to communicate (OK/bad status)\n\n## Software\n- mac os activity monitor\n- mac os console (sys logs)\n- `tcpdump`\n- `iptraf`\n- WireShark\n- Snort (open source NIDS)\n- Fail2Ban ( intrusion prevention system usins logfile monitoring)\n- TCP wrappers (historically significant)\n- SATAN\n\n# Pen-Testing\nchecking if system is secure. Simulated attacks of system to detect vulnerabilities\n- specialised and technical\n- often done by consultants\n- mindset of attacker\n- complements intrusion detection\n\t- but proactive not reactive\n\n## tools\n- same tools as attackers\n- develop own tools\n- automate\n\t- scripts \n\t- dedicated hardware\n\t- parrallel/dist attacks\n- create new attacks\n\n## e.g., software\n- nmap - network exploration tool\n\t- scan ports\n\t- reports finding\n\t\t- os, version\n\t\t- used to find vulnerabilities\n- netcat/ncat interact with network services\n- nessus\n- hashcat - password cracking\n- sqlmap (SQL database pen tester)\n\t- find account with default passwords etc\n- specialised pen-testing OS distribution\n\t- e.g., blackbox linux\n\n## Phases\n- reconnaissance (info gathering) (e.g., finding relevant ip addresses)\n- scanning (e.g.,, nmap)\n\t- which hosts are availale\n\t- which ports\n\t- etc\n- gaining access (attack)\n\t- may require sequenced attacks\n- maintaining access (avoid detection)\n- covering tracks (remove files, edit logs, change timestamps etc)\n- \n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/14-apis":{"title":"14-apis","content":"\n- purpose of apis\n- apis vs code libraries\n- why web technologies assist API development\n- REST\n- apis in cloud mircoservices\n- building APIs\n- maintenance of APIs\n\n[application-programming-interface](notes/application-programming-interface.md)","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/14-balancing-bsts":{"title":"14-balancing-bsts","content":"\n[balancing-binary-search-trees](notes/balancing-binary-search-trees.md)\n\n- [avl-tree](notes/avl-tree.md) \n- [red-black-tree](notes/red-black-tree.md)\n- [treap](notes/treap.md)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/14-direct-manipulation-and-mental-models":{"title":"14-direct-manipulation-and-mental-models","content":"\n\nCommand line vs UI\n[table](https://i.imgur.com/DW8jnGz.png)\n\n# Object action models\n\nobject action model: user selects an object then selects the action to perform on the objct\n\naction object model: user first selects an action to be perdormed and then selects the objects on which this action will be performed\n\nobject action model maps to real life environment\n\nthe designer needs to create mapping from the real world unicers ofb objects and intentios to the intrefac world universe of metaphors and plans\n\n# fitts law\ntime to point to something depends on its size and distance:\n$$\nMT = C1 + C2\\ log_2(2A/W)\n$$ \n\nwhere C1 and C2 are contstants that depend on the device. A is the distance that users have to move and W is the target size.\n\n- buttons and othe controls should be of reasonable size\n\t- things done more often should a assigned a larger button\n\t- or closer to the average position of the users cursor\n- edges and coreners are easier to reach as the pointer is \"caught\" (infinite width)\n- popup menus can usually be open faster than pull-down menus, since the user avoids movement\n- pie menu items are typically selected faster and have a lower error rate than linear meny items as they scale with distance\n\n\n# Combining inputs\noften multiple ways of doing one thing\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/14-processes-and-system-calls":{"title":"14-processes-and-system-calls","content":"\n- heirarchical structure in software systems\n- system calls and interrupts\n- representing process in OSs\n- overview of process scheduling\n\n# Heirarchical structure\nsoftware systems have modularity\n- os kernel\n- system programs\n- applicatioin programs\n![Heirarchical structure diagram|400](https://i.imgur.com/Tf7QDTy.png)\n\n## application programs\nDefn: a program that ordinary usrers interact with, running in user space\n\ne.g.,\n- word processor\n- video player\n- web browser\n- games\n- etc\n\n## system programs/libraries\nDefn: a program which provides general purpose power level function, packeages in a way which is convenient for a user (e.g., sys admin or programmer) to employ\n\nsystem program types include.,\n- file manipulation progarms\n- status info programs\n- network and device management programs\n- compilers assemblers and interpreters\n- various library code\n- command shell programs (e.g., command interpreters)\n\nalso runs in user space\n\n# system calls\nprocesses issue requests to the kernel by making system calls\n\n![system call diagram|300](https://i.imgur.com/GAktF7t.png)\n\nthey are requesets to the OS kernel made through interrupt handlers\n\nthe set of system calls is termed the programmer interface to OS\n\nSystem calls in xv6\n- fork() Create a new process \n- exit() Terminate the current process \n- wait() Wait for a child process to exit \n- kill(pid) Terminate a process identified with pid \n- getpid() Return the ID number of the current process \n- sleep(n) Put the current process into sleep for n seconds \n- exec(filename, *argv) Load a file named filename and execute it with arguments in argv \n- sbrk(n) Update the process memory space by n bytes \n- open(filename, flags) Open a file named filename with flags indicating read/write \n- read(fd, buf, n) Read n bytes from an open file fd into buf \n- write(fd, buf, n) Write n bytes from buf to an open file fd \n- close(fd) Close the open file fd\n- dup(fd) Duplicate the open file fd into another file \n- descriptor (the return value) \n- pipe(p) Create a pipe and return the file descriptors in p \n- chdir(dirname) Change the current working directory of the process to dirname \n- mkdir(dirname) Create a new directory dirname \n- mknod(name, major, minor) Create a device file name with major and minor numbers \n- fstat(fd) Return status information about an open file fd \n- link(f1, f2) Create another name f2 for the file f1 \n- unlink(filename) Remove a file named filename\n\n## interrupts\n### detecting interrupt\nCPU hardware containes a wire called the interrupt requirest line\n\nwhen a cpu is running an instruction-execute cycle\n- fetch instruction from memory and store it in instruction register\n- decode/execute instruction\n\nan extra step is included\n- sense the interrupt request line.\n- it it has a signal, then respond to the interrupt\n\n### responding interrupt\nwhen interrupt detected, CPU switches to kernel space, and a handler function provided by the OS is invoked\n- the context of the current instructionis saved\n- control is transferred to a fixed memory location holding an interrupt-handling routine\n- when the routine is finished, it restores the context of the interrupted process\n\nthe interrupt vector is an array of lications thta hold the addresses of these interrupt-handling routines. (usually held in low memory)\n\nthis is hard to do\n- how to restore context?\n- nested handlers?\n\n### what causes them\ngenerated by:\n- errors: e.g., division by zero, invalid memory access\n- I/O device signals:; e.g., completion of IO operation or arrival of network packet\n- system calls (also called trap or soft interrupt) with special instruction (int or svc)\n\na system call generates an interrupt and the OS transfers control to a system call handler\n\n# Processes\na process is dynamic\n\na given program can be executing many times of a given machines: each instance is a separate process\n\nprocess components\n- text section/code section: the program code itself \n- data section: any global variables used by the program \n- process stack: any local variables currently being used \n- program counter: a pointer to some place in the program code \n- contents of CPU registers \n- memory management information \n- device/file allocation information \n- accounting information\n\n## process control blocks\nthe OS keeps a record of each process in the system, with a data structure called *process control block* (PCB)\n\n![example block|400](https://i.imgur.com/UTDFjse.png)\n\n![example linux processes|400](https://i.imgur.com/ar19swB.png)\n\n## scheduling processes\nprocesses take turns to run on the CPU. processes wait to run in one of two queues:\n- ready queue: process ready to execute\n- device queue: processes waiting to use a particular device. (one queue per device)\n\ngenerally represented as linked lists\n\n## flow of processes\n![process flow diagram|400](https://i.imgur.com/ib1t78H.png)\n\nRounded rectangles are events. \nRectangles are queues where processes wait. \nCircles are processing resources that serve the events/queues.\n\n## process creation\ncreated by another process: parent process creates a child process\n- process can copy itself using fork\n- child process can then call exec() to load a new program\n\t- a child process can run concurrently with parent\n\t- child process can share the resources of its parent if not restricted\n\nsystem start with one process called *init*\n\n## procees heirarchy\nprocesses for a tree\n![process tree diagram|400](https://i.imgur.com/SNTlCNZ.png)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/15-containers":{"title":"15-containers","content":"\n[containers](notes/containers.md)\n\n* Describe what software containers are \n\t* basically lightweight virtual machines\n- Explain why containers are useful \n\t- Encapsulate a computing environment\n- Outline the role of container registries \n\t- Store and share *images*\n\t- E.g., dockerHub\n- Contrast different ways to interact with containers \n\t- Files: e.g., CI/CD SSG's\n\t- Network: \n- Understand security risks inherent in container use\n\t- \n\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/15-dynamic-programming":{"title":"17-dynamic-programming","content":"\n\n\n![dynamic-programming](notes/dynamic-programming.md)\n\n![memoization](notes/memoization.md)","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/15-file-systems":{"title":"15-file-systems","content":"\n# what is a file (LINUX)\nan interface of OS to users\n\nos manages files just as files - it doesn't care what type of file it is - they are all bytes arranges logically in sequence.\n\nthey are arrangges logically in sequence\n\nfiles need to be interpreted. THis is done by applications. e.g., powerpoint, ms paint, etc.\n\n- the OS provides a logical unit of storage for the user\n\t- the user refers to files\n\t- the operating system maps files onto regions of the storage\n\t- files are really an artifact of the dialogue between the user and the OS\n\n## how to define it\n- a collection of related data\n- e.g., the set of lines in a program\n\nstructure:\n- a byte stream or a sequence of bytes, text file is a stream of ascii characgers\n\nwhat can the user do\n- create, write, read, reposition, delete, truncate (through system calls)\n\n## attributes\n- name\n- owner\n\t- Uid and Gid\n- file type\n- location of data\n- size of data\n- permission\n- \"housekeeping\" information\n\t- time and created modified etc\n- and more\n\n## where is the data stored\n- in an index node (inode) pointed by an entry of a directory. (you can think of a directory as just a set of \u003cname, inode\u003e entries. )\n\ninternal fragmentation\n- dont know exactly how many bytes to allocate to a file\n- extra space is lost\n\nexternal fragmentaion TODO\n\nthese issues have been solved using block allocaiton instead of continuous allocation\n\n## system calls for file systems\n- open close, read, write, ioctl, etc\n\n`ssize_t write(int fd, const void *buf, size_t count)`\n\t- fd - file descriptor\n\t- write up to count butes from the buffer pointed buf to the file referred to by the file descriptor\n\t- returns -1 if error. and errno is set\n\t- should return number of bytes written if ok\n\n`ssize_t read(int fd, void *buf, size_t count)`\n- attempt to read up to count bytes from the fd into the buffer starting at buf. On success, the numbber of bytes read is returned and the file position is advanced by this number. It may be \u003c count. zero means end of file\n- error is -1 and errno is set\n\n# file access patterns\n- sequential access (most common)\n\t- a file pointer specifies a record within the file.\n\t- the poniter can be moved incrementally forwards (in read or write) operations or backwards (in rewinding)\n\t- the hardware metaphor is a tape\n- direct access\n\t- a file is viewed as a numbered sequence of records\n\t- operations (e.g., read write) can be carried out on any record in any order\n\t- the hardware metaphor is a disk\n\nyou can give *advice* to the OS about how to read the file by specifying sequential or direct\n\n# directory structure\n\ntree structured\n![diagram|400](https://i.imgur.com/opniDLZ.png)\n\nmapped onto a storage device\n\nthis is done by the organisation module\n\nsmallest unit in a disk is a block\n\nthe file organiser has to allocate blocks for the storage of files\n\na file is broken into logical blocks, to make the mapping to disk blocks easier to manage\n\n\n\n# file system implementation\n# disk allocation methods\n\ncontinious allocation\n- each file occupies a set of continuous blocks on the disk\n- advantages\n\t- sequential access is easy becaues the next character is in the current block or the very next block\n\t- direct access is also good, just count the numbe of blocks\n- disadvantages\n\t- external fragmentation\n\t\t- free space is fragmented. the total space is enough for a file but none of the continuous space is large enogh\n\t\t- space is not large enough to be allocated\n\t- internal fragmentation\n\t\t- files can grow. and we dont know how big a file is going to be. even if we did, files can shrink too, in which case space is unused\n\t\t- this space is allocated but not used\n\nlinked allocation\n- each file is a linked list of blocks\n- the directory contains a pointer to the firsrt (and last) blocks of the file\n- each block contains a poniter to the next block\n- advantages\n\t- no external fragmentation\n\t- files can grow and shrink easily\n- disadvantages\n\t- can only be used effectively for qequential access\n\t- pointer take up space\n\t- internal fragmentation (get worse as clusters grow)\n\t- reliability -\u003e if one pointer is lost, the whole file therafter is also lost\n\nFAT file allocation table\n- variation of linked allocation scheme (used in ms-dos)\n- a table is created at  tthe beginning of each partition\n- can also be a point of failure. two copies are kept to safeguard from corruption\n\n![diagram|400](https://i.imgur.com/IYTB9EP.png)\n\n\nindexed allocation\n![diagram|400](https://i.imgur.com/LUv1PJA.png)\n\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/15-from-models-to-code-and-back":{"title":"15-from-models-to-code-and-back","content":"\n- [UML to Java Foward Engineering](notes/uml-java-forward-engineering.md)\n- [round-trip-engineering](notes/round-trip-engineering.md)","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/15-mental-models-representation-matters-distributing-cognition":{"title":"15-mental-models-representation-matters-distributing-cognition","content":"\ndoors are simple. But they are still done wrong very often. Incorrect labelling can give the user a wrong mental model - widening the \"gulf of execution\". Signifiers like handles, can create a certain mental model making you pull it. These are easier to process than labels like push and pull. Our brains are lazy, we will choose the easiest option. \n\nDoor is very simple compared to computer interface. Yet they are still done wrong. \n\n\"A conceptial model mismatch (use has the wrong mental model)\"\n\"Increases the Gulf of Execution (suporting the right model narrows it)\"\n\n![500](https://i.imgur.com/dv6LH0O.png#invert)\n\n# Mental Models\n[mental-models](notes/mental-models.md)\n\n# Representation Matters and Distributing cognition\n\n[representation-and-distributing-cognition](notes/representation-and-distributing-cognition.md)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/15-policies-standards-practices":{"title":"15-policies-standards-practices","content":"\n# news\n- apple securit flaw for iphones ipads and macs\n- chrome patch actively exloited zero day\n- github blighted by researcher who created thousands of malicious projects\n- russian cyber attacks of lockheed martin\n\t- armed forces hack into HIMARS\n\n# Policies\nDefn: a plan or course of action to influence and determine decisions\n\n- high level rules regarding operations of organisation\n- policies state the management intent and will\n- governments, businesses, political parties, universities etc\n\nprovide roadmap for day-to-day operations\n- organisation internal law\n\t- also comply with actual law\n- important for resolution of legal disputes\n\t- provide accountability\n\t- can protect org and employees\n- ensure consistency\n\t- dont often change or deteriorate when staff changes\n- evidence of quality control, internal audits etc\n\n## good policies \nare properly\n- disseminated\n- read\n- understood\n- agreed-to\n- uniformly enforced\n\nand help us to answer these questions\n- what info should be collected\n- how should it be stored\n- who is responsible for managing it\n- who can access it\n- what info should be published\n- how long should it be kept/maintained\n- when should it be discarded\n\n## example\nRevealing Information To Prospective Employee\nPolicy: Information systems technical details, such as network addresses, network diagrams, and security software employed, must not be revealed to job applicants until they have signed a confidentiality agreement and also have been hired or retained\n\n# Procedures\nDefn: step by step descriptions of what employees must do to achieve a certain goal (as specified by a policy)\n\n- must be kept separate from policies\n- keeping them together will create a complex document that will (likely) not be read\n\n![policy and procedure pyramid|400](https://i.imgur.com/rdQaLkh.png)\n\n# Standards\nThe ISO 27000 is a global standard to build a Information Security Management System (ISMS)\n\n## ISO standards\n![iso standards chart (2013)|400](https://i.imgur.com/BjgT9lK.png)\n\n![ISO/IEC 27002:2022|400](https://i.imgur.com/zhCsjzZ.png)\n\n## IS measurement model - ISO 27004\n- monitoring\n- measurement\n- analysis\n- evaluation\n\n![IS measurement diagram|400](https://i.imgur.com/8R7vatT.png)\n![IS measurement and ISMS integration diagram|400](https://i.imgur.com/HuvV6mn.png)\n\n## Capability maturity model integration CMMI\n\n![CMMI diagram|400](https://i.imgur.com/4SseQm7.png)\n\n# Practices\nDefn: detailed and repeateable ways of complying to a standard (and to a policy)\n\ndiff with procedures is that a proceduure contains a step by step method on how to complete a certain task\n\n## examples\n![id badges example|400](https://i.imgur.com/bkdXQOy.png)\n![temp badges example|400](https://i.imgur.com/Y13IGfP.png)\n![badge controlled acces example|400](https://i.imgur.com/hj9gPCb.png)\n\n# Info sec audit\n- Organisation (Is there a security policy?) \n- Employee Security Focus (Training, Recruitment) \n- Change Management Network Security (Router/Firewall, VPN) \n- Application Security (App Dev., Data Security) \n- System Security (Server Vulnerability \u0026 Hardening) \n- Identity Management (Account \u0026 Password Management) \n- Event Management (Incident Response) \n- Asset Security (Asset Inventory, Laptop Security, Software Management)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/16-c201-archive":{"title":"16-c201-archive","content":"\n## In a perfect world\n- keys from a class k, valuyes from a class v\n- there are only 4000 possible keys\n- each key, k, has a unique four digit identifier than we can obtain in constant time as `k.id();`\n\n```java\nV[] map = new V[10000];\n\npublic V put(K key, V value){\n\tV old = map[k.id()];\n\tmap[k.id()] = value;\n\treturn old; //to match java map interface\n}\n\npublic V get(K key){\n\treturn map[k.id()];\n}\n\npublic V remove(K key){\n\tV old = map[k.id()];\n\tmap[k.id()] = null;\n\treturn old;\n}\n```\n\nworks but:\n- we need to allocate 10000 spaces of storage\n- require `k.id();` in  constant time\n- cannot store null values (key not present vs key is mapped to null) (we will need more storage)\n\nso:\n- we should only require storage for what we need, not for all possible keys\n- need to use `Array` for constant time add, remove, get. (we may need to resize the array sometimes)\n\n## Considering space \n```java\nV[] map = new V[53];\n\npublic V put(K key, V value){\n\tV old = map[k.id() % v.length];\n\tmap[k.id() % v.length] = value;\n\treturn old; //to match java map interface\n}\n\npublic V get(K key){\n\treturn map[k.id() % v.length];\n}\n\npublic V remove(K key){\n\tV old = map[k.id() % v.length];\n\tmap[k.id() % v.length] = null;\n\treturn old;\n}\n\n```\n\nProblem:\n- some keys can be duplicated\n\n## Solving k.id()\n- solution is to make one up.\n- since collisions are inevitable, uniqueness is not required\n-  made up ID called a `hash code`\n- a *hash function* take objects from a class as input and produces a value from a fixed finite set of values (in Java, an `int`)\n- properites it should have\n\t- should be fast to compute $O(1)$\n\t- shoud be uniform (even when we take modulo)\n\nThis sounds hard, but for commonly used classes (e.g., strings) there are already good has functions. Good enough is usually good enough. IDE can usually suggest something that is good enough. A hashcode function will usually come with an equals function to distinguish between collions and actual equal values\n\n\n## Collisions: Chaining/open addressing\n- array elements are called buckets\n- each bucket is a *list* of key-value pairs\n- when a mapping is added, \n\t- if empty add it (creating a new list if required)\n\t- otherwise check to see if there is a collision or an actual equality with each item of the list\n\t\t- If there is an equality -\u003e change its value\n\t\t- otherwise just add it to the list\n- get and removing are handled similarly\n\nwe need to keep the load factor (how full the map is) small so that the chains dont't get to long \n\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/16-cloud-security":{"title":"16-cloud-security","content":"\n- what is cloud computing\n- what is service virtualisation\n- security issues\n\n# what is cloud\n- largely a marketing term\n- vague - doesn't mean much\n- slowly replacing the word 'web'\n\nimplies\n- large cluster of networked servers acting as hosts\n\t- usually virtualised\n- large number of users\n- complexity of infrastructure hidden from devs\n\t- and users\n\n## cloud platforms\n### SaaS\n- provider has an actual product\n\t- they host it (or delegate the hosting)\n\t- customer doesn't need to host anything\n- thin client\n\t- usually web based\n\t- maybe also mobile app\n\nexamples\n- customer realtions (salesforce)\n- accounting (xero)\n- PoS (vend)\n- dropbox, gmail, google docs\n\n### PaaS\n- provides a solution stack\n\t- tools, environment, services, libraries to run a system\n\t\t- storage services / libaries / tools\n\t\t- email libraries\n\t\t- web app libraries\n\t\t- admin tools: deployment, scaling, logs, billing, quotas etc\n- extensible\n\t- devs can add their own libraries\n\nexamples\n- google app engine\n- elastic beanstalk\n- azure cloud services\n- heroku\n\n### IaaS\n- virtual hosting\n\t- allows custome to run own VM\n\t\t- linux or wiindows server\n\t\t- customer can install whatever on the VM\n\t\t- barebones or canned VM images are available\n\t\t- customer can provide own images\n- virtual networking\n\t- public facing IP addresses mapped to virtual network interfaces for load balancing, and fault tolerance\n- virtual storage\n\t- file storage\n\t- exampkes\n\t\t- amazon S3\n\t\t- google cloud storage\n\t\t- azure storage\n\t- hot storage for frequently access data\n\t\t- higher performance, higher cost\n\t- cold for infrequent access\n\n## primary selling points\n- agility/elasticity\n\t- scalable as needed\n- reduced cost\n\t- multitenancy\n\t- economies of scale\n\t- usage based billing\n- reliability\n\t- massive redundancy\n- low capital expenditure\n- greener\n\t- low power hardware, virtualisation, centralisation of cooling, environmental cooling, sharing of resources, on demand activation\n\n## potential problems\n- Saas\n\t- need to train staff\n\t- importing and exporting data may be difficult\n\t- dependent on provider health\n\t- vulnerable to price changes\n\t- provider may be aquired by another company with different goals\n- Paas\n\t- use of common APIs libraries and services mitigate the lock-in problem\n\t- avoid using vendor specific APIs, or wrap them with facades\n- IaaS\n\t- mitigated by sticking to the standard services (MySQL \u0026 nginx for example) and standard libs\n\t- avoid vendor specific interfaces to proprietary services\n\n# Cloud Security\n- large orgs can spend more money on security than small ones\n\t- find flaws in the full stack\n- however only covers their infrastructure\n\t- your application can have its own security flaws\n- virtualisation segregates apps from each other\n\t- a flaw in the application of another organisation should not be able to be exploited in a way that puts your application at risk\n- need to trust provider admins\n- need to trust governments of host countries\n\n# Virtualisation\n- when a real computer runs virtual machines\n\t- virtual computers where the hardware is virtual (implemented entirely in software)\n\t- software that provides the virtual hardware is called hypervisor\n- can run linux, windows —nesting operating systems\n- os on real computer is called the host os\n- os running on VM is called the guest os\n- a single host can run many guests (limited by memory usually)\n\n![virtualisation diagram|400](https://i.imgur.com/y9vgful.png)\n\n## virtualisation within cloud computing\n- makes it easy for providers to run several services on a single physical server\n- efficient use of hardware\n- no idle servers\n- move services from busy server to idle servers to balance load\n- standardised virtual hardware exposed to guest OS simplifies guest configuration\n- guests are segregated\n- deployed using machine image\n\t- file containing a bit for bit copy of what a real hard drive would contain if it contained\n\t\t- an OS (usually linux)\n\t\t- a deployment environment (web server, database server, libraries, etc)\n\t\t- the service application/executables\n- to start a new instance of a service you boot the relevant machine image on a hypervisor\n\t- its easy to add additional services for scaling to manage load\n- copies and backups can be made by snapshotting the state of the virtual machine\n\t- captures state of disk image\n\t- and contents of system memory\n\t- can be used as version control for services\n\t- can be moved to anothe rhost by making a snapshot and booting on a hypervisor on a new server\n\n## rule 1 and virtualisation\nrule 1: if a bad guy can run his program on your computer, then its not your computer anymore\n\n- your apps may be running on the same physical computer as a bad guy\n- if they can exit the VM (flaws in hypervisor or hardware) they can cause trouble\n- speculative flaws meltdown and spectre are difficult to exploit (no known exlpoits since being found 5 years ago)\n\t- benefits outweigh risks","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/16-compilers":{"title":"16-compilers","content":"\n- describe what it is and what is does\n- compilers vs interpreters\n- compile stages\n- why java is atypical of compiled languages\n- compiler front vs back end\n- why producing precise compiler errors is hard\n\n\n- [compiler](notes/compiler.md)\n- [interpreter](notes/interpreter.md)\n\n# What is a compiler?\nA [compiler](notes/compiler.md) is used to build stored programs. Things that are stored on the disk that  you can run. They use source code in a **high level** language, and output machine code in a binary file which is then linked with a [linker](notes/linker.md). This file can be loaded and run by hardware. Example langauges include C, C++, Java (sorf of)\n\nAn [interpreter](notes/interpreter.md) is more of an interactive tool. The interpreter program (e.g., python) runs of the CPU and execute your program. Interpreted laguages include (python, ruby, shell, R, js, PHP).\n\nUsually compiled program are smaller and run faster, but interpreted languages are more convienient\n\nThe line between compiled and interpreted is becoming less clear with things like the JVM, Scala, and python .pyc files.","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/16-device-drivers":{"title":"16-device-drivers","content":"\n# Device controller and driver\ndriver Defn:  a special kernel module that contrls the operations of a device with the device specific information\ncontroller Defn: a hardware unit on a device that can know and control a devices status or behaviour, which communicates with the CPU via a driver\n\n![device drivers and controllers diagram|300](https://i.imgur.com/m0nxDqa.png)\n\n# Types of IO devices\n- character stream vs block\n- swqeuential vs random access\n- synchronous vs async\n- sharable or dedicated\n\nOS provides a consistent interface for them in the `/dev` folder (unix systems). e.g., ramdisk device is name `/dev/memdrv`. each device has a file under `/dev` that can be handled with file operations read()/write()\n\n## block devices\ncommands (sent from device driver to device controller)\n- read block\n- write block\n- seek block (for random access block devices)\n\nthe sequence of read/write requests can (should) be optimized\n\n## character devices\n- commands\n\t- get char\n\t- put char\n\nalso support buffering (accepting keyboard input line by line) and editing of buffers (e.g., spcial treatement of backspace character)\n\n# IO models\nIO system calls use different IO models\n- blocking - when a proccess needs IO input it waits to recieve it before continuing\n- non blocking - waits a fixed (small) amount of time, and returns (possibly with some data still untransferred)\n- async - does not wait, is informed with a signal when io is completed\n\n# IO scheduling and buffering\nfor when there are several requests for IO waiting to be serviced\n- first come firs served is not efficient\n\nIO buffers are used in main memroy to optimise file systems\n\nwhen a data block is used often, it is kept is memory and only written to secondary storage once all its accesses are finished\n\n# example ramdisk driver\n![](https://i.imgur.com/NIqCAzy.png)\n\n## open\n``` c\nint temp_open (struct inode *inode, struct file *filp){ \n\t// check if the process has the permission to access; \n\t// suspend the calling process if the device is busy \n\t// or used by another process; \n\t// otherwise record the id of the calling process \n\t// so that the device is owned by the process; \n\t// initialise or reset the device. \n}\n```\n\n## read\n```c\nssize_t temp_read(struct file *filp, char __user *buf,size_t count,loff_t *f_pos){ \n\t// find the location of data; \n\t// ask the controller to copy data to kernel kbuf \n\t// copy data to user space kbuf -\u003e buf \n\tcopy_to_user (buf, kbuf, count); \n\t*f_pos += count; // update pointer \n\treturn count; // return the number of bytes read \n}\n```\n\n## write\n```c\nssize_t temp_write(struct file *filp, char __user *bufsize_t count, loff_t *f_pos){ \n\t// copy data from user space buf -\u003e kbuf \n\tcopy_from_user (kbuf, buf, count); \n\t// find the location of data; \n\t// ask the controller to copy data from kernel kbuf \n\t*f_pos += count; // update pointer \n\treturn count; // return the number of bytes written \n}\n```\n\n## close\n```c\nint temp_release (struct inode *inode, struct file *filp){\n\t// release the device by removing the id of the process;\n\t// check if there is any waiting process to wake up;\n\t// undo anything done at open(), e.g. free memory. \n}\n```\n\n# UI for IO devices\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/16-distributing-cognition-and-visual-design-typography":{"title":"16-distributing-cognition-and-visual-design-typography","content":"\n- [representation-and-distributing-cognition](notes/representation-and-distributing-cognition.md)\n- [typography](notes/typography.md)\n- [visual-design](notes/visual-design.md)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/16-hasing-maps-sets":{"title":"16-hasing-maps-sets","content":"\n[Hash functions](notes/hash-map.md#Hash%20functions)\n[Collisions Chaining open addressing](notes/hash-map.md#Collisions%20Chaining%20open%20addressing)\n[basic implementation](notes/hash-map.md#basic%20implementation)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/16-networks":{"title":"16-networks","content":"\n# Types of devices\n- everything is connected\n- ![](https://i.imgur.com/ECsSgfo.png)\n\n- hosts - the end systems which run network apps\n\npacket swtiches - forward packets (chunks of data)\ncommuncation links - fiber, copper, radio, satellite\n\t- transmission rate: bandwidthc\nnetworks -  collection of devices routers\n- links managed by organisation\n\n\n## internet structure\nnetwork edge\n- hosts: clients and servers\n\t- servers (often in data centres)\n\naccess networkds, physical media\n- wired inks\n- wireless communcation links\n\nnetwork core\n- \"backbone\"\n- interconnected routers\n- network of routers\n\ninternet is a network of networks\n\n## edge devices\n- sending function\n\t- takes app message\n\t- break into packers\n\t- transmit them\n- recieving function\n\t- recieve packets\n\t- reasseble to create app message\n\n# communication Medias\n## physical media\n- wired links\n- twisted pair cable (TP)\n\t\t- twist to the distance between the noisy source is roughly uniform \n\t- ![](https://i.imgur.com/NiL0cO7.png)\n\t- two insludate copper wires twisted together\n\t- one carries signal and the other is used as ground reference\n\t- reciever uses the different between the two\n\t- shielded vs unshielded\n\t\t- sheld can resits internal and external interference\n\t\t- more expensive but faster data rate\n\t- abt 10MBPS to 1- Gbps\n\t- max distance about 100 meters\n\t- telephone, DSL, ethernet LAN\n\nCoaxial cable\n- central inner conductor\n- outer conductor as a shield\n- special insulation\n- long distance at high speed\n- cable TV, ethernet LAN\n- no grouding wire because the shield protects it and the signal is more stable\n- ![](https://i.imgur.com/UI6vx1i.png)\n\nFibre-optic cable\n- glass fibre carrying light pulses\n- high speed 10 -100 GBps\n- low error rate\n- ![](https://i.imgur.com/fDMjJgs.png)\n\n## wireless media\n- wireless radio\n\t- signal carried in electro magnetic spectrum\n\t- broadcast, half-duplex\n\t- propagation environment effecs\n\t\t- reflection and obstruction\n\t\t- interference/noise\n- radio link types\n\t- wireless LAN (WiFi)\n\t- wide area (e.g., 4g cellular)\n\t- 10's Mbps over ~10km\n\t- bluetooth  - short distance, limited rates\n\t- satellite - up to 45 Mbps per channel\n\n# Packet and circuit switching\n- network core\n\t- many routers connect to subnets\n\t\n\tRouter\n\t- two functions\n\t- forwarding\n\t\t- aka switching\n\t\t- local action: move arriving packets from routers input link to appropriate output link\n\t\t- looks at fowarding table and sends to appropriate output link depending on the header\n\t\t- ![](https://i.imgur.com/4a6bTyz.png)\n\t- routing\n\t\t- global action: determine the source-destination paths taken by packets\n\t\t- routing algorithms\n\t\t- creates fowarding tables\n\npacket switching\n- host break application layer messages into packets\n- network fowards packets from one router to the next, across links on path from source to destination\n- store and foward: entire packet must arrive at trouter before it can be transmitted on next link\n- packet queueing: occurs when work arrives faster than it can be serviced\n\ncircuit switching\n- end-end resources allocated and reserved for \"call\" between source and destination\n- one connection is set up - reserved resources are not shared.\n- ![](https://i.imgur.com/HA7TWrq.png)\n- circuit segment is idle if not used by call\n- used for e.g., telephones\n\n# network protocol\ncurrent network structure\n- ![](https://i.imgur.com/JNzSZXa.png)\n- composed of multiple subnets\n- a network of networks\n- not owned by one entity\n- you need to connect using an ISP e.g., spark vodaphone, 2degress\n- have their own network\n- provice access to users\n- not isolated from each other\n\t- connected using internet exchange point\n\t- or peering link?\n\ntypes of ISP\n- ![](https://i.imgur.com/aGTYf13.png)\n- tier 1\n\t- potentially cover multiple countries\n- content provider networks e.g., google have a private network\n\t- often bypass tier-1, regional isps\n\n\nnetwork protocol\n- a set of rules that dictate how to format, transmit and recieve data so that network devices can communicate\n- like a common language for computers\n- specifies a format\n\t- what in withing the packet\n\t- reciever can understand based on the format\n\n- complex layered design\n\t- explicit structure allows identification of systems pieces\n\t- modularization eases the maintenance\n\t- layer\n\t\t- each implements a service\n\t\t- via its on internal layer actions\n\t\t- relying on services provided by layer below\n\n\nTCP/IP reference model\n- application\n\t- exchanges message to implement a service using the services of transport layer\n- transport\n\t- transfers from one process to another using services of network layer\n\t- encapsulates application layer message, M, with transport layer-layer header H1 to create a transport-layer segment\n\t- Ht used by transport layer protocol to implement its service\n- network\n\t- transferse transport-layer segment from one host to another using link layer services\n- link\n\t- transfers datagram from host to neighboring host using network layer services\n- physical\n\nTCP/IP protocol suite\n- TCP - transmission control protocol\n- IP - internet protocol\n- ![](https://i.imgur.com/3BX3RRG.png)\n\nOSI model\n- two more layers\n\t- presentation\n\t- session\n- ![](https://i.imgur.com/jBhk7Ox.png)\n\n# network performance metrics\n- bandwidth - maximum rate (bits/second) a link or network can theoretically transmit\n- throughput - the actual reate a link or network is transmitting\n- ![](https://i.imgur.com/XajLKbf.png)\n\n- nodal delay - delay at a single router\n\t- propagation delay - time to send data along a link\n\t- transmission delay\n\t- processing - time to find route within router\n\t- queueing\n\t- dnodal = dproc + dqueue + dtrans + dprop\n- end-to-end delay - total delay to send a packet from source to destination\n\n- packet loss\n\t- queue (aka buffer) preceding link in buffer had finite capacity\n\t- packet arriving to full queue dropped\n\t- lost packet may be retransmitted by previous node, by source end system, or not at all\n\t- also lost due to corupted packets\n\t- \n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/16-reverse-engineering":{"title":"16-reverse engineering","content":"\n[uml-java-reverse-engineering](notes/uml-java-reverse-engineering.md)","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/17-ML-in-IA-1":{"title":"17-ML-in-IA-1","content":"\n\ntraditional approaches\n- hand crafted and curated\n- based on intuition not evidence (e.g., password criteria example)\n- static and difficult to scale and adapt\n\nEverything we do generates data. This can be used to learn what works and what doesn't\n\nWe use the data to evolve from observations to models\n\ndata doesn't lie. humans do (sometimes using data)\n\nai uses machine learning, data science applies machine learning. statistical learning is machine learning\n\n# ML\nusing mathematics and algorithms to build models from data for prediction and insight\n\nkey concepts\n- getting dta\n- feature enginering\n- model testing/validation\n- knowledge extraction\n\nsupervised vs unsupervised learning — often feed into each other\n\n![classic machines learning map|400](https://i.imgur.com/zQj8D2e.png)\n\n## feature engineering\nconverting domain variables into actionable features\n\ne.g.,\n- edges from images\n- word frequencies in documents\n- converting TCP stream into counts of particular packet types\n\n\n## insights\nmodelling uncovers relatonships within inderlying process represented by the data\n\ne.g., detecting a password attack\n\nbenefits\n- provide insight\n- automattion\n- adapt to changes\n- scale larger and more complex problems\n\n# threats\n![today's threats example|300](https://i.imgur.com/4q6tbVS.png)\n\nneed to secure all of them - smartly\n\n\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/17-app-layer":{"title":"17-app-layer","content":"\n# Client-server vs peer to peer\n- social network\n- email\n- multi player games\n- video streaming\n- P2P file sharing\n- voice over IP e.g., skype\n- remote ogin\n\nPrinciples\n- run of different end systems\n- communicate over network\n- no need to run application specific software on netwrk-core devices\n\n\n## client-server\nsercer\n- provide services to clients\n- always on\n- often in data centers, for scaling\n- needs to powerful\n\t- multiple client requesting info at the same time\n\t- have specialzed software\n\nclient\n- request services by contacting and communicating with server\n- may be intermittently connected\n- do not communicate directly with each other\n\n## peer 2 peer\n- no alwasy on server\n- decentralize resource on a network\n- end systems are both client and servers\n- end systems communcatae directly\n- take advantage of distrivuted shared resources (bandwidth, CPU storage)\n- operate in dynamic environment with frequent join and leave\n- e.g., bitTorrent, blockchain\n\n\n## communication\n- process: network application running with a host\n\t- client proces and server process\n\t- processes in different hosts communicate by exhanging messages\n- process must have identifiers\n\t- ip address to differentiate processes in different hosts\n\t\t- IPv4: 10.96.35.21 • IPv6: fe80::44b:184c:7ebb:6524\n\t- port number to differentiate processes in same host\n\t\t- HTTP server (80), mail server (25)\n\n# functions of application protocols\nprotocols define:\n- types of messages\n\t- e.e.g, request, response\n- message syntax\n\t- what fields in messages and how field are delineated\n- semantics\n\t- meaning on information in fields\n- communcation rules\n\t- when and how proceses send and response to messages\n\n## WEB http\n- client server model\n\t- browser requests, recieves and displays web objects\n\t- server sends objects in response to requests\n- HTTP\n\t- communcation betwen browsers and servers\n- https\n\t- extensioin of http that uses transport layer security for security\n\nmethods\n- get, head, post, put (request to store a webpage), delete, link (connect two existing resources), unlink\n\nweb cache\n- store data to be used later\n- makes loading faster\n- browser sends all request to cache\n\t- if object is not in cache, the cache requests from the server\n\t- files are stored as representation (a snapshot) \n\t- files expire after their time to live is finished\n- we need to check if cache is up to date\n\t- conditional get: If-modified-since:\n\t- if up to date then: HTTP/1.0 304 Not Modified\n\n## Email\nthree components\n- user agents\n\t- software to compose, read, reply etc email\n\t- handle local mailboxes\n\t- e.g., outlook, thunderbird\n- mail servers\n\t- mailbox contains emails for user\n\t- each box has a unique address\n\t- localpart@domain\n\t- message queue of outgoing to send messages\n- protocols\n\t- ![](https://i.imgur.com/2GxXXLu.png)\n\t- SMTP to send (simple mail transfer protocol)\n\t\t- send from user agent to mail server and between mail servers\n\t\t- simple ascii protocol\n\t- POP (post office protocol)\n\t\t- fetch email from mail server\n\t\t- simple but limited\n\t\t- delete and keep mode (delete from server of keep)\n\t- IMAP (internet mail access protocol)\n\t\t- more functions\n\t\t- e.g., check email header before downloading, partially download email\n\t\t- allow users to organize mails on server\n\t- MIME (multi prpose internet mail extensions)\n\t\t- supplementary protocol to allow non-ASCII dat to be send through emails\n\t\t- WAN connect LANS together\n- email format\n\t- ![](https://i.imgur.com/pwvTvnL.png)\n\t- envelope\n\t\t- contains address of sender and reciever\n\t\t- used by smtp to transport email\n\t- message\n\t\t- header\n\t\t\t- defines sender, reciever, subject etc\n\t\t- body\n\t\t\t- contains actial information\n\t- email spoofing can make the addresses in header and in envelope different\n\n## DNS\n- ip adresses are hard to remember\n- need to map betwen host name and ip address\n- hierarchical, domain-based naming scheme implemented using a distributed databse system\n- core internet function, but implemented as an application layer protocol \n\n- tree structure ![](https://i.imgur.com/TtiMt9U.png)\n- domain name space\n\t- each node has a label : the root label is a null string\n\t- each node has a domain name: a sequence of labels separated by dots, reading from the node up to the root.\n\t- ![](https://i.imgur.com/TvHwuPK.png)\n- name servers\n\t- name space is divided into non-ovelapping zones\n\t- each zone had name servers to hold information\n\t- top level dns servers are responsible for domains such as .com .org .net and country domains\n\t- authoritative DNS servers: maintained by organization or service providers\n\t- ![](https://i.imgur.com/AU5F2Mv.png)\n\nDNS caching\n- once (any) name server learns mapping, it caches mapping, and immediately returns a cached mapping in response to a query \n\t- caching improves response time \n\t- cache entries timeout (disappear) after some time (TTL) \n\t- top-level domain names typically cached in local name servers\n- cached entries may be out-of-date \n\t- if named host changes IP address, may not be known Internet-wide until all TTLs expire! \n\t- best-effort name-to-address translation!\n\nDNS name resolution: recursive query\n- e.g., host at cs.otago.ac.nz wants IP address for ai.cs.waikato.ac.nz\n-  ![](https://i.imgur.com/1jW21AI.png)\n\n\n# Socket programming\n- socket\n\t- software component that has\n\t\t- local/remote socket address: IP + port no.\n\t\t- transport layer protocol: TCP or UDP\n- socket api\n\t- application programming interface usually provided by the operating system\n\t- ![](https://i.imgur.com/ORLYEVH.png)\n\n![TCP socket](https://i.imgur.com/JIOQOGM.png)\n![UDP socket](https://i.imgur.com/SATuwYL.png)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/17-collision-resolution-probing":{"title":"17-collision-resolution-probing","content":"\n[linear-probing](notes/linear-probing.md)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/17-data-access":{"title":"17-data-access","content":"\n![revision questions](https://i.imgur.com/mPmQ28v.png)\n\n[data-access](notes/data-access.md)\n- [file-based-storage](notes/file-based-storage.md)\n- [database-based-storage](notes/database-based-storage.md)\n- [data-access-object](notes/data-access-object.md)\n- [java-database-connectibity](notes/java-database-connectibity.md)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/17-grids-grouping-alignment-reading-and-navigation":{"title":"17-grids-grouping-alignment-reading-and-navigation","content":"\n- [layout](notes/layout.md)\n\t- [closure](notes/law-of-closure.md)\n\t- [grouping](notes/grouping.md)\n\t- [similarity](notes/law-of-similarity.md)\n- [color](notes/color.md)\n- [reading-and-navigating](notes/reading-and-navigating.md)\n\n\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/17-linkers-and-loaders":{"title":"17-linkers-and-loaders","content":"\n- Appreciate kernel / userspace distinction \n- Sketch what OS loaders need to achieve \n- Contrast running Java versus C code \n- Outline abstractions that hide OS from developers \n- Describe what linkers achieve \n- Contrast static and dynamic linking of libraries\n\n- [operating-system](notes/operating-system.md)\n- [loader](notes/loader.md)\n- [linker](notes/linker.md)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/17-processes-communication":{"title":"17-processes-communication","content":"\n![process tree example](https://i.imgur.com/4ysHisl.png)\n\n# cooperating processes\ndefn: coop process -  execution of one process can affect the execution of another. e.e.g, processes for aprallel computing, threads for multithreading.\n\ndefn: independent process - one does not affect the other and they do not communicate etc\n\n# creating a child process\nA child process is creating from a parent using fork.\n\nfork returns a value. 0 for the parent, and the id of the child for the child\n\neverything the same as the parent except the child has a differnent process ID. e.g., when they start they the same heap location etc. but as the child runs it may change.\n\nif you kill the parent before the child the child becomes an orhpan process\nif yo ukill the child while the parent is waiting for the child the parent becomes a zombie (defunct) process. -- but only if the parent doesn't wait for the child.\n\nthe child process can also call exexlp (load program) which erases the copy of the parent (itself not the parent)\n- when initally forked the child and parent share the same space\n- when the child calls execlp then the child will fully copy the program to a new memory location so it doesn't overwrite the parent\n\n# communcation between parent and child\nprocess create a chld process to do a task. but they need to communicate\n\nafter a process calls a chld process. it can execute a wait system call.\n\nthis moves a process off the ready queue, untill the chld process has terminated\nwhen the child process has terminated, it can return its status to the parent.\n\n# process termination\nautomatically executes exit after the last statement.\n- may return status to parent who is `wait`ing\n- all rsouces are dallocated by the OS\n\n they can also die more violently\n - `kill` command\n - you can only processes you 'own'\n - Orphan process: a process whose parent terminated (inherited by init)\n - Zombie process: one which terminated, but its live parent process is not WAITING for it. Since no process is receiving its exit status, it stays in the process table\n\n# signal and pipe for inter process communication\n## signal\ncommunication between OS kernel and processes and between processes\n\n- process can install a handler (function) for a signal using the system call signaction() except for SIGKILL\n- The default action for a signal is usually to kill/terminate the process if a handler is not installed.\n- Other actions are ignore, core (dump a large file for debugging), stop(stop the process), and continue. The last two actions are used by debuggers like gdb to debug a program.\n\n![partial list of signals](https://i.imgur.com/MMCEPqW.png)\n\n\n## pipe\nconnect process output and another process input. \n\nuni-directional channel\n\nfile descriptors\n- 0 - stdin\n- 1 - stdout\n- 2 - sterr\n\nyou can make file descriptors point to the same file using dup/dup2/dup3","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/171-the-society-of-the-spectable":{"title":"171-the-society-of-the-spectacle","content":"\n# Notes\n\nEconomicly driven religion\n\nLife is an immense accumulation of spectacles\n\nModern conditions of production - not comparable to Marx era capitalism\n\nMarx religion between consumers and capitalism\n\nFetishism - confer supernatural qualities on to things\n\nCommodity fetishism\n\nCommodity - recent invention\n\nWe're alienated from the creative process\n- E.g. production of breakfast\n\nArgued both ways. Efficiency vs alienation\n\nE.g., meat industry. Hunting vs supermarket meat\n\nPassively participantin horrible means of production\n\nValue of an item is determined by its social standing not material value\n\nCommodities become symbolic representations of social agreements\n\nNot how we experience them though\n\nWe don't see the complex social agreements or the manufacturing. We see the item.\n- Commodity fetishism\n- We think the are special not that they just appear special\n\nOr relationship with commodities was a prophecy for what all things would become\n\n# Related Quotes\n\n\u003e \"the present can now be lived immediately as memory. Time is submitted to the illusory order of a permanently available present and, through this spatialization of time, both time and life have been lost together.\"\"\n\n\u003e In a [dérive](https://en.wikipedia.org/wiki/D%C3%A9rive \"Dérive\") one or more persons during a certain period drop their usual motives for movement and action, their relations, their work and leisure activities, and let themselves be drawn by the attractions of the terrain and the encounters they find there... But the dérive includes both this letting go and its necessary contradiction: the domination of psychogeographical variations by the knowledge and calculation of their possibilities.\n\u003e— Ken Knabb\n\n\u003e the core Lettrist concept that every major arena of human interaction, whether it be [literary](https://en.wikipedia.org/wiki/Literary \"Literary\") or [economic](https://en.wikipedia.org/wiki/Economic \"Economic\"), follows the same basic pattern. A paradigm is introduced into a system and iterated upon until all possibilities are exhausted (this is deemed the [amplic phase](https://en.wikipedia.org/wiki/Lettrism#Key_concepts \"Lettrism\")), at which point the only path forward is to deconstruct the system down to its most granular elements (the [chiseling phase](https://en.wikipedia.org/wiki/Lettrism#Key_concepts \"Lettrism\")). Once the system has been fully deconstructed, the pieces are set into a new paradigm and the cycle begins again.\n\n# Further Reading\n\nhttps://en.wikipedia.org/wiki/The_Society_of_the_Spectacle\nhttps://en.wikipedia.org/wiki/Spectacle_(critical_theory)\nhttps://en.wikipedia.org/wiki/Détournement\nhttp://www.medienkunstnetz.de/themes/art_and_cinematography/debord/scroll/\nhttps://en.wikipedia.org/wiki/Situationist_International\nhttps://en.wikipedia.org/wiki/Psychogeography","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/18-ML-in-IA-2":{"title":"18-ML-in-IA-2","content":"\n# nefarious uses of ml\n## password guessing\n- normally based on heuristics that are designed by humans\n\t- biased may not match true distributions of passwords\n- leaked data can be used to \"learn\" what to guess\n- gain insight into what users use as passwords\n\n## alternative - PassGan\n- use statistical distribution of passwords then use this to generate guesses\n\n![passGAN](https://i.imgur.com/439hrXq.png)\n![passGAN sample data](https://i.imgur.com/Y7A4ygP.png)\n- can generate passwords that are likely to be used\n- also based off previous passwords\n- passwords can be guessed in less attempts\n\t- need to update our rules - e.g., how many guesses makes an attempt likely to be suspicious\n\t- \n\n- new password generate, which also provides real world indicator of password strength\n- faster password guessing\n\t- hackers will get in faster\n\t- need to be a step ahead of this\n- insight into strong but unused passwords\n- passwords get close and closer to those typically used\n\n## password \"guessing\"\n- gets faster as machines get faster (Moore's law)\n- machine learning reduces number of trials further by learning distributions of passwords\n\n- useful for us\n\t- even if we didn't do this research the hackers would\n\t- use passgan to detect guesses which may have come from passgan \n\t- can analyse the source of guesses for suspicous stuff e.g., ip, location etc\n\t- can analyse data from antivirus programs\n\n- useful for hackers\n\t- hackers can conquer our strategies\n\n## steganography\n- hiding secret messages in a medium that is not meant to be secret (e.g., image, audio, video)\n- used to hide content and reduce suspicion e.g., in forensic investigation\n- hidden message usually encryted but not in the sense of cryptography\n- goal is to decieve\n\n![](https://i.imgur.com/JWOIBw1.png)\n- embed noise into images\n\n### signal to noise\n- most signals contain noise e.g., static\n- noise carries info as the least significant bits in value\n- hiding data in an image in the least significant bits will be visually percieved as noise\n\n### e.g., derek uphams JSteg\n![slide](https://i.imgur.com/nGEGhPA.png)\n\n### stegnalysis\n- detecting hidden content\n- usually visually undetectable\n\nhow\n- analyse DCT distributions\n- ![example DCT distribution](https://i.imgur.com/iki90fH.png)\n\nF5 steganographic algorithm\n- developed to fool analysis of dct distributions\n- seeded with key to create pseudorandom sequence for embedding\n- can preserve statistical properties of DCT distributions\n\ncan use ML to find hidden images\n- then hackers will try to fool this\n- some will always get through\n\n# bigger issues\n- deepfakes to to shape political views of the day\n- pixel replacement with segmentation and inpainting \n\t- ![examples](https://i.imgur.com/zGOtqZa.png)\n\n## is ML good or bad\n- being used everywhere\n\n- should we care\n\n- data and modelling cannot always be 100% perfect\n\t- e.g., killer drones\n\n- privacy concerns\n- linked data\n- pipelins - information seepage\n\nnx integrated data infrastructure\n\nethics\n- what considerations need to be made\n- ML being used to automate decision making\n- ML sentencing of criminals\n\ntheft\n- theft of data\n- data is more valuable\n- transfer learning\n\n- reverse engineering a ML model\n![ml extraction attack](https://i.imgur.com/jiinX6m.png)\n\n\n# where to from here\n- good and bad are human constructs\n- how will laws work\n- can we use ML to make laws\n- Do we need to stop it?","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/18-advanced-sql-1":{"title":"18-advanced-SQL","content":"![create table 2](https://i.imgur.com/sVoiVud.png)\n![create table 2](https://i.imgur.com/AyzF1kR.png)\n\nvarchar usually bigger than you think\n\n# CRUD\n- insert adds a row ![](https://i.imgur.com/WLF64jn.png)\n- select retrieves rows from the table![](https://i.imgur.com/yHhPL6L.png)\n\t- ouput can be \"saved\" as a view![](https://i.imgur.com/iHtC4Vd.png) ![](https://i.imgur.com/NPqTeA1.png)\n\t- changes to the underlying table also chagnes the view\n- update modifies rows ![](https://i.imgur.com/aw74vlk.png)\n- delete removes rows ![](https://i.imgur.com/DZyorFF.png) ![](https://i.imgur.com/IOKErzP.png)\n\t- test as a select statement first\n\n# SQL DAO programming\nWe want to miniminse load on sql as connecting to database is expensive. \n\nOptimisations:\n- prefer muultiple row operations\n- connection pools (keep connections \"alive\")\n- reuse prepared statements (reduce unnecessary SQL parsing)\n- consider combining queries to reduce round trips\n- batched requests\n\nFollow Optimistic approach\n- assume operatios will succeed (no pre checking)\n- handle errors with exception handling\n- consider using merge if available\n\n## Merge\n![](https://i.imgur.com/UUZWjyM.png) aka replace etc.\n\n- update if they exist other wise insert\n\n## JDBC\nJava framework for interacting with sql databases.\n\nplaform and DBMS independent\n- driver provided by DBMS vendors\n- same Java code will work with any DBMC\n\nkey concepts\n- connections and connection pools\n- sql strings and prepared statements\n- result sets\n- transactions\n- batched requrests\n\n![typical jdbc](https://i.imgur.com/jLGbZWW.png)\n\n\n## JDBI\n- better version of [JDBC](notes/java-database-connectibity.md)\n\t- layered on top of it\n\t- better APIs\n\t- less code\n- simple class \u003c-\u003e table mapping \n- flexible plugin architecture\n\n![typical jdbi (fluent)](https://i.imgur.com/SwmulpV.png)\n![typical jdbi (declarative)](https://i.imgur.com/1uc2t47.png)\n\n\n# Transactions\ninteraction between two entities\n- follow explicit or implied forms\n- usually involves exchange on resources\n- may require several steps\n- often considered a single unit\n\n## In data bases\n- group of db operations is considered a *single logical unit*\n\t- transfer (read and update)\n\t- recieve shipement (update accounts)\n\t- customer sale\n\ntransactions are all or nothing. (commit vs rollback)\n\n## ACID\n- Atomic\n\t- all or nothing \n\t- operations should be related\n- Consistent\n\t- transactions move dbs from one consistent state to another\n\t\t- \"consistent\" ⇒ all integrity rules are satisfied\n\t- db may be inconsistent during a transaction\n\t\t- require defferable constraints\n![atomc and consistent](https://i.imgur.com/tCqEEHy.png)\n- Isolated\n\t- concurrent transactios shouldn't interfere with each other\n\t- ideally behave as if other transactions dont exist\n\t- read committed isolation\n\t\t- uncommited changes are visible to other transactions\n\t- require some form of concrrency mangement (e.g., locking)\n\t- ![improper isolation](https://i.imgur.com/IrZZDlW.png)\n- Durability\n\t- once a transaction is commited it is permanent\n\t- uncommited transaction dont survive crashes\n\t- auto rollback of uncommitted transaction\n\n## commit and rollback\n- changes are made to \"live\" data\n- commit makes database changes permanent\n- rollback removes all changes since that transaction start\n\n## Transaction in Java\ndefault to auto commit.\n- each statement is a separate transaction\n- if transaction has multiple statements\n\t- disable auto commit\n\t- you must manage commit and rollback yourself\n\n![JDBC explicit transactions](https://i.imgur.com/FJaINwD.png)\n![JDBI explcit transaction (fluent)](https://i.imgur.com/KvtfZC0.png)\n![JDBI explcit transaction (declarative)](https://i.imgur.com/BzGRpV4.png)\n\n# Select\n- select \u003c- wahat\n- from \u003c- from where\n- where \u003c- filter\n- group \u003c- aggregation\n- order \u003c- order\n\ndistinct removes duplicate rows\n\n![distinct](https://i.imgur.com/RiOHBkM.png)\n\n![select](https://i.imgur.com/DWFUQYN.png)\n\n![from](https://i.imgur.com/it107cD.png)\n\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/18-build-tools":{"title":"18-build-tools","content":"\n- understnad the purpose of build tools\n\t- automate the construction of software\n- sketch how make's rules (re)build software\n\t- has a set of taget and a set of sources\n\t- checks whether targets are older than sources\n\t- a MakeFile contains a list of commands that build the tager from the source\n\t- builds in the correct order (*topologically*) e.g., will run compiler before linker\n- explain why ant better suits java projects\n\t- written to handle build tasks \n\t- better at scanning sub dirs\n\t- call javac on many files at once, instead of one at a time\n- sketch how maven seeks to improve on ant\n\t- adds color\n\t- add more conventions\n\t\t- e.g., file structure\n- appreciated that there are many build tools\n\t- rake - ruby's version of Make\n- SCons - builds database about build state\n- CMake - cross platorm building; uses existing tools/IDEs\n- SBT scala\n- languge built in tools\n\t- go - Go build\n\t- rust - Cargo\n\n[build-tools](notes/build-tools.md)\n\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/18-ethics-in-hci":{"title":"18-ethics-in-hci","content":"\n[hci-ethics](notes/hci-ethics.md)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/18-hash-examples":{"title":"18-hash-examples","content":"\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/18-processes-sharing-and-threads":{"title":"18-processes-sharing-and-threads","content":"\n# Shared memory for processes\n![linux memory space layout](https://i.imgur.com/vLlD03U.png)\n\nCan't assume all variables are initally zero. \nOS decide which process maps who which physical address\n\nmemory mapping `mmap` is a family of system calls: \n- allow two processes to share some region of their memory space.\n- achieved by creating a memory region that can be shared by other processes\n\n![map diagram](https://i.imgur.com/IDk8AcN.png)\n\n![mmap examples](https://i.imgur.com/zKhFpsm.png)\n\nshared memory by two processes mapping to the same file or using fork() after mmap()\n``` c\nrandom_fd = open(\"/home/hzy/test/zero\", O_RDWR);\nptr = mmap(NULL, 10240, PROT_READ|PROT_WRITE,\n\tMAP_SHARED | MAP_FILE, random_fd, 0);\n```\n\nprivate mapping is often used to set up new memory sections.\n``` c\nfd = open(\"mmap_test_file\", O_RDWR); p\ntr = mmap(NULL, 10240, PROT_READ|PROT_WRITE, \n\tMAP_PRIVATE|MAP_FILE, fd, 0);\n```\n\n\n\n# Threads\n\n## product consumer problem\n- a producer process writes data to a buffer of fied size\n- a consumer reads data from the buffer\nthese two processes are being scheduled independently by the CPU\n\nproducer must wait if buffer is full\nconsumer must wait if buffer is empty\n\n## threads\n- allows more convenient data sharing\n- threads within a single process share everything except they have their own program counter, registers and stack space\n\n![diagram](https://i.imgur.com/XcLsWyd.png)\n\n## why\n- responsiveness - parrallelism - dont have to wait\n- resource sharing - automaticall share everything in same process\n- economy - lightweight, creating and switching between threads is faster than creating heavyweight processes\n- scalability - each to work on multiprocessor architectures\n\n## pthread\n- pthread_create(): create a thread \n- pthread_exit(): terminate a thread \n- pthread_join(): wait for a thread to terminate \n- pthread_detach(): detach a thread so that it won’t be waited \n- pthread_self(): get the thread id of the current thread \n- pthread_equal(): compare if two threads are the same \n- pthread_cancel(): send a cancellation request to a thread\n\n``` c\nvoid *myThreadFun(void *vargp) { \n\tsleep(1);\n\tprintf(\"Hello from Thread \\n\");\n\treturn NULL;\n} \n\t\nint main() { \n\tpthread_t thread_id;\n\tprintf(\"Before Thread\\n\");\n\tpthread_create(\u0026thread_id, NULL, myThreadFun, NULL);\n\tpthread_join(thread_id, NULL);\n\tprintf(\"After Thread\\n\");\n\texit(0);\n}\n```\n\n## web server thread\n- a web server is a process that provides data over the web to requesting clients\n- a thread is created for each request\n\n\n\nLightweight process - shares everything except the stack\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/18-transport-layer":{"title":"18-transport-layer","content":"chapter 3\n# service provided by transport layer\nservices\n- process to process communication\n\t- logical communication between application processes\n- multi and demulti plexing\n\t- communication for multiple applications of the same host\n- flow control\n\t- ensure production reate \u003c= consuption rate\n- congestion control\n\t- too many sender, sending too fast\n\nprotocols\n- TCP transmission control protocol\n- UDP user datagram protocol\n\n## actions and sender\n- is passed an app layer message\n- determines segment header fields values\n- creates segment\n- passes segement to IP layer\n\n## actions at reciever\n- recieves segment from IP layer\n- checks header values\n- extract app layer message\n- de multiplexes message up to application via socket\n\n# multiplexing and demultiplexing\nsender: handle data from multiple sockets, add transport header\nreciever: user header info to deliver segments to correct socket\n\n![](https://i.imgur.com/f2NqsKE.png)\n\n## how it works\nport number\n- 16 bit integer (0, 66635)\n- segment has a source and a port number\n- host uses IP and port to direct segment to appropriate socket\n\nIANA (internet assign number authority) has divded port number into three ranges\n- 0-1023 well known\n- 1024-49151 registered\n- 49152-65535 dynamic\n\n## principle of reliable data transfer\n![](https://i.imgur.com/ORzC8jm.png)\n\n- compexity of reliable data transfer protocol depends on character istics of unreliable channel\n- sender and reciever do not know the 'state' of each other. they need to communicate via a message - ACKknowledgement\n\n# TCP\n- point to point communicate\n\t- one sender, one reciever\n- reliable, in-order byte stream\n\t- no message boundaries\n\t- each byte has a position in the stream\n- full duplex data\n\t- bi directional data flow in the same connection\n\t- MSS: maximum segment size\n- cumulative ACKs\n\t- one ack message confirms multiple segments\n- connection-oriented\n\t- handshaking (exchange of control messages) initializes sender, reciever state before data exchange\n- flow controlled\n\t- sender will not overwhelm reciever\n- congestion controlled\n\t- dynamically adjust congestion window size\n\nStructure\n- sequence number - numbe assigned to the first byte of data in this segment\n- ACK # - the seq # of the next expected byte; flagged as a single bit\n- internet checksum - used to check for corruption\n-  TCP options (variable length)\n-  length (of TCP header)\n-  application data\n-  RST, SYN, FIN - connection management\n\t-  syn - initiate a connection\n\t-  fin - close a connection\n-  recieve window - flow control # of bytes reciever willing to accept\n\t-  protect against buffer overflow\n-  C, E: congestion notification \n\n![](https://i.imgur.com/M4nQCr3.png)\n\nseq number\n- byte stream\n- \"number\" of first byte in segments data\n- sliding window ![](https://i.imgur.com/qY5kmsN.png)\n \n ack\n - seq # of next bytes expected from other side\n - cumulative ACK\n\n![](https://i.imgur.com/jxhCPpa.png)\n\nlost and duplicated segments\n- lost\n\t- host does not recieve data, ack is not send, \n\t- timeout + retransmission\n\t- ![](https://i.imgur.com/wtHhht4.png)\t\n\t- sender sets the retransmittion timer when sending a segment\n\t- sender retransmits the segment iin ACK is not recieved when timer fires\n- duplicated\n\t- host recieved data, ack is send and lost\n\t- data is resent, and a duplication is detected (same sequence number)\n\n## connections setup\nthree way handshake to set up virtual connection\n- each knowing the other willing to communnicate\n- agree on connection parameters (e.g., starting seq # s)\n\n![diagram|400](https://i.imgur.com/XPfKER3.png)\n\n## connection termination\nhalf-close\n- ![](https://i.imgur.com/Ldi03j9.png)\n\n2-way handshake\n- combine ack and and server fin message\n- ![](https://i.imgur.com/osXuN2h.png)\n\n![](https://i.imgur.com/d1Tt0eL.png)\n\n## TCP flow control\n- happens at reciever side\n- we have applications, and in the kernel we have receive buffer\n- incoming data is stored in recieve buffer\n- applications fetch data from this buffer\n- reciever advertises free buffer space in recieve window field in TCP header\n- sender limits amount of in-flight data to guarantee recieve buffer will not oveflow\n\n![diagram](https://i.imgur.com/wsm9MA5.png)\n\n### congestion control\n\"too many sources sending too much data too fast for network to handle\"\n\nconsequences:\n- long delay (queueing)\n- packet loss (buffer overflow)\n\ndifferent from flow control (one sender too fast for one reciever)\n\n![causes](https://i.imgur.com/Ae5xOa3.png)\n\nAIMD \n- senders can increase sending rate until packet loss occurs, then decrese rate on loss event\n- additive increase: increase sending rate by 1 maximum segment size every RTT until loss detected\n- multiplicative decrease: at each loss event, cut sending rate: in half (TCP Reno), to 1 MSS (TCP Tahoe)\n- ![diagram](https://i.imgur.com/AeOEapp.png)\n- creates sawtooth behavioiur: probing for bandwidth\n\n![](https://i.imgur.com/Citauiv.png)\n- tcp sender limits transmission: LastByteSent- LastByteAcked \u003c cwnd\n- cwnd is dynamically adjusted in response to observed network congestion (implementing TCP congestion control)\n\nTCP sending behavior: roughly: \n- send cwnd bytes, \n- wait RTT for ACKS, \n- then send more bytes\n\nTCP rate = cwnd/RTT * bytes/sec\n\nTCP slow start\n- when connectin begins, increase rate exponentially until first loss event\n\t- intially, cwnd = 1 MSS\n\t- double cwnd every RTT\n\t- increment cwnd for every ack recieved\n- initally slow but ramps up fast\n- ![](https://i.imgur.com/khbzr79.png)\n\nssthresh variable: determines when to switch between exponential and linear\n\n# UDP\n- connectionless:\n\t- no handshaking between UDP sender, reciever\n\t- each UDP segment handled independently of others\n- beset effort service, UDP segments may be lost or delivered out of order\n- no flow and congestion control\n- applications\n\t- streaming\n\t- dns SNMP\n- less overhead","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/19-advanced-sql-2":{"title":"19-advanced-sql-2","content":"\n\n# CASE\n![case example](https://i.imgur.com/H0VjLAK.png)\n\nbasically a switch statement\n\n- derived valye where calcyulation isnt simple\n- standardising values e.g., booleans: t/f, y/n, 0/1\n- flipping between row and col orientation (*privoting*)\n\t- all students vs all on one students papers\n\n# Set operators\nrelations are sets of tuples ⇒ we can use set operators\n\ncombine rows of two table vertically\n\nsource table must be compativble\n- same set of columns\n- same data types\n- = same heading\n\nget new table with same headings as inputs\n\nidentical rows deleted\n\n![set example 1](https://i.imgur.com/omk0DYv.png)\n\nunion: all rows\n- ![union](https://i.imgur.com/GfrjCLI.png)\n- ![union result](https://i.imgur.com/OPsaTuu.png)\n\nintersect: rows that appear in both\n- ![intersect](https://i.imgur.com/yKp8x6q.png)\n- ![intersect results](https://i.imgur.com/VsrACMF.png)\n\ndifference (except, minus): rows in top that arent in bottom\n- ![diff](https://i.imgur.com/LEpaeeT.png)\n- ![diff results](https://i.imgur.com/0I6BqOn.png)\n\n# Aggregation and grouping\n![recall](https://i.imgur.com/AyBCAN3.png)\n\n ## group by\n![](https://i.imgur.com/LxxyZaf.png)\n- groups rows that have equal values across all the columns in \\\u003ccolumn-list\u003e\n- always used with aggregate function(s) in select clause\n- one row in the result for each differect combined value of the grouped columns\n\n![group example](https://i.imgur.com/ZYgqzlD.png)\n\n- all non computed columns in select clause must normally appear in group y, and vice versa\n\n### restricting by groups (having)\n![](https://i.imgur.com/ylqvkU5.png)\n\n- similiar to where, restricts output of group by\n- cant include aggregate functions (where can't);\n\n## Analytic functions (FYI)\n![](https://i.imgur.com/L59hwEa.png)\n\n- enchancement of aggregation\n- aggregate without reshaping the ouput\n- many more functions avaiable\n- sliding windows supported\n- dont use when simple group by is sufficient\n\n# Select\n![slide](https://i.imgur.com/4rsQ1B9.png)\n\n- select\n- from\n- where\n- group  by\n- having\n- order by\n\norder of evaluation\n- from\n- where\n- group by\n- having\n- select\n- order by\n\n# Joins\n![recall](https://i.imgur.com/khcpBa0.png)\n![recall join syntax](https://i.imgur.com/hQHotL3.png)\n\ninner join : matching rows only\n\nouter join: may include non-matching rows from the left table, right table, or both tables\n\nalso, cross, and semi join\n\n## Cross join product\n![cross join](https://i.imgur.com/CxGUhpu.png)\n![cross join result](https://i.imgur.com/O3FxL5o.png)\n\nevery possible combination of rows from two tables\n\nuses:\n- cards\n\t- suits table\n\t- ranks table\n\t- deck = suits cross join ranks\n-  timetable\n\t- days table\n\t- timeslots table\n\t- timetable = days cross join timeslots\n\n## Semi join\noutput only trows from one table that match rows from the other\n\n![semijoin](https://i.imgur.com/bW4uVPQ.png)\n![semijoin results](https://i.imgur.com/ts5hEf9.png)\n\ninverse is antijoin: ouput only rows from one table that dont match rows from the other\n\n# Subqueries\na select expression embedded inside another\n- inselect clause to compute value using data from other tables\n- in from: inline view\n- in where clause with in, all, some , exists\n\n- can refer to data from \"outer\" expression (correlated subquery)\n- tricky to write, so be careful. maybe stepwise\n- can rewrite joins as subqueries, but not vice versa\n\nprefer joins to subqueries\n\n## how to develop\n- identify components opf multi part query\n- implement and test the components as separeate select statements\n- combine into one query, nesting one within the other.\n\n![subquery part 1](https://i.imgur.com/yhOriER.png)\n![subquery part 2](https://i.imgur.com/APZGzz5.png)\n\n# Inline views\na named subqueriy embedded in the from clause is effectively a temporary view\n\nvisible within thescope of current select expression only\n\n![inline view](https://i.imgur.com/s3G8L7X.png)\n\n## saving sub queries (WITH)\n- sometimes need to re-use same or very similar subquery severl times in the same query\n- with saves named subqueries for later re-use (in the same query)\n- visible iwthin scope of entire select statement\n\n![with](https://i.imgur.com/uQ5bn3B.png)\n\n# Scope  in select\n- row variable only exist inside the select expression that defines them\n- a select expression can only directly refer to items declared in:\n\t- its own select and from clause\n\t- select and from clauses of any elclosing expressions\n\t- any preceedin with expression\n- particularly important for correlated subqueries\n\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/19-cpu-scheduling":{"title":"19-cpu-scheduling","content":"\nwhy shedule?\n- keep cpu busy (cpu utilisation)\n- so processed dont hae to spend time waithing for the CPU\n\t- even if cpu is always busy executing processses in different orders can change the average time spent in queue\n- cpu burst\n\t- ![](https://i.imgur.com/0eTDVVu.png)\n\t- (diagram is old the timing will have changed)\n\t- between burst - waiting for io\n- so that interactive processes respond quickly\n\t- time spent waiting in total\n\t- average time between visits to CPU\n\t- ![](https://i.imgur.com/w9H7MZ7.png)\n\ncriteria\n- CPU utilisation - % time CPU is busy\n- throughput - number of processes completed per time unit\n- turnaround time - (for a single process) length of time from submitted to completed\n- waiting time - (for a single process) time spent waiting for the CPU\n\t- does include time wating for IO\n- response time - (for a signle process) average time from the submission of a request to a process until the first response is produced\n\nPreemption\n- 4 situations for scheduling\n\t1. a process switches from running to waiting\n\t2. a process switches from running to ready (due to interrupt)\n\t3. a process switches from wauting to ready (due to comletion of IO)\n\t4. a process terminates\n- non preemptive - scheduling take splace only under 1 nd 4, which has no choice\n- premptive - scheduling can take place under 2 and 3 as well. that means a running process has to give way to the processes with higher priority\n\nif you allow interruption it is preemptive\n\n# Scheduling algorithms\n## Gantt charts\nThe operation of  scheduling algortihm is commonly represented in a Gantt chart\n\n![example chart|400](https://i.imgur.com/haqjMOW.png)\n![gantt evaluation|400](https://i.imgur.com/iqtT90Q.png)\n\n## First come first served (FCFS)\n![diagram|400](https://i.imgur.com/yAd4LRl.png)\n\nsimplest method- executes processes in the ready queue on a first come first served basis\n\n- when a proces become ready it is put at the tail of the queue\n- when the currently executig process terminates, or waits for IO, the process at the front of the queue is selected next\n- processes can come at any time - what if two at the same time? choose process with smallest ID to serve first\n\nnon-preemptive\n\npro\n- easy to understand and implement\ncon\n- waiting time bad\n- convoy effect: lots of small process can get stuck behind a big on\n- bad response time\n\nfair but not efficient\n\n## Shortest job first (SJF)\nchoose the job in the queue with the shortest burst time.\n\n- equal burst time are executed FCFS (by process id)\n\n![SJF example|400](https://i.imgur.com/nzwBwjc.png)\n\npro\n- provably optimal average waiting time\n\ncon\n- never know in advance what the length of next cpu burst will be\n- possibility of long processes never being executed\n\t- starvation of process\n- not \"fair\"\n\n### predicting next burst time\nmachine learning sorta - burst length predicted from previous CPU bursts using exponential average equation\n![example|400](https://i.imgur.com/pPydNXN.png)\n\npreemption example\n- p1 is executing\n- p2 arrived with burst time shorter that remainging bust time of P1\n\t- non preemptive - P1 finishes\n\t- preemptive - P2 takes CPU\n\n![example|400](https://i.imgur.com/oJbB3d4.png)\n\n## Priority scheduling\n- each process allocated a priotit when it arrives\n- cpu is allocated to the process with the highest priority\n\nlow number is a higher priority\n\n- non preemptive - run processes until finished\n- preemptive - higher priority process should take over CPU when they arrive\n\nSJF is a type of priority scheduling where the priority is based on the estimated next cpu burst\n\n![example|400](https://i.imgur.com/lLhSjtY.png)\n\n\n## Starvation and aging\nstarvation occurs when a proces waits indefinitely to be allocated the CPU\n\naging - as a process waits its priority increases\n\n## Round Robin\ncommonly used today\n\ndesigned for time sharing systems\n- small unit of time (time quantum) if defined\n- ready queue is treated as a circular list\n- cpu schedular goes round the ready queue, allocating the CPU to each process for a time interval up to 1 time quantum\n\n![slide|400](https://i.imgur.com/7swmOID.png)\n![example|400](https://i.imgur.com/Crl3xOz.png)\n\nchoosing time quantum\n- if infinitely large - we have FCFS\n- if very small - we have processor sharing - lots of overhead for switching\n\n![pros/cons](https://i.imgur.com/aDemb5s.png)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/19-deepfakes":{"title":"19-deepfakes","content":"\n# what, origins, how\n- issue with trust politics etc\n\n- essentially better face swapping\n- replaces traditional studio artist with ML\n- open source\n\t- easy to do\n\t- point and click\n\t- more widely available\n- in early stages so quality varies\n- \n\n# related concepts\n- voice faking c.f., impersonation\n- lip syncing (replaces mouth no whole face)\n\t- take actual footage of e.g., politician and change words\n\t- can be done using only text\n\t- natural language processing\n\n- uncanny valley\n\t- ![](https://i.imgur.com/Jd8Vpv1.png)\n\t- \"something not quite right\"\n\t- some people dont realise\n\n# how\n- auto encoders\n\t- take image an reduce to a base representation\n\t- e.g., of the face\n- decorder\n\t- takes base and produces image\n- deepfake\n\t- takes base of two differnet people and combines them\n\t- two decoders\n\t\t- one for each person\n\t\t\t- a pathway and b pathway\n\t\t- both decode from the same combined base representation\n\n- to swap\n\t-  ![swap process](https://i.imgur.com/Z0oWuOk.png)\n\n- deep face lab\n\t- ml workflow\n\nother requiremtns\n- need a lot of data\n\t- video - extract individual frames\n- similar facial structures\n- source content cleanup\n\t- remove images with two or more faces\n\t- crop images\n\t- resample/distort/skew image to create new instances\n- post processing tools to touch up afterwards\n\n# concerns and solutions\n- genuine concern about video being distict\n\t- we expect images and text to be fake\n\t- do not expect videos to be fake\n\t\t- more damaging\n\n- politically weaponised\n\t- e.g., deep fakes of biden declare war on russia\n\nplausible deniability\n- porn\n\t- swap actors onto porn scenes\n\t- hard to deny\n\t- how to prove its a deepfake\n\t- revenge porn\n- lack of trust\n\t- only from the existense of deepfakes\n\t- true things become more suspicious\n\n\nshould \"you\" be concerned\n- for your personal integrity no\n- likely not enough data for you to be faked\n\t- \"one shot deepfakes\"\n- as a citizen yes\n\n## responses\n- crytpographic siging to authenticate origin\n\t- will this work about leaked content\n\nml to analyse deepfakes (e.g., blinking)\n\nanother arms race\n\n# summary\n![](https://i.imgur.com/H9wv8Bv.png)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/19-graphs":{"title":"19-graphs","content":"\n[graphs](notes/graphs.md)","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/19-network-layer-data-plane":{"title":"19-network-layer-data-plane","content":"\n- transport layer messages are divided into segments\n- passed to network layer\n\t- sender: encapsulates segments into IP packets, passes to link layer\n\t- reciever: deliver segments to tranport layer protocol\n\t- sender and reciever are connected by multple routers\n- routers\n\t- examine header fields in all IP packets passing through it\n\t- moves IP packers from input ports to output ports to transfer packets along end-end path\n- network layer protocols\n\t- IP\n\t- internet control message protocol (ICMP)\n\t\t- use for troubleshooting type things\n\n![packet diagram](https://i.imgur.com/Y9ue6gE.png)\n\n# Forwarding\nforwarding\n- move packets from a routers input link to appropriate output link\n- local, per-router function\n- function in data plane\n\nrouting\n- determine route taken by packets from source to destination\n\t- network-wide logic\n\t- function in control plane\n\t- chooses shortest path through routers\n\n# network layer service model\nbest effort\n- try its best to deliver packet\n- does not guarantee successful delivery\n- transport layer provides reliability\n- no big deal if packet is lost\n- does not guarantee timing or order of delivery\n\t- each packet sent individually, possibly through different paths\n- does not guarantee bandwidth available\n\t- network layer uses packet switching which unlike socket switching does not reserve resources\n\n# Routers\n![architecture overview](https://i.imgur.com/fNTeZnZ.png)\n\ndestination-based forwarding: foward based only on destination IP address\n\ninput port queueing: if datagrams arrive faster than fowarding rate into switch fabric\n\n# IP addressing\n- unreliable host-to-host communication protocol\n\t- datagram formatting, IP addressing, packet switching\n\n![IP packet headers](https://i.imgur.com/2ehI0Kq.png)\n- ver: IP protocol versin number\n- head len: header length in bytes\n- type of service: diffserv(0:5) or ECN (6:7)\n- length: total datagram length (bytes)\n- time to live: remaining max hops (decremented at each router)\n- upper layer: which protocol use at transport layer\n- 16-bit id, flgs, fragment offset: fragmentation/reassembly\n- header checksum\n- source IP\n- destination IP\n- options: e.g., timestamp, record route taken\n\noverhead:\n- 20 bytes TCP\n- 20 bytes IP\n- = 40 bytes + app layer overhead for TCP+IP\n\n\ninterface: connection between host/router and physical link\n- router have multiple interfaces\n- host has one or two interfaces :e.g., ethernet and wireless\n\nIPv4 address: 32-bit id associated with each host or router interface\n![dotted decimal IP address notation](https://i.imgur.com/N0hB8u8.png)\n- two main components\n\t- network ID\n\t\t- addresses in the same network have the same network ID\n\t- host ID\n- 5 classes\n\t- ![](https://i.imgur.com/9dOLoyr.png)\n\n## subnetting\n- partitioning an IP network into multiple smaller network segments\n\t- designate some high-order bits from host part as subnet ID\n\t- ![](https://i.imgur.com/wGjPOJb.png)\n- netmask\n\t- a 32-bit number with all 1s for network part and all 0s for host part\n\n![example](https://i.imgur.com/7COPiAh.png)\n- use bitwise and to find network part from address and mask\n\n\n## fragmentation\n- network links have an MTU (maximum transmission unit)\n\t- different linktypes have different MTUs\n- large UP datagrams are fragmented at routers\n\t- one datagram become several\n\t- reassemble only at destination\n\t- IP header bits are used to identify fragments\n\n\nheader\n- identifier\n\t- same for all fragments\n- flag: 3 bits\n\t- 1st not used\n\t- 2nd - do fragment\n\t- 3rd - more fragment (0 for the last fragment)\n- offset\n\t- offset of the fragment in the packets data field (units of 8 bytes)\n\n![frag example](https://i.imgur.com/eENmMTd.png)\n\nwhat needs to change in the header of fragment\n- flag\n- offset\n- length\n- ttl\n- checksum\n\n## special IPv4 Adresses and NAT\nspecial addresses\n- 127.0.0.1 localhost/loopback\n- 10.0.0.0/8 private use\n- 192.168.0.0/16 private use\n\nNAT (network address translation): all devices in local network share just one IPv4 address\n- allow multiple devices to share the same adresses\n- help preserve the limited amount of IP address\n- translate from private IP to public IP\n- ![NAT diagram](https://i.imgur.com/fU7hTbO.png)\n\n# IPv6\n- inital motivation: IPv4 mostly used up\n- additional motivation\n\t- speed prcessing/forwarding: 40 byte fixed length header\n\t- enable different network-layer treatment of \"flows\"\n\t- better support for host mobility\n\t- better support for security\n\ndatagram format![](https://i.imgur.com/6O7jPQg.png)\n\nadressses\n- 128 bits\n- hexadecimal colon notation\n\t- 12AB:0000:0000:CD30:0000:0000:0000:0000\n- adress compression\n\t- consecutive sections of seros are replaced with ::\n\t- can be used only once per address\n\t- e.g., 12AB:0000:0000:CD30::\n\nCIDR\n- classless interdomain routing\n- method for allocating IP addresses and IP routing\n- notation\n\t- based of variable length subnet mask (VLSM)\n\t- address format: IP address/x, where x is number of bits from left to right as network part\n\t- ![](https://i.imgur.com/n681AV1.png)\n\nextension headers: ![](https://i.imgur.com/8rM3clb.png)\ndifferencees: ![](https://i.imgur.com/cWKDpEY.png)\n\n# transition from v4 to v6\n- cant change all router at once\n- will need mixed v4 and v6 routers\n\ntunneling\n- v6 datagram is carried as the payload in v4 datagram among v4 routers (\"packet with a packet\")\n- used alot with 4G/5G\n- ![example](https://i.imgur.com/h4awnaL.png)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/19-security":{"title":"19-security","content":"\n- why cybersecurity is a growing concern\n\t- more software ∴ more dependecies ∴ more complex ∴ more \"surface area\" of risk of vulnerability\n- sketch confidentiality, integrity, and avalability security\n\t- confidentiality - protecting data from being stolen\n\t- integrity - attacks on data with the aim to decieve users\n\t- avalability - e.g., DDoS\n- appreciate that dependencies cause security risks\n\t- vulnerabilities in dependencies extend to your code\n- explain risks from non-validation of user input\n\t- \n- outline how injection attack works\n\t- malicious input to manupulate underlying database\n\n[security](notes/security.md)","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/20-SE-in-IA":{"title":"20-SE-in-IA","content":"\n# why\n- apps for IoT devices contain security flaws\n\t- smart home security breaches\n\t- kindles\n\t- vulnerable libraries lead to vulnerable devices\n- software helps us to use hardware\n\t- need to make the software secure\n\n# overview\ncombines computer science, engineering, and maths to make software\n\n- software engineering coined in 1968-1969 when discussing 'software cirsis'\n\t- security breaches\n\t- bugs etc\n\ndifferent from individual programming because of the Audience\n![](https://i.imgur.com/yuIeXpq.png)\n\n- types\n\t- generic software\n\t\t- stand alone systems e.e.g, word etc\n\t- customized software\n\t\t- designed specifically for a customer\n\t- generic can transistion to customised\n\n# dev process\n- tried to mirror engineering process\n- software is different\n\t- needs to be flexible\n\ntimeline\n- waterfall\n- spiral\n- agile\n\n# stages\n## design\n- feasability\n\t- ![slide](https://i.imgur.com/KD8J4Dr.png)\n\t- financial, legal, time, etc\n- requirements specification\n\t- stakeholders\n\t\t- anyone affected by the system\n\t\t- ![slide](https://i.imgur.com/NkMt4q7.png)\n\t- features, requirements\n\t\t- ![slide](https://i.imgur.com/ghNmRhj.png)\n\t\t- ![use vs system reqs](https://i.imgur.com/DWSNrSu.png)\n\t\t- ![functional vs non functional](https://i.imgur.com/gWwAWBV.png)\n- system design\n\t- ![slide](https://i.imgur.com/mMBkSp1.png)\n\t- databse design\n\t\t- er model etc\n\t- architectural design\n\t\t- structure of application\n\t\t- ![mvc](https://i.imgur.com/V3FvokX.png)\n\t\t\t- view model controller\n\t- security\n\t\t- during development not after\n\t\t\n## develop\n- ![slide](https://i.imgur.com/P852JEc.png)\n- version control\n\t- ![version control](https://i.imgur.com/G6iExvO.png)\n\t- ![centralised](https://i.imgur.com/gExIZRq.png)\n- issue tracking\n\t- keep track of tasks, bugs, feature requests etc\n- unit testing\n- code reviewing\n\n## validation\n- checking if system conforms to specs\n\t- unit testing\n\t- component testing\n\t- system testing\n\t- user acceptance testing (UAT)\n\t\t- ![UAT](https://i.imgur.com/ksLDRP0.png)\n\t\t- finds issues that devs dont see\n- ![hehaviour driven development](https://i.imgur.com/M8pxgcO.png)\n- code reviews\n\t- better than one single person\n\t- different perspectives\n\t\n## evolution\n- new requirements derived through software use\n- change in business processes occur as a result of new business opportunities\n- errors in software surface later\n- upgrade to new hardware, \n- need for improved system performance\n\n# for Information assurance\n- security should be central\n- think of security every step of the way\n- code resure and (SDKs) should be critically evaluated\n\t- often flaws are inherited from reused llibraries or copied online code\n- where are the security knowledge gaps\n\t- use tools to detect vulnerabilities\n\t- ","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/20-data-integrity":{"title":"20-data-integrity","content":"\n![review questions](https://i.imgur.com/P812tlT.png)\n\n# Data Integrity\n\nGIGO\n\n![recall integrity](https://i.imgur.com/KlL4bjE.png)\n\nTypes of error\n- ennecessary duplication of data\n- missing information (expecially nulls)\n- referential integrity problems: broken links,  \"orhpan\" records (foreign keys)\n- data entry errors: typos/keying errors, value in wrong field\n- invalid/nonsensical data, e.g., nefative salary\n- going against business rules/policy law\n\n## Validation\nchecking that entered values are plausible.\n- values must make sens, be valid\n- simple checks to block obvisously bogus data\n\nautomated by constraints within the data base\n\nvalid ≠ correct\n\n## Verification\nChecking that correct value was entered e.g.,\n- double check input\n- independent double entry\n- independent triple entry (or more) for critical checks\n\nmanual process invvolving human input and judgement\n\nvalid + verified ≠ correct.\n- malicious vandalism\n- human psychology rtends to promote dertain kinds of error\n- misread handwritten notes\n- incorrect for fake information provided\n\n![validation and verification examples](https://i.imgur.com/I3EPWZO.png)\n![student id check digit](https://i.imgur.com/JlQMPYZ.png)\n\n## Integrity constraints\nmachine readable conditions (true/false)\n\nchecked when data is changed\n- in oracle all existing data must conform\n- in SQL erver, you havel to explicity tell it to check existing data\n\nideally these are in the daabase. but some this is not possibe and must be implemented in code.\n\n### Defining constraints\ncol-level constraints\n- specified in line in col defs\n- can only refer to that column\n\ntable level constraints\n- are specified out of line alongside other columns\n- can refer to  any col inthe table\n\nconstrainst should be named\n\n### Primary and foreign key constraints\n![example](https://i.imgur.com/xh5jdPV.png)\n\nprimary keys are not null and are unique\n\nsome DBMSs support on delete and on update actios on foreign keys when a parent row is deleted or updated\n- cascade: \"child\" rows inherit the same operation as \"parent\" row\n- set null: \"child\" FK is set to null (if permitted)\n- set default: \"\"\n\n### Unique values (other than primary keys)\n![](https://i.imgur.com/QcoDPPq.png)\n\n## Check constrainsts\n![](https://i.imgur.com/hBq0Rnp.png)\n\nfor chcking if within list. use a lookup table\n![](https://i.imgur.com/kHMqxM6.png)\n\n# Automation\n## Sequences\ngenerate integer values\n\n![sequence](https://i.imgur.com/oE9BGkt.png)\n![sequences auto vs custome](https://i.imgur.com/msmxsgu.png)\n![java accesing the sequence](https://i.imgur.com/psDNCrN.png)\n![java accesing the sequence (fluent)](https://i.imgur.com/nbfAzca.png)\n\n![caution](https://i.imgur.com/l4fiErh.png)\n\n## Triggers\nspecific operation on table trigger other operations\n\nnormally written in a \"proper\" language e.g.,\n- Oracle: PL/SQL, Java\n- H2: java\n- SQL server: transact-SQL\n- PostgreSQL: most languages, e.g., python, ruby, perl, r, bash, java, php etc\n\nused when:\n- as a last resort\n- computed columns\n- setting status values in reponse to updates\n- maintaining refernetial integrity\n- rewriting application input\n- integrity constraints that involve multiple tables\n- row based security policies\n- domain specific auditing (beyond standard logging features)\n- performing actions outside the DBMS\n\nspecifications\n- timing: before, after, instead of\n- type of operation: insert update delete\n- column affected (update only, optional)\n- table affected\n- other conditions (optional)\n\ntriggered operation\n- what to do\n- trigger will activate only once unless you tell to to execute once for each row affectted by the activation conditions\n\n![H2 trigger](https://i.imgur.com/e4tqfH9.png)\n![H2 trigger action](https://i.imgur.com/eSr8Lc4.png)\n\n## Stored procedure\nprogramming code stored within the database\n\nwhy?:\n- reduce or eliminate application/database round trips\n- offload database-oriented processing to the DBMS\n- encapsulate database code in the database for re use (DRY)\n- encapsulate query details\n\ntriggers often a special case\nh2 lets you create aliases to java functions, but these aren't stored in the database\n\n![h2 function alias](https://i.imgur.com/TjUhVAO.png)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/20-graphs-2":{"title":"20-graphs-2","content":"\nGraph drawing is its own problem.\n\nOne easy way is to draw the vertices is clockwise order and draw edges between them\n\n[traversal examples](https://echo360.net.au/lesson/86c6c819-3257-424e-b8e6-d17f4e1e9170/classroom#sortDirection=desc)\n\n# recurisve depth first traversal\nsame but.. delay the pop of an item from the stack until all its neighbours have been processed, and we only push those one at a time.\n\n![code](https://i.imgur.com/kWm9REo.png)\n\n## topological sorting\nIn a *directed* graph we have edges from v to w which do not necessarily imply an edge from w to v.\n\nthen is a neighbor of v but not (necessarily) vice versa. \n\nsuppose edges indicate some dependency\n\nwe want an order of vertices that finishes with v but never containes any vertex unless all the things that depend on it occur earlier\n\nthis is a (reverse) *topological* sort\n\nfor this to work the graph must be *acyclic*. i.e., we cannot have a depends on v which depends on w which depends on a\n\nit that condition is met a recursive depth first traversal can be used.3\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/20-network-layer-control-plane":{"title":"20-network-layer-control-plane","content":"\n[slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2982068-dt-content-rid-19209669_1/courses/COSC203_S2DNI_2022/COSC203_lecture22%281%29.pdf)\n\n# per-router control vs SDN\n## per router\n- each router runs a routing algorithm\n- router communicate with each other\n- and creates a forwarding table\n\n![](https://i.imgur.com/c5nfT7X.png)\n\n## SDN software defined networking\na remote controller computes, and install fowarding tables in routers\n- much faster: less work for each router\n- separate control and data plane\n![](https://i.imgur.com/H73GPsc.png)\n\n# routing algorithms\n- goal is to determine \"good\" paths from sending to recieving host through network of routers\n- path: sequence of routers\n- \"good\": least \"cost\", \"fastest\", \"least congested\"\n\n## graph abstraction\n- nodes: set of routers\n- edges: set of links\n\n$c_{a,b}$ cost the link directly connecting a and b. if there is no link the cost is ♾\n\n![slide](https://i.imgur.com/onryMTK.png)\n\n## algorithm classification\nglobal: all routers have complete toplogy, link cost into\n- link state algotihms\n\ndecentralized: interative process of computation, exchange of into with neighbors\n- routers only know link costs to attacked neighbors\n- \"distance vecotr algorithms\n\nstatic: routes change very slowly over time\n\ndynamic: routes change more quickly\n- periodic updates or in response to link cost changes\n\n## notations\n![](https://i.imgur.com/NfrM72Y.png)\n\n## link state routing\ncentralized: network topology, link costs are known to all nodes\n- each node gathers informatin on each link to its neighbors\n- build link state packets and flood to all other nodes\n\ncomputes least costs paths from one node to all other nodes\n- gives a fowarding table for that node \n\niterative: after k interations, know least cost path to k destinations\n\n\n### Dijkstra's algorithm\nfoward search algorithm\n\n```\n///initialization\nN` = {u}\nfor all nodes v\n\tif v adjacent to u\n\t\tthen D(v) = Cuv\n\telse D(v) = infinity\n\t\n//loop\nloop until all nodes in N`\n\tfind W not in N` such that D(w) is a min\n\tadd w to N`\n\tupdate D(v) for all v adjacent to w and not in N`:\n\t\tD(v) = min(D(v), D(w)+Cwv)\n\t//new least-path-cost to v is either old least-cost-path to v or known least-path-cost to w plus direct-cost from w to v\n\n```\n\n![example](https://i.imgur.com/zeR9DAI.png)\n\nalgorithm complexity:\n- n nodes\n- for each of n interation: need to check all nodes, w, not in N\n- n(n+1)/2 comparisons: O(n²)\n- more efficient implementations possible: O(nlogn)\n\nmessage complexity\n- each router must broadcast its link state information to other n routers\n- efficient broadcast algorithms: O(n) link crossings to dissenimate a bradcast message from one source\n- each router's message crosses O(n) links: overall message compexity O(n²)\n\n## Distance vector routing\n### bellman-ford equation\nbackward search algorithm\n$D_{x}(y) = min_{v} \\{c_{x, v} + D_{v}(y)\\}$\n\n### distance vector algorithm\neach node:\n- **wait** for change in local link cost or msg from neighbor\n- **recompute** DV estimate using DV recieved from neighbor\n- if DV to any destination had changed, **notify** neighbors\n\n- iterative, asynchronous\n- distributed, self-stopping\n\t- no notifications recieved, no action taken\n\n\"good news (decrease on link cost) travels quickly\"\n\n\"bad news (increase on link cost) travels slowly\" - count-to-infinity problem\n- if a link is broken other routers become aware slowly\n- routers unaware of broken link can \"advertise\" incorrect costs and create a routing loop\n- loop is broken if a hop count threshold is passed \n\n## link state (LS) vs Distance vector (DV)\nmessage complexity\n- LS: n routers O(n²) messages sent\n- DV: exhange between neighbors; convergence time varies\n\nspeed of convergence:\n- LS: O(n²) algorithm, O(n²) messages\n- DV: varies\n\t- may have routing loops\n\t- count-to-infinity problem\n\nrobustness\n- LS:\n\t- router can advertise incorrect link cost\n\t- each router computes only its own table\n- DV:\n\t- router can advertise incorrect path cost: black holing\n\t- each routers table is used by others: errors propagate through network\n\n\n# Routing in internet\n- autonomous system (AS): a group of networks and routers controled by a single administrative authority\n- Intra-AS routing:\n\t- routing information protocol (RIP): distance vector routing\n\t- open shortest path first (OSPF): link state routing\n- Inter-AS routing:\n\t- border gateway protocol (BGP)L path-vector routing\n\n# ICMP\n- used by hosts and routers to communicate netowrk level information\n\t- error reporting:\n\t- echo requeset/reply\n- network layer \"above\" IP\n\t- ICMP message carried in IP datagrams\n- ICMP message: type, code plus first 8 bytes of IP datagram causing error\n\n![ICMP types and codes](https://i.imgur.com/cv0DRXL.png)\n\n## traceroute\n- sends a set of UDP segments to destination\n- datagram in nth set arrives to nth router\n\t- router discards datagram and sends source ICMP message (type 11 code 0)\n\t- ICMP message possibly incldes name of router and IP\n- when ICMP message arrives at source: record RTTs\n\nstopping:\n- when a packet arrives that the destination, it returns ICMP \"port unreachable message\" (type 3 code 3)\n- source stops","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/20-software-licensing":{"title":"20-software-licensing","content":"\n[pdf](https://cosc202.cspages.otago.ac.nz/lectures/L20-software-licensing.pdf)\n\nwhat does it mean for people to use your software. What responsitilities do you have\n\n- Understand the default protection of code \n\t- authors copyright\n- Contrast ‘libre’ free and ‘gratis’ free \n\t- libre: free as in freedom\n\t- gratis: free as in no cost\n- Define what makes open source software \n\t- floss - free libre open source software\n- Contrast copyleft and more permissive licences \n\t- copyleft  \"viral licensing\"\n\t\t- usage of copyleft software required your software be copyleft also\n\t\t- derivative must \"copy\" the same license\n\t- others e.g., creative commons\n\t\t- allow a selection of *facets* [Creative commons](notes/software-licensing.md#Creative%20commons)\n- Appreciate that code can be multi-licensed \n\t- e.g., floss for non-commercial use but commercially licenced otherwise\n- Understand how to apply a license to code \n\t- project should include complete license text: LICENSE file in top-level of project directory\n\t- also good idea to add to each file\n- Appreciate licenses can be mutually incompatible\n\t- e.g., developing software that combines two FLOSS code bases that have different code licenses.\n\t- could be impossible to satisfy both licenses simultaneously.\n\n[software-licensing](notes/software-licensing.md)","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/20-sync-deadlock":{"title":"20-sync-deadlock","content":"\n# Bounded buffer problem\n![slide|400](https://i.imgur.com/tdAllKY.png)\n\nproducer consumer problem\n\nissues\n- no data in buffe: consumer has nothing to consume: data race\n- buffer is full: no space for producer to produce: busy waiting\n\nprivate vars\n- in: next pos in buf to be writted\n- out: next pos in buf to be read\n\nshared variables\n- buffer\n- counter: number of items in buffer\n\nwaiting\n- busy: proces keeps checking (if buffer is still full) wasting CPU time\n- non busy: suspend the process \n\nsoution with shared array\n```c\nPRODUCER: repeat \n\t\t...\n\t\tproduce an item in nextp \n\t\t...\n\t\twhile counter = n do no-op;\n\t\tbuffer[in] := nextp;\n\t\tin := in+1 mod n;\n\t\tcounter := counter+1;\n\tuntil false;\t\nCONSUMER: repeat \n\t\twhile counter = 0 do no-op;\n\t\tnextc := buffer[out];\n\t\tout := out+1 mod n;\n\t\tcounter := counter-1;\n\n\t\t...\n\t\tconsume the item in nextc \n\t\t...\n\tuntil false;\n```\n\ncounter is a shared variable - causes a data race problem\n\n![data race problem slide|400](https://i.imgur.com/qIz6FGU.png)\n\n# critical sections\nguarantee that certain sections of coopeating processes are not interleaved to avoid data race problem\n\nonly one process can execute critical section at a time\n\n![locking examle](https://i.imgur.com/YTqizzt.png)\n\nbut there is a data race problem for locking the processes!\n\n# hardware locking\ndisalow interrupts while a shared variable is being modified. only works for one CPU\n\nmodern computers have special **atomic instructions**\n- CompareAndSwap\n- testAndSet\n\n`CAS(0, a, n)`: If the value at address a is o, write the value n to address a and then return true; Otherwise, return false, where o and n are integers, and a is the address of a memory location.\n\n# CAS based LOCK function\n![slide|400mp](https://i.imgur.com/aeS3HGS.png)\n\n![locked producer and consumer|400](https://i.imgur.com/LQfdIVC.png)\n\nstill has busy waiting problem\n\n# Semaphores\ntool for sync using atomic operations\n\na semphore S is an integer variable that can only be accessed via two functions fo system calls\n\n``` c\n//Wait(S): \nwhile S \u003c=  do no op;\nS := S-1;\n\n//Signal(S):\nS := S + 1;\n```\n\nimplementaion using CAS\n``` c\n//Wait(int *S): \nagain: \n\tT = *S;\n\tif (T \u003c= 0) goto again;\n\tif(CAS(T, S, T-1) == false) goto again;\n//Signal(int *S): \nagain: \n\tT = *S;\n\tif(CAS(T, S, T+1) == false) goto again;\t\n\n```\n\nsemaphore without busy waiting ![](https://i.imgur.com/bLzY5q3.png)\n![mutex|400](https://i.imgur.com/fkBl7PR.png)\n![producer consumer again](https://i.imgur.com/ZN8bonW.png)\n\nrange of semaphore init vals\n- 1 for mutex\n- 0 for process sync\n- \u003e1 for concurrent processes/threads\n\n- negative values tell us how many processes are waiting\n\n# Deadlock\nDefinition of deadlock: a set of processes is in a deadlocked state if every process is waiting for an event that can only be caused by another process in the set.\n\n![slide|400](https://i.imgur.com/XTSVwVI.png)\n\nconditions\n- mutual exclusion: at least one of the held resources must be nonsharable\n- hold and wait: must be at least one process holding a resource and one waiting\n- no preemption: a resource can only be released by the process thats holding it\n- circular wait: \n\t- P1 is waiting on a resource held by P2; \n\t- P2 is waiting on . . . \n\t- Pn is waiting on a resource held by P1.\n\ntypical solution\n- break wait by acquiring lock in the same order\n- ![](https://i.imgur.com/tDCTXWu.png)\n\nos solution\n- ![](https://i.imgur.com/1qHM2w0.png)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/2022-10-16":{"title":"","content":"[2022-10-15](daily_notes/2022-10-15) \u003c\u003c [daily-notes](notes/daily-notes.md) \u003e\u003e [2022-10-17](daily_notes/2022-10-17)\n\n---\n# 16-10-22\n\u003ca href='spotify:album:2wCCXYJUgeiRqyIr3ujbMF'\u003e\u003cimg src='https://i.scdn.co/image/b5b050b2f063b3059a610b06a3e420f2310c9bae' alt='Machine Gun Etiquette - The Damned' height=100\u003e\u003c/a\u003e\u003cimg src='https://imgs.xkcd.com/comics/2045.png' height=100\u003e\n\u003cbr\u003e\"Sorry, doctor, I'm going to have to come in on a different day--I have another appointment that would be really hard to move, in terms of the kinetic energy requirements.\"\n\n## Today\n# Review\n\n## Backlog\n- [ ] [18-processes-sharing-and-threads)](notes/18-processes-sharing-and-threads.md)\n- [ ] [05-6809-assembly)](notes/05-6809-assembly.md)\n- [ ] [18-ML-in-IA-2)](notes/18-ML-in-IA-2.md)\n- [ ] [19-deepfakes)](notes/19-deepfakes.md)\n- [ ] [20-SE-in-IA)](notes/20-SE-in-IA.md)\n- [ ] [21-SE-in-IA-2)](notes/21-SE-in-IA-2.md)\n- [ ] [22-digital-preservation)](notes/22-digital-preservation.md)\n- [ ] 203 lectures 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26\n- [ ] 204 lectures 19, 20, 21, 22, 23, 24, 25, 26\n- [ ] 210 lectures 23, 24\n\n## Links\n- [timetable](https://i.imgur.com/9ghbvAG.png)\n- [cosc page](https://cosc203.cspages.otago.ac.nz)\n- [math 202 site](https://www.maths.otago.ac.nz/?resOLAF)\n\n## Today's Log","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/203-exam-prep":{"title":"203-exam-prep","content":"\nexample questions\n\nhttps://blackboard.otago.ac.nz/bbcswebdav/pid-2827524-dt-content-rid-18670180_1/courses/INFO203_S1DNIE_2022/2022/INFO203_Lecture25.pdf\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/204-exam":{"title":"204-exam","content":"\nWill be examined\n\nhardware\n- what is a computer\n- combinatorial logic\n- sequetial\n\t- sr latch\n\t- D, t, jk flip flop, state transition diagrama\n- archtecture\n\t- memory, busses, alu, control unit, registers, instructions\n\nassembly\n- machine code\n- registers, stack, instruction set\n- syntac, routines, iteration, comparisons, local vars, parameters\n\nC\n- why C, syntac\n- memory, variables, call by value/address, pointer arithmetic\n- arrays, malloc, free, sentinels, length of array\n- struct and union, declaration, initialization, shallow/deep copy, queues\n- pointers to routines, ADTs, contructors, destructors\n\nOperating systems\n- process scheduling algorithms (smiliar to labs)\n- memory management and replacement algorithms FIFO LRU\n- Layout of process. mapping details\n- page table - logical vs physical memory MMU\n-  process communication - parent child relationship - fork, exec - child return status to parent\n\t-  zombie/orphan process\n\t-  shared memory - mmap\n\t-  pipes\n\t-  signals - sigsegv (null pointer) and more\n\t- PCB process control block (in linux - tast_struct)\n\t- lifecycle of process - start from fork, suspended for io, terminated by signal or naturally using exit(), interrupts\n\t- sync\n\t\t- data race\n\t\t- mutex, lock, semaphore\n\t\t- CAS\n\t\t- conditions for deadlock\n\t- system call - interaction betwen user and kernel space\n\t- threads\n\t\t- special process\n\t\t-  what is shared what is not\n-  file system\n\t-  sys calls read, write, open\n\t-  linked allocation, FAT, inode\n-  device driver\n\t-  classification of io devices\n\t-  io models\n\t-  io scheduling\n\t-  io buffering - use memroy buffer to keep copy of IO data\n\t-  controller, device driver\n- \tio systems\n\t- \tports, buses, controllers\n\t- \tio memory\n\t- \tpolling vs interrupt\n\t- \tDMA\n\t- \tIO performance\n\t- \tzero copy\n- \tfile system protection\n\t- \tlinux protection model\n\t- \tsetuid, setgid, sticky\n\t- \tMAC, DAC, ACL, RBAC\n\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/204-questions":{"title":"204-questions","content":"\n1. in read and write system calls why is the buffer const in write and not in read\n2. \n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/21-SE-in-IA-2":{"title":"21-SE-in-IA-2","content":"\n# need in all phases\n- often overlooked in feasability stages\n- security requirements not defined\n- built without thinking about security\n- tests do not take security into account\n- without security evolution can become cumbersome\n\nmore costly to fix bug in development than in design\n- the later we fix it the more costly it is\n\n## from the start\n- hire right people\n- with hacking mindset\n\t- so they alwasys think about security\n- invite customers to training and seminars\n\t- testing could uncover security issues\n\n## questions during feasability\n- ![](https://i.imgur.com/svo2sIb.png)\n- what are the implications for users if assets are lost\n\t- some information is more high risk that other information\n\n## during design\n- should be designed in iterative manner\n- threat modelling\n\t- ![diagram](https://i.imgur.com/RM6lyC1.png)\n\t- Data Flow Diagram (DFD)\n\t\t- ![](https://i.imgur.com/iCEh2NU.png)\n\t\t- high or low level\n\t\t- want to be nimble\n\t\t- dont want to go overboard\n\t\t- ![level 1 dfd](https://i.imgur.com/rfyCUxH.png)\n\t\t- \n- potential threats\n- STRIDE\n\t- ![list](https://i.imgur.com/ZBHK7v7.png)\n\t- can identify parts system using DFD that are threatened by these things\n\t\t- ![e.g](https://i.imgur.com/EwUSQzS.png)\n\t\t- ![threat tree](https://i.imgur.com/RtqTzJ6.png)\n\t\t\t- defines the potential dcisions that are performed by the attacker\n\t\t- ![information to keep track of](https://i.imgur.com/k1vsDfu.png)\n\t\t- risk = criticality * likligood of occurance\n\t\t\t- should be consistent\n\t\t\t- can also use DREAD\n\t\t\t\t- ![list](https://i.imgur.com/VZYmjCU.png)\n\nexample\n- ![](https://i.imgur.com/ZybxDCx.png)\n\nresponsing to threats\n- do nothing\n- inform user\n- remove problem\n- fix problem\n\n- design choice sto counter threats\n\t- ![](https://i.imgur.com/LzIHfdF.png)\n\n## during development\n- techniques vary based on type of software\n- sytem \n- firmware\n- drive\n- programming software\n\n- common vulnerabilities\n\t- ![](https://i.imgur.com/lmU61jd.png)\n\nexample connection string\n- ![](https://i.imgur.com/sV6OzCo.png)\n- can provide extraneous parameters to fiind the right ones\n\nexample SQL injection\n- ![](https://i.imgur.com/XNNDur9.png)\n\ntips for vailidation and preventing overruns\n- ![](https://i.imgur.com/Mz7edc6.png)\n\n\n## during evolution\n- assign security evagelist\n- plan \"security days\"\n- learn from mistakes\n- minize attack surface\n\n## stack overflow\n- ![examples](https://i.imgur.com/NumPTGn.png)\n\n\n# summary\n![](https://i.imgur.com/tTC8jIs.png)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/21-data-link-layer":{"title":"21-data-link-layer","content":"\n# data link layer services\n- transfer datgram from one node to **physically adjacent** node over a link\n- terminology\n\t- hosts and routers: node\n\t- communication channels between adjacent nodes: links\n\t\t- wired\n\t\t- wireless\n\t\t- LANs\n\t- layer-2 packet: frame, encapsulates datagram\n\t\t- ![](https://i.imgur.com/9RcK8WD.png)\n\nservices\n- framing, link access:\n\t- encapsulate datgram into frame, add head, trailer\n\t- do not use IP address\n\t\t- use MAC address in frame headers\n- reliable delivery of data between adjacent nodes\n\t- flow control: pacing between adjacent sending and recieving nodes\n\t- error detection and correction\n\t\t- errors from: signal attenuation, noise\n\t\t- receiver detects errors and signals retransmission, or drops frame\n\t\t- reciever identifies and correct bit error(s) without retransmission\n\nimplemented in network interface card: (NIC) or on a chip\n- ethernet, WiFi card or chip\n- implements link and physical layer\n\neach NIC has a unique ID - MAC (medium access control)\n- 48 bits: six groups of two hex digits\n- also called physical address, ethernet hardware address\n- manufacturer buys portion of MAC adress space (to assure uniqueness)\n\n![interface communication diagram](https://i.imgur.com/No4evP9.png)\n\n## flow control\n- dont send to much data otherwise it will overflow\n\ndifferent from transport layer flow controls\n- single link not end to end\n- frame oriented not byte oriented\n- als use sliding window scheme\n\t- go back N and selective repeat\n\n# Error detection\n- add bit(s) to detect and correct bit errors (i.e., redundancy)\n- bits are added before frame is send over link\n- when recieved if some bits are corrupted frame is dropped\n\n## parity checking\nsingle bit\n- even parity: add parity bit and set so there is an even number of 1s\n- can detect single bit errors\n- cannot detect two bit errors\n\ntwo dimensional bit parity\n- detect and correct single bit errors\n- detect two bit errors\n\n## CRC\n- more powerful error-checking coding\n- D: data bits\n- G: bit pattern (generator), of r+1 bits (given)\n\n![slide](https://i.imgur.com/UdmWtad.png)\n- widely used \n\n# multiple access links and protocols\n- single shared broadcast linl/channel\n\t- shared wire or medium\n- interference between two or more simultaneous tranmissions\n\t- collision may occur if node recieves two or more signals at the same time\n\n## MAC protocols\n- coordinates nodes sharing a channel\n- communication about channel sharing must use channel itself\n\t- no out-of-band channel for coordination\n\nclasses\n- channel partitinioning\n\t- divide channel into smaller pieces: (time slots, frequency)\n\t- allocate piece to node for exclusive use\n\t- e.g., TDMA, FDMA\n- random access: contention-based\n\t- channel not divided, allows for collisions\n\t- \"recover\" from collisions\n\t- e.g., ALOHA, CSMA\n- \"taking turns\"\n\t- node takes turns, but nodes with more to send can take longer turns\n\t- e.g., token-passing\n\n### TDMA time division mulitple access\n- acces to channel in \"rounds\"\n- each station gets a fixed length slot (length = packet transmission time) in each round\n- unused slots go idle\n\n### FDMA freqency division multiple access\n- channel spectrum divided into frequency bands\n- each station assigned fixed freqency band\n- unused bands go idle\n- ![](https://i.imgur.com/JOWIr1V.png)\n- can communicate in parrallel\n\n### slotted ALOHA\nassumptions\n- all frames same size\n- tiem divided into equal-size slots (time to transmit one frame)\n- start to transmit only slot beginning\n- nodes are synchronized\n- if two or more nodes transmit in a slot, all nodes detect collision\n\noperation\n- when node obtains fresh frame, transmits in next slot\n\t- if no collision: node can send new frame in next slot\n\t- if collision: node retransmits frame in each subsequent slot with probability p until success\n\n- simple\n- decentralized\n- single node transmit at full rate\n- wasting slots: collisions idle slots\n- requires synchronisation\n\n![](https://i.imgur.com/Mi269KZ.png)\n\n### pure ALOHA\n- unslotted aloha, no sync\n\t- when first frame arrives, transmit immediately\n- collision probability increases with no sync\n- less efficient that slotted aloha \n- \n![](https://i.imgur.com/Rxvx0eJ.png)\n\n### CMSA carrier sense multiple access\nsimple CSMA: listen before transmit:\n- idle: transmit entire frame\n- busy: defer transmission\n\nCSMA/CD: CSMA with collision detection\n- collisions detected within short time\n- colliding transmissions aborted, reducing channel wastage\n\ncollisions can still occur with carrier sensing\n- propagation delay means two nodes may not hear each others just-started transmissions\n- on a collision the entire packet transmission time is wasted\n\t- distance and propagation delay play role in determining collision probability\n\n### Ethernet CSMA/CD\n1. nic recieves datagram and created frame\n2. nic senses channel: \n\t1. if idle, start transmission\n\t2. else wait wait until idle\n3. if nic transmits entire frame without collision, nic is done\n4. if nic detect another transmission while sending, abort, send jam signal\n5. after aborting, nic enters binary (exponential) backoff:\n\t1. after mth collision, nic chooses K at random from {0, 1, 2, ..., 2^(m)-1}, nic waits K x 512 bit times, returns to step 2\n\t2. more collisions: longer backoff interval\n\n\n### taking turns\npolling:\n- master node invites other nodes to transmit in turn\n- typically used with \"dumb\" devices\n- concerns:\n\t- polling overhead\n\t- latency\n\t- single point of failure: master\n\ntoken passing:\n- control token passed from one node to next sequentially\n- a node can send data when it has the token \t\n- token message\n- concerns:\n\t- token overhead\n\t- latency\n\t- signle point of failure: token","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/21-memory-management":{"title":"21-memory-management","content":"\n# storage heirachy\n![slide|400](https://i.imgur.com/yls3Bun.png)\nprimary storage - cache and main memory\nsecondaryy - hard drive\n\nas we move from secondary to primary:\n- access speed increases\n- access time decreases\n- cost increases\n- capacity decreases\n\n# process memory image and logical and physical addresses\n - a program is compiled and linked into a process image before loading into memory for execution \n - a process memory image consists of code section, data sections, lib sections, and stack sections \n - each process has its own logical memory space starting from 0 and ending at a maximum address \n - the logical address has to be translated into physical address before sending the memory request to the physical memory modules \n - the memory management unit (MMU) translated between the logical addresse and the physical addresses. \n \n - physical mode - progam refers directly to physical address\n - protected mode - dont allow program to use physical address directly - uses logical address\n - OS kernel creates a map from logical address to the physical address using a mapping table\n - CPUrefers to this table to map between physical and logical address\n\n![address binding for process space slide|400](https://i.imgur.com/N0iAw0z.png)\n\n# paging for memory translation\n\nNoncontiguous paging: a processes logica address pace is broken int fixed size units called pages, and main memory is broken into units of the same size, called frames.\n\nin a paged memory allocation scheme, the logical sddresses generated by the CPU are broken by special ardware itno two components: \n- page number\n- offset (address within page)\n\n![diagram|400](https://i.imgur.com/i3dn9IP.png)\n\npage table indicates for each page which frame it's stored in.\n\n- paging allows a process to be stored noncontigously in memory. \n-it is a way of implementing run-time address binding\n\n![Example](https://i.imgur.com/L0TDBF0.png)\n\n## memoy protection valid/invalid bits\neach process takes up n pages. but the table typically has more than n entries.\nSo the page table stores a valid/invalid bit which is set to invalid for out-of-range memory refs\n\n![diagam|400](https://i.imgur.com/gXLCCwg.png)\n\nvald bits can also be changed to read only, read-write etc\n\n![paging example](https://i.imgur.com/59hFyHd.png)\n\n## fast memory (cache) for paging\nfastest is to store page table in special registers\n- not feasible if page table is large (which is usually is)\n- alternative is to store page table in main memory\n\t- can slow things down\n\t- because to access an address in memory, we now need two or more memory accesses\n- solution is to keep a cach eof table table entries that have been used recently, in a special set of paallel-access registers calles associateive registers\n\t- aka Translation look-aside buffer (TLB) ","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/21-software-architecture-and-templates":{"title":"21-software-architecture-and-templates","content":"\n[software-architectures](notes/software-architectures.md)\n\n[system-templates](notes/system-templates.md)","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/22-LAN-physical-layer":{"title":"22-LAN-physical-layer","content":"\n# LAN vs WAN\nLocal area network\n- a network connecting computers within a limited geographic area\n- e.g., building, school, home etc\n- wired or wireless\n\nWide Area network\n- a network that extends over a large area such as town, country, region or the world\n- used to connec LANs and other types of networks together\n- often established with leased telecommunication circuits (e.g., chorus)\n\n## ethernet\ndominant wired tech\n- first used LAN tech\n- simple cheap\n- IEEE 802.3 standard\n- kept up with speed race: 10 Mbps - 400 Gbps\n- physical topology\n\t- bus: all nodes in the same collision domain can collide (old)\n\t- switched: active link-layer switch in center (new)\n\nframe structure\n- encapsulates IP datagram (or other network layer protocol packet) in ethernet frame\n- ![ethernet frame diagram](https://i.imgur.com/ElTUCEi.png)\n- preamble: used to sync reciever and sender clock rates\n\t- 7 bytes of 10101010 followed by one byte of 10101011\n- addresses: 6 bytes source, destination MAC addr\n\t- if adapter recieves frame with matching MAC destination address, it passes data in frame to network layer protocol, otherwise adapter discards frame\n- type\n\t- most IP but other possible: e.g., Novell IPX, Appletalk\n\t- used to demultiplex up at reciever  \n- CRC: cyclic redundancy check at reciever\n\t- error detected: frame is dropped\n\t- it can correct but doesn't because just dropping and resending is faster\n\n# ARP \nAddress resolution protocol\n\narp table: each IP node on lan has table\n- IP/MAC mappings for some LAN nodes\n- mapping is forgotten after TTL is exceeded (usually 20min)\n\n![arp example](https://i.imgur.com/dnj9Fvi.png)\n\n# Switch vs Router\nswitch:\n- link layer deivce\n- takes an active role\n- store and foward ethernet frames\n- examine incoming frame's MAC addr, selectively forward frame to one-or-more outgoing links when frame is to be fowarded on segment, uses CSMA/CD\n- transparent\n\t- hosts unaware of presence of switches\n- plug and play, self-learning\n\t- switches do not need to be configured\n\nmultiple simultaneous transmissions\n- hosts have dedicated direct connection to switch\n- switches can buffer packets\n- ethernet protocol used on each incoming link so:\n\t- no collisions: full duplex\n\t\t- A to A'  and B to B' can transmit simultaneously, without collisions\n\t- each link is its own collision domain\n\t\t- A to A' and C to A' cannot happen simultaneously\n\t- each swtich has a switch table, each entry:\n\t\t- mac of host, inferface, time stamp\n\t\t- looks like a routing table\n\nself-learning\n- learns which hosts can be reached through which interface\n\t- when frame is recieved, switch records the sender/location pair in table\n- filtering/forwarding\n\t- if frame dest is unknown: flood\n\t- if known send just one link\n\n\n## vs routers\n- both store-and-foward\n\t- R: network layer\n\t- S: link layer\n- both have forwarding table\n\t- R: routing using IP and routing algorithms\n\t- S: learn forwarding table using flooding, learning, MAC\n\n# physical layer\n- transmit and recieve bit streams over a physical transmission medium\n- conversion betwen digital bits to analogue\n- define characteristics linke, voltage, data rate etc\n\n# All layers together\n- connect to internet:\n\t- need to get IP addr of:\n\t\t-  itself\n\t\t-  first hop router\n\t\t-  DNS server\n- uses DHCP: dynamic host configuration protocol\n- DHCP is inside UDP inside IP inside Ethernet frame\n- frame is broadcast on LAN with dest FFFFFFFFFFF, recieved at router running DHCP server\n- DHCP creates a DHCP ACK with the info and sends it back to the client\n\t- can allocate temporaty IP address","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/22-digital-preservation":{"title":"22-digital-preservation","content":"\nhow long will data survive?\n\ndata rot\n- eveything wears out\n- digital media degrades\n\t- unreadable media\n\t- damaged files\n\t- backups may help\n- hardware and software becomes obsolete\n\t- cloud service shut down\n\t- os no longer exists\n\t- no device to read media\n\t- no software to read files\n- format documentation non-existent or missing\n- file system changes - lost metadata\n\n![how long will it survive table](https://i.imgur.com/I8sY6FV.png)\n\nDark ages 2\n![](https://i.imgur.com/VPOtcgf.png)\n\n\n## preservation of digital material\n- continuous format migration\n\t- everytime you upgrade software, convert all documents\n\t- document changes, keep old versions\n- emulation of olf hardware\n\t- open things in original evironment\n\n- standardised preservation formats\n\t- pdf/pda\n\t- not designed for convenient editing\n\n- dont know original format?\n\t- lots of tools, but user unfriendly and somwhat limited\n\t- need to find version and which software\n\n- in cloud\n\t- e.g., social media, websites\n\t\t- things are changing\n\t\t- acquisitions, bankruptcy\n\t\t- link rot\n\t- internet archive\n\t\t- aims to archive everything\n\t\t- crawl websites (wayback machine)\n\t\t- digitise of magazines and films\n\t\t- over 100 petabytes\n\t\t- controversy over copyright\n\t\t- only static content\n- most national archive organisations are doing similar\n- not eveything is accessable\n- some services let you export your data\n\nwhat happens when you die\n- or stoke etc\n- few legel precedents\n- prohibit giving password to someone else\n- \"memorialise an account\"","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/22-open-source-software":{"title":"22-open-source-software","content":"\n![](https://i.imgur.com/3EQenkP.png)\n\n# Describe Origination\n- how do floss projects get created\n\t- forking an existing open source project\n\t\t- mangement of existig project \"run out of steam\"\n\t\t- users decide to take development of themselves\n\t- some decides to apply an open source licence\n\t\t- e.g., individual or member of team with appropriate responsibility\n- Motivation for release as floss\n\t- giving back to community\n\t- seeking addition team members, code or otherwise\n\t- grow ecosystem around the software system \n\t\t- essentially a form of publicity\n\n# Detail Roles\n- Team shape\n\t- depends of specifics and scale of project\n\t- small projects often driven by an individual\n\t- a few developers collaborate closely - often code founders\n\t- large potentially open team combine contributions\n- different jobs and skill sets beyond coding\n\t- documentation - creating and updating\n\t- code review - pre-merge and post-merge quality control\n\t- testing - developing tests (or test suites), and reporting back user bugs\n\t- community - keeping team motivated and focused\n\n# Contrast Governance vs management\n- mangement\n\t- day to day decisions\n- governance\n\t- controlling overall roadmap\n\t- setting priorities to reach intended milestones\n\t- often a spectrum between\n\t\t- commercial organisation that retain ownership\n\t\t- open community-led approach\n\t- community-led governance needs agreed stucture\n\t\t- e.g., executive, committees, voting process for key decisions\n\n# Sketch OSS foundations\n# # sharing development and governance\n- required governance processes similar in big projects\n\t- can benefit from manageing multiple projects together\n- e.g. apache software foundation (ASF)\n\t- american non-profit\n\t- manages more than 350 projects\n\t- can share governance, management, and commounity\n\t\t- conferences (apacheCon) bringing community together\n- many others e.g., free software foundation (GNU)\n\n## Incubation into open source foundations\n- foundations reputation: projects must he high quality\n\t- but also want to be boradly accepting\n- ASF has Apache incubator\n\t- new projects gain inital ASF linkage\n\t- see if projects demonstrate continued development activity\n\t- see if projects are popular iwth end users\n- Large organisations can donate code to incubator\n\t- need to be sure that code can be maintained\n\t- e.g., google wave \n\n# Understand sustainability challenges\n- need mechanisms to keep project resouced\n\t- e.g., financial support for key developers\n- sustainability - software is seldom \"finished\"\n\t- new features require development\n\t- bugs need fiing, but hobbyists don't give 24/7 service\n\t- older code within project may need maintenance\n- Development path can become contentious\n\t- e.g., too slow, or percieved to be in wrong direction\n\t\t- ...which can lead to project forks and split community\n\n## Examples\n- PEP python enchancement proposal\n\t- usually focis on language feature additions or changes\n\t- but sometimes relate to the governance of Python\n\t- PEP approval process involves input from:\n\t\t- python community\n\t\t- python steering council\n\t- Guido van rossum was 'benevolent dictator for life'\n\t\t- st ood d\n- JCP java community process\n\t- open collaboration to ratify java standards\n\t- ![](https://i.imgur.com/ls7GAck.png)\n\t- JSRs java specification request\n\t- ","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/22-performance-and-security":{"title":"22-performance-and-security","content":"\n# Performance requirements\n- e.g., credit card system\n\t- functional reqs\n\t\t- sales authorised only for valid cards\n\t\t- generate monthly statements\n\t\t- performance requirements\n\t\t\t- cards are validated quickly\n\t\t\t- statements are accurate and generated on time\n\t\t- quickly, accurate, and on time need to be operationalised, measured, and tested.\n\nWhy are they important\n- vital quality factor\n- infosystems are wide and varied\n- wide range of performance characteristics\n\nThings to consider\n- can interact and conflict with each other\n\t- accuracy vs speed\n\t- speed vs space\n\t- often a trade-off or compromise\n- selectig best developent techniques for taget system\n\t- algorithms\n\t- data structures\n\t- languages and frameworkds\n\t- constraints of target platform \n\t\t- (devs machines are often more powerful)\n\t\t- minimum requiremnts for system e.g., min specs for windows\n\t- ...\n\n- impact of changing requirements, e.g., adding a new module\n- need to consider (often conflicting) organisational priorities\n- critical to unambiguously document and agree\n\n# Response time\n- what is quick\n- for most people\n\t- \u003c 0.1s: instant\n\t- 0.1s to 1s: noticable\n\t- 1s to 10s: slow\n\t- \u003e 10s: user will probably switch tasks\n- affected by system workload: number of concurrent users, volume of data, etc vs available resources\n- most users really dislike variable response times (unpredicatbility)\n\n\n- example requiremen: \"cards are validated within 2s\"\n\t- this implies 100%\n\t- better: \"95% of cards are validated within 2 s\"\n- other consideration\n\t- what is included in response time?\n\t- what is the measurement period (of the system in general) (often varied workload changes performance)\n\t- what is the acceptable error rate\n\n# Workload\n- system workload is almost never constant\n\t- may may well defined peaks and troughs\n\t- may be unpreditable\n\t- peak vs typical vs minimum\n- differet transaction types\n\t- read vs write transactions\n\t- online vs batch\n\n- define workload requirements around use cases\n- e.g., \" the system must be able to validate 1 million cards per day\"\n\n# Scalability\n- can the system scale to meet changing demand\n- can it scale quickly enough\n- elasticity particularly important to large public-facing systems\n- can be difficult to test \"for real\"\n- example requirement: \"the system must be able to handle up to 2 million cards on a busy day\"\n\n# Platform\n- target for system deployment\n\t- on prem\n\t- cloud\n- do you have a choice\n- will the platform be only just for this system or for other things (multi tenanting)\n- what limits are imposed by the platform\n- does it inlclude external systems or resources\n\n\n# Caching\n- temporarily store frequently used data\n- same concept as [memoization](notes/memoization.md)\n- mainly about improving read performance\n\t- when retrieving data, look in the cache first\n\t- if its there (=hit), done\n\t- if not (or stale) (=miss), read from original source\n\t- can be several orders of magnitude faster\n\t- ideal for small, frequently accessed data\n- cache contents needs to be managed\n\t- e.g., least recently used (LRU) data drop out as cache fills up\n\t- cahced data can become inconsistent with original source\n- can go anywhere\n\t- databse, client, dedicated caching server\n\t- numberourus cahcing tools, e.g., memcache, redis\n\n# Pooling\n- pre allocate a set of shared resources that are kept ready for use (e.g., databse connetions, objects)\n- useful when:\n\t- allocating eacch resources has a significant cost (time space)\n\t- there are frequent requests of short duration\n\t- we need to limit the total number of resources\n- mainly about resource management, so pools ar maintaineed by the resource allocator\n- important to reset resources when returning to the pool.\n\t- e.g., ensure atabase connection has no incomplete statements\n\t- ensures state doesn't leak across different uses of same resource\n\n# System reliability\n- behaviour of system\n- graceful degradation - should behave sensibly under all but the most extreme circumstances\n- should't just crash\n\t- thorough automated testing\n\t- thorough user testing\n- raw errors shouldn't bubble up to the user\n\t- user wont understand -\u003e pointless\n\t- may expose sensitive information (e.g., file system paths)\n\t- particularly relevant for web applications\n\t- handle exceptions accordingly\n- system should handle capacity issues as cleanly as possible\n\t- give relevant feedback to user (not just spinning wheel of death)\n\t- implement load balancing for web applications, expecially if they use a services model\n\t- also pooling, cachig, etc.\n\n\n# Integrity and security considerations\n- consider following security requirements\n\t- only staff with correct authority can alter data\n\t- secure transactions over iternet\n\t- https is better\n\t- validation of data\n\t- secure storage of passowrds\n\t- legilsations complliance\n- needs to be integreated into application and database\n- and considered throughout development\n- least privilege\n\t- a user should only have access to what they absolutely need in order to perform their responsibilities, and no more.\n\n# Integity and securuty controls\n- ensure correct system function by:\n\t- reject invalid data inputs\n\t- preventing unauthorised data inputs and outputs\n\t- protecting data and programs against tampering\n- objectives:\n\t- ensure only appropriate business transactions occur\n\t- ensure transactions are recoreded and processed correctly\n\t- protect and safeguard organisational assets\n\t- protect and safegurad customer data\n\nincreased security -\u003e decreased accessiblility and usability\n\n# integity and securuty mechanisms\n- data integrity\n\t- input field validation\n\t- database constraints\n- data security\n\t- databas access control\n\t- trasaction logging\n\t- redundancy, backup, recovery\n\t- encryption, hashing, digital signatures\n\t- ouput control (exfiltration prevention)\n- system security\n\t- user authentication and authorisation\n\t\t- In authentication process, the identity of users are checked for providing the access to the system. While in authorization process, person’s or user’s authorities are checked for accessing the resources. Authentication is done before the authorization process, whereas authorization process is done after the authentication process.\n\t\t- | Authentication determines whether the person is user or not. | While it determines What permission do user have? |\n\t\t- authentication| Example : Employees in a company are required to authenticate through the network before accessing their company email.\n\t\t- authorization | Example : After an employee successfully authenticates, the system determines what information the employees are allowed to access. |\n\n\t- authentication methods\n\t- security patches and updates\n\t- preventing or mitigating known attack vectors\n\n![](https://i.imgur.com/KzYIz1b.png)","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/22-trends-in-hci":{"title":"22-trends-in-hci","content":"\n[slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2827522-dt-content-rid-18612267_1/courses/INFO203_S1DNIE_2022/2022/INFO203_Lecture23.pdf\nhow the the methodology of HCI used.)\n\nTheory vs practice. There is a lot of work being done t improve the methodology\n\n# Bad style - HARKing and the replication crisis\n\n![scienfific process](https://i.imgur.com/m1HDqN3.png)\n\n# Publication bias\n- Computing research validate research claims using statistical significance as the standard of evidence \n- Statistical evidence usually assumes 95% confidence (p \u003c= 0.05)\n- analysis of 362 papers published found that 97% reject the null\n- papers that were incorrecct are not published\n- *Publication bias*: Papers supporting their hypotheses are accepted for publication at a much higher rate than those that do not.\n- HARKing (Hypothesizing After the Results are Known) or known as ‘outcome switching’\n\t- Post-hoc reframing of experimental intentions to present a p-fished outcome as having been predicted from the start.\n- p-hacking: Manipulation of experimental and analysis methods to produce statistically significant results. \n- p-fishing: seeking statistically significant effects beyond the original hypothesis.\n\nA survey of over 2000 psychology researchers, John et al. examined the prevalence of questionable experimental practices (forms of HARKing): \n1. Failing to report all dependent measures, which opens the door for selective reporting of favourable findings – 63.4%; \n2. Deciding to collect additional data after checking if the effects were significant – 55.9%; \n3. Failing to report all of the study’s conditions – 27.7%; \n4. Stopping data collection early once the significant effect is found – 15.6%; \n5. Rounding off a p value (e.g., reporting p = .05 when the actual value is p = .054) – 22.0%; \n6. Selectively reporting studies that worked – 45.8%; \n7. Excluding data after looking at the impact of doing so – 38.2%; \n8. Reporting an unexpected finding as having been predicted – 27.0%; \n9. Reporting a lack of effect of demographic variables (e.g., gender) without checking – 3.0%;\n10. Falsifying data – 0.6%\n\n![](https://i.imgur.com/gro2KnF.png)\n\nFile drawer effect: Null findings tend to be unpublished and therefore hidden from the scientific community.\n\n## Solutions\n\nPreregistration: Registries in which researchers preregister their intentions, hypotheses, and methods (including sample sizes and precise plans for the data analyses) for upcoming experiments\n\nPreregistered Reports: Papers (Reports) are submitted for review prior to conducting the experiment. Registered reports include the study motivation, related work, hypotheses, and detailed method; everything that might be expected in a traditional paper except for the results and their interpretation.\n\n• Redefine or abdandon statistical significance. • Create data repositories and support replication\n\n# Trends\n## Wearable sensing and actuation\n![springlets paper](https://i.imgur.com/QQMmEAk.png)\n\n![springlets prototypes](https://i.imgur.com/zbRefG0.png)\n![more prototypes](https://i.imgur.com/dVmrJf9.png)\n\napplications\n- vr haptics\n- on the skin directions\n- notifications\n- more\n\n![evaluation](https://i.imgur.com/4edmUVX.png)\n\n## electodermis\n![electro dermis paper](https://i.imgur.com/9MMLpOG.png)\nfocused more on the manufacturing of the stickers\n\n## earput\n[earput paper](https://i.imgur.com/ZqfaHUt.png)\n![earput evaluaion](https://i.imgur.com/97ZAqGv.png)\n\n## skin track\n![](https://i.imgur.com/LlfFZki.png)\n","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/22-virtual-memory":{"title":"22-virtual-memory","content":"\n# Swapping and virtual memory\nswapping\n- if there is not enough physical memory we need to sawp processes out of the main ememory to the secondary storage e.g., disk\n- ![slide](https://i.imgur.com/ImjjXkb.png)\n- when a process is ready, it is swapped into the main memory\n- allows more processes to multitask\n\npartially loaded proceses\n- dynamic loading\n\t- load a potion of code when it is called as some code may not need to be executed, e.g., code for handling errors\n\t- pros\n\t\t- process not limited by amount of avilable memory\n\t\t- more processes multitasking\n\t\t- quicker to swap than entire process\n\nvirtual memory\n-  idea that processes dont need to be fully in memory to run\n\nextends main memory to secondary storage, and allows dynamic loading of processes while they execute\n- programmer deals with vmem just like paging scheme\n- mem manager in OS kernel controls loading pages of the process into main mem from secondary storage\n\n# Demand paging\ndont load a page into mem until it is referenced by CPU\n\nimplementing\n- in paging scheme there are extra bits in the table to provide more information\n\t- valid/invlid bit\n\t- protection bits\n- in demand paging the mem manager uses valid/invalid bit to tell if a page is loaded\n\n![example|400](https://i.imgur.com/JeQxF4H.png)\n\nnote: each page can be stored twice: loaded in main memory and in the backing store - these two copies need to remain consistent. i.e.., changes to one must be reflected in the other\n\npage faults\n- \"trap\" occurs when trying to access an invalid page\n- what the os does:\n\t- check if caused by invalid memory access or unavailable page frame\n\t- if nvalid mem access\n\t\t- terminate process\n\t- else\n\t\t- find a free frame\n\t\t- read the page from the disk to the free frame\n\t\t- modify the page table\n\t\t- restart the instruction\n\t- VMAs are searched to find valid areas or memory access\n\n# page replacement algorithms\nIf main memory is full when a page fault is generated, one of the pages currently being held needs to be replaced.\n\nThis means an extra step in the operating system’s page-servicing routine. \n- Find the desired page on the backing store (secondary storage). \n- Find a free frame of memory\n\t- If there’s a free frame in memory, use it\n\t- Otherwise: Select a frame to swap out\n\t- Save it to the backing store (in case it’s changed) \n\t- Proceed as before.\n\nFIFO\n- replace the oldest page\n- ![example](https://i.imgur.com/EM09dtl.png)\n- pro\n\t- simple to understand/implement\n- con\n\t- maybe first page to be ref'd is often being referenced\n\t- belady's anomaly: possible to increase numbe of page faults when increasing the number of frames in memory\n\nOptimal page replacement\n- replace the page that will not be used for the longest time\n- ![example](https://i.imgur.com/RiNi1JI.png)\n- pro: optimal\n- con: can predict future\n\nLRU (least recently used)\n- replace page than has not been used for the longest time\n- ![example](https://i.imgur.com/VpMGeXY.png)\n- pro: optimal if you look back in time\n- con: time consuming to keep record of LRU\n- future memory references resemble past ones\n\n# frame allocation\nhow many frames to allocate to a process?\n\nhow to distribute frames among n processes in a multitasking scenario\n- equal allocation: all created equal: so each get equal number of frames\n- proportional allocation: allocate depending on size of process\n- local vs global replacement: \n\t- local: steal from your own frames\n\t- global: can steal from \"victim\" processes\n\n# thrashing\nwhen a proces has too lttle frames it will have a lot of page faults.\n\na thrashing process spending more time paging than executing\n\nthe working set of a process is the number of pages a process needs in order to execute without causing too many page faults\n\nthis is how much memory we allocate to a process to avoid thrashing","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/23-IO-systems":{"title":"23-IO-systems","content":"\ninteractive between device drivers and IO devices\n\nHardware\n- IO device linked to machine via Port\n- link is a set of wires called a Bus\n- as each end of the link is a device controller (basically a process)\n- ![diagram|400](https://i.imgur.com/qnmTxrb.png)\n- ![more complete diagram of PCI bus|400](https://i.imgur.com/fbJqpwr.png)\n\ndevice controller registers\n- each contoller has registers for holding signals\n- CPU can read and write these\n- some hold data some control signals\n\nadressesing devices\n- each port has an address range\n- CPU can issue IO instructions to particular addresses\n- communication can be 1 byte at a time for via direct memory access\n\npolling\n- CPU cycles waiting for busy bit to be clear is known as polling (busy waiting)\n- waste CPU time\n- if CPU is polling for input from devices too, then all devices have to be monitored - this is big waste of CPU time\n\ninterupts\n- used for communcation with IO devices: prefered over polling\n- CPU hardware contains wire calld interrupt request line\n- if cpu senses this line after each instruction it executes\n- if intr sensed, CPU saves its current location and jumps to address in the interrupt vector indicated by the signal\n- maskable/nonmaskable\n\t- deal with different priorities of interrupt\n\t- maskable: device generated, can be diabled when OS is processing a more urgent intr\n\t- nonmaskable: for error messges, never disabled\n\nDirect memory access\n- sending large amounts of data to IO devices\n- special purpose process DMA controller used\n- CPU writes a DMA command block into memory, specifying which bytes to transfer, and where to put them\n- DMA then controller can then execute concurrently\n- after transfer is finsished DMA controller interrupts CPU\n\nIO performance\n- reduce context switches\n- reduce data copies in memory (normamly two: user memory, device/kernel memory): can mmap to share memory\n- reduce number of interrupts (e.g., using polling)\n\t- it data is coming more frequently polling may be faster than interrupts\n- increase concurrency (e.g., DMA)\n- move data processing to hardware (e.g., network interface card)\n- balance CPU, memory system, bus, IO performance\n\nZero-copy\n- avoid memory copy in IO data transfer\n- use dynamic mmap\n- copy data from deice directly to user spce e.g., remote direct memory access RDMA\n- pass packet buffer pointers between layers of TCP/IP protocol","lastmodified":"2022-12-19T01:23:07.363075083Z","tags":null},"/notes/23-digital-forensics":{"title":"23-digital-forensics","content":"\nassit in legal/criminal proceedings\n\nICT in application to the law\n\nrequires broad range of technical knowledge\n\ncomputers everywhere\n- IoT, PCs, severs/cloud, smart devices, network routers and storage devices, other embedded systems\n- can all hold forensically significant data\n- \n\n\n# types of evidence\n- direct evidence\n\t- evidence which a witness can provide a direct account of in their testimony\n- circumstansial evidence\n\t- relates less directly to the facts of the case, requireing some analysis or inference\n\t- suggests or indicates by seldom proves\n- corroborating evidence\n\t- supports or is consistent with other circumstantial evidence\n- forensic evidence\n\t- a kind of circumstantial evidence, usually submitte by an expert witness\n\n# digital forensic principles\n- needs to be valildated\n- physical forensics such as fingerprinting and DNA are the same\n- chain of custody, is vital and must be unbroken\n- necessitates proper procedures and handling\n- \"everything leaves a trace\" some provisos i the digital domain\n- maintain neutrality and objectivity\n- good understanding of stats and probability can be vital\n\n## ethos\n- search for truth\n- appreciate limits of certainty\n- no bias or prejudice\n- can work for either side but only one at a time\n- document everything\n- defend demonstrate and duplicate methods\n\n## computers as a witness\n- good at storing info, with great reliability.\n- have no common sense, no initative.\n\n## expert witnesses\n- ![tips](https://i.imgur.com/6z7FpgU.png)\n\n# documentation\n- want to be able to recr\n\n# volatility\n- how quickly does the data vanish when power if removed.","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/23-wireless-mobile":{"title":"23-wireless-mobile","content":"\nMore wireless phones that wired phones.\nMore mobile broadband than fixed broadband\n\ntwo different challenges\n- communication over wireless link\n- mobility: handling the mobile user to changes point of attachment\n\nelements\n- wireless hosts\n\t- does not always mean mobile\n- base station\n\t- connected to wired network\n\t- relay: sendig packets between wired network and wireless hosts in its \"area\"\n\t\t- e.g., cell towers\n- wireless link\n\t- used to connect mobile to base station, also used as backbone link\n\t- various transmission rates, distances, frequency bands\n\narchitecture\n- infrastructure mode\n\t- base station connect mobiles to wired network\n\t- handoff: mobile changes base station\n- ad hoc mode\n\t- no base stations\n\t- can only transmit to  other nodes within link coverage\n- nodes organize themselves into a network: route among themselves\n\nwireless link\n- deccreased signal strength: radio signal attentuates as it travels\n- interference from other sources: frequency shared by other technologies\n- multipath propagation: signal reflects of objects arriving at sightly different times\n\nSNR BER tradeoffs\n- SNR - signal to noise ratio\n\t- larger SNR is easire to extract signal\n- BER - bit error rate\n- larger SNR =\u003e smaller BER\n- many parameters at physical level which alter SNR\n\nhidden terminal problem\n- multiple wireless sender, recievers qcreate additional problems (beyond multiple access):\n- ![](https://i.imgur.com/SK9pcMz.png)\n- ![](https://i.imgur.com/12vOuH1.png)\n\n# WLAN and wireless link\nStandards created and maintaned by IEEE\n- covers data link layer and physical layer\n![standards table](https://i.imgur.com/werOMuI.png)\n- all use CSMA/CA for multiple access, and have base station and ad-hoc versions\n\nWLAN architecture\n- wireless hosts communicates with base station (Access point AP)\n- Basic service set (BSS): set of devices that share the same service identifier\n\t- wireless hosts\n\t- AP\n- in ad hoc mode: hosts only, no AP\n\nchannels and association\n- spectrum divided into channels at different frequencies\n\t- admin chooses frequency for AP\n\t- interference possible: channel can be the same as a neighboring AP\n- a new host must assiciate with the AP (connect)\n\t- listens for *beacon frames*\n\t\t- contain AP name (SSID) and MAC\t\n\t- may perform authentication\n\t- run DHCP to get IP in AP's subnet\n\n# CSMA/CA\n- avoid collisions\n- CSMA sense before transmitting\n- wifi: no collision detection\n\t- hard due to: hidden terminal, fading, \n\t- instead: CA collision avoidance\n\nDCF (distributed coordination function)\n- CSMA/CA with binary exponential backoff algorithm\n\nsender\n- if sense channel idle for DIFS (DCF interframe space) then send data (no CD)\n- if sense channel busy: \n\t- start random backoff time\n\t- timer counts down while channel idle\n\t- transmit when timer expires\n\t- if no ACK, increase random back of interval, repeat 2\n\nreciever\n- if frame recieved ok\n\t- return ACK after SIFS (short interframe space)\n\t- ACK needed due to hidden terminal problems\n\t\ncollision avoidance\n- handshake to \"reserve\" channel use for data frames using request-to-send (RTS) and clear-to-send (CTS) packets\n- ![](https://i.imgur.com/awsot1V.png)\n\n# Cellular networks\nsolution for wide-area mobile internet\n![generations](https://i.imgur.com/AyQEeMF.png)\n\nbasic concepts\n- base stations: a.k.a., cell tower\n- cell: geographical area covered by a BS\n- frequency reuse principle\n\t- set of freqs is limited\n\t- neighboring cells cannot use the same set of freqs\n- a freq reuse pattern is a configuration of N cells where N is the reuse factor\n\n![reuse factor](https://i.imgur.com/QKOhTQ5.png)\n\nhandoff\n- transfer ongoing call or data connection from one BS to another\n- methods\n\t- hard handoff\n\t\t- break before make\n\t- soft handoff\n\t\t- make before break\n- roaming\n\t- users can use cell services when traveling outside the coverage area of home network by using a visited network\n\t- roaming agreement bettween home at visited network\n\t\n# 4G LTE\nsimilarity to wired\n- ![](https://i.imgur.com/IHSbxZv.png)\n\ndifference:\n- ![](https://i.imgur.com/pjJQaGX.png)\n\nLong-Term Evolution (LTE), 4G standard\n- traffic recieved by wirless network is routed using the internet\n\nmobile device\n- 64-bit international mobile subscriber id (IMSI) stored on SIM (subscriber identity module) card\n- UE (user equipment) - any that has a sim card and connects to a cell tower\n\nbase station\n- at \"edge\" of carrier network\n- ![](https://i.imgur.com/QxXmpp6.png)\n\nMobility management entity\n- ![](https://i.imgur.com/P1EKv6y.png)\n\ndata plane protocol stack\n- ![](https://i.imgur.com/wSf0IJl.png)\n\nassociating with a BS\n- ![](https://i.imgur.com/PYoQtqL.png)\n\n# 5G\nincrease data date by 10x, 10x latency decrease, 100x increase in traffic capacity\n\n5g NR\n- two freq bands\n- not back compatible\n- massive MIMO\n\nmillimeter wave freq\n- higher rates\n- over shorter distances\n- dense deployment of new base stations\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/24-network-security":{"title":"24-network-security","content":"\n# what is it?\n- confidentiality\n\t- only sender and reciver should understand message contents\n\t- encryption\n- authentication\n\t- sender and reciever want to confirm identity of each other\n- message integrity\n\t- sender and reciever want to ensure message not altered (in transit, or afterwards) without detection\n- access and availablility\n\t- services must be accessible and availble to users\n\nsender and recieves:\n- any king of onnline communication\n\nwhat can trudy to\n- eavesdrop\n- insert messages into connection\n- impersonation: fake (spoof) source address (or any field)\n- hijacjking \"take over\" ongoing connection by removing sender or ereciever, inserting himself in place\n- denial of service: prevent others from using a service (e.g., by overloading it)\n\nterminology\n- m: plaintext message\n- $K_{A}(m)$: ciphertext, encrypted with key $K_{A}$\n- m = $K_{B}(K_{A}(m))$\n- ![](https://i.imgur.com/6veueus.png)\n- key: secret data used to encrypt and decrypt messages\n\n# Symmetric key crypto\nbob and alice share the same key K\n- e.g., key is knowing a substitution pattern in mono alphabetic substitution cipher\n- substiution cipher\n\t- map each letter to a different letter\n\t- key is a mapping from a set of 26 letters to another set of 26 letters\n\t- not secure: easy to decrypt using patterns etc\n\nDES: data encryption standard\n- data is split into blocks of 64 bits\n- each block encrypted using 56-bit key\n- blocks are chained together\n\t- encryption of current block is based on the previous block\n- 56-bit symmetric key, 64 kit plaintext input\n- not very secure: short key- only 56 bits - less than a day to brute force\n\t- no known good analytic attack\n\t- 3DES: encrypt 3 times with 3 different keys: more secure\n\nAES: advanced encryption standard\n- larger key 128, 192 or 256\n- 128-bit blocks\n- brute force taking 1 sec on DES takes 149 trillion years for AES\n\n# Public key crypto\nsymmetric requires sharing of key\n\nprocess\n- sender and reciever do not share secret key\n- public key known to all\n- private key known ony to reciever\n\n- sender uses their public key to encrypt\n- reciever uses their private key to decrypt\n\npublic key reqs\n- ![](https://i.imgur.com/DrH8hmU.png)\n\nRSA\n- popular public key encruption algorithm\n- how to generate keys\n\t- choose two large prime numbers (1024 bits each)\n\t- compute $n=pq, z=(p-1)(q-1)$\n\t- choose e (with e\u003cn) that has no common factors with z (e, z, are \"relatively prime\")\n\t- choose d such that ed-1 is exactly divisible by z. (i.e., ed mod z = 1)\n\t- public key is (n, e) private key in (n, d)\n- encrypt message m (\u003cn)\n\t- $c = m^e\\mod n$\n- decrypt recieved c\n\t- $m = c^d\\mod n$ \n- magic\n\t- $m = (m^e \\mod n)^d \\mod n$ \n\t- where $c = m^e\\mod n$\n\n![example ](https://i.imgur.com/eGFJ4OX.png)\n\n# Authentication of devices\n - AP2.0 athenticate based on IP: bad because can spoof IP\n - AP3.0 put secret password into each packet: bad because trudy can get a message and see the password\n\t- replay attack\n\t- can find password without decrypting\n- AP4.0 avoid replay attack: \n\t- nonce: number R used only once-in-a-lifetime\n\t- prove alice \"live\", Bob sends alice nonce, R\n\t\t- alice must return R, encrypted with shared key\n\t- ![](https://i.imgur.com/wLHR8y2.png)\n\t- problems\n\t\t- must choose a key in a secure way before they communicate\n- AP5.0: use nonce but with public key techniques\n\t- problem: man in the middle attack: trudy poses as alice to bob, and as bob to alice\n\t- ![](https://i.imgur.com/SFdYjdZ.png)\n\t- need a better way to get public key\n\n# digital signature\n- Digital signatures\n\t- analogous to hand-signatures\n\t- sender digitally signs a document\n\t- verifiable, nonforgeable\n\t- simple digital signature\n\t\t- bob signs with his private key: creating signed message\n\t\t- alice uses publc key to verify \n\t- issue\n\t\t- lots of computation on long messages\n- hash function\n\t- apply hash function to get fixed size message digest, H(m)\n\t- then sign on the digest not the full message\n\n![diagram](https://i.imgur.com/sSRoWGU.png)\n\n# certification authorities\n- binds public key to particular entity, E\n- entity registers its public key with CE provides proof of identity to CA\n\t- CA creates cert binding id E to E's public key\n\t- cert containing E's public key digitally signed by CA\n- when alice wants bobs public key\n\t- get bobs cert\n\t- apply CAs public key to bobs certificate, get bobs public key \n\n![](https://i.imgur.com/zccc9XF.png)\n\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/24-protection-of-file-systems":{"title":"24-protection-of-file-systems","content":"\n# protection model\nfile system shared by many users\n- users should be able to keep them private\n\nneed to define\n- mechanisms\n- policies\n\ntypes of file access users can have\n- read\n\t- includes list\n- write\n\t- includes delete\t\n- execute\n\t- if a directory is not executable you cannot get into it (run it) \n\n# Access control bits\nthree classes for each file\n- owner: user who created the file\n- group : set of users who are sharing the file: a group is defined by the systems\n- others: all other in the system\n\nwhen a file is create it has an owner id and a group id to identify the users of the file \n\n3 permission bits for each class\n- r: readable\n- w: writeable\n- x: executble\n\nadvanced file attributes\n- setuid bit: if set for executable file, regardless of who runs the program, it should be run with the priviledge of the owner of the file\n- setgid bit: same as setuid but run with priviledge of group\n- sticky bit: a directory with this bit set restricts the deletionof files within it\n\n## soft vs hard link\n![diagram|400](https://i.imgur.com/DEvbJRN.png)\n\n# access control models\nDiscretionary access control (DAC)\n- a means of restricting access to objects based on the identity of subjects and/or groups to which they belong. The controls are discretionary in the sense that a subject with a certain access permission is capable of passing that permission (perhaps indirectly) on to any other subject (unless restrained by mandatory access control).\n- subject centered\n\nMandatory access control\n- a means of restricting access to objects based on the sensitivity (as represented by a label) of the information contained in the objects and the formal authorization (i.e., clearance) of subjects to access information of such sensitivity\n- object centred  \n- more overhead\n\nAccess control list\n- list of permission attahed to an object (file)\n- speifies who or what is allowed to access the objdct and what operation a re allowed to be performed on the object\n- consists of entries like [user, operations] where the operation can be r, w, x, d etc\n- more secure and convenient that discretionary access control\n- can implement DAC and MAC\n\nRole based\n- similar to ACL except RBAC aggregates a grou of users with the same priviledges as roles\n- can implement DAC and MAC\n- policy neutral and defined around roles and priviledges","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/24-trends-in-hci-2":{"title":"24-trends-in-hci-2","content":"\n\n# Dark patterns\n![dark cookies](https://i.imgur.com/VNpC265.png)\n![cookies dark tricks](https://i.imgur.com/c9cuzVO.png)\n\n# Designing for elderlies\n![wall-sized displays for dementia care](https://i.imgur.com/QHnOJJm.png)\n![dementia care evaluation](https://i.imgur.com/7hcLDmb.png)\n\nthe familiarity of local church in full size was good. \n\n# Digital fabrication\n3d printing, interfaces which allow you to 3d print etc.\n\n##  things\n![lily pad arduino](https://i.imgur.com/IY8sc08.png)\n![fabirc PCBs](https://i.imgur.com/kJ1ONYW.png)\n![iron on embedded UIs](https://i.imgur.com/XjsHnn8.png)\n![interactive design of wood joints](https://i.imgur.com/WoIjHJ3.png)\n![wood joints evaluation](https://i.imgur.com/ZhMz1iB.png)\n![pop-up-print](https://i.imgur.com/EKWT2Q5.png)\n![pop-up evaluation](https://i.imgur.com/PwYWx4c.png)\n\n# Explinable AI HCI for AI, fairness of AI\n![0](https://i.imgur.com/SZyxfay.png)\n![map of AI papers](https://i.imgur.com/QtXnmWM.png)\n![interactive AI design](https://i.imgur.com/YRdtUZQ.png)\n![interactive AI design](https://i.imgur.com/c2qIUoa.png)\n![interative transfer learning](https://i.imgur.com/G6XwmPg.png)\n![interative transfer learning](https://i.imgur.com/tz9wVa7.png)\n\nMost people dont actually understand the AI they create. Finding new ways to create, and understand AI.\n\n# gaze and Eye tracking\n![glasses](https://i.imgur.com/JDTAsSz.png)\n![selection of objects in VR with eye tracking](https://i.imgur.com/x3Pa2Vn.png)\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/25-advanced-topics":{"title":"25-advanced-topics","content":"\n# Datacenter networks\n- 10's to 100's of thousands of hosts, often closely coupled, in close proximity\n\t- e-business :(e.g., amazon)\n\t- content servers: youtube etc\n\t- search engines, data mining (e.g., google)\n- challenges\n\t- multiple applications, each server many clients\n\t- reliability\n\t- managing/balancing load\n\t- procesing, networking, data bottlenecks\n\n\nnetwork elements\n- server racks, 20-40 server blades: host\n- Top of Rack (TOR) switch\n- Tier 2 switches: connect to ~16 TORS below\n- tier 1 switches connect to ~16 T-2s below\n- border routers: connections outside\n- ![](https://i.imgur.com/kFOrQ97.png)\n\n- multipath communcation\n\t- rich interconnecitions so many routes\n\t- increased throughput\n\t- increased reliability through redundancy\n\napplication-layer routing\n- load balancer: app-layer routing\n- recieves external client requests\n- directs workload within data center\n- returns results to client (data center internals are hidden)\n- ![](https://i.imgur.com/Z33ZvcS.png)\n\nprotocols\n- similar to TCP/IP protocols\n- link layer\n\t- RoCE: remote DMA (RDMA) over converged internet\n\t\t- direct memory access\n\t\t- communcation between memory of different computers\n- transport layer\n\t- ECN (explicit congestion notification) used in transport layer congestion control\n\t- experimentation with hop-by-hop (backpressure) congestion\n- routing management\n\t- SDN widely used\n\t- place related servers, as close as possible together \n\n# Software Defined networks\n- separate control plane and data plane\n\t- monollithic router contains switching hardware, runs proprietary implementation of internet standard protocols in proprietary router\n\t- different \"middleboxes\" for different network layer functions:\n\t\t- firewalls, load balancers, NAT boxes\n\n![mainframe to pc analogy](https://i.imgur.com/S8FAfkD.png)\n\nlogically centralized control plane\n- easier network management: avoid router misconfigs, greater flexibility of traggic flows\n- table based forwarding allows \"programming\" routers\n\t- compute tables centrally and distribute\n- open implementation of control plane\n\n\n   ","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/25-cost-benefit-analysis":{"title":"25-cost-benefit-analysis","content":"\n# justifying a project\n- of difficult to prove justification\n- three criteria\n\t- need\n\t- funds\n\t- strong will\n\n## deciding whether to pursue a project\n- what the project address\n\t- a problem\n\t- opportunity\n\t- directive\n- time frame\n- overall priority\n- what options do you have\n\n## Case study\n![library web system](https://i.imgur.com/KXOOiQ9.png)\n\n## Feasability analysis\n- should we build it (organisational)\n\t- nature and strength of need\n\t- strategic alignment? overall priority?\n\t- stakeholder support? Champion?\n\t- e.g., (otago uni)\n\t\t- document management system - legislated\n\t\t- student management system - mission critical\n\t\t- hard to share multimedia (otago capture) - problem\n\t\t- online teaching - opportunity\n- can we bulid it (techinical)\n\t- complecity (higher complexity -\u003e higher risk)\n\t- familiarity and expertise (low familiarity -\u003e higher risk)\n\t- size (larger -\u003e higher risk)\n\t- compatitibilty (with existing systems; less -\u003e higher risk)\n\t- e.g., IBM police 90's failure\n- will it be worth it (economic)\n\t- costs and benefits\n\t- quantify costs and benefits\n\t- asses economic value\n\t\t- payback period\n\t\t- NPV\n\t\t- ROI\n\t- convers both \"should\" and \"can\" form financial perspective\n\t\t- can we afford it\n\t\t- will it provde financial benefit\n\t\t- are funds available\n- includes considerations of risk and uncertainty\n- may revisit due to uncertainty\n\n# costs and benefits\n## identify\ncosts\n- development\n\t- salaries, pm costs, testing and qual control\n- operational\n\t- maintenance, licensing, servers, training, \n\nbenefits\n- tangible\n\t- reduced customer service costs, more efficiet (saves staff costs), legal compliance\n- intangilble\n\t- security\n\t- market share\n\t- improved perception of company \"cool\", happier staff\n\n## quantify\ndollar values. usually estimates/guesse\n\ne.g.,\n- dev team salaries (assumes accurate estimate of required effort)\n- increased sales (how to predict)\n- improved customer satisfaction: how to assign dollar value\n- smarter student management system with better prerequisite, modelling: how to estimate benefit\n- these are tangible benefits, intangible benefits are harder\n\n## assess economic value\n- payback period - how long until accumulated benefits equal the cost  \n- NPV: sum of costs and benefits , but future years discouted\n\t- ![example](https://i.imgur.com/W6lhzKb.png)\n\t- ![](https://i.imgur.com/rpOBYdc.png)\n- ROI: what is the discounted benefit relative to the costs\n\t- ![](https://i.imgur.com/puvRpYm.png)\n\t- ![](https://i.imgur.com/19rMyQa.png)\n\n## Example: what is better\n- ![](https://i.imgur.com/nxMstV5.png)\n- financial analysis isn't everything\n- possible reasons to ignore a financial analysis\n\t- organisational: ack of institutional will, or not aligned with strategy, or legislated requirement\n\t- technical\n\t- legal risk\n\t- reputational risk\n\n## Comparing methods\n- payback: ignores discounting; gives a *year*\n- NPV considers discounting, give *net benefit* in financial terms, but ignores time and amount invested\n- ROI considers discounting and amount invested, but ignored time period; gives a *percentage*\n- \n\n![summary](https://i.imgur.com/rnBdIfg.png)\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/25-network-security-2":{"title":"25-network-security-2","content":"\n\n# TLS\n- security protocol above transport layer.\n\t- supported by most browsers\n\t- prvides, confidentaility, integrity, authentication\n- replaced SSL\n\n- provides API that any application can use\n- ![http view of TLS](https://i.imgur.com/c68ksNH.png)\n- QUIC and http3: moves transpor tlayer functions to app layer, on top of UDP\n\nhow\n- handshake: use certificates, private keys to authenticate each other, exchange or create shared secret\n- key derivation: use shared secret to derive set of keys\n- data transfer: as a series of records, not just one time transactions\n- connection closure: special message to close message\n\n\nprotocols\n- handshake protocol\n- changechipherspec protocol\n\t- choose encryption algerithms\n- alert Protocol\n\t- terminate\n\t- error reporting\n- record protocol\n\t- divide data to segments\n\t- encrypt and authenticate and send\n\nhandshake\n- ![](https://i.imgur.com/ROiKXo9.png)\n\ncryptographic keys\n- bad to use the same key for more than one crytographic algorithm (encryption and authentication)\n- uses master secret\n- ![](https://i.imgur.com/ZBiTZsk.png)\n\nrecord protocol\n- encrypt and athenticate data\n- ![diagram](https://i.imgur.com/xbM5vm7.png) \n- divide in to small segements, encrypt each one, MAC (message authentication code)\n\nchangeCipherSpec and alert\n\n\nhttps and ssh\n- https = http over tls\n- ssh\n\t- replacement for telnet\n\t- similar to tls\n\t\t- data encryption\n\t\t- authentication\n\n# IPSec\n- IP layer security\n- datagram level encryption, authentication, integrity\n\t- both user traffic and control traffic\n- two modes\n\t- transport mode\n\t\t- only payload not header encrypted, and authenticated\n\t- tunnel mode\n\t\t- entire datagram is encrypted\n\t\t- encrypted datagram encapsulated in new datagram with new IP header, tunneled to destination (new IP different from first e.g., next router)\n\nAuthentication header (AH) protocol\n- provides source authenticatio and data inegrity not confidentiality\n\nencapsulation security protocol (ESP)\n- provides source authentication, data integrity, and confidentiality\n- used more than AH\n- ![example packet](https://i.imgur.com/yCRWmZH.png)\n- ESP trailer: padding for block ciphers\n- ESP header: SPI so recieving entity knows what to do\n- sequence number, to thwart replay attacks\n- MAC in ESP auth field created with shared secret key\n- path\n\t- at R1: appends ESP trailer, encrypts result using algorithm and key\n\t- appends header to front\n\t- created authentication MAC\n\t- appends MAC forming payload\n\t- creates new IP header, new IP header fields, addresses to tunnel endpoint\n\n# firewall\n- isolates orgs internal network from larger internet, allowiing some packets to pass, blocking others\n\nthree types\n- stateless packet fiiltering\n\t- filters packet by packet, decision to forward/drop based on\n\t\t- source, dest IP\n\t\t- TCP/UDP source, dest port\n\t\t- ICMP type\n\t\t- TCP SYN, ACK bits\n\t- e.g., block incoming and outgoing datagrams with IP protocol field = 17 and with either source or dest port = 23\n\t- ACL access control list:\n\t- ![example](https://i.imgur.com/40mYTDp.png)\n- stafeful\n\t- track status of every TCP connection\n\t\t- using SYN, FIN segments =\u003e determine if packets \"make sense\"\n\t- timeout inactinve connections at firewall: no longer admit packets\n\t- ![](https://i.imgur.com/iytmCh7.png)\n\t- more powerful, more computation\n- application gateways\n\t- filters on application data as well as header fields\n\t- e.g., allow seletc internal users to telnet outside\n\t\t- require all telnet users to go through gateway\n\t\t- for auth'd users, gateway sets up telnet connection to dest host\n\t\t\t- gateway relays data between\n\t\t- router filter blocks all telnet connections not from gateway\n\nlimitaitons\n- IP spoofing\n- if multiple apps need special treatment, each has own app. gateway\n- client software must know how to contact gateway\n\t- e.g., must set IP of proxy in browser\n- filters oftenuser all or nothing policy for UDP\n- tradeoff: access with security\n\n# IDS\n- instrusion detection system\n- deep packet inspection\n\t- look at contents (e.g., check strings in packet against DB of known virus, attack strings)\n- examine correlation among packets\n\t- port scanning\n\t- network mapping\n\t- DoS attack\n\nmultiple IDSs: different types of checking at different locations","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/412-lectures":{"title":"412-lectures","content":"\n\n# Lecture 7\ncopmuter security\n- physical\n- software (authenticity correctness)\n- information (CIA/ IAS octave)\n- network\n\ncryptography can be bad because\n- you are still giving access to data in some form\n- how long will the cipher remain secure\n- managing keys can be challenging\n\ncrypto in CIA\n- c - hide information\n- i - check for changes, checksums, MACs, Digital signatures\n- a - not directly, but indirectly, validate authentity of network link usage\n\nfallible machines\n- ram corruption, fade or malfunction of storage media, software issues (fs bugs, compression bugs, etc)\n- solution\n\t- estimate probability of failures, determine how many trials to achieve a certain level of confidence\n- aside: mahcines are designed to fail frequently\n\t- reliability tradeoff with increases in speed/power consuption (e.g., overclocking)\n\ndistributed consensus\n-  e.g., Master/master relational database\n-  NoSQL gossip protocols, and eventual consistency\n- network instrastructure e.g., routers as hot spares\n- consensus gathering systems\n\t- apache zookeeper distributed synchronisation\n\t- etcd (used in kubernetes)\n\ndist cons algorithms\n- fischer lynch paterson impossibility result\n- paxos - fault tolerant consensus over distributed nodes (use din apache zoo)\n- raft - alternative to paxos used in etcd\n\t- easier than paxos to understand and implement\n\t\t- sub problems: leader election, log (data) replication by leader to followers\n- EPaxos - more compex and efficient that paxos\n\nall used when all servers are trusted. when there are malicious parties the consensus set size must grow. you need a majority of votes from the asumed-benign server set. \n\npermissionless blockchain - do not control the server set, safety presumed if 50% of nodes are benign\n\nfault tolerance\n- CFT - when a node dissapears\n- BFT - nodes acting maliciously\n- raft and paxos only CFT, variants of Paxos are BFT\n\nbuilding a cryptocurrency\n- how to make a 'coin'\n- how to id coin owners\n- how to protect from forgery\n- how to record ownership and transfer of ownership\n- how are coins single-use\n\ndistributed consensus in bitcoin\n- track who has what (in normal currency done by banks)\n- bitcion has all validating nodes store the whole ledger - indicates order of transactions\n\t- collectively agreeing its content avoid double spending\n- a wallet is a hash of a public key a client generates\n\nproof of work\n- to protect from sybil attacks it is computationaly costly to add transactions\n- reward for incorporative a new transaction\n- to validate a transaction\n\t- check for double spending internally\n\t- make merkle tree over transaction hashes\n\t-  to close block, apply proof of work algorithm\n- must be easy to check and hard to compute\n\t- bitcoin: find a nonce that when appended to the block of transactions gives a hash value less than the target (SHA-256, target is dynamic ~10min to compute)\n\t- block has is included in next block\n\nminers\n- validate blocks\n- reward of 6.25 bitcoin\n- ability to levy fees\n- broadcast communication between miners uses a p2p protocol\n- variance in mining time is larger than message broadcast time - helps serialisation\n- possible for multiple answers to be broadcast\n\t- nodes who 'hear' multiple solutions keep them all\n\t- subsequent mining is done on the longest fork (parallel forks tend to die quickly)\n\napproving transactions\n- transaction is recorded in a block\n- relevant block must be in longest blockchain and five for more blocks must follow it\n- transaction clearing delay (in effect)\n\ncontent of transaction\n- no persistens coins: serial numbers are transaction hashes\n- transaction specifies number of inputs and outputs, \n\t- inputs usually previous transactions\n\t- can ouput back to yourself, thus pocketing 'change'\n\t- remainder of input, after subtracting output, is transaction fee\n- can search back in time to find a transaction\n\t- either genesis block (50 bitcoin) ir a coinbase mining reward\n\nmain node roles\n- network - all nodes help routing with p2p protocol\n- wallet - manage keys that show ownership of transactions\n- miner - participate in proof of work block verifications\n- blockchain - can carry full blockchain\n\nbitcoin core refereence client contains all four functions\n- miners (may) leave out wallet\n- lightweight wallet only has wallet and network components\n- some nodes store blockchain but do not do mining\n\n# Lecture 9\n![merkle tree|300](https://i.imgur.com/umkxpSZ.png)\n\nMerkle tree\n - hash value compted for each data block\n - tree built with parent","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/6809":{"title":"6809","content":"\n- [cheatsheet](https://www.chibiakumas.com/6809/CheatSheet.pdf)\n- [lessons](https://www.chibiakumas.com/6809/)\n\n# Routines\nAll variables are global so there is no params or local vars. \n\nThere are three way to \"Branch\" to a subroutine.\n- lbsr\n- bsr\n- jsr\n\nThere are subtle differences but we will use bsr mostly\n\n```\nbsr myroutine:\n\nmyroutine:\n\trts\n```\n\n# Iteration\nDone using GOTOs\n```\n\tclra           //A = 0\nmore:\n\tcmpa #$06      //compare A to $06 (sets the equal flag in CC if true)\n\tbeq done       //if the equal flag is set, branch to done\n\tinca           //increment a\n\tbra more       //branch to more\ndone:\n```\n\nother instructions set flags too\n\n# Input/Output\n![screen](https://i.imgur.com/IEiGKtj.png)\n\nThe screen always displays whatever is in the \"screens memory location\" which is $0400\n\n``` 6809 assembly\nlda #'H'          ; load the character (indicated by '') into the a register\nsta $0400         ; store the contents of the a register in memory at location $0400\n```\n\n## printing a whole string\n\n``` 6809 assembly\nmessage:\n\t.byte \"HELLO WORLD\", 0\n\nSTART:\n\tldy #message                                 ; load \"message\", into the y register\n\tbsr puts                                     ; branch to the \"puts\" subroutine\n\trts                                          ; return\n\n; Routine: PUTS \n; Pass the address of the string in Y \n; \nscreen EQU $0400      ; start of screen \n\nPUTS: \n\tpshs a,x,y        ; save a, x, and y          ; store the contents of the a, x, and y registers so they are not overwritten\n\tldx #screen       ; start of screen           ; load the hex value of the memory location of the screen ($0400) into the x register\nmore: \n\tlda 0,y+          ; current char -\u003e A         ; load the contents of the Y register into the A register and increment Y by one\n\tcmpa #$00         ; was it a zero?            ; if the character loaded into A was a zero set the equal flag\n\tbeq done          ; if it was 0 then return   ; if the equal flag is set, branch to the \"done\" subroutine\n\tsta 0,x+          ; write                     ; otherwise, store the contents of the A register into memory at the location (hex value) defined in the X register, and increment the hex value stored in the X register\n\tbra more          ; repeat                    ; branch to the \"more\" subroutine as there are more character to write\ndone: \n\tpuls a,x,y        ; restore a, x, y           ; re load the stored values of the a, x, and y registers that were saved earlier\n\trts               ; return from this routine  \n```\n\n# Assembler\n- compiles assemble to machine code\n- can also dissamble machine code\n\nassembler create a listing file that gives the location, machines lcode, and assembly of the program \n![](https://i.imgur.com/a3DEdyj.png)\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/6809-addressing-modes":{"title":"6809-addressing-modes","content":"\n\n|            name         | example | description\n| --------------------|---------|-----------------------------\n| implied                  | `inca `\n| 0immediate           | `lda  #$00`\n| extended               | `lda $31FE`\n| extended indirect  | `lda [$31FE]`\n| direct                    | `lda $FF$` or `lda \u003cHERE`\n| register  | `trf X,Y`\n| indexed  | `lda #311E, X` `sta 0,X`\n| indexed relative  | `lda [$10, X]`\n| relative  | `beq HERE`\n| pr  | `lda TABLE,PCR`","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/8-application-security-1":{"title":"8-application-security-1","content":"\napplication development security\n- human error\n- policy failure\n- physical access\n- network access\n- social engineering\n- software flaws\n\t- third party\n\t- created by you\n\n# 10 immuntable laws of security\n1. If a bad guy can persuade you to run his program on your computer, it’s not your computer anymore. \n2. If a bad guy can alter the operating system on your computer, it’s not your computer anymore. \n3. If a bad guy has unrestricted physical access to your computer, it’s not your computer anymore. \n4. If you allow a bad guy to upload programs to your website, it’s not your website any more. \n5. Weak passwords trump strong security. \n6. A computer is only as secure as the administrator is trustworthy. \n7. Encrypted data is only as secure as the decryption key.\n8. An out of date virus scanner is only marginally better than no virus scanner at all.\n9. Absolute anonymity isn’t practical, in real life or on the Web. \n10. Technology is not a panacea.\n\n![laws from dev persepctive](https://i.imgur.com/QtdVqLd.png)\n![laws from dev persepctive](https://i.imgur.com/jCIi9mw.png)\n\n\n# Cost of data breach\nabout $150 per record. or 3.86 million per US company\n\nCosts include:\n- Notifying affected customers \n- Hiring forensic experts \n- Additional call centers \n- Providing credit monitoring services to those affected\n- Internal investigations \n- Lost customers \n- Lost reputation \n- Public relations\n\nThe costs vary significantly from county to country: \n- Differences in privacy related laws. \n- Costs relating to notifying affected customers vary widely. \n- Some countries have additional penalties for breaches involving medical records and data relating to minors. \n- Some countries/regions experience more destructive attacks.\n\nOther interesting points made in the report: \n- Average time to to discover a breach was 207 days. \n- Average time to contain a breach was 73 days. \n- 80% of breaches exposed customer’s PII (Personally Identiable Information). \n- A company has a ~30% chance of having a serious data breach within the next 2 years (based on 2019 report). \n- The per-record cost increases with the number of records breached\n\n\n# CWE/SANS\nCWE - Common Weakness Enumeration. A community developed list of software security flaw, and details on how to avoid them. \nSANS - (SysAdmin, Audit, Network, Security) Institute. A research and education institute for security practitioners. \nMITRE - A not-for-profit research organisation that works with the US government.\n\n## Top 25 errors\n1. Out-of-bounds Write ** \n2. Cross-site Scripting (XSS) ** \n3. Out-of-bounds Read ** \n4. Improper Input Validation ** \n5. OS Command Injection ** \n6. SQL Injection ** \n7. Use After Free ** \n8. Path Traversal ** \n9. Cross-Site Request Forgery (CSRF) ** \n10. Unrestricted Upload ** \n11. Missing Authentication * \n12. Integer Overflow \n13. Deserialization of Untrusted Data ** \n14. Improper Authentication * \n15. NULL Pointer Dereference ** \n16. Use of Hard-coded Credentials \n17. Buffer overflow ** \n18. Missing Authorization * \n19. Incorrect Default Permissions * \n20. Exposure of Sensitive Information ** \n21. Insufficiently Protected Credentials \n22. Incorrect Permission Assignment * \n23. Improper Restriction of XML External Entity Reference \n24. Server-Side Request Forgery \n25. Command Injection ** \n\n\n**. covered in this lecture\n*. Covered in other lectures \n\n## OWASP top 10 errors\n1. Injection \n2. Broken Authentication \n3. Sensitive Data Exposure \n4. XML External Entities (XXE) \n5. Broken Access Control \n6. Security Misconfiguration \n7. Cross-Site Scripting (XSS) \n8. Insecure Deserialization \n9. Using Components with Known Vulnerabilities 1\n0. Insufficient Logging \u0026 Monitoring\n\n# Software development is not a core competency\n- A ‘core competency’ is an area that an organisation has extensive skill and experience in.\n\t- Usually something that contributes directly to the organisation’s revenue stream, and that they consider to be a competitive advantage.\n- Unless the organisation is actually a software development business (or similar) then they probably lack the necessary skills and experience to manage a development project.\n\t- Often massively underestimating the costs and complexity. \n\t\t- Ideally they will contract the development to a reputable software development company. \n\t\t- Too often this is not the case.\n\n# Layers of abstraction\n1. Transistors\n2. Logic gates\n3. Arithmetic circuits\n4. Arithmetic logic units (ALU)\n5. Instruction set architectures (ISA)\n6. Machine code\n7. Compilers\n8. Programming languages\n9. OS kernels and drivers \n10. System APIs \n11. Programming language APIs \n12. Library APIs \n13. Application APIs \n14. Applications\n\nIt is very likely that there are security flaws in lower layers before we even start writing code\n\n# Deficiencies in programming languages\nsome of these flaws are due to issue with programming languages. e.g.,\n- buffer overflow (1, 3, 17)\n- use after free (7)\n\nIdeally the compiler or runtime should be able to detect these and throw an error. Some languages, like C and C++ dont. This is why some experts reccomend that they shuold no longer be used for systems and server programming\n\n# Injection flaws\n## SQL injection\n- a user provides malicious data which gets executed due to poorly constructed code.\n\n- fix by using prepared statements(java) or equivalent\n- use input sanitation libraries\n\n## command injection\n\n## cross site scripting\nsecond order attack - inject redirect as data will be displayed on other users webpages\n- session id is as good as username and passoword\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/A-novel-framework-for-policy-based-on-chain-governance-of-blockchain-networks":{"title":"A novel framework for policy based on-chain governance of blockchain networks","content":"\n# Summary\n\n# Extracts\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/A-renewable-energy-microgrids-trading-management-platform-based-on-permissioned-blockchain":{"title":"A renewable energy microgrids trading management platform based on permissioned blockchain","content":"\n# Summary\n\n# Extracts\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/A-review-on-blockchain-governance":{"title":"A review on blockchain governance","content":"\nlink: https://doi.org/10.22495/cgtapp23\n\n# Summary\nA very short basic overview of some blockchain governance from a business/economic perspective. Comes to a conclusion that a hybrid approach between on and off chain governance and exogenous and endogenous rules should be incorporated\n\n# Extracts\n\n# Notes\n- endogenous v exogenous ?\n- \n\n# Related\n- https://doi.org/10.47363/JESMR/2021(2)121 Research on the reciprocal mechanism of hybrid governance in blockchain","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/ALU":{"title":"ALU","content":"\npart of the [CPU](notes/CPU.md)\n\n![](https://i.imgur.com/wLJhTSG.png)\n\n- performs arithmetic\n\t- add, subtract, etc.\n- logical operations\n\t- and, or, shift, etc\n- subunits\n\t- lofical operations\n\t- addition\n\t- multiplication and dividion\n\t- shifting\n\t- comparison\n\t- logical tests (if, \u003e0, \u003c0, =0, \u003c=0, etc)\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/An-Overview-of-Forks-and-Coordination-in-Blockchain-Development":{"title":"An Overview of Forks and Coordination in Blockchain Development","content":"\nlink: https://arxiv.org/abs/2102.10006\n\n# Summary\n\n# Extracts\n\n# Notes\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Application-Layer":{"title":"Application-Layer","content":"\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Application-of-Blockchain-and-Internet-of-Things-to-Ensure-Tamper-Proof-Data-Availability-for-Food-Safety":{"title":"Application of Blockchain and Internet of Things to Ensure Tamper-Proof Data Availability for Food Safety","content":"\n# Summary\n\n# Extracts\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Blockchain-Based-Wine-Supply-Chain-Traceability-System":{"title":"Blockchain Based Wine Supply Chain Traceability System","content":"\n# Summary\n\n# Extracts\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Blockchain-Governance-Challenges-Beyond-Libertarianism":{"title":"Blockchain Governance Challenges — Beyond Libertarianism","content":"\nlink: https://doi.org/10.1017/aju.2021.65\n\n# Summary\n\n# Extracts\n\n# Notes\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Blockchain-GovernanceA-New-Way-of-Organizing-Collaborations":{"title":"Blockchain Governance—A New Way of Organizing Collaborations","content":"\nlink: https://doi.org/10.1287/orsc.2020.1379\n\n# Summary\nFocuses on governance of organisation by means of a blockchain. They compare governance using a blockchain to relational and contractual governance.\n# Extracts\n\"Contractual governance relates to a legally binding promise defining the rights and obligations of the parties\"\n\n\"Relational governance is based on the patterns of behavior to which parties are expected to conform\"\n\nThe DAO \"Investors voted on project proposals by using tokens, and eventual payouts to investors were determined and executed based on their votes and the subsequent performance of the projects as measured by the prescribed smart contracts\"\n\n# Notes\n![Table 1. A Comparison of the Different Governance Mechanisms](https://i.imgur.com/Y9WOeVF.png)\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Blockchain-Technology-and-Decentralized-Governance-Is-the-State-Still-Necessary":{"title":"Blockchain Technology and Decentralized Governance – Is the State Still Necessary","content":"\n# Summary\n\n# Extracts\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Blockchain-The-operating-system-of-smart-cities":{"title":"Blockchain — The operating system of smart cities","content":"\nlink: https://doi.org/10.1016/j.cities.2021.103104\n\n# Summary\nBlockchain within smart cities. \n\n# Extracts\n![Challenges of deployment.](https://i.imgur.com/D7Tbidf.png)\n\n# Notes\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Blockchain-based-smart-contracts-as-new-governance-tools-for-the-sharing-economy":{"title":"Blockchain-based smart contracts as new governance tools for the sharing economy","content":"\nlink: https://doi.org/10.1016/j.cities.2021.103325\n\n# Summary\nExplores use of blockchain management systems (BMSs) in the sharing economy for things like uber, airbnb, and wework. maily focuses of co working spaces (CWSs)\n\n# Extracts\n![ Digital Asset platform scheme of the architecture. Example of transaction submission on the ledger (GLS) by party P1 and synchronisation with P2. OP is a participant who can perform transaction validation.](https://i.imgur.com/Mw3X9BO.png)\n\n[code](https://bitbucket.org/sixbit26/bms_cws/src/master/)\n\n# Notes\n- maker spaces - basically library with 3d printers, laser cutters etc\n- shared spaces for freelance workers to alleviate the isolation found when working at home\n- mix of private for profit and public non-for-profits ventures in this space\n- \n- \n\n# Related\nhttps://doi.org/10.1016/j.cities.2021.103104 [[Blockchain — The operating system of smart cities]]\nhttps://doi.org/10.1016/j.jmse.2021.03.003 A systematic review of a digital twin city: A new pattern of urban governance toward smart cities\nhttps://www.taylorfrancis.com/chapters/edit/10.1201/9781003017547-2/towards-digital-twin-based-smart-built-environment-ibrahim-yitmen-sepehr-alizadehsalehi\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/C-language":{"title":"C-language","content":"\n\u003e “C is an imperative procedural language supporting structured programming, lexical variable scope, and recursion, with a static type system. It was designed to be compiled to provide low-level access to memory and language constructs that map efficiently to machine instructions, all with minimal runtime support. Despite its low-level capabilities, the language was designed to encourage cross-platform programming. A standards-compliant C program written with portability in mind can be compiled for a wide variety of computer platforms and operating systems with few changes to its source code.” - wikipedia","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/CPR-governance":{"title":"CPR-governance","content":"\nfrom [Ostrom1990]\n\n**1.a) User boundaries**: Clear boundaries between legitimate users and nonusers must be clearly defined.\n\n**1.b) Resource boundaries**: Clear boundaries are present that define a resource system and separate it from the larger surrounding environment.\n\n**2.a) Congruence with local conditions**: Appropriation and provision rules are congruent with local social and environmental conditions.\n\n**2.b) Appropriation and provision**: The benefits obtained by users from a common-pool resource (CPR), as determined by appropriation rules, are proportional to the amount of inputs required in the form of labor, material, or money, as determined by provision rules.\n\n**3) Collective-choice arrangements**: Most individuals affected by the operational rules can participate in modifying the operational rules.\n\n**4.a) Monitoring users**: Monitors who are accountable to the users monitor the appropriation and provision levels of the users.\n\n**4.b) Monitoring the resource**: Monitors who are accountable to the users monitor the condition of the resource.\n\n**5) Graduated sanctions**: Appropriators who violate operational rules are likely to be assessed graduated sanctions (depending on the seriousness and the context of the offense) by other appropriators, by officials accountable to the appropriators, or by both.\n\n**6) Conflict-resolution mechanisms**: Appropriators and their officials have rapid access to low-cost local arenas to resolve conflicts among appropriators or between appropriators and officials.\n\n**7) Minimal recognition of rights to organize**: The rights of appropriators to devise their own institutions are not challenged by external governmental authorities.\n\n**8) Nested enterprises**: When the system is very complex, appropriation, provision, monitoring, enforcement, conflict resolution, and governance activities are organized in multiple layers of nested enterprises.\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/CPU":{"title":"CPU","content":"\n![](https://i.imgur.com/NxDLkuN.png)\n\nThe CPU controls the computer. It is the main component.\n\nA CPU is made of many components including\n- [Registers](notes/memory.md#Registers)\n- [control-unit](notes/control-unit.md)\n- [ALU](notes/ALU.md)\n\ndata is transeferred betwen these components and memory through [data buses](notes/bus.md)\n\n\n\nexamlple of an old CPU\n\n![diagram for 6809](https://i.imgur.com/41F0tnH.png)","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Data-Link-Layer":{"title":"Data-Link-Layer","content":"\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/DeFi":{"title":"DeFi","content":"\nDecentralised finance - an umbrella term for financial services on public blockchains\n\nexpands of the basic premise of bitcoin and creates an entire alternative to wall street\n\nusers engage with DeFi via [dApps](notes/dApps.md)\n\nfurther reading\n- https://www.coinbase.com/learn/crypto-basics/what-is-defi\n- \n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Decentralized-Network-Governance-Blockchain-Technology-and-the-Future-of-Regulation":{"title":"Decentralized Network Governance — Blockchain Technology and the Future of Regulation","content":"\nlink: https://doi.org/10.3389/fbloc.2020.00012\n\n# Summary\n\n# Extracts\n\n# Notes\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Decision-Problems-in-Blockchain-Governance-Old-Wine-in-New-Bottles-or-Walking-in-Someone-Elses-Shoes":{"title":"Decision Problems in Blockchain Governance — Old Wine in New Bottles or Walking in Someone Elses Shoes","content":"\nlink: https://doi.org/10.1080/07421222.2020.1759974\n\n# Summary\nExamines 6 problems in blockchain\n- Demand management\n- Data management\n- system design and architecture\n- membership\n- ownership disputes\n- transaction reversal\n\nThey came up with four main areas that \"characterise blockchain governance\"\n1) patrolling borders: who is in and who is out\n2) external legitimation\n3) reduction of discretionality: algorithmic governance does not replace but rather happens alongside with human decision making\n4) temporal management: diffcult to predict long term transformation\n\n# Extracts\n\n# Notes\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Defining-Blockchain-Governance-A-Framework-for-Analysis-and-Comparison":{"title":"Defining Blockchain Governance — A Framework for Analysis and Comparison","content":"\nlink:  https://doi.org/10.1080/10580530.2020.1720046\n\n# Summary\n\n# Extracts\n![Table 2. Six blockchain governance dimensions](https://i.imgur.com/xj6MRMd.png)\n\n# Notes\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/ER-Diagram":{"title":"ER-Diagram","content":"\n\nEntity: a thing in the real world with *independent existence* (phsyical e.g., person or conceptual e.g., job)\nEntity type: A collection of entities \n\nAttribute: properties of entity\nAttibute types:\n- simple/composite\n- single/multi valued\n- stored/derived\n- key (simple or composite)\n\nRelationship: when one entity refers to another\nRelationship type: a set of relationships with the same entity types\n- relationships can have attributes\n- relationships have:\n\t- degree (bi/n-ary)\n\t- cardinality (1:1, 1:N N:M)\n\t- participation constraints (total (marked by double line) or partial)\n\nWeak entities\n- no key attributes\n- requires total participation constraint on identifying relationship to its identifying entity type\n- partial key used in combination with identifying entity\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Enhanced-immutability-of-permissioned-blockchain-networks-by-tethering-provenance-with-a-public-blockchain-network":{"title":"Enhanced immutability of permissioned blockchain networks by tethering provenance with a public blockchain network","content":"\n# Summary\nThis paper notes that existing permissioned blockchains are susceptible to an attack where some of the permissioned participants collude to rewrite the chain. They propse a solution where the current state of the permissioned blockchain is _tethered_ to a public blockchain such as Ethereum using one or more smart contracts. This would allow the permissioned blockchain to leverage the security of the many participants in a public blockchain.\n# Extracts\n![Data flow diagram in a tethered permissioned network](https://i.imgur.com/LvAy7OK.png)\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Fire-And-Fury":{"title":"Fire-And-Fury","content":"\n\ndamien de ment\n- \"super spreader\"\n- banned from twitter 2021\n\t- for tweets promiting similar acts to the insurgence at the white house\n\t- \"nz politician will fear for their lives, and rightfully so\"\n- came together out of necessity for a common purpose. common purpose was based on freedom hope love and somthing better thatn this entire shithole we have been given to us in nz\n\nkelvyn alps\n- former soldier\n- claimed he had his own army\n- led far right direct democract party\n- counterspin media - far right online tv channel\n- calls mainstream media the opposition\n- called for a military coup at the wellington protests \"parasite palace - wellington beehive\n- \"my sister is married to a samoan\"\n\nhannah spearer\n- kalvin alps partner\n- anitfeminist and patriot\n- \"slavery vs freedom\"\n- also sarah smith\n\t- speaking publicly about satanic ritual abuse\n\nkarlene heriora\n- spoke about child sex trafficking\n- a wannabe musician who worked in hospitality\n- antisemitism\n- climate change denial\n- shares counterspins media\n- government is a corporation\n- want the structure of governance gone\n\namy benjamin\n- law lecturer\n- 911 was a false flag\n- chch was a false flag\n- \"went down rabbit holes\"\n- resigned from AUT\n- publishes videos on a fringe site\n\nchantell baker\n- conservative christian\n- \"take back freedom\"\n- daughter of former leader of new conservatives\n- 1M views on day of riot\n\nclair deeks\n- running in election for a far right party\n- \"you are truth seekers not conspiracy theorists\" 15:51\n\ngroup of knitting/chochet ytbrs\n- \"yoga moms, mothers circle\"\n- good at communication\n- dangerous \"have created a reallity where no one else is to be trusted\" 17:00\n\t- one problem -\u003e \"secret government system\" 17:10\n- used their platform to \"spread information\"\n- facing criminal charges\n\n\n\n\"we are not conspircay theorists\"\n- qanon feeding their beliefs\n\n\"we like good stories\"\n\"like to have knowledge that is surprising\"\n\"see pattersn\"\n\"go on scavenger hunts\"\n\"connect to people who share these opinions\"\n- 18:30\n\nQanon\n- conspiracy about us democrats and hillary clinton\n- \"part of a global secret kabal of satanic pedophiles\"\n- put a very value laden term \"freedom\" unifying banner\n\n\nJosie\n- fell dwn rabbit hole in 2009\n- stayed for 10 years\n- believed in the Kabal\n- why was it believable -\u003e \"things about how society was ran seemed dogshit to me\" 19:30\n\n\nappealing to confirmation bias 23:45\n\nhave features of facistic ideas\n\n\"swarm social media\" \"flood the zone\" \"saturate content to\" 27:05\n\n\"grand jury\" 27:30\n\n\"deep state\"\n\n\n\"dont trust the media trust us\"\n\nmoved from facebook to gab/telegram \n- unregulated program \n- haven of the far right\n\n2020 aug 17\n- turning point\n- big posters becoming more active\n-  \"i literally see no one dying, this is bullshit\" 30:20\n- Nuremberg 2.0 \n\t- nurenberg (professional medical ethics) people tried for crimes against humanity (nazia etc)\n\t- people voted on who should be hung\n- soveregn citizen sheriffs\n- combined threat assessment group\n\t- \"measureing extremeist violence in opposition to covid measures internationally\"\n\t- people who have intent and capability to make an attack\n\t- \"temperature has risen\"\n\nvoices for freedom contacted anti vax leader to ask for help about how to get the word out\n- \"we need to give them an alternative narrative do you know anyone has been injured\"\n- used iwth flu and mmr vaccine\n\n\nstarted with protest in ottowa\n- \"join the convoy\"\n- started from bluff and capre reigna - met in wellington 37:30\n\n\n40:13 far right neo nazi align iwth hippie influsence mum -\u003e views aligno n the pandemic, vaccine lockdown measures\n\nwhen the pandemic happen anti vaxxers lost relationsihps 41:28 so found them with other people who shared the same belief\n\nwhere do you find information\n- voice for freedom - we tust them very much\n- counterspin media - a little bit radical but sometimes some good\n\t- they can be rough and ready but they are out there filming the truth\n- got sick of hearing same narrative that we all need to be jabbed, and that there is a terrible virus\n\ntheir realities are splintered - fully believe that mainstream media is fake\n\nattempt to remove people fails\n- not a peaceful process\n- march 2nd 24 days in\n\t- police move\n\t- forced their way into freedom village\n\t- \"quite terrifying\" 46:30\n\t- jounalists are forcfully shoved out of protest\n\t- childrens playground on fire in parliament 50:00\n\nblamed violence on protest on people \"who werent aligned with their cause and werent part of the movement\"\n\n\nagenda surfing - changing topics\n- pro life\n- pro putin\n- false flag chch shooting\n\n\nbecome ungovernable\n- create out own nation\n\n\nbecome stormtoopers 1:01:00\n\n\"wellington was the beginning \"","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Fork-free-hybrid-consensus-with-flexible-Proof-of-Activity":{"title":"Fork-free hybrid consensus with flexible Proof-of-Activity","content":"\n# Summary\n\n# Extracts\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Governance-in-the-Blockchain-Economy-A-Framework-and-Research-Agenda":{"title":"Governance in the Blockchain Economy — A Framework and Research Agenda","content":"\n# Summary\nThis paper proposed a new type of economic system – the blockchain economy. These examined Swarm City as a case study. They revealed some current issues with the blockchain economy by comparing its governance with that digital economy. It defines the three key dimensions of IT governance as accountability, incentives, and decision rights.\n\n# Extracts\n![Table 1. Blockchain Typology](https://i.imgur.com/GIqAxI9.png)\n\n\n# Notes\n- Swarm city case – uses a centralised governance structure to complete the inital design and build phase. Then the product is released and anyone can add to it and it is completely open source and decentralised. \n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/HW2":{"title":"HW2","content":"\n# Assignment 2\nJet Hughes 9474308\n\n# 1. \nLet $V = P_2(\\mathbb{R})$ with the ususal vector addition and scalar multiplication. For each of the following subsets of $V$, either prove that it is a basis of $V$ or explain why it is not a basis of $V$ . You may use any result from class.\n\n(a) $\\{759, 20+2x+43x^2\\}$  \n(b) $\\{1-x, 2x^{2},3+x^2\\}$   \n(c) $\\{2x, 4+2x-x^{2}, -4-6x+x^2\\}$   \n(d) $\\{-1+3x, 1+x^{2,}x-3x^{2,}4+4x-11x^2\\}$    \n\nSince $P_2(\\mathbb{R})$ has dimension 3, by default all bases of $P_2(\\mathbb{R})$ have three elements. Hence (a) and (d) cannot possibly be bases of $P_2(\\mathbb{R})$\n\n(b) Since this set has 3 vectors and $P_2(\\mathbb{R})$ has dimension 3, it is enough to check either that is is linearly independent or that it spans $P_2(\\mathbb{R})$.\nTo show linear independence, if $a(1-x)+b(2x^2)+c(3+x^2)=(0x^2 + 0x + 0)$, we have $2b+c=0$, $-a=0$ and $a+3c = 0$. So $a=0$ which implies $c=0$ which then implies $b=0$. So the only linear combination equal to the zero vector is the one where $a=b=c=0$, hence this set in linearly independent. Since it is linearly independent and has three vectors, its span is a subspace of $P_2(\\mathbb{R})$ of dimension 3, i.e., all of $P_2(\\mathbb{R})$\n\n(c) Since this set has 3 vectors and $P_2(\\mathbb{R})$ has dimension 3, it is enough to check either that is is linearly independent or that it spans $P_2(\\mathbb{R})$.\nTo show linear independence, if $a(0 +2x+0x^2)+b(4+2x-x^2)+c(-4-6x+x^2)=(0+0x+0x^2)$, we have $4b-4c=0$, $2a+2b-6c=0$ and $-b+c = 0$. So $b=c$ which implies $-c+c=0$ and $2a+2c-6c=0$ so $a=2c=2b$. But this does no force $a,b,c$ t obe zero; we could have e.g., $a=2$ and $b=c=1$. Therefore we have a linear combination of the vectors that gives the zero vector when the coefficients are not all zero. So it is linearly dependent, and therefore can't be a basis.\n\n# 2. \nLet $V$ be a vector space such that $dim(V)= 10$. Let $U$ and $W$ denote subspaces of $V$.\n\n(a). What is the max value of $dim(U\\cap W)$, assuming $dim(U)=7$ and $dim(W)=4$ ?\n\nThe largest possible dimension of $(U\\cap W)$ is 4 which occurs when $W$ is entirely contained in $U$.\n\n(b). What is the min value of $dim(U+W)$\n\n$dim(U\\cap W) \\leq 4$ so from the formula $dim(U+W) = dim(U) + dim(W) - dim(U \\cap W)$ we have $dim(U+W) \\geq 7 + 4 - 4= 7$.\n\n(c). Max value of $dim(U+W)$\n\nWe have $dim(U+W) \\leq dim(U) + dim(W) = 11$. But since $U+W$ is a subspace of $V$ which has dimension $10$ , we must have $dim(U+W) \\leq 10$. To show that this can be achieved, we could let $\\{v_1,...,v_{10}\\}$ be a basis for V, and choose $U = span\\{v_1, v_2, v_3, v_4, v_5, v_5, v_7)\\}$ and $W=span\\{v_7,v_8,v_9,v_{10}\\}$. Then $U+W$ will contain the basis for $V$ and hence $U+W=V$. So the maximum possible value of dim(U+W) is 10.\n\n(d). Since $dim(U+W) \\leq 10$ and $dim(U+W) = 11 - dim(U\\cap W)$, we have $dim(U\\cap W) \\geq 11-10= 1$ \n\n(c). No, because if $U+W$ is direct then $dim(U+W) = 0$, but we showed that $dim(U\\cap W) \\geq 1$\n\n# 3.\nLet $U$ = $\\{p\\in P_2(\\mathbb{R}): p(x)$ is divisible by $x-3\\}$. Then U is a subspace of P2\n\n(a) Find a basis of U.\n\nSuppose a polynomial of degree 2 is divisible by $x-3$ . It can be written as $(x-3)(ax+b)$ where $a,b \\in \\mathbb{R}$. Then we have a basis $\\{(x-3), x(x-3)\\}$\n\nTo prove this is a basis we need to show that it is linearly independent and that is spans $U$ . To show linear independece if $a(x-3)+b(x^2+3x) = (0x^2 + 0x + 0)$, we have $-3a=0, a-3b=0$ and $b =0$. So $a=b=0$ and the only linear combination equal to the zero vector is the one where $a=b=0$, hence this set is linearly independent. Since U must have dimension 2, it must be a spanning set and therefore must be a basis.\n\n(b). Find another subspace $W$ of $P_2(\\mathbb{R})$ such that $U+W$ is a direct sum.\n\nNeed to find $W$ where $U\\cap W = \\{0_v\\}$ and $U+W = P_2(\\mathbb{R})$. We have a basis of $U = \\{(x-3), (x^2-3x)\\}$. We can adjoin a basis $\\{1, x, x^2\\}$ of $P_2(\\mathbb{R})$ to get a spanning set $\\{x-3, x^2-3x,1, x, x^2\\}$ of $P_2(\\mathbb{R})$. \n\nThe 3rd vector is not a linear combination of the first two. The 4th vector is  a linar combination of the 1st and 3rd vectors: $(x)=(x-3)+3(1)$. So we eliminate the 4th vector. The 5th vector is a linear combination of the 2nd 3rd and 1st vector: $(x^2) = (x^2-3x) + 3(x-3) +9(1) = x^2 - 3x +3x -9 + 9 = x^2$. So we eliminate the 5th vector. This leaves the basis $\\{x-3. x^2-3x,1\\}$ of $P_2(\\mathbb{R})$. Let $W=span\\{(1)\\}$. To show that the sum $U+W$ is direct we compute $U\\cap W$. $W$ consists of all polynomials of degree 0, and $U$ consists polynomials divisible by $x-3$. The only polynomial of degree 0 divisible by $x-3$ is $0$. So $U\\cap W = \\{0\\}$, hence the sum is direct.\n\nTo show the sum is equal to $P_2(\\mathbb{R})$, we use the formula $dim(U+W) = dim(U) + dim(W) - dim(U \\cap W)=2+1-0=3$ since $U+W$ is a subspace of $P_2(\\mathbb{R})$ of dimension 3, we must have $U+W=P_2(\\mathbb{R})$. \n\n# 4. \nLet $V$ and $W$ be vector spaces over $\\mathbb{R}$ and $T: V → W$ a linear transformation. Let $\\{v_1,...,.v_n\\}$ be a basis for $V$\n\n(a) Since T is linear and $\\{v_1,...,.v_n\\}$ is s basis of $V$ $range(T) = T(V) = \\{T(v): v \\in V\\}$. So $V= a_{1}v_{1}+...+a_{n}v_{n}$ for $a_1,...,a_n \\in \\mathbb{R}$. Then $T(V) = T(a_{1}v_{1}+...+a_{n}v_{n}) = a_{1}T(v_1)+...+a_{n}T(v_n)$ So $range(T) = T(V)$ is a linear combination of ${T(v_1),...,T(v_n)}$. So this must be a spanning set of $range(T)$\n\n(b) let $V = \\mathbb{R}^2$ and  $W = \\mathbb{R}^2$. Let $V$ have a basis $\\{(1,0), (0,1)\\}$ Define $T:V→W$ by $T(x,y) = (x,y+3)$\n\n# 5.\n\n(a)\n\n\n(b) ","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/LACChain-Framework-for-Permissioned-Public-Blockchain-Networks-From-Blockchain-Technology-to-Blockchain-Networks":{"title":"LACChain Framework for Permissioned Public Blockchain Networks – From Blockchain Technology to Blockchain Networks","content":"\n# Summary\n\n# Extracts\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Network-Layer":{"title":"Network-Layer","content":"\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Network-Security":{"title":"Security Layer","content":"\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Networks-Other":{"title":"Other Layer","content":"\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Normal-Forms":{"title":"Normal-Forms","content":"\n\n# 1 NF\n- atomic attributes\n- no multivalue/composite/nested relations\n\n# 2 NF\n- no nonprime attributes that are partially functionally dependent on primary key\n\n# 3 NF\n- remove nonprime attributes that are transitively dependent on primary key\n\n# BCNF\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Now-the-Code-Runs-Itself-On-Chain-and-Off-Chain-Governance-of-Blockchain-Technologies":{"title":"Now the Code Runs Itself — On-Chain and Off- Chain Governance-of- Blockchain Technologies","content":"\nlink: https://doi.org/10.1007/s11245-018-9626-5\n\n# Summary\nThis paper examines blockchain governance from a legal philosophy perspective by relating on-chain govenance to an ongoing debate about the construction of a positivist legal order. Noting how it is vulnerable to a \"coalescence of private interests\"\n\n# Extracts\n\n# Notes\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Parallel-Governance-for-Decentralized-Autonomous-Organizations-enabled-by-Blockchain-and-Smart-Contracts":{"title":"Parallel Governance for Decentralized Autonomous Organizations enabled by Blockchain and Smart Contracts","content":"\nlink: https://doi.org/10.1109/DTPI52967.2021.9540069\n\n# Summary\nProposes a system of running a _simulated_ blockchain in alongside the real one and using it to test out ideas. Uses the ACP (artificial systems, computational experiments, parallel execution) approach\n\n# Extracts\n![A parallel governance framework for DAO](https://i.imgur.com/8MU12WW.png)\n\nDAO is a typical complex system with the characteristics of social and engineering complexity. The parallel intelligence theory based on the ACP method provides an effective solution for DAOs parallel governance. As shown in Figure 1, The parallel governance for DAOs is based on parallel DAO systems. Parallel DAO is a combination of Artificial systems, Computational experiments, and Parallel execution (ACP) approach [8]–[10] and the DAO. In a parallel DAO, the artificial systems (A) part is used to model one or more artificial DAO systems corresponding to the real-world DAO systems. Based on the co-evolving real-world and artificial blockchain systems, diversified computational experiments could be designed and conducted in the computational experiments (C) part to evaluate and verify specific behavior, mechanisms, and strategies involved in the DAO systems. The optimal solution will emerge through these experiments and feedback to the real-world DAO systems in the parallel execution (P) part to realize the decision optimization and parallel tuning the DAO systems.\n\n# Notes\nvoting mechanisms\n- direct\n- representative\n- flow\n \n^ lead to whale effect (?)\n\n- [[quadratic voting]] - aims to solve problem of voting influence\n\t- reduces effect of holder with large amounts of tokens\n\t- vulnerable to collusion and sybil attacks\n\nparallel intelligence theory from ACP approach\n\ncase study of GonsisDAO\n\n\n\n# Related\n[[Blockchain-based smart contracts as new governance tools for the sharing economy]]\n[[Blockchain — The operating system of smart cities]]","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Permissionless-and-Permissioned-Technology-Focused-and-Business-Needs-Driven-Understanding-the-Hybrid-Opportunity-in-Blockchain-Through-a-Case-Study-of-Insolar":{"title":"Permissionless and Permissioned, Technology-Focused and Business Needs-Driven — Understanding the Hybrid Opportunity in Blockchain Through a Case Study of Insolar","content":"\ndoi 10.1109/TEM.2020.300356\n\n# Summary\n\n# Extracts\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Physical-Layer":{"title":"Physical-Layer","content":"\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/River-Of-Filth":{"title":"River-Of-Filth","content":"\n'its not going to be complusory'\n\nthen\n- border workers and at MIQ must be vaccinated\n- workers in health and disability\n- school and early learning staff\n\nthen\n- close contact (e.g., barder) must be vaccinated\n- 40% of all workers\n\n\n\"self proclaimed most transparent government\" 3:53\n\n\ntop of north to bottom of south \nkohitanga - one people\n\n\"end the mandates\" 4:15\n\n\nhaka - 8:00\n\n\nin 22 days the people endured\n- immature politicians\n- a cyclone\n- constant police disturbance\n\nbut the people remained united\n\nmarch 2- day 23 6am\n- 600 police\n- riot squad\n- special tactics group\n- mobilized \"on the people\"\n\n\nsong choice\n\n\nwhat we witnessed was trulyincreible\nall kinds of people came together\nunited by one purpose\n\nusing each other strength to stand up\n\ndefying to be silenced\n\nunfortunately those elected to represent the people failed to do just that\n\ninstead the government signed a pact promising not to talk with the people\n\nthe accredited media deployed a vicious smear campaign in an effort to turn public opinion agains the people\n\nbut due to the many peopple filming the truth was seen worldwide\n\nthis was made in recognition of the thoursands who have suffered at the hands of this govt\n\nto the many who held the line\n\nto the many who sacrificed so much\n\nyou are never alone\n\nin memory of the freedom camp\n\nproduced by luke reich","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/SQL":{"title":"SQL","content":"","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Schemas":{"title":"Schemas","content":"\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/The-Friar-and-the-Cipher":{"title":"The-Friar-and-the-Cipher","content":"\nThe Friar and the Cipher outlines the social context surround the creation of the Voynich manuscript, and the man who wrote it — Roger Bacon. \n\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/The-Generic-Blockchain-Ecosystem-and-its-Strategic-Implications":{"title":"The Generic Blockchain Ecosystem and its Strategic Implications","content":"\nlink: https://www.researchgate.net/publication/325677489_The_Generic_Blockchain_Ecosystem_and_its_Strategic_Implications\n\n# Summary\n\n# Extracts\n![Genereic blockchain ecosystem](https://i.imgur.com/ASjT6zp.png)\n\n# Notes\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Toward-an-Interoperability-Architecture-for-Blockchain-Autonomous-Systems":{"title":"Toward an Interoperability Architecture for Blockchain Autonomous Systems","content":"\n# Summary\n\n# Extracts\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Transport-Layer":{"title":"Transport-Layer","content":"\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Vulnerabilities-on-Hyperledger-Fabric":{"title":"Vulnerabilities on Hyperledger Fabric","content":"\nlink: https://doi.org/10.1016/j.pmcj.2019.101050\n\n# Summary\nIdentified two security vulnerabilities in hypderledger fabric, examined their effects, and proposed two solutions.\n\n# Extracts\n\"First, the identity of an endorser is known to all members within a channel, which opens a gateway for [DoS attack](https://www.sciencedirect.com/topics/engineering/denial-of-service-attack \"Learn more about DoS attack from ScienceDirect's AI-generated Topic Pages\") on endorsers in order to either block transaction pertaining to a client, or to degrade network efficiency. Second, the technology is prone to [wormhole attack](https://www.sciencedirect.com/topics/computer-science/wormhole-attack \"Learn more about wormhole attack from ScienceDirect's AI-generated Topic Pages\") i.e. within a channel, compromising a member leads to leakage of ledger information of all members, to everyone outside the channel.\"\n\n# Notes\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/Wireless-Networks":{"title":"Wireless Layer","content":"\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/YAC":{"title":"YAC\"","content":"\npaper: [[YAC — BFT Consensus Algorithm for Blockchain]]\nuse in: [[hyperledger#Iroha]]\n\n1. A client forms a transaction with commands and signs it with their private key. \n2. The client sends the transaction to a peer. The peer receives the transaction, performs stateless validation (i.e., verifies that it is not malformed), and relays it to the OS. \n3. The OS generates a proposal and sends it to the peers. The proposal contains an ordered list of transactions that will be potentially added to the blockchain in this round. \n4. The proposal is sent to the voting peers. Peers enter the collaboration phase, during which they exchange votes across the network and decide on a block.\n5. The peer commits the block to their local block store.\n\nCollaboration Phase:\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/YAC-BFT-Consensus-Algorithm-for-Blockchain":{"title":"YAC — BFT Consensus Algorithm for Blockchain","content":"\nlink: https://doi.org/10.48550/arXiv.1809.00554\n\n# Summary\nThis is the algorthm used in Hyperledger Iroha. \n\n# Extracts\n\n1. A client forms a transaction with commands and signs it with their private key. \n2. The client sends the transaction to a peer. The peer receives the transaction, performs stateless validation (i.e., verifies that it is not malformed), and relays it to the OS. \n3. The OS generates a proposal and sends it to the peers. The proposal contains an ordered list of transactions that will be potentially added to the blockchain in this round. \n4. The proposal is sent to the voting peers. Peers enter the collaboration phase, during which they exchange votes across the network and decide on a block. More details on the collaboration phase are provided in Section V. \n5. The peer commits the block to their local block store.\n\n# Notes\nConsensus [7] should guarantee liveness of the system, security, and convergence (consistency) of data stored in the ledger\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/a-systematic-literature-review-on-blockchain-governance":{"title":"a systematic literature review on blockchain governance","content":"\nlink: https://arxiv.org/pdf/2105.05460.pdf\n\n# Summary\nAs the title states, this paper is a systematic literature review on blockchain governance. It address six main questions (listed below). They selected 37 papers written between the release of bitcoin and before nov 2022 about blockchain governance. This paper will help to provide a roadmap for what I need to do, and bring up some things that I will have to consider when developing my own governance rules. \n\n# Extracts\n\nResearch Questions\n- What is blockchain governance?\n- Why is blockchain governance adopted?\n- Where is blockchain governance enforced?\n- When is blockchain governance applied?\n- Who is involved in blockchain governance?\n- How is blockchain governance designed?\n\np9 “Blockchain governance refers to the structures and processes that are designed to ensure the development and use of blockchain are compliant to legal regulations and ethical responsibilities.”\n\np9 \"Dimensions of blockchain governance: Blockchain consists of the three dimensions of decision rights, accountability, and incentives, whereby they should all align with the decentralisation level of deployed blockchain\"\n\np10 \"Adaptability and upgradability are the two main properties motivating the governance of blockchain, while some other identified motivations of blockchain governance are related to ethical values, e.g., security, fairness, privacy, which reflects the awareness of blockchain’s impact on human and society\"\n\np10 Governance of blockchain itself — \"governance of blockchain should determine how the platform is designed [49], for instance, infrastructure configuration (e.g. block size and interval) [41, 52, 62], and consensus protocol (e.g. transaction generation and confirmation process) [29, 36, 45].\" \"governance can facilitate the upgrade of platform to meet the new requirements according to users’ feedback and proposals [29, 40, 46, 52, 59].\"\n\np10 Governance of the blockchain community — \"governance of community places an emphasis on both formal and informal governance processes of different stakeholders and their collaborations via off-chain channels (e.g., Twitter, Reddit and GitHub) [29, 36, 37, 40, 59].\" \"Governance over community also includes institutional governance\"\n\np12 \n![Table 14: RQ5: Who is involved in blockchain governance?|300](https://i.imgur.com/6nIyFNH.png)\n\np14 \n![Table 15: RQ6: How is blockchain governance designed (implemented)?|300](https://i.imgur.com/lrqRrMT.png)\n\np14 \"process mechanisms describe the steps of blockchain development via the governance meta-rules\" \"product mechanisms include the features of a blockchain, as the final outcomes of software development process.\"\n\n# Notes\n\n- Doesn't include papers after Nov 2020\n- Governance of:\n\t- platform\n\t- community\n\t- applications\n\t- data\n- When is governance applied? Steps?\n\t- Planning\n\t- Analysis\n\t- Design\n\t- Implementation\n\t- Testing\n\t- Operation\n\t- Termination\n- Sharding?\n- How is it implemented\n\t- Process Mechanisms - steps of development via governance meta-rules\n\t- Product Mechanisms - features of a blockchain, as outcomes of the development process\n\n# Related\n- J. Werner, S. Frost, and R. Zarnekow, “Towards a taxonomy for governance mechanisms of blockchain-based platforms,” 2020.\n- Z. Bao, K. Wang, and W. Zhang, “An auditable and secure model for permissioned blockchain.” New York, NY, USA: Association for Computing Machinery, 2019.\n- [[Governance in the Blockchain Economy — A Framework and Research Agenda]]\n- The invisible politics of bitcoin: governance crisis of a decentralized infrastructure\n- Regulatory issues in blockchain technology\n- The internal and external governance of blockchain-based organizations: Evidence from cryptocurrencies\n- M. Finck, Blockchain regulation and governance in Europe. Cambridge University Press, 2018\n- S. Azouvi, M. Maller, and S. Meiklejohn, “Egalitarian society or benevolent dictatorship: The state of cryptocurrency governance,” in Financial Cryptography and Data Security, A. Zohar, I. Eyal, V. Teague, J. Clark, A. Bracciali, F. Pintore, and M. Sala, Eds. Berlin, Heidelberg: Springer Berlin Heidelberg, 2019, pp. 127–143.\n- W. Reijers, I. Wuisman, M. Mannan, P. De Filippi, C. Wray, V. Rae-Looi, A. C. Velez, and L. Orgad, “Now the ´ code runs itself: On-chain and off-chain governance of blockchain technologies,” Topoi, pp. 1–11, 2018.\n- B. D. Trump, M. Florin, H. S. Matthews, D. Sicker, and I. Linkov, “Governing the use of blockchain and distributed ledger technologies: Not one-size-fits-all,” IEEE Engineering Management Review, vol. 46, no. 3, pp. 56–62, 2018.\n- T. John and M. Pam, “Complex adaptive blockchain governance,” in MATEC Web of Conferences, vol. 223. EDP Sciences, 2018, p. 01010.","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/access-security-tradeoff":{"title":"access-security-tradeoff","content":"\nThis is the concept that \"perfect\" security is impossible to attain. \n\nThe \"perfectly\" secure system is one that allowed access to nobody.\n\nWe need to find the corrct balanese between security and access.\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/activity-diagrams":{"title":"activity-diagrams","content":"\n[](https://i.imgur.com/zpwJJ5d.png)\n[](https://i.imgur.com/PKHcpMx.png)\n\n\n### 3.4 Activites and transitions\n\n[](https://i.imgur.com/1G14Ntn.png)\n\n- activities\n\t- take place over some pariod of time\n\t- linked by transitions (arrows)\n\t- only one starting point potentaily many ending conditions\n\n- Transitions\n\t- have guard conditions that must be satisfied before the transition can occur\n\n### 3.5 Decision points\n- represent conditional branching\n- two or more alternative transitions depending on condition\n- every transiiton exiting the decision point must have a guard condition\n\n[](https://i.imgur.com/KCufkgX.png)\n\n### 3.6 Synchonisation bars\n- represents two or more activites running in parallel\n- transitions can be split into mutiple paths and recombined later\n- if a workflow is split then it must be recombined on the same diagram\n\n[](https://i.imgur.com/IVfP7vt.png)\n\n### 3.7 swim lanes\n- same as BPMN\n- show who is responsible for a process\n- can represent\n\t- business organisations\n\t- depts\n\t- people (actors)\n- can simplify processes\n\n[](https://i.imgur.com/cRiZjtE.png)\n\n\n### 3.8 relationships to use cases\n- use case diagrams show the high level interactions between actors and cases\n- high level activity diagrams show the sequence of use cases within a workflow\n\n[](https://i.imgur.com/3b9f2va.png)\n\n\n#### 3.8.1 example\n\n[](https://i.imgur.com/dKHjIdu.png)\n\n[](https://i.imgur.com/yCAjqkZ.png)\n\n[](https://i.imgur.com/RifaVaq.png)\n\n### 3.9 Example producing a book\n\n[](https://i.imgur.com/X5aFAt2.png)\n\n[](https://i.imgur.com/AKVAshk.png)\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/aesthetic-and-minimalist-design":{"title":"aesthetic-and-minimalist-design","content":"\n![](https://i.imgur.com/Oywxwgq.png)\n![](https://i.imgur.com/xgfgEtm.png)\n\nsignal to noise\n\n![](https://i.imgur.com/6bLaHS6.png)\n![](https://i.imgur.com/qF21SST.png)\n\n- what are you core functionality\n- how can you best use your screen space\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/analysis-of-recursive-algorithms":{"title":"analysis-of-recursive-algorithms","content":"\n- induction and recursion are linked\n- inductive approach is esential for understanding time-complexity of resursive algorithms\n\n## 1 Proof by induction\n[induction](notes/induction.md)\nFind a (positive integer) _parameter_ that gets smaller in all recursive calls\nProve inductively that \"for all values of the parameter, the result computed is correct\"\nTo do that:\n- check correctness is all non-recursive cases\n- check correctness in recursive cases assuming correcness in the recursive calls\n\n## 2 Examples\n### 2.1 Quicksort\n[divide-and-conquer](notes/divide-and-conquer.md) algorithm\nsorts a range in an array (a group of elements between some lower index, $lo$ inclusive and some upper index $hi$ exclusive) as follows:\n- If length of range $(hi - lo)$ is at most 1 -\u003e do nothing\n- otherwise, choose a pivot p (e.g., the element at $lo$) and:\n\t- place all items less that p in positions $lo$ to $lo +r$\n\t- place all items \u003e= p in positions $lo +r+1$ to $hi$\n\t- place p in position $lo+r$\n\t- call quicksort on the ranges $lo$ to $lo + r$ and $lo+r+1$ to $hi$\n\n#### 2.1.1 Proof\nparameter is $hi - lo$\n\nthe parameter gets smaller in all recusive call because we always remove the element $p$ so, even if it is the smallest or largest element of the range ,,the recursive call has a range of size at most $hi - lo - 1$\n\nthe non-recursive case is correct because if we have 1 or fewer elements in a range they are already sorted\n\nin the recirsive case, since all the elements before $p$ are smaller than it and we assume they get sorted correctly be quicksort, and the same happens for the elements larger than p, we will get a correctly sorted array\n\n\n### 2.2 Fibonacci 1\n```python\n\tdef fib(n)\n\t\tif n \u003c= 1\n\t\t\treturn 1\n\t\treturn fib(n-1) + fib(n-2)\n```\n\nline 1 -\u003e always executed\nline 2 -\u003e executed if n\u003c=1\nline 4 -\u003e executed if n\u003e1, cost equal to cost of callling fib(n-1), fib(n-2), and some constant cost for the addition and return\n\n#### 2.2.1 Cost bounds/Proof\nif we let T(n) denote the time required for evaluating fib(n) using this algorithm this analysis gives: \n\n\u003e## $T(0) = T(1) = C$\n\u003e## $T(n) = D + T(n-1) + T(n-2)$\n\nwhere c and d are some positive (non-zero) constants. \n\n- this shows that T(n) grows at least as quick as fib(n)\n- even if $D=0$ we'd get $T(n) = C \\times fib(n)$\n- growth rates are the same $\\therefore$ exponential (at least $1.6^n$) and far too slow\n\n\u003e A recurive algorithm that makes two or more recurive calls with parameter values close to the original will generally have exponential time complexity\n\n### 2.3 Fibonacci 2\n```python\n\tdef fibPair()\n\t\tif n == 1\n\t\t\treturn 1, 1\n\t\ta,b = fibpair(n-1)\n\t\treturn b, a+b\n```\nline 1 -\u003e always executed some constant cost\nline 2-\u003e executed if n=1, some constant cost\nline 4-\u003e executed if n\u003e1, cost equal to cost of calling fibPair(n-1)\nline 5 -\u003e executed if n\u003e1, some constant cost\n\n#### 2.3.1 Proof\nit's true for $n-1 by design$\nIf it's true at n-1 then the result of computing fibpair(n) is:\n\n$(f_{n-1}, f_{n-1} + f_{n-1}) = (f_{n-1}, f_n)$\n\nwhich is what we want\n\n#### 2.3.2 Cost bounds\nif we let P(n) denote the time required for evaluating fib(n) using this algorithm this analysis gives: \n\n$P(1) = C$\n$P(n) = P(n-1) + D\\ for\\ n\u003e1$\n\nwhere $C$ and $D$ are some positive (non-zero) constants.\n\n \n Claim: $P(n) = C + D(n-1)$\n\nBy induction: \nit's true for n = 1 since,\n\n$P(1) = C$\n$C+D\\times(1-1)=C$\n\t\nsuppose that it's true for n-1. Then it's true for n as well because\n\n$P(n) = P(n-1) + D$\n$\\ \\ \\ \\ \\ \\ \\ \\ \\ = C+D\\times(n-2)+D$\n$\\ \\ \\ \\ \\ \\ \\ \\ \\ = C+D\\times(n-1)$\n\n$\\therefore$ By induction it's true for all $n\u003e=1$\n\n\n$P(n)$ is the time for evaluating $fibPair(n)$ using this algorithm. This analysis gives:\n\n$P(1) = C$\n$P(n) = P(n-1) +D$\n\nwhere C and D are some positive constants\n\n\u003e ## $P(n) = C+D\\times(n-1)$\n\u003e in particular, $P(n) = \\theta(n)$\n\n\u003e A recursive algorithm that make one recurive call with a smaller value and a constant amount of additional work will have at most linear time complexity\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/analyzing-experiments":{"title":"analyzing-experiments","content":"\n# 3 questions\n- what does my data look like\n\t- graphs, plots, differnent summary plots\n- what are the overall numbers \n\t- aggregate stats e.g., mean average std dev\n- are the differences \"real\"?\n\t- significance p-value\n\t- likihood that results are due to chance\n\n## p value\npearsons chi-squared test. comparing rate of expected value vs observed value\n\n$$\n\\chi^{2}=\\frac{(observed-expected)^2}{expected}\n$$\n\n\"normal\" outcome variance follow normal/gaussian distribution.\n\nas chi squared gets bigger it is less likey that the coin is unbiased\n\ne.g., 20 tosses, we got 13 heads. at p\u003c0.05 can we reject the null that the coin is unbiased\n\n![value = 1.8](https://i.imgur.com/SHKLk53.png)\n\n![](https://i.imgur.com/rxaswEP.png)\n\ndegrees of freedom num possibilites n-1 = 2-1 = 1\n\nwe cannot reject the null\n\n![example 2 chi2 5.4](https://i.imgur.com/UnX2WbG.png) reject the null\n\n![click through rate example](https://i.imgur.com/JYFbgS2.png)\\\n\nformalieses: \"were pretty sure\". helps generalize from small samples\n\nfor normal continiuous data\n- t-tests (compare 2)\n- annova (compare more than 2)\n\ndata is not always normal.\n- bi modal - 2 peaks\n- skewed\n\t- e.g., time: can be infiniely slow, but not infinitely fast\n\n\nnon-normal data\n- knowing is half tha battle\n- run A/A tests\n- use randomised testing","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/anatomyofahack":{"title":"anatomyofahack","content":"\n- david was careful -2fa etc\n- used mail.com address which fowarded to another\n- someone broke in and stopped the fowarding, added a phone number, \n\t- burner Android device registered in Florida.\n\t- new backup email too, swagger@mailinator.com,\n\t- likely that she used a script to target a weakness in Mail.com’s password reset page\n\t- $5 per account. It’s unclear how the exploit worked and whether it has been closed\n\t- Without any authentication, she was able to reset Davis’ password\n- ATT.com sent along a secure link to partap@mail.com to reset it\n\t- she talked a customer service rep into forwarding his calls to her Long Beach number\n\t- supposed to be more safeguards required to set up call forwarding\n\t- But faced with an angry client, customer service reps will often give way, putting user satisfaction over the colder virtues of security.\n\t- (use robots?)\n\t- Davis still got texts and emails, but every call was routed straight to the attacker\n- Davis’ Google account\n\t- .Experts will tell you that twofactor authentication is the best protection against attacks\n\t- two-factor services end up looking like just one more account to crack\n\t- Davis hadn't set up Google's Authenticator app, the more secure option,\n\t- thanks to Google's accessibility functions, she could ask for the confirmation code to be read out loud over the phone\n- Authy should have been harder to break\n\t- Eve simply reset the app on her phone using a mail.com address and a new confirmation code, again sent by a voice call.\n- Eve reset Davis's Coinbase account, using Authy and his Mail.com address\n\t- she transferred the full balance\n\t- Authy might have known something was up. The service keeps an eye out for fishy behavior, and while they’re cagey about what they monitor, it seems likely that an account reset to an out-of-state number in the middle of the night would have raised at least a few red flags\n\t- Modern security systems like Google’s ReCAPTCHA often work this way, adding together small indicators until there’s enough evidence to freeze an account — but Coinbase and Authy each only saw half the picture, and neither had enough to justify freezing Partap’s account.\n- BTC-e had put a 48-hour hold on the account after a password change, giving him time to prove his identity and recover the account. Bitstamp had an even simpler protection: when Eve emailed to reset Davis's authentication token, they had asked for an image of his driver's license. Despite all Eve's access, it was one thing she didn't have. Davis’ last $2,500 worth of bitcoin was safe.\n\n- Eve's computer was piping in from a block of IP addresses in Canada, but she may have used Tor or a VPN service to cover her tracks. Her phone number belonged to an Android device in Long Beach, California, but that phone was most likely a burner\n\nWhy did she choose Partap Davis? \n- She knew about the wallets upfront\n- somehow, Eve came across a list of bitcoin users with Davis’ email address on it.\n- A number of leaked Coinbase customer lists are floating around the internet\n- maybe his identity came from an equipment manufacturer or a bitcoin retailer.\n\n- There were just so many accounts, so many ways to get in.\n\t- attack surface. The bigger the surface, the harder it is to defend\n\n- In the fight between security and convenience, security is simply outgunned.\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/answered-questions":{"title":"answered-questions","content":"\nAnswered\n\n- [x] What is Sharding?\n\t- breaking blockchain into smaller pieces (not sure how or how) to increase scalability\n- [x] Even if a farm says they didn't use some chemical, how does the blockchain verify that. Does someone need to go and physically audit them?\n\t- records stored on the chain are just timestamped hashes of documents obtained via e.g., a lab who tests the soil\n\t- Can the group, as a DAO almost, collectively employ someone to do this?\n\t- I guess that still wouldn't stop the participant being audited from bribing them or something.\n- [x] what actually is hyperledger fabric? Is it a closed blockchain that different groups can run independently for their own use-case? Or is it one single closed blockchain that many different groups participate in.\n\t- hyperledger fabric is one of the projects created by hyperledger. It is a framework/base from which the community can develop their own blockchains.\n- [x] is governance within a closed blockchain the same as within an open blockchain\n\t- no I dont think so.[Governance of open vs closed blockchains](notes/governance.md#Governance%20of%20open%20vs%20closed%20blockchains)\n- [x] does the central authority e.g., govt decide who can join and leave?\n\t- yes, but is this responsibility restricted only to them? Can other parties approve new participants?\n- [x] What are public vs private permissioned blockchains\n\t- [blockchain-types](notes/blockchain-types.md)\n- [x] why would a participant want to fork?\n\t- just having the capability is important\n\t\t- means the authority has to act in the interest of the parites otherwise they will fork\n\t- swtiching authorities?\n\nIgnored questions\n\n- [x] What do the governance rules need to accomplish?\n\t- Shouldn't the system just work?\n\t- Very broad question\n\t- Maybe:\n\t\t- Maintenance/Development of the codebase (PIP/EIP?)\n\t\t- Inviting/banning participants\n\t\t- Conducting phsysical audits?\n\t- this is something i need to figure out myself\n- [x] What are they voting on?\n\t- Seems like a very dumb question. I guess a lot of things. But I'm not sure so I'll add it here\n- [x] Who will be participating in the blockchain?\n\t- Three major parties in food supply-chain: Market, Manufacturing, Agriculture\n\t- Do I need to define this in more detail?\n - [x] Do we need to track the products physically?\n\t- A: not relevant yet\n- [x] How is on-chain governance implemented?\n\t- Smart contracts? Consensus algorithms?\n- [x] Why is block size significant?\n\t- not relevant","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/anti-design-heristics":{"title":"anti-design-heristics","content":"\n![](https://i.imgur.com/BHJ5iQU.png)\n![](https://i.imgur.com/DrqSSK5.png)\n![](https://i.imgur.com/KPW6h19.png)","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/anti-govt-protest-china":{"title":"anti-govt-protest-china","content":"\nChina used facial recognition to identofy protesters\n\nthese protesters used masks and toppled lamposts to thwart this infrastructure\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/application-programming-interface":{"title":"application-programming-interface","content":"\nAllows code (and people) to interact with other people applications. They define interactions points (*endpoints*) within the code, where data is retrieved (GET) or inserted (POST). Each endpoint is accessed using a *URL* or URI through *HTTP*.\n\n# REST principles\n\u003e Representational state transfer.\n\nThese principles describe the best practives for building APIs.\n\nSome of the main points are:\n- decoupled\n\t- not dependent of e.g., a specific browser\n- stateless\n\t- each interaction is self contained\n\t- although sometimes this is not used\n\t\t- e.g., authenticated \"sessions\"\n- uniform interface.\n\t- codifies principle of using HTTP methods on URLs\n\t- internal representation of data id hidden\n\t- interactions are based on resources\n\nREST principles were Co-developed with the web\n\n# Java REST APIs\njava servelts are code blocks that handle requests. java.servlet.http library\n\nframworks like Spring support Java API development\n- wraps an aplication server around you data classes\n- can persist your data in a database\n- also provides servers that can host API access to your data\n\n## Web technologies\n- resources on the web are identified using URLs \n- HTTP is the network protocol for data transfer in the web\n- HTTP describes 'methods' to apply to URLs\n\t- GET *read* a resource identified using a URL\n\t- PUT *writes* to a resource identified using a URL\n\n# Cloud computing\nUses *mircoservices*\n\napps built from intercommunicating microservice components/ each component can scale independently.components are loosely coupled. \n\n# Bulding an API\nUse a [library](notes/libraries.md)/framework with:\n- human readable documentation of functions\n- ability to manually interact\n\nSome APIs will provide tools to interactively build snippets which can be copy pasted\n\n# Maintaining API\nSimilar to maintenance of code [libraries](notes/libraries.md)\n- need to consider abstractions\n- need to evolve\n- future proof as much as possible\n- avoid complete rewrites\n- use versioning\n\n\n# Other stuff\n## Flask\nsmall python web sever\n\n## code and data\nAPIs define interaction points within code. (Similar to visibilty of methods).\n- also force a barrier between devs code\n\nneed developer to understand data model\n- this may appear explicitly in API calls\n- may be that API calls manipulate unseen data\n\t- need ndevs to be comfortable with you *mental model*\n\nUse of [libraries](notes/13-code-librarires.md) share many of these points\n\n## Overview\nAllow code to interact with others applicatioins.\n\ncan be used by people, not only code. \n\nAPI differ from libraries because they deal with the interactions between applications at runtime. \n\nAPIs work accross different \"distances\" of interaction. e.g., intergrating software components within one server vs across the internet\n\nweb technologies have positively impacteed api by\n- simplfy development - provide base of technologies that can be used to gain access to data in a structure way\n- normalised tools to using APIs\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/approaches-to-systems-development":{"title":"approaches-to-systems-development","content":"\nregardless of the approach, the concept of the model is import for analysis, design, and modelling paradigms\n\n# 1 traditional\n*system is a collection of process*\nfunction programming\nprocesses interact with data\nprocesses accept inputs and produce ouputs\n\n# 1 object oriented\n*system is a collection of [objects](notes/object.md)*\nthese objects interact with each other\nand send and respond to messages","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/ass01-security-audit":{"title":"ass01-security-audit","content":"\n# Security Audit for Awesome Web Site\nJet Hughes - 9474308\n\n## Summary of system\n### Function\nThis system is a simple website for a store called Things \u0026 Co. It allows users to create an account, login, and view their products. There are four pages: Home, Create Account, View Catalogue, and Log In. The home page is a simple landing page with a brief description of the website and some images. The View Catalogue page shows information about the list of products the store sells. It also allows the user to search for products.\n\nTo create an account the user must provide a Username, Real name, email, address, credit card information and a password. They are then able to log in to their account using the Login page. \n\n### Technology\nIt is a Web application running on a local virtual machine using Java Servlets and JSPs in the Tomcat Web server. It also uses an H2 database for storage of user, and product data. \n\n## Flaws\n### SQL Injection \nCWE: 89\n\nIt is possible to inject SQL into the database using the login username field, and display it in the browser as the \"username\" of the logged-in user.\n\nThe first thing I attempted was to log in using the username \" 'or 1=1;--\". This worked and I was logged in as administrator.\nAfter that, I created an account. When I noticed that my username was displayed in the browser I attempted to extract data from the database and display is as this username. \n\nIn the username field of the login form, I entered the string:\n\n' union select group_concat(username||':'||password||':'||name||':'||credit_card_number||':'||credit_card_expiry||':'||credit_card_cvv) from user as name;--\n\n' union (select TABLE_NAME, TABLE_SCHEMA, 1, 2 FROM information_schema.tables) ;--\n\nThis resulted in all the user's data, credit card information, and hashed passwords being displayed in the browser. I was then able to crack 48 of the passwords using Hashcat and the rock you word list. \n\nAn attacker would not know the names of the fields or the tables. However, security through obscurity is not sufficient and an attacker could guess or otherwise find the information.\n\n### Cross site scripting/JavaScript injection\nCWE: 79\n\nThe product catalogue is visible to other users. This means if we were able to update the product information in the database, we could run JavaScript on the browser of other users.\n\nSince we are able to inject SQL using the username field on the login page, we can execute an UPDATE command on the database. This is the input I used:\n\n'; update PRODUCT set DESCRIPTION = '\u003cscript\u003ealert(\"hello\")\u003c/script\u003e' where PRODUCT_ID = 67696;--\n\nAn attacker could use this to present the user with an unsafe link, or export data such as session ID's and cookie data to a remote server where they can view it.\n\nI was also able to create an account with the username ''\u003cscript\u003ealert(\"hello\")\u003c/script\u003e\", however when I logged in, the alert was not shown and the username in the login page was blank. \n\n### Password policy\nCWE: 521\n\nThis website only requires that the user's passwords have 5 character and 1 number. Upper-case letters and numbers are not required. This results in a character set size of 36, and a Shannon Entropy of 15 bits.\n\nThis does not result in a secure password, and means the passwords can be easily cracked. It is also likely that many of the passwords will be simply 5 letters, then a number. This makes it very easy to crack these passwords using a pattern technique.\n\n### Use of a Broken or Risky Cryptographic Algorithm\nCWE: 327\n\nThe website uses md5 to hash the passwords, which is not a secure hash function. Furthermore, the passwords are not salted or peppered.\n\nI was able to crack 48 of the 100 passwords using Hashcat and the rockyou word list with the command: hashcat.exe -m 0 -a 0 pwds.txt rockyou.txt.\n\n### Improper Restriction of Excessive Authentication Attempts\nCWE: 307\n\nThe login page does not restrict the number of login attempts. This means it is possible for an attacker to attempt many passwords to gain access to an account.\n\n### Path traversal\nCWE: 22\n- You can access the welcome page simply using the path /catalogue/welcome.jsp. This will load the welcome page with the username null. However, it is unclear whether this is a security issue as currently the welcome page offers no functionality. \n- I don't think there are any path traversal flaws in this website. This is because there isn't any URLs which contain queries or parameters relating to sensitive pages. \n\n### Cleartext Transmission of Sensitive Information\nCWE: 319\n\nWhen a user logs in, their username  and unhashed password are transmitted in a cleartext post request to the server. This information is susceptible to a man in the middle attack and other methods of interception.\n\n#### Example payload:\n![example payload](https://i.imgur.com/9Tn6gx1.png)\n\n## Conclusion\nThis system is not secure. I was able to identify multiple vulnerabilities, and successfully carry out attacks to exploit these vulnerabilities. \n\nThe most severe of these was a simple SQL Injection attack. I was able to extract the credit card information of all the users, and crack the passwords of nearly 50% of the accounts. This is a major security issue. \n\nI was also able to inject JavaScript code into the database, which would then be run on the browser of other users. \n\nFurthermore, the system does not have adequate password policy and allows users to choose weak passwords. It also allows excessive authentication attempts.\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/ass03-security-flaws-essay":{"title":"","content":"# Security Flaws Essay\n\nJet Hughes 9474308\n\n## The Articles\n### Mat Honan - Wired 2012\nThis article [^8], written by Mat Honan for Wired magazine in 2012, gives a detailed account of how Honan's digital life was torn apart. His Amazon, apple and Gmail account were used to gain access to his Twitter profile, which was then used to broadcast hateful messages. And if that was not bad enough, his iPhone, iPad, and MacBook were all wiped to prevent him from regaining access to his accounts. Unfortunately, Honan did not keep backups of his MacBook and lost all his photos and videos of his daughter's first few years.\n\nFirstly, the hacker - Phobia, was able to find his email address on his personal website, which was linked to on his Twitter profile. Then from the Google account recovery website he was able to find out that Honan's recovery email was a me.com email provided by Apple. Phobia then got Honan's billing address using a whois request on his personal website, then manipulated Amazon's customer service to obtain the last four digits of one of Honan's credit cards. He then used the billing address and the credit card to convince Apple's customer service team that he was Honan - despite being unable to answer the security questions - and take over his Apple account. Phobia then wiped Honan's devices, then used his email accounts to gain access to his Twitter.\n\nUltimately, Phobia’s main purpose was to gain access to Honan's Twitter account, which was valuable because it had a short username. They just wanted to \"fuck shit up\".\n\n### Russell Brandom - The Verge 2015\nThe second article [^7], written by Russell Brandom, is similar to the previous one. It describes how one person's online life was compromised - Partap Davis. This time the goal was not just to \"fuck shit up\". The attacker - Eve, had a specific goal in mind - his valuable cryptocurrency. They stole 10 Bitcoin worth roughly $3000 at the time. \n\nDavis was not an easy target, he used two-factor authentication, secure passwords, and authentication apps. However, this did not protect him. Davis used a mail.com address which forwarded emails to another email. Unfortunately, a script existed that Eve was able to use to send a password reset email to themselves, thus gaining access to the account. They were then able to manipulate Davis's phone company so that they would reroute calls to his number to a burner phone Eve had purchased. Eve was able to use this phone to get around all the two-factor authentication Davis had set up. This allowed them to access his Coinbase account and take his Bitcoin. Luckily, Davis's BTC-e and Bitstamp account were safe. BTC-e required 48 hours wait after a password change, and Bitstamp required a picture of Davis's driver's license.\n\nIt is clear they chose Davis because they knew in advance that he had a Coinbase account. It is likely his email was leaked in a list of Coinbase users or from an equipment manufacturer or a Bitcoin retailer. When people like Davis have so many different accounts, all linked together, there is a large attack surface.\n\n## Commonalities\nAlthough the events described in these articles are unfortunate, they provide valuable insight into the security practices of the individuals and companies affected. There are many similarities in the methods that each of the hackers used, as well as which type of vulnerabilities they were able to exploit. In both cases, the hackers were able to gain access to an email account, and use it to reset passwords, and break into its associated accounts. Both hackers were able to convince tech support that they were who they said they were, with minimal information. These tech support workers, although they may have been merely following company procedure, placed a higher priority on the convenience of their services, to the detriment of their security. \n\n## C.I.A. Dimensions\nConfidentiality, Integrity, and availability are all affected\n\n**Confidentiality:** Attackers were able to access private information. Eve gained access to his emails, phone calls, twitter, and any information stored on his cryptocurrency accounts. Phobia also gained access to all of Honan's emails, and any information stored on his twitter, iCloud, iPad, iPhone, or MacBook.\n\n**Integrity:** Attackers were able to alter information about the victims, without authorisation. They were both able to change the victim’s passwords, and most notably - Phobia wiped all the data from Honan's Apple devices.\n\n**Availability:** Attackers were able to block victims from accessing their accounts. Phobia wiped all of Honan's Apple devices, and he lost all the data stored on them that was not backed up. He was also blocked from accessing any of the accounts where his password was changed. Eve rerouted Davis's calls and locked him out of many accounts he should have had access to.\n\n## Rules\nThese two articles have taught us some valuable lessons. Some of these include:\n- Companies should value security over convenience (to a degree) and tech support staff should adhere strictly to policy\n- Companies should be more aware of how information available through their service can be used by hackers to break into other services.\n- Individuals should try to limit the degree to which accounts are daisy-chained together.\n- Individuals should keep regular backups.\n\nBased on these lessons, we can design a set of rules which small to medium enterprises should follow to keep themselves and their customers secure. Firstly, SMEs should identify and understand their risks. For example: Theft of company information, website defacement, phishing attacks, ransomware, and data loss due to natural events and accidents as well as others.\n\nThere are six main rules which I have decided on. These are based on the CIS 18 controls list [^5], the CIS SME controls list [^1], Google's security control list for small [^3] and medium to large [^2] companies, and Canada's list of security controls for small and medium organisations [^6].\n\n**Incident Response Plan:** SMEs should assume that they will inevitably be compromised, and they should be ready to respond. They should have systems in place to detect attacks when they happen, and have a plan for how to respond, and prevent it from occurring again in the future. \n\n**Strong User Authentication:** This one of the most important rules. In addition to strong passwords, SMEs should require two-factor authentication, preferably with an authenticator app and not just by text. SMEs should also require users to create strong security questions, so that accounts can be recovered if a password is stolen, there should not be any secondary questions or other information that a user can use to recover an account.\n\n**Awareness Training:** For all employees, including customer service and tech support. Employees should be made aware of the proper procedures and standards and adhere strictly to them.\n\n**Backups:** Backups should be done regularly. Backups for different devices should be done at varying intervals - the more sensitive or important the data, the more frequent the backup. They should be stored in a secure place in encrypted form. They should be stored off-site, either via a cloud service or at external physical locations.\n\n**Perimeter defences:** SMEs should use firewalls to protect against online threats. Spam and malicious emails should be filtered. Should use secure Wi-Fi.\n\n**Access Control and Authorisation:** Should follow the principle of least privilege. Users should have only the minimal permission required to do their task. Higher level accounts like administrators should have further restrictions preventing them from doing user-level activities. Shared and shared-use accounts should be minimized. Unused accounts should be deleted.\n\n## Guidelines\nThe clients of these SME's should:\n- Create an incident response plan\n- If their risk is high enough, they should hire a third party security company.\n- Keep Backups in the same manner as the SMEs\n- Provide awareness training to employees\n- Use strong passphrases and enable two-factor authentication.\n- Keep personal devices and accounts separate from work accounts and devices\n- Require employees to keep devices up to date\n- Require employees to use antivirus and antimalware tools on their devices\n\n## References\n[^1]: https://www.cisecurity.org/wp-content/uploads/2017/09/CIS-Controls-Guide-for-SMEs.pdf\n[^2]: https://support.google.com/a/answer/7587183?hl=en\n[^3]: https://support.google.com/a/answer/9211704?hl=en\n[^4]: https://gblogs.cisco.com/ca/2019/11/08/baseline-cybersecurity-controls-for-small-and-medium-organizations/\n[^5]: https://www.cisecurity.org/controls/cis-controls-list\n[^6]: https://cyber.gc.ca/en/guidance/baseline-cyber-security-controls-small-and-medium-organizations\n[^7]: https://www.theverge.com/a/anatomy-of-a-hack\n[^8]: https://www.wired.com/2012/08/apple-amazon-mat-honan-hacking/\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/assigning-participants":{"title":"assigning-participants","content":"\n\n# Methods\n## Between Subjects\nThe participants are split into equal groups, each which reviews one of the alternatives\n## Within Subjects\nThe participants are split into two grops, one group review the first alternative first, the other review the seconds alternative first. \n## Latin Square\n![](https://i.imgur.com/ZORPvqk.png)\n\norder of each group is different\n# Counterbalanced assignments\ne.g., typing speed might affect interface usage\nyou can use a pretest to assign participants to that typing speed is roughly balanced\n\nmany techniques: key is to have equal chance of each participant in each group\n\n## offline counterbalancing\npre-testing then forming matches pairs, which are split between groups]\n\n## online counterbalancing\n- of ther is no pre-test pick a threshold that is likely to be about the middle\n- as they come in\n\n- dont need to ensure even nubmer of high and low typers.\n- do need to ensure the same number of high/low typers in a and b\n## dangers\n### regression:\n- find heady coins\n- first flip them all (pre-test)\n- if they land heads more than half, call them heady\n- \"feed them a snack\"\n- does snacking increase the natural tendency of coins\n\n![coin flip example](https://i.imgur.com/Y2CWCRV.png)\n\nboth regress towards the mean\n\n### how to avoid\nif the pretest is used to counterbalance, and assignment is random, then the error goes away\n\n\n# should every participant use every alternative\nthree major srategies\n\n- **Within** \n\t- everyone tries all options\n\t- good when not fussed about learning/practise/exposure isssues\n- **between participants**\n\t- each person tries only only of the options\n\t- requires more people, and more attention to fair assignment\n\t- has the benefit that each participant is uncorrupted\n\t- most common forthings like web studies\n- **Counterbalancing**\n\t- \n\n# hawthorne effect\nresults are a result of the act of exmperimenting itself not as a resyult of the manupulations of the experiment\n\ncan be avoided with random assignment\n\n# vaccum cleaner example\n- manipulation\n\t- vacuum type\n- measures\n\t- speed\n\t- cleanliness\n\n- between subjects design: assign half the participants to each type.\n\t- worried about individual differences\n- within subjects design: everyone uses both interfaces:\n\t- worried about ordering effects\n\n- half try one first, the other try the other first (counterbalancing)\n\t- each of the tasks should be difference e.g., clean differnt buildings/rooms\n\nindividual differnces: go based of intuition of if it will make a difference.\nRandom assignment is importantg","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/assigning-participants-video":{"title":"assigning-participants-video","content":"\n[assigning-participants](notes/assigning-participants.md)","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/assignment-02":{"title":"Assignment 02","content":"\n# 1 Introduction\n## 1.1 Setup\nThis report will discuss various strategies for managing a *warehouse* . A warehouse will be simulated as follows:\n- A warehouse is made up of a grid of *cells*. \n- Each cell has a collection of *packets*\n- Each packet has a *destination* cell. \n- Each cell also has a *robot* \n- In each step of the simulation a robot can deliver one packet to a robot in an adjacent cell.\n- The simulation ends when each cell has arrived at its destination.\n\n\n## 1.2 Managers\nThe goal is to deliver all the packets to their desired destination as efficiently as possible. \n\nEfficiency is defined as the minimum number of steps required to deliver all the packets divided by the actual number of steps taken.\n\nThe efficiency of the warehouse depends on the delivery scheme used by the robots. There are four managers I will be considering. These are:\n\n**Basic**\n- Packets are stored in a FIFO queue\n- Vertical movements are made before horizontal movements\n- Received packets are always added to the queue\n\n**Load Aware**\n- Packets are stored in a FIFO queue\n- If its destination is in a straight line from the current location, it just sends it one step in the appropriate direction.\n- Otherwise, moves to cells with fewer packets are preferred.\n- In case of an equality, revert to the basic rule\n- Only packets that need to keep moving are added to the queue\n\n**Priority**\n- Packets are stored in a Priority queue\n- Packets with further distance to their destination have higher priority\n- If two packets have the same priority, revert to the load aware rule\n- Only packets that need to keep moving are added to the queue\n\n**Min Load** [^1]\n- Same as normal priority, but the priority is changed\n- A Packet has two (logical) possible cells it could move to next. Its priority is found by checking the load at each of these two cells, and taking the lesser of the two. \n- If two packets have the same priority, revert to the load aware rule.\n- Only packets that need to keep moving are added to the queue\n\n## 1.3 Scenarios\nThere are a number of other factors that affect the efficiency of the warehouse. These are:\n\n- The total number of packets in the warehouse\n- The initial distribution of the packets\n- The distribution of the destination of the packets\n\nThe plan is to analyze the efficiencies of the delivery schemes in a few different scenarios, with a few different map sizes. These scenarios are:\n\n- **1000 Random:** 1000 packets are added in random locations with random destinations\n- **One Per Cell:** The number of packets and cells is the same. Each cell contains one packet to begin with, and has a random destination (different packets might have the same destination).\n- **Chance Per Cell:** As the previous case, but each cell has only a 25% chance of containing a packet.\n- **Upper Left:** The number of packets and cells is the same. All the packets start in the upper left corner, and each packet has a different destination.\n- **Center:** The number of packets and cells is the same. All the packets start in center, and each packet has a different destination.\n\n# 2 Analysis\nEach result is the average efficiency of 25 runs in that configuration\n\n## 2.1 N Random\n$$\n\\begin{tabular}{|c|c|c|c|c|c|c|c|}\n\\hline\nScenario\u0026\\multicolumn{6}{|c|}{Map Sizes} \\\\\n\\hline\n\u00265\u002610\u002620\u002640\u002680\u0026100\\\\\n\\hline\nBasic\u00264.0\\%\u002614.6\\%\u002643.7\\%\u002684.6\\%\u002698.2\\%\u002698.9\\%\\\\\nLoad Aware\u00264.9\\%\u002617.5\\%\u002647.0\\%\u002684.3\\%\u002698.0\\%\u002698.6\\%\\\\\nPriority\u00264.9\\%\u002617.7\\%\u002655.6\\%\u0026100.0\\%\u0026100.0\\%\u0026100.0\\%\\\\\nMin Load\u00264.8\\%\u002617.0\\%\u002649.2\\%\u002690.2\\%\u002698.1\\%\u002698.9\\%\\\\\n\\hline\n\\end{tabular}\n$$\n\nIn this scenario. The efficiency of the mangers clearly increased proportionally to the size of the map. This is because the number of packets remained constant, so as the map size increased, the load on the managers decreased and Packets were able to move through the warehouse more quickly.\n\nAt a map size of 100 all managers achieved close to 100% efficiency. However, the Priority manager was the only one able to achieve exactly 100%. In addition, it was about 5% better than the others in a 50x50 map.\n\nIt is also worth noting the basic manager was significantly worse than the others in the very small maps. This is likely due to the high load on each of the managers, amplifying the need to keep them in balance. A since all the other managers have some form of load balancing, the Basic Manager is most affected. I could be interesting to try to create a manger that performs better here than the Basic manager without, using any load balancing. Possibly considering only priority based on distance to destination.\n\nThe Min Load manager was very slightly better than the Load Aware Manager in the mid-sized maps. This implies that prioritizing nodes that can be easily balanced is better than, simply, sending nodes to the least loaded cell.\n\nThe managers tend to perform similarly at the extreme ends of the map size spectrum, and differ most in the middle. \n\n## 2.2 One Per Cell\n$$\n\\begin{tabular}{|c|c|c|c|c|c|c|c|}\n\\hline\nScenario\u0026\\multicolumn{6}{|c|}{Map Sizes} \\\\\n\\hline\n\u00265\u002610\u002620\u002640\u002680\u0026100\\\\\n\\hline\nBasic\u002673.8\\%\u002676.2\\%\u002672.9\\%\u002673.7\\%\u002674.4\\%\u002673.3\\%\\\\\nLoad Aware\u002681.0\\%\u002676.2\\%\u002673.7\\%\u002674.0\\%\u002674.3\\%\u002673.4\\%\\\\\nPriority\u002688.5\\%\u002697.7\\%\u002699.5\\%\u0026100.0\\%\u0026100.0\\%\u0026100.0\\%\\\\\nMin Load\u002685.0\\%\u002681.0\\%\u002683.1\\%\u002682.7\\%\u002681.8\\%\u002683.0\\%\\\\\n\\hline\n\\end{tabular}\n$$\n\nIn this scenario, overall efficiency was relatively high with the Basic, and Load Aware managers achieving about 70%, Min load achieving about 80%, and Priority manager about 100%. Since the number of packets is proportional to the size of the map, changing the size had little effect on the efficiency of the managers, except for the Priority manager, and to a lesser extent the Load Aware manager.\n\nThe Priority manager significantly outperforms the other managers here. However, it was significantly less efficient (but still better than the other managers) in smaller map sizes. It decreased from 100% in 100x100 to 88.5% in 5x5. The Load Aware manager, on the other hand, *increased* from 73.4% in 100x100 to 81% in 5x5. Since I only have a small sample size of 25, this could be due to random chance.\n\nThe Min Load Manager was consistently better than the Basic and Load Aware managers, but never better than the Priority manager. \n\n## 2.3 Chance Per Cell\nChance = 25%\n$$\n\\begin{tabular}{|c|c|c|c|c|c|c|c|}\n\\hline\nScenario\u0026\\multicolumn{6}{|c|}{Map Sizes} \\\\\n\\hline\n\u00265\u002610\u002620\u002640\u002680\u0026100\\\\\n\\hline\nBasic\u002694.5\\%\u002694.5\\%\u002694.6\\%\u002695.7\\%\u002696.5\\%\u002697.4\\%\\\\\nLoad Aware\u002695.8\\%\u002694.2\\%\u002694.1\\%\u002695.6\\%\u002696.2\\%\u002696.1\\%\\\\\nPriority\u002698.7\\%\u002699.7\\%\u0026100.0\\%\u0026100.0\\%\u0026100.0\\%\u0026100.0\\%\\\\\nMin Load\u002697.4\\%\u002696.3\\%\u002696.0\\%\u002696.5\\%\u002698.2\\%\u002698.0\\%\\\\\n\\hline\n\\end{tabular}\n$$\n\nIn this configuration, the efficiency was very high due to the low number of packets, low load-factor and subsequent fast movement of Packets. Hence, the variation in efficiencies was very small, as the need for balanced managers was diminished.\n\nHere, the Priority manager still performed the best, achieving 100% efficiency, although by a lesser margin than in the previous two scenarios. Once again, the Min Load manager was better than the Basic and Load Aware managers, but not the Priority manager. \n\n## 2.4 Upper Left\n$$\n\\begin{tabular}{|c|c|c|c|c|c|c|c|}\n\\hline\nScenario\u0026\\multicolumn{6}{|c|}{Map Sizes} \\\\\n\\hline\n\u00265\u002610\u002620\u002640\u002680\u0026100\\\\\n\\hline\nBasic\u002626.3\\%\u002615.8\\%\u00268.9\\%\u00264.7\\%\u00262.4\\%\u00261.9\\%\\\\\nLoad Aware\u002625.8\\%\u002615.7\\%\u00268.8\\%\u00264.7\\%\u00262.4\\%\u00261.9\\%\\\\\nPriority\u002630.7\\%\u002617.5\\%\u00269.4\\%\u00264.8\\%\u00262.5\\%\u00262.0\\%\\\\\nMin Load\u002626.6\\%\u002616.0\\%\u00268.8\\%\u00264.7\\%\u00262.4\\%\u00261.9\\%\\\\\n\\hline\n\\end{tabular}\n$$\n\nThis scenario had by far the lowest efficiency. This is because a single manger initially holds every node. Since most of the load at any given time is being handled by one manager, and most of the packets will wait a long time before getting offloaded to an adjacent cell, they will take longer to reach their destination. As the map size increases, the efficiency decreases rapidly, as the number of packets starting on the top left cell increased exponentially. \n\nThere is little variation in the efficiency of the different managers, except for the Priority manager, which is slightly more efficient than the others. I think this is because by prioritizing packets that need to travel further, the concentration of packets in the corner is reduces faster. \n\nIt would be interesting to know whether placing all the packets in the center of the map would be more efficient. I think it would be, as there are more directions for the packets to spread out, and the packets are on average would be closer to their destination (since destinations are uniformly distributed).\n\n## 2.5 Center\nI decided to investigate the idea of starting all the packets in the center. These were the results. \n\n$$\n\\begin{tabular}{|c|c|c|c|c|c|c|c|}\n\\hline\nScenario\u0026\\multicolumn{6}{|c|}{Map Sizes} \\\\\n\\hline\n\u00265\u002610\u002620\u002640\u002680\u0026100\\\\\n\\hline\nBasic\u002614.8\\%\u00269.0\\%\u00264.8\\%\u00262.4\\%\u00261.2\\%\u00261.0\\%\\\\\nLoad Aware\u002615.0\\%\u00269.0\\%\u00264.7\\%\u00262.4\\%\u00261.2\\%\u00261.0\\%\\\\\nPriority\u002616.0\\%\u00269.7\\%\u00264.9\\%\u00262.5\\%\u00261.2\\%\u00261.0\\%\\\\\nMin Load\u002614.9\\%\u00269.3\\%\u00264.8\\%\u00262.4\\%\u00261.2\\%\u00261.0\\%\\\\\n\\hline\n\\end{tabular}\n$$\n\nSurprisingly, this was about half as efficient as starting is the corner. This is the opposite of what I expected. It's interesting that it reached exactly 1% efficiency in a 100x100 map. \n\nAha! It's because the max distance a packet must travel is shorter (about half), so even with a similar number of steps, the efficiency will be twice as bad. This means that Center does not necessarily result in slower delivery, only higher consequences for slow deliveries.\n\n# 3 Summary\nPriority managers was clearly the most efficient of the four managers, with the Min Load following. Configurations with extremely large or small amounts of packets per cell made the managers perform more similarly, and scenarios with medium amounts of packets per cell amplified the difference. \n\nI think the main reason Priority manager was consistently better than the other was because It spreads the load among more managers faster, and ensures that Packets with further destinations arrive about the same time as shorter ones. It effectively removes the advantage that packets closer to their destination have.\n\nI think Min Load performed better than Load Aware for one reason: It did a better job of distributing load. I think I could have made an even better manager by prioritizing based on a function of both load, and distance.\n\n[^1]: I couldn't think of a better name\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/authentication":{"title":"authentication","content":"\n# Authentication\n- proof of identity\n- need to be sure a user is who they say they are before you can trust them\n- usually done via a unique identifier\n\t- unique username\n- and a secret that is only known by the authorised user\n\t- password\n\t- biometrics\n\t- 2fa code\n\n## MFA\n- many secrets\n- protects user/system in the case that a password is disclosed\n- additional secrets generated at the time of use.\n\t- short lived\n\t- if found - attackers have a small windoe to exploit\n- e.g.,\n\t- sms message\n\t- authenticator app\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/authorisation":{"title":"authorisation","content":"\n\n# Authorisation\n- verifying that a user is allowed to access the operation that they are attempting to access\n- requires explicit check in the system for restricted operatons\n\t- some code that check if the roles assigned to the authenticaed user intersect the roles required for the current operation\n- use is assigned a **role** that defines the operations they are allowed to perform\n- e.g.\n\t- custoemer - can view products, and see retail prices\n\t- sales rep - can view products and see retail and cost prices\n\t- manager - can add/delete/modify products\n\t- admin - can change system configuration. can assign roles to users","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/automation":{"title":"automation","content":"\nAutomatation is the use of automatic equipment in a productions process. The goal is to remove repetitive tasks. Automation can be built within a tool, or it can be a tool that controls other tools. Any automation should be easy and quick to use, reliable, and safe. \n\n# Implementation/Use tradeoff\nAutomations should save enough time to warrant their creation ([xkdc](https://i.imgur.com/RvYHIUW.png)). It is good to re-check your time spent periodically. \n\nBe careful when creating automations as bugs can rapildly case a mess.\n\n# Examples of Automation\n- [IDEs](notes/integrated-development-environments.md) can  contain user defined [2 1 Snippets](notes/integrated-development-environments.md#2%201%20Snippets). \n- Selenium can be used to control websites using code\n- On windows, AutoHotKey is a scripting language that can be used for keyboard shortcuts, macro creation and more\n-  [shell](notes/shell.md)s can be used to automate quick and simple tasks. They are not suited for more complex tasks as edge cases and quirks become hard to handle and are usually not worth the time. For these tasks you could python or some other language.\n\t- You should create these incrementally, testing steps as you go before combining them into a script\n- Office 365 can be automated using Flow (a.k.a, Power Automate)\n\t- Macros are recorded by a gui or created manually\n\t- This can faciliate forms of [continuous-integration](notes/continuous-integration.md)\n\t- For [example](https://i.imgur.com/Liiqzlh.png)\n\n# Using code to create code\nYou can you a program to product source code. For example you can write a java program to generate java code. This is suited for producing repetitive error prone source code. \n\nFor example. You are building a command line tool. You want to have a help option. You can create a YAML definition to define command line arguments. You could then create code to parse this YAML and create generate the source code. \n\n[finite-state-machine](notes/finite-state-machine.md) are another example of something that may benefit from being created programatically\n\n## Code generation using spreadsheets\n\nSpreadsheets allow a mix of pattern (using formula) and exceptions (overriding formula for a particular row). This allows you to \"eye ball\" your shell commands.\n\nFor example. each row is a command invocation. Columns build up command's invocation, including formulae. Then use concatenate function to join text from other columns. And copy and paste the rows into your shell\n\nThis is useful for idempotent commands. i.e., change happens once. As nothing bad will happen if a command is run twice\n\nAutoHotKey on windows can be used to automate GUIs. Selenium can be used to automate web apps\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/avl-tree":{"title":"avl-tree","content":"\nAVL tree\nmost basic and obvious.\n\neach node contains some extra information: the difference between the height of its right and left subtee. balance is maintained by ensuring that at every node this always at most 1\n\nWhat is the least possible number of nodes in AVL tree of height k?\n\nin general\n\n$A_k= 1 + A_{k-1} + A_{k-2}$\n\nwe need a root 1, on one side a amallest possible tree of height $A_{k-1}$ then the other side must have height at least to $k-2$ to satisfy the rule, so we need at least $A_{k-2}$ more nodes.\n\nThe size if exponential in its height, and therefore its height is logarithmic in the size.\n\nthe operations are the same, but for each one we need to check and fix any excess imbalance along a single path from the affected leaf node up to the root.\n\nfor insertions, at most three rotations are rquired, for deletions the worst case is $O(lg\\ n)$\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/aymptotic-notation":{"title":"asymptotic-notation","content":"\nAsymptotic notations are used in computer science to classify algorithms based how its space and time requirements grow as the input grows. \n\n\n# big O notation\n\nBig O defines a bound for the *upper*  bound of the running time (or space) of a algorithm. However, it is possible that the actual running time is much less as it does not take into account special cases ^fb2c3f\n\n\n## 1 Formal definition\n\n$f(n) = O(g(n))$ if there is some constant $A$ such that $f(n) \u003c A \\times g(n)$\n\n\n# big theta notation\n\nBig theta defines an *upper and a lower* bound for a the running time (or space) of an algorithm. \n\n\n## 2 Formal definition\n\n$f(n) = \\theta(g(n))$ if there are some constants $A$ and $B$ where $0 \u003c B \u003c A$ such that for all sufficiently large $n$, $B \\times g(n) \\geq f(n) \\leq A \\times g(n)$\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/backend":{"title":"backend","content":"\n# Static vs Dynamic Sites\nStatic\n- Load pre-created files to a web serve\n- Client requests these files from the server and displays them on the browser\n\nDynamic\n- Some content is generated dynamicallt only when needed\n\n\n# Server-Side vs Client-Side\nServer\n- UI Elements\n- HTML CSS JS\n- Runs within browser\n\nClient\n- Backend functionality: notifications, databases, etx\n- PHP, JS, C, C#, Ruby, etc\n- Runs on Server\n\n# Databases\nORM: Object relational model\nODM: Object data model\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/balancing-binary-search-trees":{"title":"balancing-binary-search-trees","content":"\nthe height of a [BST](notes/binary-search-tree.md) is the length of its longest chain. Most operations are $O(n)$ where n is the height of the tree. In an Ideal situation each layer of the tree is full. The height of the tree is logarithmic to the number of nodes. \n\nWhen a tree is being used only occainsonally, we can afford to simply rebalance it periodically. However when it is in constant use we cannot afford this cost\n\nlong branches are a problem\nthe performance bounds for all BST operations are linear of the length of the longest branch of the tree\n\nideal shape is a similar to a [heap](notes/heap.md) (wide and shallow).\n\nwe want the longest branch to be $\\theta(lg\\ n)$ \n\none way is to do an [In order](notes/tree-traversal.md#In%20order) and save to a sorted array. then construct a new tree by repeatedly bisecting the array. and recursively building the left and right subtrees\n\nneed some local operation that helps to restore balance\n\n# Rotation\n## How\nsuppose that in this bst there is a longer chain in e than else where\n\n![100](https://i.imgur.com/SmDsZd1.png)\n\nimagine twisting d to be the root\n\n![100](https://i.imgur.com/6MoYHX1.png)\n\nchanges are\n- b's right child is now c\n- d's left child is not b\n- b parent now points to d\n\n## When\n![](https://i.imgur.com/vjvMVM3.png)\n\nsometimes two rotations are needed\n\nbasic idea is to modify the add and delete operations fo the BST to be somewhat self-balancing. This does not need to be perfect\n\nWe need a rule to decide when the tree is \"balanced enough\" and also strategies for fixing problems when the rule is violated.\n\nWe only need to fix the area local to the add or delete operations\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/behaviour-driven-development":{"title":"behaviour-driven-development","content":"\nModels should be created with the users needs in mind. \nRequired bahaviour determines acceptance criteria\nThis is called Behaviour Driven Development\n\n**Resources** \n[Domain Driven Design with BDD](https://www.youtube.com/watch?v=Ju50D11EIoE)\n[DDD videos](https://www.youtube.com/playlist?list=PLZBNtT95PIW3BPNYF5pYOi4MJjg_boXCG)\n\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/big-picture":{"title":"big-picture","content":"\n\u003eHCI is the cycle of design, implementation, evaluation of user interfaces\n\n![](https://i.imgur.com/SMtW2Zb.png)\n\n\u003e\"fail fast so you can succeed sooner\"\n\n**Focus on people**\n\nGood design is good\nBad design costs lives, money, time\nBad design can be easily avoided using basic ideas like consistency and feedback\n\nJoy of good design: When interaction becomes \"invisible\" - intuitive**\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/binary-search-tree":{"title":"binary-search-tree","content":"\n[code](https://blackboard.otago.ac.nz/bbcswebdav/pid-2890167-dt-content-rid-18354839_1/courses/COSC201_S1DNIE_2022/BST.java)\n\n[bst-operations](notes/bst-operations.md)\n\na collection of *nodes* with one distinguished node called the root\n\nrules:\n- the node data contains a key which comes from some ordered type e.g., `string`\n- each node can have at most who children - there are two fixed slots called left child and right child\n- the left child node and it descendents are called the left subtree\n- the key value at a nodes *left child* (and all its descendants) must be *less* than the key of the node\n- the key value at a nodes *right child* (and all its descendants) must be *greater* than the key of the node\n- we do not allow duplicate keys\n\nNotation\n- n.key for key\n- n.l and n.r for left and right children\n- n.p for its parent\n- nil for a \"not here\" marker. e.g.,  n.r = nil means \"n has no right child\"\n\ne.g., \n![300](https://i.imgur.com/n0IzHW7.png#invert)\n\nIn this example:\n- root.p = nil\n- root.r = n\n- n.p = root\n- n.key = emu\n- n.l = nil\n- n.r.key = rat\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/birth-of-hci":{"title":"birth-of-hci","content":"\nENIAC (one of the first programmable, electronic computers) 1946, and the first six programmers: Kay McNulty, Betty Jennings, Betty Snyder, Marlyn Meltzer, Fran Bilas, and Ruth Lichterman\n\n![](https://i.imgur.com/w6khmh5.png)\n\nDEC PDP-8 and TI 980 (1960’s), PDP-8 is an octal computer (switches in three-bit configurations), TI 980 is a hexadecimal machine (4-bit configuration). Not interactive\n\n![](https://i.imgur.com/XBP75oa.png)\n\n\nBatch processing using punch cards, still not interactive (1950s -1970s)\n\n![](https://i.imgur.com/qsu2duq.png)\n\nIBM System/360 (mainframe computer in the 70s), Altair 8800 (one of the first home computers)\n\n![](https://i.imgur.com/dAYc8ru.png)\n\n\nvisicalc (Dan Bricklin 1979), and Apple II (1977)\n\n![](https://i.imgur.com/zXmd89L.png)\n\n\nSutherland, Ivan Edward (January 1963). \"Sketchpad: A man-machine graphical communication system, MIT press.\n\n![](https://i.imgur.com/0I0xCKL.png)\n\nSutherland, Ivan Edward (January 1963). \"Sketchpad: A man-machine graphical communication system, MIT press.\n\n![](https://i.imgur.com/PkQWnPU.png)\n\n1968 - “The Sword of Damocles\ufffd\ufffd? Sutherland, Ivan Edward (1968), “A head-mounted three dimensional display\ufffd\ufffd?\n\n![](https://i.imgur.com/XPPjzNS.png)\n\n\n1968 - “The Sword of Damocles\ufffd\ufffd? Sutherland, Ivan Edward (1968), “A head-mounted three dimensional display\ufffd\ufffd?\n\n![](https://i.imgur.com/cvhyx7u.png)\n\n1968 - “The Sword of Damocles\ufffd\ufffd? Sutherland, Ivan Edward (1968), “A head-mounted three dimensional display\ufffd\ufffd?\n\n![](https://i.imgur.com/yYAxe2d.png)\n\n“The Mother of All Demos\ufffd\ufffd?, presented by Douglas Engelbart (1968) at (ACM/IEEE) Computer Society's Fall Joint Computer Conference See full demo: https://www.youtube.com/watch?v=yJDv-zdhzMY\n\n![](https://i.imgur.com/u9McBxK.png)\n\n“Dynabook\ufffd\ufffd? Alan C. Kay. (1972), “Personal Computer for Children of All Ages\ufffd\ufffd?\n\n![](https://i.imgur.com/8IlrB6e.png)\n\nApple Newton (1993) and Apple iPad (2010)\n\n![](https://i.imgur.com/cpLSLUm.png)\n\nGraphical User Interface supporting “What You See Is What You Get\ufffd\ufffd? (WYSIWYG), the Desktop metaphor (files, folders, etc.), Xerox Parc/Xeroc Star\n\n![](https://i.imgur.com/ccSlueJ.png)\n\nGraphical User Interface supporting “What You See Is What You Get\ufffd\ufffd? (WYSIWYG), the Desktop metaphor (files, folders, etc.), Xerox Parc/Xeroc Star\n\n![](https://i.imgur.com/GY8teow.png)\n\n1992/93 - IBM Simon First smartphone Phone, pager, calculator, address book, fax machine, and e-mail device\n\n![](https://i.imgur.com/PmVH5Xt.png)\n\nRamesh Raskar, Greg Welch, Matt Cutts, Adam Lake, Lev Stesin and Henry Fuchs (1998) \"The Office of the Future : A Unified Approach to Image-Based Modeling and Spatially Immersive Displays,\"\n\n![](https://i.imgur.com/7HLtUzS.png)\n\n1981 - Steve Manns’s “Wearable Computing\ufffd\ufffd? Start of a series of prototypes for wearable computing, cyborgs, and mediated reality (-\u003e Google Glass) www.wearcam.org, www.eyetap.org\n\n![](https://i.imgur.com/pJtEw93.png)\n\nNokia N95 (2007) and Apple iPhone (2007)\n\n![](https://i.imgur.com/RZ2K6pv.png)\n\nMajor innovations in HCI (Myers 1998)\n\n![](https://i.imgur.com/uwGf8NN.png)\n","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/bishop-berkely":{"title":"bishop-berkely","content":"monist, imperisist, immaterial idealist\n# Superstition\n[040-superstition](notes/040-superstition.md)\n\nBishop Berkely wanted to abolish superstitions concerning the senses. \n\nThere was a common idea that there is a \"true reality\" that is hidden behind a \"veil of perception\". \n\nBerkely questioned this idea. He said since the only thing we interact with is our \"idea\" of reality, and we never experience the \"real\" world, how do we know it exists?\n\nHis goal was to preserve the idea of god. He thought that philosophy was heading in a direction that could lead to the demise of the idea of \"God\". ","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/bitcoin":{"title":"bitcoin","content":"\nwhitepaper: bitcoin.org/bitcoin.pdf\n\n# Governance\n\"Bitcoin governance is the process by which a set of transaction and block verification rules are decided upon, implemented, and enforced, such that individuals adopt these rules for verifying that payments they received in transactions and blocks fit their subjective definition of “Bitcoin”. If two or more individuals adopt the same set validation of rules, they form an inter-subjective social consensus of what “Bitcoin” is.\"\n\npurpose\n- wide range of views\n- some argue that trustlessness is most important (the ability to use it trusting only the open source softwar\ne)\n- some argue that maximizing the value of bitcoin is most important\n\nthe bitcoin governance process maintains a set of rules about\n- syntax\n- data structures\n- resource usage limits\n- sanity checks\n- time locking\n- reconciliation with the memory pool and main branch\n- coinbase reward and fee calculation\n- block header verification\n\nproposal\n- researcher disovers a solution\n\t- share proposed changes will devs through email, white paper and/or a BIP\n\nimplementation\n\n\n# Network\n1) New transactions are broadcast to all nodes. \n2) Each node collects new transactions into a block. \n3) Each node works on finding a difficult proof-of-work for its block. \n4) When a node finds a proof-of-work, it broadcasts the block to all nodes. \n5) Nodes accept the block only if all transactions in it are valid and not already spent. \n6) Nodes express their acceptance of the block by working on creating the next block in the chain, using the hash of the accepted block as the previous hash.","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/blockchain-terms":{"title":"blockchain-terms","content":"\n**Hyperledger: An organisation made up of industry leaders who are helping to develop various permissioned blockchain framworks**\n\n**Smart Contracts:** Within ethereum a smart contract is a type of account which had storage and code, and executes the code when it recieves a message.\n\n**Sybil Attack:** A type of attack on a distributed ledger where an attack amasses a 51% majority over something so they can take control\n\n**Common Pool Resource (CPR):** [common-pool-resources](notes/common-pool-resources.md)\n\n**UTXO unspent transaction output:** The original method of record keeping in a blockchain where there are no \"accounts\" at the protocol layer, and coins are stored as unspent transaction outputs (UTXOs). The alternative which is used by ethereum, tron, etc are Account-based blockchains\n\n**Provenance:** The chronology of the ownership, custody or location of a historical object.\n\n**Notary:** A public officer authorized by law to perform similar functions, and to authenticate the execution of deeds and contracts, and the accuracy of copies of documents, and to take affidavits and administer oaths.\n\n**Contingency theory:** A contingency theory is an orgzational theory that claims that there is no best way to organize a corporation, to lead a company, or to make decisions. Instead, the optimal course of action is contingent upon the internal and external situation.\n\n**Decision problem:** In computability theory and computational complexity theory, a decision problem is a computational problem that can be posed as a yes–no question of the input values.\n\n**Stateless Validation**: Verifying that a transaction is not malformed\n\n**:**\n\n**:**\n\n**:**\n\n**:**\n\n**:**\n\n**:**\n\n**:**\n\n**:**\n\n**:**\n\n**:**\n\n**:**\n\n**:**\n\n**:**\n\n**:**\n\n**:**\n\n**:**","lastmodified":"2022-12-19T01:23:07.367075079Z","tags":null},"/notes/blockchain-types":{"title":"public-private-permissioned-chains","content":"\npublic vs private blockchains https://www.forbes.com/sites/forbestechcouncil/2019/06/11/public-vs-private-permissioned-ledgers-and-blockchain-standards/?sh=39aaa258550b \"It's important to note that permissioned does not mean private -- some of the public networks like Stellar and Sovrin are public permissioned networks\". Does public permissioned mean participant have to \"apply\" to join the chain? So its a public blockchain, but participants require permission to join\n\nhttps://www.investopedia.com/news/public-private-permissioned-blockchains-compared/ \"Public blockchains allow anyone to access them; private blockchains are closed to only selected users; permissioned blockchains are a hybrid of public and private blockchains where anyone can access them as long as they have permission from the administrators to do so.\"","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/boolean-equations":{"title":"boolean-equations","content":"\nOften used to describe/define [combinatorial-logic](notes/combinatorial-logic.md)\n\n# Precedence\nPrecedence\n- NOT is unary, so it has the highest precedence\n- AND is mulitply, so it comes next\n- OR is like plus, to it comes last\n\n![Precedence table|200](https://i.imgur.com/jPlrVwW.png)\n\n# Creating boolean equations\n\n![example equation](https://i.imgur.com/fiNKbJT.png)\n![equivalent truth table](https://i.imgur.com/wlm0Cu1.png)\n\nCreating boolean equations:\n- for each row where output is 1\n- write the equation as a function of the inputs  (using AND)\n- Write the final equation, putting OR between each clause\n\n# De Morgan's Theorum\n- !(A + B) = A! \u0026 !B\n- !(A + B + C + ... + X) = !A \u0026 !B \u0026 !C \u0026 ... \u0026 !X\n- [truth table](https://i.imgur.com/QegVxkx.png)\n- any boolean function can be represented as the sum of logical products\n- All combinatorial circuits can be described using just one gate type (either nand or nor) [^2]\n\n[^2] : The Apollo Guidance Computer used about 5600 NOR gates and no other gate types!","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/brainstorming":{"title":"","content":"#info203\n\n# Concept 1 - Snowboard trick generator. \n\nThis will be a mobile app that snowboarders can use to automatically generate random tricks. This app will be useful because snowboarders (riders) often get tunnel vision on a certain style of tricks or even a single trick. Using a algorithm to generate tricks provides a way for them to escape this focus. It can also be used when playing a game of SNOW, which is similar to a game of SKATE.\n\n# Initial Ideas\n- customisable trick generator\n\t- trick lists --\u003e users can create lists for the generator to choose a trick from\n\t\t- some built in lists\n\t\t- share lists with friends\n\t- options\n\t\t- trick types\n\t\t\t- jump\n\t\t\t- rail\n\t\t\t- pipe\n\t\t\t- butters\n\t\t- flips\n\t\t- spins\n\t\t- grabs\n\t\t- spin direction\n\t\t- bring back or not\n\t\t- stance\n\t\t\t- regular\n\t\t\t- goofy\n- daily trick\n\t- same for all users?\n\t- auto notification\n\t- schedule\n\t\t- weekly\n\t\t- custom\n\t\t- auto when at an altitude\n- App widget with daily trick? \n- search for tricks\n\t- options similar to generator\n\t- save tricks to a list for generator\n- link with other users\n\t- methods\n\t\t- qr code\n\t\t- url/link\n\t\t- contact\n\t\t- social media\n\t- people\n\t\t- friends\n\t\t- coach\n\t\t- parents\n\t- features\n\t\t- daily/sheduled trick group\n\t\t\t- how would this work with altitude detector\n\t\t- share trick lists\n\t\t- community section for trick lists\n\t\t\t- like spotify playlists\n\t\t- users can share tutorials\n- Ease of use - (hard to use with gloves)\n\t- voice controls\n\t- gesture controls\n- goals tracking\n\t- goal lists\n\t- daily/weekly/yearly goals\n\t- trick generator can choose a trick from goals\n\t- share (or keep private) with coach and friends\n\t- trick tutorials\n\n# Final Choices\n### Core features\n- customisable generator\n\t- all options no trick lists\n- daily trick\n\t- Notification\n\t- able to set a schedule or have it go when at an altitude\n- links with friends\n\t- Do same tricks\n\t- link with QR code or url\n\nThe first core feature of the app is the customisable trick generator. It should be very easy and quick to use. This presents an interesting problem as while snowboarding, users are wearing large mittens, and the air can be very cold for hands. It would be ideal if it could be used while wearing mittens. \n\nThe second core feature of the app is the Daily Trick. This means that users get a notification with a random trick from the trick generator. This feature could allows users to get the benefit of the trick generator without having to open the app on the mountain. However, the issue here is that most people don't snowboard everyday. To get around this, I could allow the users to schedule days on which to recieve a daily trick, or I could alert them whenever they are on a mountain by monitoring their altitude. Of course the second option has some privacy issues that will need to be considered.\n\nThe third core feature of the app is the link with friends. This is a core feature because snowboarders will typically rider with a group of friends. Being able to join a 'trick group' means these groups can do the same trick and 'compete' against each other.\n\n# Existing Apps\n- For skateboarding: \n\t- [getatrick.com](https://getatrick.com)\n\t- skate gen mobile app\n\t- Skate Tricks\n\t- Skateboard tricks\n\t- Skate Dice\n- Freestyle Generator for inline skating, tramp and skiing\n- Scooter trick generator\n\n## Summary\n### Overview\nI was able to find only 7 apps with similar functionality to what I am planning. Of these none 5 were for skateboarding 2 for other sports and zero for snowboarding. \n\n### Functionality of the apps\nThese 7 apps all had varying degreee of complexity. Some were just simple customizable trick generators, while others were fully fledged coaching and goal tracking apps with community features and other extras. Although I am not planning to make large complicated app, I can still draw from them for guidance as most of them did have a trick generator. \n\nAesthetic/style of the apps\n\n\nConclusion\n\n\n## Skate Dice\nSkate dice was one of the most intresting the apps I found. It had a very unique approach using a \"shake the phone\" gesture to \"roll\" the dice. However it has a paywall for premium features such as more tricks, settings, and a \"tricktionary\".  From what I was able to use I think is was the most simple and intuitive apps. It also had an aesthetic that fit the culture of the sport. All these features combined made it very enjoyable to use. \n\n### How does this app inform mine\n- Keep design simple\n- Maybe incorporate some gestures\n- Consider using an aesthetic wich matches the culture/sport\n\n![100](Attachments/screenshots/skatedice/Screenshot_20220409-192630_Skate%20Dice.jpg)\n\n\n## Skate tricks\nThis app is a much more fully featured solution. It is oriented towards learning skateboarding, and keeping track of you progress while doing it. It also has a built in trick generator, and game of skate. One of the most unique features it had that the other apps didn't was a trick of the day. This is one of the core features I want to include in my app. Another interesting feature it had was a page informing the user about injury prevention.\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/branch":{"title":"branch","content":"\nSplit current dev path into two to work on e.g., a bug or a feature\n\n## 1 Overview\n- allows users to work independently\n- development continues independently along each branch\n\t- can easily switch between branches\n\t- can push a branch without affecting others\n\t- branches can be merged back into the original\n\t- always at least one main branch (usually master, main, trunk)\n\t\n## 2 Default branch\n- used to be called master\n- now called main\n\n## 3 Methodologies\n### 3.1 Working on the main branch\n- focuses on not creating branches\n\t- over time long branches become difficult to merge\n\t- smaller, self-contained changes are encouraged\n\t- focus on main code objective, avoiding side-experiments\n\n- sometimes this is not possible\n\t- complex bugs or features need branches\n\n- pair programming\n\t- e.g., vs code allows multiple developers to work on the same code at the same time.\n\n### 3.2 Working off the main branch\n- branches can be shared with teams\n\t- still isolated commits from the main branch\n- more commits can be added to a branch _after_ it has been merged\n\n### 3.3 Feature branching\n- all new features are developed in a separate branch\n- merging to the branch \"adds\" that feature\n- after a feature is added, it call still be added to using the same branch\n\n### 3.4 Gitflow\n- viewed as ovecomplicated\n- a set of shell scripts helps it be used\n- highly structured\n\n- e.g.,\n\t- main branch -\u003e branch has commit for release versions\n\t- develop branch -\u003e branch is where development occurs\n\t- feature branch -\u003e branches branch off development branch\n\t- release branch -\u003e branch polishes for release\n\t- hotfix -\u003e branches of main branch thence into develop\n\n## 4 continuous integration\n\n\t[[notes/continuous-integration]]\n\n- [CI vs feature branch](https://www.youtube.com/watch?v=v4lijkq6Myfc)\n- [Cl vs feature branch](https://www.youtube.com/watch?v=IXQEi1O5!OI)\n\t\t\n## 5 Topic/feature branch\n- created for a specific purpose .e.g, bug/feature\n\t- can pull from remote without marge conflicts (should be only one person working on branch) \n\t- the more short-lived branches are the less likely there are to be merge conflicts with main\n\t\t\n## 6 Persistent branch\n- long term branch that exists for the lifetime of the project\n- e.g.,\n\t- release branches\n\t\t- release v1, start on v2\n\t\t- security flaw in v1, needs to be fixed\n\t\t- v2 not finished yet\n\t\t- create branch at last v1 commit and fix there\n\t\t- also fix in v2 (if applicable)\n\t\t- v1 branch will last until v2 is released\n\t- specialsed versions of code base\n\t\t- e.g., to support specific platforms or hardware\n\t\t- e.g., to support feaures for a specific customer\n\t\t- features for this specilised version on go on that branch\n\t\t- keeps specialised code out of main codebase\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/brutalist-architecture":{"title":"brutalist-architecture","content":"\n\nno just about aesthetic - also intent and morals\n\n\nbecame popular in the 60s. mass concrete started in the 20s. cheap, interesting shapes. \n\nafter ww2 cities were very broken. they wanted to find a way to rebuild while also creting a perception of hope and social change. put money into this new vision - entrusted architects with complete freedom to test their ideas. has a very strong idea about what a socialist society should look like.\n\nbelieved they were creating spaces for the people. \n\nin the building the buildings they wanted to show complete honesty, and transparency - how they were built, what they were made from, and what their function were\n\nagainst ornamentation - manual labor for these was hard. so they highlighted only the functional elements of the building. believed they were creating a new \"democratic\" building type. to achieve this, they would even detail the concrete to make it more rough.\n\nthey focesd on the public spaces with massive atriums and balconies, open stairwells, corridoes, water features, planters - didn't realise that people actually dont like hanging out in massive concrete spaces - the spaces became neglected, and abandoned and attacted unwanted activities\n\nconrete deteriorates and weathers really bad so they started to look dirty and gross\n\n\nthis is what architects like about them - the heroic socialst ideals. its more interesting these days because a lot of architects build for corporate developers, and \"capitalist society\" - they dont tend to get that creative freedom. the second reason is the quality of the concrete - its almost a natural materist. made from local aggregates so the color and texture depends on the geology and climate of the surrounding area. every region has a different concrete. Its also hard to work with and reasy to screw up - so they think the brutalist building are impressive. \n\nmight be becoming popular (on reddit) because the building are very photogenic. the texture, sharp geometric shapes, intense light conditions. this makes them interesting subjects.\n\nwe have started to \"consume architecture\" through a screen - so when we see a single shot of a building we never have to see live in or see, we can be drawn to their radical quality\n\nso ugly they are lovable","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/bst-operations":{"title":"bst-operations","content":"\n# Search operation\n\nWe want to search in a BST for a key `k` returning `true` if it is found and `false` if it is not\n\n```\ndef search(k)\n\tn \u003c- root\n\twhile n ≠ nil do\n\t\tif n.key = k then\n\t\t\treturn true\n\t\telse if n.key \u003c k then\n\t\t\tn \u003c- n.r\n\t\telse\n\t\t\tn \u003c- n.l\n\t\tend if\n\tend while\n\treturn false\n```\n\nIts naturally recursive\n\nMethod `search(k)` calls `search(k, root)` wher the two-parameter version `search(k, n)` is defined by:\n\n```\ndef search(k, root)\n\tif n = nil then\n\t\treturn false\n\telse if n.key = k then\n\t\treturn true\n\telse if n.key \u003c k then\n\t\treturn search(k, n.right)\n\telse\n\t\treturn search(k, n.left)\n\tendif\n```\n\nCost of search is at  most the length of the longest branch. So we want to keep the trees short and \"bushy\"\n\n# Add Operation\n\nWe want ot add a key `k` to a BST returning `true` if added or `false` if already present.\n\nThis is similar to search:\n```\ndef add(k)\n\tp \u003c- nil, c \u003c- root\n\twhile n ≠ nil do\n\t\tp \u003c- c\n\t\tif p.key = k then\n\t\t\treturn false\n\t\telse if n.key \u003c k then\n\t\t\tc \u003c- p.r\n\t\telse\n\t\t\tc \u003c- p.l\n\t\tend if\n\tend while\n\tmake child node of p with value k\n\treturn true\n```\n\nTo make a child: \n\nMake sure this is really what we want to do:\n- k is not the key of p\n- the pos where this node will be added is currently nil\n\n```\ndef makeChild(p, k)\n\tc \u003c- new(k), c.p \u003c- p\n\tif p.key \u003c k then\n\t\tp.r \u003c- c\n\telse\n\t\tp.l \u003c- c\n\tend if\n```\n\n\n# Remove operation\n\nIf the node to delete is a leaf, we can simply make it nil.\n\nIf the node has only one child, we simply make the nodes child the child of the nodes parent\n\nIf the node has two children, we replace it with its *successor* (the leftmost descendant of its right child)\n\n``` java\nprivate void delete(Node n) {\n    if (n == root) {\n        deleteRoot(); return;\n    }\n    if (n.left == null) {\n\t\taddLink(n.parent, n.right, linkType(n.parent, n));\n\t\treturn;\n    }\n    if (n.right == null) {\n        addLink(n.parent, n.left, linkType(n.parent, n));\n        return;\n    }\n    Node sn = successor(n);\n    String s = sn.key;\n    delete(sn);\n    n.key = s;\n}\n```\n\n# Traversal\n\n[tree-traversal](notes/tree-traversal.md) \n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/bug-tracker":{"title":"bug-tracker","content":"\nlink: https://youtu.be/oC483DTjRXU\n\npotential employer needs to now i\n\nneed to target toward the dev/hiring manager. built wha the need/want to see. They should be able to instantly recognise if its what they want.\n\ndoesn't matter what tools you use. Try to build a project that uses the same stack as the company you are applying for.\n\nShould built an app not 1 hour a day. Should do in large blocks. e.g., spend one saturday.\n\n# The Project\n\nShould:\n- follow a design pattern\n\t- e.g., for web apps: mvc: model view controller [MVC](notes/model-view-controller-pattern.md)\n- clean professional UI\n\t- mobile and desktop\n\t- people are \"visual buyers\"\n\t- use a bootstrap template\n- database\n\t- must perform all of CRUD operations\n- security\n\t- authorisation --\u003e giving people permissions once they are logged in\n\t- authentication --\u003e logging in\n\t- use a third party service like auth zero\n- solve a business problem\n\t- i.e., not a toy app (tic tac toe, etc)\n\n\n## Bug/Issue Tracker\n- e.g., JIRA, etc\n- This can be easily adjusted to fit different industries.\n\n# Building the Project\n\n## 1 SRS\n- compile the requirements\n- divide these into sprints.\n\t- these are the blocks discussed earlier\n- blocks rabbit holes\n\n## 2 Track your progress\n- keeps details\n- use the bug tracker you are building\n- show this to the interviewer\n\n# Common Mistakes\n\n- Build using .NET, ASP.net mvc, C#. This is the most common.\n- Dont start with a small program\n- Show the project to people\n\t- Show to recruiters\n\t- Demo in interviews\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/build-tools":{"title":"build-tools","content":"\n# Build tools\nTools that automate the construction of software,.\n\n## C\nif you recompile C you get an object file which can be linked. Automation tools will do the linking for you. \n\nwhat they do:\n- run [compiler](notes/compiler.md)\n- run [linker](notes/linker.md)\n- automatically download depencies ([libraries](notes/13-code-librarires.md))\n\t- this can also be done using [containers](notes/containers.md) e.g., a docker container\n- possibly some form of [testing](notes/testing.md)\n\n# History of build tools\n\n## Make\n\u003e check whether targets are older than sources\n\nHas:\n- set of targets\n- set of source files\n- A list of commands that build the target from the source\n- internal variables\n\t- \\$@ - the rules source(s)\n\t- \\$\u003c - the rules tartet\n- \n\nBuild things in the correct order (*topologically*. e.g., will run compiler before linker if needed. \n\nLimitations\n- doesn't handle subprojects\n- doesn't handle directories\n\t- when make look for changes, it usually only looks in the current dir\n\t- big projects will have call make is sub projects, this can get complicated quick\n- Internal variables do not match with typical shell variables\n\t- use \\$\\$ to use make shell variables\n- no real constraints or conventions: can \\betaused for a lot of things \n\n## Java programs\ndont really need the linking step: java can load class files on the fly. The java compiler is more flexible. \n\nStill needs some automation:\n- cleaing uneeded .class files\n- bulding Java archive files (JAR)\n\n## Ant\nWritten to handle build tasks, e.g., build a JAR, clean up files. Uses an XML file: build.xml. (XML sucks)\n\nimproves upon make by\n- better at scanning sub dirs\n- calls javac on many files at once not one at a time\n\n## Maven\nmaven has conventions:\n- e.g., file structure:\n\t- main app as src/main/java\n\t- support resources at src/main/resources\n\t- test sources at src/test/java\n- Support non java languages\n\nStill XML files: pom.xml\n\nColour in output. \n\n## Gradle\nspeed and flexibility\n- does not use xml\n- has its own domain specific language\n- more complex than maven\n- faster than maven\n\t- particularly in incremental build\n\t\t- i.e. not re-building when it doesn't need to\n- Support non java languages\n\n## Others\n- rake - ruby's version of Make\n- SCons - builds database about build state\n- CMake - cross platorm building; uses existing tools/IDEs\n- SBT scala\n- languge built in tools\n\t- go - Go build\n\t- rust - Cargo\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/bus":{"title":"bus","content":"\n\n- data bus\n- address bus\n- control bus\n\n- conmmunicate between parts of the computer\n- only one transmitter at a time\n- only addressed device can respond\n- 2 levels\n\t- internal\n\t- external\n\n- memory size is dependent on bus size\n\t- 2n bytes for n-lines on the address bus\n\t\t- 2^8=256B, 2^16=64KB, 2^32=4GB, 2^64=16EB","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/business-analyst":{"title":"business-analyst","content":"\n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/business-functions":{"title":"business-functions","content":"\n- what the business ought to be doing\n- _not_\n\t- who, how, stucture, tech\n\neach business function becomes a set of features within an info system\n\n## 1 Id business functions\n- verb phrases\n\t- id what the business ought to be doing ⇒ e.g., \"accept payment from customer\"\n\t- id how =\u003e \"we accept payments online banking and credit card\"\n\t- always ask \"what is the objective\"\n- remove redundancies\n- model the id'd functions as _use cases_\n\n## 2 Use case\n\"A list of actions defining the interactions betweeen a role and a system to achiece a goal\"\n\nhigh level description of how people interact with a system\n\nstory of how the business works\n\nshould be:\n- simple\n- aimed at stakeholders\n- understandable by non-tech people\n- should use ubiquitous language\n- also useful for system devs\n\ncan use text (Cockburn, fowler) or diagrams (function catalog, UML case diagrams)\n\n## 3 UML\nunified modeling language\n- use case  - class - state - activity - sequence - deployment etc\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/business-process":{"title":"business-process","content":"\n- A sequence of tasks or steps required to carry out a particular business function e.g.,:\n\t- pocure new assets\n\t- apply for leave\n\t- process and orer\n\t- enrol a student\n- paper and or computer based processes\n- processes can have sub-processes ⇒ nested hierarchy\n- terminology\n\t- business processes are also know as workflows\n\t- activity usually means the same thing as tasl\n\n**example: processing an order**\n1. sales dept recieves and enters order into system\n\t1. system triugger automated credit check bu finance dept\n\t2. if credit not OK, STOP order\n2. warhouse staff fulfill order\n\t1. check availability in warehouse\n\t2. if any item out of stick transfer to back order process\n\t3. pack items for shipping\n3. finance dept generated invoice\n4. send shipment and invoice to customer\n\n\ne.g., www.otago.ac.nz/study/enrolment/index.html\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/business-process-model":{"title":"business-process-model","content":"\n- graphical depiction fo one ormore business proccesses\n- some variant of a flowchart\n- many different approaches\n\t- [BPMN](notes/business-process-model-and-notation.md)\n\t- [UML](notes/unified-modelling-language.md) [activity-diagrams](notes/activity-diagrams.md)  \n\t- data flow diagrams DFDs\n\t\t- good for [security](notes/security.md)\n\t- business process execution language BPEL\n\t\t- programm how a process with go\n\t\t- can be executed\n\t- subject oriented business process mangement (s-BPM)\n\t- and many more\n- may be execultable\n- developed alongside data [models](notes/models.md) ([ERDs](notes/entity-relationship-diagrams.md), [class-diagrams](notes/class-diagrams.md) etc)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/business-process-model-and-notation":{"title":"business-process-model-and-notation","content":"\nBPMN\n\n- graphical diagramming language\n- free international vendor standard developed by the object management group\n- shows only the order of activites\n\t- when, not under what conditions\n- do not:\n\t- detail the activites\n\t- describe how it is informed\n\n## 1 Components\n### 1.1 swimlanes\nidentify the business role for each activity\n\n### 1.2 Other features\n- looping back\n- types of branch gateway\n- parallel execution\n- collaboration with external entities (pools)\n- executable if using the right infrastructure\n\n## 2 Examples\n![](https://i.imgur.com/Bu4kNWk.png)\n![](https://i.imgur.com/kENP9iR.png)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/characters":{"title":"characters","content":"\n# Characters\n- A written symbol.\n- In english are represented as a single byte, (other languages use 2 bytes or more)\n- e.g., [different types of characters](https://i.imgur.com/DBLVhw8.png)\n\n- characters are joined together to make human readable numbers and words\n\n- `char ch` \n- ch is a variable name (identifier) \n- used to label a location in the computer's memory where a byte is stored\n- when the code is compile, the name is assigned an address, in memory. The meaning of that data depends on how a human interprets it. it might be small integer, or a character, or a color etc.d\n\n- each byte (or group of bytes) represents a number which maps to a character using a mapping like [Unicode](notes/characters.md#Unicode) or [ASCII](notes/characters.md#ASCII)\n\n# ASCII\n![ascii code|300](https://i.imgur.com/NbBtm1v.png)\n\nA char is a 7-bit number (usually stored as a byte with the 8th bit set to zero) used as an index into a table of characters. The font describes how to draw these characters\n\n- ASCII (american standard code for information) describes what should be drawn for Roman (english like) alphabets\n- ASCII characters are stored using 7-bits\n\t- so there are 128 (2^7) possible characters\n\t- stored as a byte with the 8th bit set to zero\n\t- For sorting purposes characters are compared on their numeric value (called the *collating sequence*)\n\t- 'A' is before 'Z' but 'a' is after 'Z'!\n\n# Unicode\n![unicode|300](https://i.imgur.com/GEtVItW.png)\n\nA 21-bit code with 144,697 characters from 159 scripts\n\n- Other non roman languages\n\t- greek, arabic, chinese, hebrew, japanese, thai etc.\n\t- atrology symbols\n\t- emoji etc\n- Unicode\n\t- developed by the Unicode Consortium\n\t- coordinated with ISO/IEC 10646\n\t- unicode maps from character numbers (code points) into glyphs (graphical representations)\n\t- Some(many) are reserved","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cheat-sheets":{"title":"cheat-sheets","content":"\n- [bash-tricks](cheatsheets/bash-tricks.md)\n- [git-cheat-sheet](cheatsheets/git-cheat-sheet.md)\n- [latex-cheat-sheet](cheatsheets/latex-cheat-sheet.md)\n- [puml-cheat-sheet](cheatsheets/puml-cheat-sheet.md)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cia-triad":{"title":"cia-triad","content":"\nSecurity had been split into three main areas\n\n- Confidentiality -\u003e Information should be protected from exposure\n- Integrity -\u003e Information should not be corrupted\n- Availability -\u003e Information should be available users without obstacles\n\n\n![slide](https://i.imgur.com/GJfb8Ph.png)","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/class-diagrams":{"title":"class-diagrams","content":"\n\n[General example](https://i.imgur.com/rFmUs5r.png)\n[ERD vs class diagram](https://i.imgur.com/1kO9BDk.png)\n\n## 1 Stereotypes\nadd further meaning to fields and methods\n- e.g., \u003c\u003c unique \u003e\u003e, \u003c\u003c abstrat \u003e\u003e, \u003c\u003c interface \u003e\u003e, \n\n## 2 Packages\ngroup classes together\nbreak system to logical chunks\npackage diagram, a class diagram with nothing but packages\n\n[Packages](https://i.imgur.com/UiXZeha.png)\n\n## 3 Associations\nUML anaglogue of ERD relationsips\n- multiplicity\n- realtionshpa nd role names\n\nPlUS\n- naviagability --\u003e instances of one class can pass messages to instances of another\n- several differnt types, e.g., composition, aggregation, associateive classes\n\n### 3.1 multuplicity\n![multiplicity-1](https://i.imgur.com/1dSergW.png)\n![multiplicity-2](https://i.imgur.com/4TKsBKd.png)\n\nERDsd effectively only do zero one many\nUML can to any non negative integer\ndefault is 1\n\n### 3.2 association names\n[named associations](https://i.imgur.com/btif86K.png)\n\n- usuallya verb phrase like \"assings\", \"manages\", \"enrols in\" ...\n- more useful is conpetual level diagrams\n- optional arrow head ()\n\n### 3.3 Role names\n[role names](https://i.imgur.com/3HEG9yN.png)\n\nAt conceptual level, indicates role of class in association.\n\nAt implementation level:\n- implies a field in class at opposite end\n- should include visibility\n- closely related to navigability\n\n### 3.4 Navigability\n[navigability](https://i.imgur.com/beoNmcQ.png)\n\nspecifies whether we can \"navigate from one end of an association to another\"\naffects how we code access paths between objects\n\ne.g.,\n- loan instance can see loanitem instances it contains via private field items\n- a loanitem instance can't see loan instance that contains it\n- must alwasy include relevant role names\n- no arrows = two arrows = bidirectional\n\n#### 3.4.1 why not always bidirectional\n\n- more complex code --\u003e many references/collections to manage\n- navigation paths are not all equally important\n\t- e.g., \"what items are in this loan\" vs \"what loans does this item appear in\"\n\t- determined by requrements and typical usage\n- some classes are more \"central\"\n\t- usually at the \"one\" end of accociations\n\t- often represent transactional entities e.g., loan, sale, order\n\t- navigability readiates outwards from them\n\nthere are exceptions as always e.g., patron \u003c-\u003e item\n\n\n### 3.5 Aggregation\n[aggregation](https://i.imgur.com/FI21bfD.png)\n\none class is made up of one or more other classes\ncontainer and content instances _can_ exist separately\nusually implied by multiplicity and navigability\n\ne.g.,\n- computer is made u of several components\n- library catalogue is made up of many items\n\n\n### 3.6 Composition\n[composition](https://i.imgur.com/2ryJXSM.png)\n\nstonger form of aggregation\ncontainer and content _cannot_ exist separately\nusually implied by multiplicity and navigability\n\ne.g., \n- building contains many rooms\n- loan includes several items\n\n- coicident lifetime\n- multiplicity at least 1 at both ends\n- deleting an containter must also delete all associated contents\n- creating a container should also create some contents\n\n\n### 3.7 Associative classes\n[associative classes 1](https://i.imgur.com/Rq91xGx.png)\n[associative classes 1](https://i.imgur.com/zzOlLV1.png)\n\n- used for conceptual design\n- similar to associative entities\n\t- many to many relationship with additional independent fields\n\t- resolved into class at implementation level\n\n### 3.8 Specialisation generalisation\n[specialisation and generalisation](https://i.imgur.com/kfI2YSe.png)\n\nclass inheritance\n- e.g., book and disc are subclasses of (specialise) Item\n- inherit all public fields and methods of superclass\n- can add their own fields and methods\n- Compare with specialisation of actors and use cases\n\n## 4 Domain class model\n[domain class model](https://i.imgur.com/JFHQOFA.png)\n\nonly modles the associations among concepts from problem domain\n\ncan be at conceptual level or implementation level\n\n## 5 System class model\n[system class model](https://i.imgur.com/KsQuCd5.png)\nModels associations among domain objects and system components; implementation level only\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cmoc":{"title":"cmoc","content":"\nCMOC is a 6809 c compiler.\n\nit compiles c code into 6809 assembly\n\ncallling conventions\n- A routine must preserve Y, U, S and DP \n- A routine may change A, B, X and CC \n\n- Parameters are pushed on the stack in the reverse order \n- The caller pops them off the stack after the call \n\n- char parameters are promoted to int \n- unsigned char are promoted to unsigned int \n\n- Return 8-but values in B \n- Return 16-bit values in D \n\n# examples\nparameters\n``` c\nuint16_t two_params(uint8_t first, uint16_t second) { \n\treturn first + second; \n} \n\nuint16_t call_one(void) { \n\treturn two_params(204, 431); \n}\n```\n\n```\n```\n\nlocal variables\n\n``` c\nuint16_t one_param(uint16_t xyzzy) { \n\tuint16_t val = xyzzy; \n\treturn val; \n}\n```\n\n```\n_one_param \n\tPSHS U \n\tLEAU ,S \n\tLEAS -2,S \n\t* Formal parameter(s): \n\t* 4,U: 2 bytes: xyzzy \n\t* Local non-static variable(s): \n\t* -2,U: 2 bytes: val \n\tLDD 4,U \n\tSTD -2,U \n\tLEAS ,U \n\tPULS U,PC\n```\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/color":{"title":"color","content":"\n# Color\n- design grayscale first.\n- keep luminance values from grayscale when moving to color\n- use color harmonisers\n\t- ![](https://i.imgur.com/KdwaNzi.png)\n- about 5-8% of men are colorblind (red-green, blue–yellow, total color blindness)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/combinatorial-logic":{"title":"combinatorial-logic","content":"\n\u003e [!Definition]\n\u003e Combinatorial Logic Circuit is a circuit whose digital outputs are dependent only on its digital inputs\nThey can be described using logic expressions and therefore logic gates. We assume the outputs respond immediately\n\n- current flows from + to -\n- input to a unit (e.g., LED) is at the + end\n\nThey can be defined:\n- Using a truth table\n- Using [boolean-equations](notes/boolean-equations.md) ($Q\\ =\\ A+\\ B$) \n- Using graphical symbols\n\n# Adders\n![1 Bit half adder|300](https://i.imgur.com/mjCVU4I.png)\n![1 Bit full adder: (includes carry input)|300](https://i.imgur.com/yu6kS83.png)\n![Ripple carry adder|300](https://i.imgur.com/HtEIZ5t.png)\n\n# Parity Generator\nAdds an extra bit to the input data so that the number of ones in the output is always odd. Used for error checking\n\n![truth table|300](https://i.imgur.com/KDUiJbN.png)\n![boolean equation|300](https://i.imgur.com/mwBpnlO.png)\n![circuit|300](https://i.imgur.com/tsgDISC.png)\n\n# Demux\n\n# 7 Segment\n![7 segment displlay|300](https://i.imgur.com/qtPmtwR.png)","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/common-pool-resources":{"title":"commom-pool-resources","content":"\ndef: a natural or man made resource system that benefits a group of people, but which provides diminished benefits to everyone if each individual pursues their own-self interest. \n\nresource systems: forests, lakes, internet, windmills\nresource units: tonnes of fish harvested, KWh generators\n\nensure avg rate of withdrawl does not exceed average rate of renewal\n\nappropriator: people who withdraw or transfer resource units from a resource system\nproviders: those who arrange for the provision of a CPR throughh finance or design\nproducers: those who construct, repair, and sustain\n\none person can be all three\n\n[CPR-governance](notes/CPR-governance.md)","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/comp-210":{"title":"comp-210","content":"\n# Assignments\nNo final exam\n- [assignment 1](notes/ass01-security-audit)\n- [assingment 3](notes/ass03-security-flaws-essay)\n\t- [myepichacking](notes/myepichacking.md)\n\t- [anatomyofahack](notes/anatomyofahack.md)\n\n# Notes\n- [information-security](notes/information-security.md)\n- [mccumber-cube](notes/mccumber-cube.md)\n- [access-security-tradeoff](notes/access-security-tradeoff.md)\n- [cia-triad](notes/cia-triad.md)\n- [cryptography](notes/cryptography.md)\n- [randomness](notes/randomness.md)\n- [authorisation](notes/authorisation.md)\n- [authentication](notes/authentication.md)\n- [passwords](notes/passwords.md)\n\n# Lectures\n- [01-information-assurance](notes/01-information-assurance.md)\n- [02-concepts-and-roles](notes/02-concepts-and-roles.md)\n- [03-threats-social-engineering-and-failures](notes/03-threats-social-engineering-and-failures.md)\n- [04-authentication-authorisation-passwords](notes/04-authentication-authorisation-passwords.md)\n- [05-cryptography](notes/05-cryptography.md)\n- [06-hashing-binary-public-key-cryptography](notes/06-hashing-binary-public-key-cryptography.md)\n- [07-cryptography-applications](notes/07-cryptography-applications.md)\n- [8-application-security-1](notes/8-application-security-1.md)\n- [12-pen-testing](notes/12-pen-testing.md)\n- [13-pen-testing-2](notes/13-pen-testing-2.md)\n- [15-policies-standards-practices](notes/15-policies-standards-practices.md)\n- [16-cloud-security](notes/16-cloud-security.md)\n- [17-ML-in-IA-1](notes/17-ML-in-IA-1.md)\n- [18-ML-in-IA-2](notes/18-ML-in-IA-2.md)\n- [19-deepfakes](notes/19-deepfakes.md)\n- [20-SE-in-IA](notes/20-SE-in-IA.md)\n- [21-SE-in-IA-2](notes/21-SE-in-IA-2.md)\n- [22-digital-preservation](notes/22-digital-preservation.md)","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/compiler":{"title":"compiler","content":"\n# What are they/what do they do\n- used to build stored *programs*\n\t- usually program are written in a *high level*  *compiled*  language\n\t\t- C, C++, Java, C#, etc\n- Output machine code in binary\n\t- This can be loaded and run by hardware\n\n# Traditional Stages of Compilation\n**lexing**: This is the step where the source code is converted into *tokens*. A token is a \"meaningful substring of source code\".\n\ne.g.: `x = 10 + y` ⇒ `[var(x), ASSIGN, int(10), PLUS, var(y)]`\n\n**parsing**:*Token Steam* is converted to *abstract syntax tree* *(AST)* . This defines the structure of the program\n\ne.g.: above output ⇒ `assign(v(x), expression(add(10, v(y))))`\n\n**optimising**: Unreachable (dead) code is removed, and other optimisations are made\n\ne.g.:  `if(false){do stuff}` would be removed\n\n**emitting**: machine code is ouput to e.g., a binary file\n\n# Modern Stages of Compilation\nSince there are many new languages being released, it is no longer practical to design a compiler for each language. So we now split compilation info a *front end* and a *back end*\n\n**Front end**: Language specific, lexing and parsing. Outputs *compiler-internal intermediate* code\n\n**Back end**: Language agnostic, optimisation. Outputs machine code to target CPU hardware\n\n# Compiler families\n- GCC - Gnu compiler collection - old and messy code\n- LLVM - low level virtual machine - cleaner code - open-source\n- Microsoft and Intel compilers\n\t- ms compilers aim to support development for windows\n\t- mentioned before: Intel compilers optimise for Intel Hardware\n\n# Output\nCompilers usually ouput *object code*. This contains machine code, but is not yet exectuable. There is another stage [linking](notes/linker.md), where the object code is *linked* with together with libraries and other languages, and made exececutable. \n\n# Java Compilers\njavac produces JVm bytecode. this bytecode was orginally run on `java` [Interpreter](notes/interpreter.md). This extra layer was initally created to help with porting java on new hardware. Now `java` recompiles to java hardware CPU. This is done 'just-in-time' in RAM and doesn't ouput machine code. The JIT compiler is triggered when code is first (or repeatedly used). \n\n# Compiler errors\nProducing good error messages is important and difficult as the compiler doesn't usually know exactly where/what the error was. Errors can occur within expanded macros\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/computer-architecture":{"title":"computer-architecture","content":"\n# Stored program computer\n![](https://i.imgur.com/wxSfxiO.png)\n\nmade up of:\n- [CPU](notes/CPU.md)\n- [memory](notes/memory.md)\n- etc\n\n# Von Neumann Architecture\n- three key concepts\n\t- data and instructions are stored in a single read-write memory\n\t- contents of memory are addressable by location, without regard to the type of data contained\n\t- execution occurs in a sequential fashion, unless explicitly altered, from one instuction to the next\n- programs and data are the same thing\n\t- and so its possible to write soure code (data) and comile them into executables (programs) that can be loaded as data and then executed as programs\n\n# Early computers\n![motorola MC6809 CPU](https://i.imgur.com/yq74Ops.png)\n![circuit diagram for 6809](https://i.imgur.com/41F0tnH.png)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/conceptual-vs-ipmlementation-models":{"title":"conceptual-vs-ipmlementation-models","content":"\nModels like ERDs are used to represent a high level conceptual overview of a system, or to as a lower level specification that can drive the implementation of the database.\n\n**Conceptual\n\n- Abstract/big-picture\n- Useful in inital design stages and for communication\n\n**Implementation\n\n- Concrete/detailed\n- Useful in documenting and specifying structure (for devs etc)\n- Should be detailed and specific enough to allow a dev to implement it without having to guess at details\n- Should be tailored to the specific implementation technologies or systems\n- \n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/consensus":{"title":"consensus","content":"\n\u003e The consensus algorithm takes care of the transaction verification within the network. Different blockchain systems implement different consensus algorithms which can benefit the miners directly or indirectly. Some of the popular consensus algorithms include Proof-of-Work(PoW), Proof-of-Stake(PoS), and so on.\n\u003e You can think of it as hierarchical centralization when compared to traditional governance. \n\u003e — https://101blockchains.com/blockchain-governance/\n\nConsensus [^7] should guarantee\n- **liveness**: system should never stop and should be able to recover from errors\n- **security:** nonfaulty peers should not accept false data\n- **convergence** (consistency): all non-faulty peers should maintain or converge to the same global ordering and state\n\n\nBFT/CFT\n\nAlgorithms\n- PoW: Bitcoin\n- PoS: [[ethereum]]\n- [[YAC]]: [[hyperledger#Iroha]]\n\n\n[^7]: L. Lamport, “Generalized consensus and paxos,” Technical Report MSR-TR-2005-33, Microsoft Research, Tech. Rep., 2005. [Online]. Available: https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/tr-2005-33.pdf\n\n\n# Components\n- Peer\n- Ordering service\n- Client","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/consistency-and-standards":{"title":"consistency-and-standards","content":"\n![](https://i.imgur.com/H8rlxo7.png)\n\ngood and bad\n- standards (user interface guidelines) are always chaning\n\ndiffer between platforms\nevolve over time\n\ne.g., menus\n\n![](https://i.imgur.com/IfaMADw.png)\n![](https://i.imgur.com/HqYzadh.png)\n\ngeneral look of webpages  evolves over time\n\n### 1.1 Naming and teminology\n\n![](https://i.imgur.com/3PwEOmn.png)\n\nthis is bad\nyou can ask users which categories they understand/know about \n\n### 1.2 Data loss\n![](https://i.imgur.com/23IxWiN.png)\n\nstandard to minimise loss\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/consoles-terminals-shells":{"title":"consoles-terminals-shells","content":"\n- console -\u003e io device which is part of a computer (physical terminal)\n\t- console is the device: -\u003e terminal is program inside that device\n- terminal -\u003e text input output environment (can be remote)\n\t- windows terminal\n- [[notes/shell]] -\u003e program which the terminal/console sends input to which sends command to the OS\n\t- [[notes/unix-shell]]\n\t- powershell\n\t- cmd\n\t- bash, fish, zsh, ksh, sh, tsch\n\n#### 0.1.1 BREIF HISTORY\n\n1. At first only main console\n2. Then multiple terminals which allowed mulitple people to use one computer\n3. Graphics support\n4. Console + terminal merged\n5. Virtual terminals -\u003e  no need for direct hardware control -\u003e replaced by OS\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/containers":{"title":"containers","content":"\n# What are (software) containers?\n\n- Containers encapsulate a computing environment \n- Facilitates portable and reproducible use of software \n- Can wrap up application code and data, and much of OS \n- Containers are lightweight virtual machines \n- You need to boot them up, as for any OS \n- . . . but containers start up very quickly\n\n# What containers do and don’t include \n- Containers are generally Linux (virtual) machines \n\t- Even when hosted on Windows, containers are usually Linux \n\t- Microsoft Windows containers do exist though \n- Containers include the OS user space \n\t- e.g., distributions: Ubuntu, Debian, Arch. . . \n- Containers do not include Linux kernel \n\t- ... because all containers share one instance of the Linux kernel \n- Containers can’t themselves include hardware device drivers\n\n# Using containers\n- We won’t explore how containers are hosted \n- COSC349 explores how the lightweight virtualisation works \n- We focus on using others’ containers \n- Making containers usable involves: \n- Management tools to control containers \n- Means for interacting with the containerised software \n- Somewhere from which to get their starter material. . .\n\n# Container registries\n- Containers’ start up from an image \n- Think of images as a hard disk template \n- Images efficiently overlay layers of files and folders \n- Container registries store and share images: e.g., \n- Docker Hub is a popular container registry \n- GitHub Container Registry (public; launched 2020) \n- GitLab Container Registry (private) \n- All major cloud providers provide registries \n- You can run on-site, private registry too\n\n# Example container interacting with files \n- Let’s build the containers lab website\n- Input: Markdown files\n- Output: HTML website \n- Can use this container within [CI](notes/continuous-integration.md) pipelines\n- Active container can rebuild ‘live’:\n- source files are watched for changes\n- changes trigger rebuilding target files\n- can reload browser to see changes rapidly\n- Note: this example is an optional part of containers lab \n\t- `docker run −−rm −−mount \\ type=bind, source=${PWD}, target=/srv/jekyll\\jekyll/jekyll:pages jekyllbuild`\n\n# Example container interacting over network \n- Lesson builder can host an internal web server\n- Point browser running on host computer to network URL\n- Thus test built website, not just opening HTML files within it\n- Container framework can share container’s network\n- Typically expose key network ports of container on host\n- Connections routed through to container\n- Usually connections limited to interactions with the host OS\n- . . . but containers can support internet-facing servers \n\t- `docker run −−rm − i t −−mount \\ type=bind , source=$ {PWD} , target=/srv/jekyll\\ −p127.0.0.1:4000:4000\\jekyll/jekyll:3jekyllserve`\n\n# Inter-container interactions \n - Can build apps by composing multiple containers\n\t - Either or both of file/network-based sharing commonly used\n - Need to consider how to orchestrate containers\n\t - Container orchestration is a COSC349 topic\n\t - e.g., coordinating multi-container start up\n - Kubernetes is the de facto container orchestrator\n\t - Creates reliable, scalable services from containers\n\t - Supported on all major cloud providers \n\n # FYI: example multi-container application \n - Example: say you need to chart time-series data\n - InfluxDB is a dedicated time-series database\n - Grafana is a dedicated web-based charting system\n - Both are large, complex software products\n - Containers allow using them together\n - . . . without needing to figure out how to install them\n - e.g., use Docker Compose tool; there are examples on GitHub\n - Managing more than a few containers?\n - Switch over to a container orchestration tool! \n\n # Managing containerised applications \n - Containers can (do!) suffer security vulnerabilities\n - Thus, need management just like any other OS\n - Many services can notify you about security flaws\n - e.g., your dependencies may have been patched\n - Can easily upgrade containers to include security fixes\n - Upgrading live containers may break applications\n - Common: whole container-based app is rebuilt \u0026 relaunched\n - Container frameworks themselves also get hacked\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/continuous-integration":{"title":"continuous-integration","content":"\n# 1 Overview\nContinuous integration (CI) is the practice of automating the integration of code changes from multiple contributors into a single software project -  [atlassian](https://www.atlassian.com/continuous-delivery/continuous-integration) . It allows you to automatically run tests, builds, etc when the code is changed. \n\n# 2 Pipelines, stages, jobs\nA continous integration can be defined as a *Pipeline* with several *stages*, each stage with several *jobs*\n\nA continuous integration pipeline will run whenever it is triggered. It can be triggered on a schedule, manually, or whenever code is changed. These pipelines run *asynchronously* i.e., the dev doesnt't have to wait for it to complete.\n\n# 3 Triggers\nPipelines can also be run locally, and can be triggered, as you, commit, save, type etc. \n\n# 4 Output\nPipeline can produce several forms of asynchonous output such as email notifications, web badges, webhooks, etc. In addition, most VCS hosting platforms capture the terminal logs from the CI scripts.\n\n# 5 Runners\nRunners are what run the CI jobs. They are hosted and run by your git [VCS](notes/02-version-control-system.md) hosting system. You can also elect to have your hosting system trigger run that run on your local machine if you want to test your software on certain harware. Runners run on isolated infrastructure that is set up as needed to handle load variation. \n\nThis is the basic gitlab infrastructure which uses google cloud\n![300](https://i.imgur.com/HTWz2mQ.png) ![300](https://i.imgur.com/V87CeQY.png)\n\n# 6 CI Website hosting\nDue to the need to share artifacts produces by CI, most repo hosting services now also host websites. These are static websites i.e., all content is fixed. These websites are produced using Static Site Generators (SSGs). The code is hosted on the repo, which a CI pipeline converts into HTML files and publishes automatically.\n\n# 7 How to create\nMost CI frameworks use YAML for configuration. YAML  has a structured text based format similar to python and json\n\nThe CI config (in gitlab it is named `.gitlab-ci.yaml`) file goes in the top level of the repo, and is version-managed. This file specifies the stages and jobs of a pipeline, as well as indicating where the output should go.\n\n# 8 Debugging\n[debugging](notes/debugging.md) concepts should be applied\n\n1st check yaml file\n\ncommands run from shell generate an exit code. This is stored in a variable called *$?*\n\nIf $? is non-zero, then the previous command failed. Your shell script can choose to hide this is the command is expected to fail\n\n# 9 Secrets\nIf you need the CI script to log in to something, your repo hosting service can store and pass *secrets* to scripts using shell environment variables. When doing this, you need to make sure the CI script is secure, other wise someone could simply change the scripts to `echo` these variables.\n\n# 10 Other tools can have CI-like functionality\ne.g.,\n- IDEs the compile code in background\n- latexmk to auto build latex files when they change\n- Git hooks (scritpts within .git/hooks)\n\t- informational: augment commit messages\n\t- pre-update: intecepts and check commit, push, rebase\n\t- pre-populate git messages\n\t- carry out post-update cleanup tasks\n\n[10-continuous-integration-1](notes/10-continuous-integration-1.md)\n[11-continuous-integration-2](notes/11-continuous-integration-2.md)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/control-unit":{"title":"control-unit","content":"\n# Control unit\n![](https://i.imgur.com/bQ4eA94.png)\n\n- coordinates the operation of the computer\n- generates control signals\n\t- connect registers to the bus\n\t- control the function of the ALU\n\t- provides timing signals to the system\n\nallso associated with the decoding and executuion of instructions in a pipelined system","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cool-websites":{"title":"cool-websites\"","content":"\n- https://www.seedclub.xyz\n- https://www.lapa.ninja/tag/seedclub/\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cosc-201":{"title":"cosc-201","content":"\n# Assignments\n- [[notes/assignment-02]]\n\n# Analysis\n- [aymptotic-notation](notes/aymptotic-notation.md)\n- [induction](notes/induction.md)\n- [analysis-of-recursive-algorithms](notes/analysis-of-recursive-algorithms.md)\n\n# Paradigms\n- [divide-and-conquer](notes/divide-and-conquer.md)\n\t- [unite-and-conquer](notes/unite-and-conquer.md)\n- [dynamic-programming](notes/dynamic-programming.md)\n\t- [memoization](notes/memoization.md)\n\n# Data Structues\n- [union-find](notes/union-find.md)\n- [priority-queue](notes/priority-queue.md)\n- [dynamic-linear-datatype](notes/dynamic-linear-datatype.md)\n\t- [Stack](notes/dynamic-linear-datatype.md#Stack)\n\t- [Queue](notes/dynamic-linear-datatype.md#Queue)\n- [heap](notes/heap.md)\n- [treap](notes/treap.md)\n- [hash-map](notes/hash-map.md)\n\t- [linear-probing](notes/linear-probing.md)\n- [set](notes/set.md)\n- [tree](notes/tree.md)\n\t- [binary-search-tree](notes/binary-search-tree.md)\n\t- [balancing-binary-search-trees](notes/balancing-binary-search-trees.md)\n\t- [red-black-tree](notes/red-black-tree.md)\n\t- [avl-tree](notes/avl-tree.md)\n\t- [bst-operations](notes/bst-operations.md)\n\t- [tree-traversal](notes/tree-traversal.md)\n- [graphs](notes/graphs.md)\n\n# Algorithms\n- [mergesort](notes/mergesort.md)\n- [heapsort](notes/heapsort.md)\n- [[quicksort](notes/quicksort.md)]\n\n# Lectures\n- [07-mergesort-1](notes/07-mergesort-1.md)\n- [08-mergesort-2](notes/08-mergesort-2.md)\n- [09-stacks-queues-heaps](notes/09-stacks-queues-heaps.md)\n- [10-heaps-and-heapsort](notes/10-heaps-and-heapsort.md)\n- [11-sets-maps-trees](notes/11-sets-maps-trees.md)\n- [12-binary-search-tree-operations](notes/12-binary-search-tree-operations.md)\n- [13-bst-traversals-and-balance](notes/13-bst-traversals-and-balance.md)\n- [14-balancing-bsts](notes/14-balancing-bsts.md)\n- [15-dynamic-programming](notes/15-dynamic-programming.md)\n- [16-hasing-maps-sets](notes/16-hasing-maps-sets.md)\n- [17-collision-resolution-probing](notes/17-collision-resolution-probing.md)\n- [18-hash-examples](notes/18-hash-examples.md)\n- [19-graphs](notes/19-graphs.md)\n- [20-graphs-2](notes/20-graphs-2.md)\n\n\n# Archive\n- [16-c201-archive](notes/16-c201-archive.md)","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cosc-202":{"title":"cosc-202","content":"\n# Assignment\n- [reflective-statement-plan](notes/reflective-statement-plan.md)\n- [reflective-statement](notes/reflective-statement.md)\n\n# Outline\n- [consoles-terminals-shells](notes/consoles-terminals-shells.md)\n- [git](notes/git.md)\n- [ethics-in-cs](notes/ethics-in-cs.md)\n- [integrated-development-environments](notes/integrated-development-environments.md)\n- [branch](notes/branch.md)\n- [testing](notes/testing.md)\n- [test-driven-development](notes/test-driven-development.md)\n- [unit-testing](notes/unit-testing.md)\n- [debugging](notes/debugging.md)\n\t- [imperative programming](notes/imperative-programming-language.md)\n- [documentation](notes/documentation.md)\n- [continuous-integration](notes/continuous-integration.md)\n- [automation](notes/automation.md)\n- [software library](notes/libraries.md)\n- [application-programming-interface](notes/application-programming-interface.md)\n- [containers](notes/containers.md)\n- [linker](notes/linker.md)\n- [loader](notes/loader.md)s\n- [operating-system](notes/operating-system.md)\n- [software-licensing](notes/software-licensing.md)\n- [[security](notes/security.md)]\n\n# Lectures\n- [07-testing](notes/07-testing.md)\n- [08-debugging](notes/08-debugging.md)\n- [09-documentation](notes/09-documentation.md)\n- [10-continuous-integration-1](notes/10-continuous-integration-1.md)\n- [11-continuous-integration-2](notes/11-continuous-integration-2.md)\n- [12-automation](notes/12-automation)\n- [13-code-librarires](notes/13-code-librarires.md)\n* [14-apis](notes/14-apis.md)\n- [15-containers](notes/15-containers.md)\n- [16-compilers](notes/16-compilers.md)\n- [17-linkers-and-loaders](notes/17-linkers-and-loaders.md)\n- [18-build-tools](notes/18-build-tools.md)\n- [19-security](notes/19-security.md)\n- [20-software-licensing](notes/20-software-licensing.md)\n- [22-open-source-software](notes/22-open-source-software.md)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cosc-203":{"title":"cosc-203","content":"\n- [page](https://cosc203.cspages.otago.ac.nz)\n- [labs](https://cosc203.cspages.otago.ac.nz/labs/)\n- [html validator](https://validator.w3.org/nu/)\n\n# Assignments\n- [front end project](notes/front-end-project)\n- [back end project](notes/back-end-project)\n- [ethics essay](notes/ethics-essay)\n\n# Labs\n- [cosc203-lab16](notes/cosc203-lab16.md)\n- [cosc203-lab17](notes/cosc203-lab17.md)\n- [cosc203-lab18](notes/cosc203-lab18.md)\n- [cosc203-lab19](notes/cosc203-lab19.md)\n- [cosc203-lab20](notes/cosc203-lab20.md)\n- [cosc203-lab24](notes/cosc203-lab24.md)\n- [cosc203-lab25](notes/cosc203-lab25.md)\n\n# Notes\n[dns](notes/dns.md)\n- [Web](notes/web)\n\t- [html](notes/html.md)\n\t- [css](notes/css.md)\n\t- [javascript](notes/javascript)\n\t- [backend](notes/backend)\n- [Databases](notes/databases)\n\t- [ER Diagram](notes/ER-Diagram)\n\t- [Normal Forms](notes/Normal-Forms)\n\t- [Schemas](notes/Schemas)\n\t- [SQL](notes/SQL)\n- [Networks](notes/network)\n\t- [Application Layer](notes/Application-Layer.md)\n\t- [Transport Layer](notes/Transport-Layer.md)\n\t- [Network Layer](notes/Network-Layer.md)\n\t- [Data Link Layer](notes/Data-Link-Layer.md)\n\t- [Physical Layer](notes/Physical-Layer.md)\n\t- [Wireless Layer](notes/Wireless-Networks.md)\n\t- [Security Layer](notes/Network-Security.md)\n\t- [Other Layer](notes/Networks-Other.md)\n\n# Lectures\n- [01-basic-html](notes/01-basic-html.md)\n- [02-basic-css](notes/02-basic-css.md)\n- [03-more-css](notes/03-more-css.md)\n- [05-javascript](notes/05-javascript.md)\n- [06-async-javascript](notes/06-async-javascript.md)\n- [07-js-server-vs-client-side](notes/07-js-server-vs-client-side.md)\n- [08-web-frameworks](notes/08-web-frameworks.md)\n- [09-web-databases-networks](notes/09-web-databases-networks.md)\n- [10-routes-controllers](notes/10-routes-controllers.md)\n- [11-view-templates](notes/11-view-templates.md)\n- [12-ethics-and-computing](notes/12-ethics-and-computing.md)\n- [13-databases-1](notes/13-databases-1.md)\n- [14-relational db]\n- [15-basic sql]\n- [16-networks](notes/16-networks)\n- [17-application layer](notes/17-app-layer)\n- [18-transport layer](notes/18-transport-layer)\n- [19-network layer data plane](19-network-layer-data-plane)\n- [20-network layer control plane](20-network-layer-control-plane)\n- [21-data link layer and LAN](21-data-link-layer)\n- [22-LAN and physical layer](22-LAN-physical-layer)\n- [23-wireless-mobile](23-wireless-mobile)\n- [24-network-security](notes/24-network-security.md)\n- [25-advanced-topics](notes/25-advanced-topics.md)\n\n# Archive\n\n# Info\n- [Course Calendar](https://i.imgur.com/76tMf5e.png)\n- [Contacts](https://i.imgur.com/UAAqXTJ.png)\n- [Assessments Information](https://i.imgur.com/ZQwUMnf.png)\n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cosc-204":{"title":"cosc-204","content":"\n[page](https://cosc204.cspages.otago.ac.nz)\n\n# Notes\n- [characters](notes/characters.md)\n- [digital-data](notes/digital-data.md)\n- [memory](notes/memory.md)\n- [boolean-equations](notes/boolean-equations.md)\n- [combinatorial-logic](notes/combinatorial-logic.md)\n- [logic-gates](notes/logic-gates.md)\n- [transistors](notes/transistors.md)\n- [demultiplexor](notes/demultiplexor.md)\n- [sequential-circuits](notes/sequential-circuits.md)\n- [bus](notes/bus.md)\n- [control-unit](notes/control-unit.md)\n- [CPU](notes/CPU.md)\n- [ALU](notes/ALU.md)\n- [computer-architecture](notes/computer-architecture.md)\n- [6809-addressing-modes](notes/6809-addressing-modes.md)\n- [6809](notes/6809.md)\n\n\n\n# Lectures\n- [01-bits-and-bytes](notes/01-bits-and-bytes.md)\n- [02-combinatorial-logic](notes/02-combinatorial-logic.md)\n- [03-sequential-logic-circuits](notes/03-sequential-logic-circuits.md)\n- [04-computer-architecture](notes/04-computer-architecture.md)\n- [05-6809-assembly](notes/05-6809-assembly.md)\n- [06-6809-programming](notes/06-6809-programming.md)\n- [07-6809-advanced](notes/07-6809-advanced.md)\n- [08-intro-to-c](notes/08-intro-to-c.md)\n- [09-intro-to-c-2](notes/09-intro-to-c-2.md)\n- [10-intro-to-c-arrays-malloc-free](notes/10-intro-to-c-arrays-malloc-free.md)\n- [11-struct-and-union](notes/11-struct-and-union.md)\n- [12-pointers-to-routines](notes/12-pointers-to-routines.md)\n- [13-OS-intro](notes/13-OS-intro.md)\n- [14-processes-and-system-calls](notes/14-processes-and-system-calls.md)\n- [15-file-systems](notes/15-file-systems.md)\n- [16-device-drivers](notes/16-device-drivers.md)\n- [17-processes-communication](notes/17-processes-communication.md)\n- [18-processes-sharing-and-threads](notes/18-processes-sharing-and-threads.md)\n- [19-cpu-scheduling](notes/19-cpu-scheduling.md)\n- [20-sync-deadlock](notes/20-sync-deadlock.md)\n- [21-memory-management](notes/21-memory-management.md)\n- [22-virtual-memory](notes/22-virtual-memory.md)\n- [23-IO-systems](notes/23-IO-systems.md)\n- [24-protection-of-file-systems](notes/24-protection-of-file-systems.md)\n\n# Info\nBy completion of this paper students are expected to:\n\t- Understand how programs are executed on computer hardware\n\t- Demonstrate an ability to read and write assembly language programs\n\t- Understand the fundamental principles and structure of an operating system\n\t- Be able to construct programs in C and understand its role as a systems programming language\n\t- Understand core operating systems algorithms such as process scheduling and resource allocation and management\n\t- Be aware of the importance of efficient use of resources from computational, economic, and environmental viewpoints","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cosc203-lab16":{"title":"cosc203-lab16","content":"VISIT(doctor_id, patient_id, patient_name, date_time, diagnosis, treat_code, charge)\n1. No\n\nPATIENT(patient_id, patient_name)\nVISIT(patient_id, doctor_id, date_time, diagnosis, treat_code, charge)\n\n2. No\n\nTREATMENT(treat_code, charge)\nPATIENT(patient_id, patient_name)\nVISIT(patient_id, doctor_id, date_time, diagnosis, treat_code)","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cosc203-lab17":{"title":"cosc203-lab17","content":"\n1. TCP, HTTP, SSL\n2. .004 seconds\n\t1. subtract the time it was sent from time the response was recieved\n3. addresses\n\t1. mine: 10.112.112.240\n\t2. site: 10.66.33.59\n4. \n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cosc203-lab18":{"title":"cosc203-lab18","content":"\n1. http 1.1 ![](https://i.imgur.com/pvla1cl.png) \n2. does not say\n3. 200 ![](https://i.imgur.com/bZlHaUQ.png)\n4. does not say\n5. 775 ![](https://i.imgur.com/y5MjniB.png)\n6. conversation completeness ![](https://i.imgur.com/H1DZKw3.png)\n\n7. no if-modified-since. yes it returned the contents of the file\n8. . nothing following it. status code is 304 not modified. did not return the contents of the file ![](https://i.imgur.com/UCRXQwt.png)\n\n\n9. only one GET request packet no.412 ![](https://i.imgur.com/QrBb4Ma.png)\n10. packet 443 has response ![](https://i.imgur.com/jp0sCcw.png)\n11. 20 tcp packets\n\n\n12. 3 GET requesests ![](https://i.imgur.com/1wm8jmQ.png)\n13. in parallel. The reqest for the second image was sent before the response for the first image was recieved\n\n\n14. 401 unauthorized ![](https://i.imgur.com/OYp3ewd.png)\n15. the new field is: authentication ![](https://i.imgur.com/mP7RG8w.png)\n\n\n\n \n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cosc203-lab19":{"title":"cosc203-lab19","content":"\n1. DNS request protocol is UDP \n\n![](https://i.imgur.com/dSOSdRK.png)\n\n2. The ports of the DNS queries are:\n\t1. dest of query: 53 ![](https://i.imgur.com/FoAwUQV.png)\n\t2. source of response: 53 ![](https://i.imgur.com/knH3W2I.png)\n\n3. There were 12 dns queries. They were all type A![](https://i.imgur.com/nFGVbI7.png) ![](https://i.imgur.com/uKkUuFG.png)\n\n4. Anwers within responses\n\t1. 2 answers ![](https://i.imgur.com/plLag5j.png)\n\t2. 3 ![](https://i.imgur.com/5AKS2tn.png)\n\t3. 1 ![](https://i.imgur.com/srCM9oq.png)\n\t4. 1 ![](https://i.imgur.com/lALFEjL.png)\n\t5. 7 ![](https://i.imgur.com/OXFBaOy.png)\n\t6. 6 ![](https://i.imgur.com/MHOIR2B.png)\n\n5. dns responses after nslookup on www.otago.ac.nz\n\t1. ![](https://i.imgur.com/PRKiVlq.png)\n\t2. ![](https://i.imgur.com/d1P36MI.png)\n\t3. ![](https://i.imgur.com/drMqoQG.png)\n\t4. ![](https://i.imgur.com/gprPSoO.png)\n\t5. ![](https://i.imgur.com/u3Imagz.png)\n\t6. ![](https://i.imgur.com/M1ZFhwF.png)\n\t7. ![](https://i.imgur.com/bgVmCub.png)\n\t8. ![](https://i.imgur.com/eiHDN1m.png)\n\t9. ![](https://i.imgur.com/7A5aHYe.png)\n\n6. destination is 10.64.0.112. this is one of my local dns servers ![](https://i.imgur.com/lz8MBcI.png) ![](https://i.imgur.com/xIaz0vH.png)\n\n7. name servers are\n\t1. ![](https://i.imgur.com/EQqLyDa.png)\n\t2. ![](https://i.imgur.com/Xq4FHUr.png)\n\t3. ![](https://i.imgur.com/v2gcibe.png)\n\n8. nslookup google\n\t1. 7 queries\n\t2. 10.64.0.112 (local dns server) and 216.239.34.10 (the address of the google ns2 nameserver)\n\n9. only one answer (two of the requests were refused and has no answer). each one contains a dns record\n10. \n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cosc203-lab20":{"title":"cosc203-lab20","content":"\n![](https://i.imgur.com/EnNd94C.png)\n\n1. header\n\t1. 4 fields\n\t\t1. source port\n\t\t2. dest port\n\t\t3. length\n\t\t4. checksum\n\t2. each field is 2 bytes\n![100](https://i.imgur.com/dzMuJWY.png)\n\n2. payload is 980 bytes\n\t1. max is 65536-8 = 65528\n\n3. 17 ![50](https://i.imgur.com/uKGY8WP.png)\n\n![](https://i.imgur.com/In1iX3w.png)\n4. the source port of the first message is the destination port of the second and the destination port of the first is the destination port of the second\n\n\n\n![](https://i.imgur.com/V4GKJA5.png)\n\n5. source port 61958, ip 10.112.120.171, \n6. cosc ip is 10.66.8.42, using port 80\n\n\n7. syn \n\t1. seq number: 0   ![](https://i.imgur.com/8yF20dZ.png)\n\n\t2. idetified by the syn flag ![](https://i.imgur.com/rkw0BMu.png)\n\n8. syn ack\n\t1. seq num: 0 ![](https://i.imgur.com/5sdwweq.png)\n\n\t2. value of ack field: 1 ![](https://i.imgur.com/mrvWNks.png)\n\t3. how did cosc get this value? not sure\n\t4. identified by flag field ![](https://i.imgur.com/WJmm8Ra.png)\n\n9. get [](https://i.imgur.com/LZOuVK9.png)\n\t1. seq num: 1\n\n10. ack segments\n\t1. rtt average 4ms\n\t2. numbers\n\t\t1. 1\n\t\t2. 1\n\t\t3. 1\n\t\t4. 1\n\t\t5. 1461\n\t\t6. 2921\n\n11. buffer space: ?\n\n\n12. ? \n\n13. 0 - maybe i stopped tracing too early?\n\n\n14. bytes per second\n\n![](https://i.imgur.com/JYkAKPp.png)\n\n![](https://i.imgur.com/SajGkG7.png)\n\n![](https://i.imgur.com/1hAMZmf.png)\n\n![](https://i.imgur.com/R5wfyhQ.png)\n\naverage size of segment is 1514 bytes. there were (155-32 = 123 segments). so 186222 bytes were sent in 0.049 secs = 3800448.98 bytes per second\n\n\n![](https://i.imgur.com/c0ZMykO.png)\n\n\n15. 0.0034 seconds\n16. ","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cosc203-lab25":{"title":"cosc203-lab25","content":"\n1. frame number 1\n![](https://i.imgur.com/MnxpcOS.png)\n\n2. before - to establish a connection for the tls messsages to be sent through\n![](https://i.imgur.com/nGC1CVq.png)\n\n3. v 1.2\n![](https://i.imgur.com/Do6uS27.png)\n\n4. 21 suites\n![](https://i.imgur.com/3mkjm0f.png)\n\n5. e8\n![](https://i.imgur.com/yugkqSb.png)\n\n6. combined with server hello random to create master secret\n\n7. TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n![](https://i.imgur.com/gFqpTCg.png)\n\n8. yes - combined with client hello random to create master secret\ncombined with server hello random to create master secret\n![](https://i.imgur.com/DS45Ved.png)\n\n9. 3 certificates - others are for DigiCert Global Root CA and DigiCert TLS RSA SHA256 2020 CA1\n![](https://i.imgur.com/0zDN8Zv.png)\n\n10. DigiCert\n![](https://i.imgur.com/1ffEFio.png)\n\n11. sha 256 with rsa encryption\n ![](https://i.imgur.com/Qbta96a.png)\n\n12. yes - 1\n![](https://i.imgur.com/jWh3nbT.png)\n\n13. number 11\n![](https://i.imgur.com/8PW0Bts.png)\n\n14. I dont think It does\n\n15. duplicate question?\n\n16. TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n![](https://i.imgur.com/gFqpTCg.png)\n\n17. The server hello\n\n18. number 15\n![](https://i.imgur.com/JngIBH3.png)\n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/cryptography":{"title":"cryptography","content":"\nCrytography arises from the need for confidentiality. Some people say \n\n\u003e\"if you have nothing to fear you have  nothing to hide\". \n\nEdward snowden said\n\n\u003e\"arguing that you don't care about privacy because you have nothing to hide is no different than saying you dont care about free speech because you have nothing to say.\"\n\n# History\nOne of the earliest known ciphers was the simple subsitution cipher used by julius caesar named the caesar cipher. \n\nAlthough it a very bad cipher, it still uses the same general process of encryption and decryption. \n\n# General Process\n- encrypt\n\t- plaintext + key =\u003e ciphertext\n\t- key is a secret\n- decrypt\n\t- ciphertext + key =\u003e plaintext\n\nmathmatically\n- c = e(p, k)\n- p = d(c, k)\n\n# Randomness\n[randomness](notes/randomness.md) is the basis for the theory of cryptography. The aim of encryption is to alter a message (or binary sequence) so that it is maximally random i.e., has the highest entropy, and to remove any sort of pattern. \n\n# Terminology/Conventions\n- alice, bob, charlie, etc\n- mallory -\u003e malicious\n- etc\n- public vs private domains\n\t- assume communication is public\n\t- assume information is prepared and consumed in private domain\n- copy from lecture 5 slides\n- ","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/css":{"title":"css","content":"\n# Structure\n```css\nh1(selector) {\n\tcolor(property): red(value/function); \\\n\tfont-size: 5em;\t\t\t\t\t\t  / - declarations\n}\n```\n\n# Selectors\nTypes\n- Universal: `*`\n- Type: `main`\n- Class: `.myclass`\n- Id: `#myID`\n\nCombining\n- grouping: `p, li`\n- adjacent: `p + li`\n- descendant: `p li`\n- direct descendant: `div \u003e h1`\n- general sibling: `div ~ h1`\n- chaining: `.class1.class2`\n- attribute: `div[lang]`\n\n```css\n/* selects any \u003cspan\u003e that is inside a \u003cp\u003e, which is inside an\n\u003carticle\u003e */\narticle p span { }\n\n/* selects any \u003cp\u003e that comes directly after a \u003cul\u003e, which\ncomes directly after an \u003ch1\u003e */\nh1 + ul + p { }\n```\n\nPseudo Classes: \n- `a:link {...}`\n- `a:visited {...}`\n- `a:hover {...}`\n- etc\n\nPseudo Elements\n- `p::first-line {...}`\n\n## Inheritance\nSome properties like color are inherited by some children elements. width, margin, padding, border are not inherited\n\nControls\n- inherit: sets property to the same as parent element\n- inital: sets property value to inital/default value of that property\n- unset: sets property to natural value (inherit or dont inherit)\n\n## Cascade\nThree rules - higher ones overrule lower ones\n- Importance\n- Specificity\n- Source Order (only matters if specificity is the same)\n\n## Specificity\nRules at a higher level of specificity will override a rule at a lower level\n\nID \u003e class \u003e element.\n\n- ID: 100\n- Class (also, attr selector or pseudo class): 10\n- Element (also pseudo element): 1\n\n# Box Model\n![box model diagram|400](https://i.imgur.com/G7oIlKC.png)\n![border-box box model|400](https://i.imgur.com/iY8O3hd.png)\n\nMargin Collapse: If two vertically adjcent elements have touching margins, the smaller of the two will collapse\n\n# Layout\n`display: \u003cinside type\u003e \u003coutside type\u003e`\ne.g., `display: inline flex`\ne.g., `display: inline grid`\ne.g., `display: block flex`\n\n## Outside\nBlock\n- Breaks onto new line\n- width and height respected\n- padding, margin, border will push other elements away\n- box will extend in inline direction to fill space\n- box will become as wide as its container\n\nInline\n- box will not break onto new line\n- width and height will not apply\n- size of inline is the size of their content\n- padding, border, margins apply but only horizontal with push other elements\n\nInline-Block\n- does not break onto new line but respects height and width, and vertical margin/padding/border\n\n## Inside\nNormal Flow\n- Using block and inline elements\n- Ensures readable content even with old browsers and weird devices\n\nFlexbox\n- One dimensional, either row or col\n- children become flex items\n![flex diagram](https://i.imgur.com/gpYlpyo.png)\n\nGrid\n- Better for two dimensions, both row and col\n\n## Positioning\nTypes\n- static\n- relative\n- absolute\n- fixed\n- sticky","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/dApps":{"title":"dApps","content":"\ndecentralized apps. \n\nmostly run on the ethereum blockchain\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/daily-notes":{"title":"daily-notes","content":"\n# daily-notes\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/dark-patterns":{"title":"dark-patterns","content":"\nturniing patterns against the user. \nall the dsign heuristics can be used against the user\n\n- ![oxfam example](https://i.imgur.com/mn3oK05.png): defaults to a recurring payment\n- ![comet shop example](https://i.imgur.com/nGfdk7W.png): additional product is automatically included\n- ![complicated contract](https://i.imgur.com/mTJmqwa.png) \n- ![flight booking](https://i.imgur.com/6uwauOB.png) \n- ![amazon cancel prime](https://i.imgur.com/06htsKV.png)\n- hard to cancel facebook account\n- ![FOMO](https://i.imgur.com/Ikf0DiF.png)\n\nwho is the customer of free products like tiktik, facebook, instagram. WE are not the customer, we are the animals in the zoo, the products","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/data-access":{"title":"data-access","content":"\nMost infosystems require persistent data. e.g.,\n- save to file\n- save to database\nSome systems require several persistent data stores. e.g., multiple databases.\n\nThere are three main approaches:\n- [file-based-storage](notes/file-based-storage.md)\n- [database-based-storage](notes/database-based-storage.md)\n\n# How to manage persistent data access\n1. domain objects interact directly with the data store\n\t- write to file or send sql statements\n\t- not easy to change\n2. domain objects interact with data store via a mediator\n\t- either standalone class or implementation of a data access interface\n\t- [data-access-object](notes/data-access-object.md)\n\t- encapsulates all access to persistent data\n\n# JDBC\n[JDBC](notes/java-database-connectibity.md) is a Framework for working with (SQL) databases in Java. It was designed to be independent of the DBMS you are using. The same java code *should* work on all SQL DBMSs (*just* change the driver)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/data-access-object":{"title":"data-access-object","content":"\n# Designing DAOs\n- general rule: one DAO per \"logical unit\" of data access\n- many DAOs are just for one class e.g., `PatronDAO`\n- some involve many classes\n\t- things like header/lines objects are always managed together\n\t- complex operations that join multiple tables or domain classes\n- different use cases (features) use different sets of DAOs e.g.,\n\t- add, find, edit patron ⇒ `PatronDAO`\n\t- lend items ⇒ `LoanDAO`, `ItemDAO`, `PatronDAO`\n- object construction and deconstruction coded into DAOs\n\n# Multiple implementation of the same DAO\ne.g.,:\n- `PatronDAO` interface\n- `PatronCollectionDAO` class for in memore data\n- `PatronJdbcDAO` class for SQL databases\n- `PatronCsv` class for CSV files\n- all classes implement the `PatronDAO` interface\n\nHaving these options allows you to easily switch between, dev, test, and prod, and privileged and non privileged access\n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/database-based-storage":{"title":"database-based-storage","content":"\n- managed by DBMS\n\t- usually SQL based\n\t- also noSQL for unstructured big data\n- advantages\n\t- multi user support\n\t- transactions (failure recovery)\n\t- (centralised) constraints and referntial integrity\n\t- flexible and ad-hoc querying\n\t* manage large data\n\n# Database APIS\nAPIs #unfinished \n\n- most dbmss have a native datbase api\n\t- usually proprietry and limited to just that product\n\t- often the only option for noSQL dbmss\n- also generic database apis\n\t- work with multiple dbmss\n\t- same code works with any supported dbms\n- for sql dbmss\n\t- ODBC microsoft\n\t- JDBC java\n\t- DB-API python\n\t- PDO php\n\t- DBI perl\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/databases":{"title":"databases","content":"\n# Modelling\nDatabase: integrated collection of data\n- meaning\n- specific purpose\n\n[ER Diagram](notes/ER-Diagram)\n[Schemas](notes/Schemas)\n\n# Relational Model\nTwo parts\n- Relation Schema\n- Domain\n\nConstraints\n- Domain: each value must an atomic value in the domain e.g., integer, string, date, etc\n- Key and NULL: \n\t- Superkey: uniquely ids a tuple e.g., set of all attrs\n\t- Key: minimal superkey\n\t- Candidate key: a possible key\n\t- Primary key: the chosen candidate key: cannot have NULL values\n- Ref Integrity: Foreign key \n- Functional Dependencies\n\t- fd: when one value determines another e.g., sid -\u003e sname, {sid, cid}  -\u003e grade\n\t- armstrong axioms: ![](https://i.imgur.com/3MAOrXD.png)\n\n# Normal Forms\nHelp to prevent anomalies (update, delete, insert) by reducing redundancy\n\ne.g., \n```\nbad:\nStudent_Course(sid, sname, address, cid, cname, grade) \n\ngood:\nStudent(sid,sname,address) \nCourse(cid,cname)\nnrolled(sid,cid,grade)\n```\n\ndone through process of decomposition: breaking down schema into set of schemas while preserving:\n- attributes\n- dependencies\n- lossless joins\n\nVarious degrees of normalisatin defined by normal forms: \n[Normal Forms](notes/Normal-Forms)\n\n# SQL\n[SQL](notes/SQL)","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/david-hume":{"title":"david-hume","content":"\n# Art\n[054-hume-on-art](notes/054-hume-on-art.md)\n\nIn his essay [the standard of taste](Attachments/texts/david-hume-of-the-standard-of-taste-pdf.pdf) Hume sets out to determine how we can arrive at a universal standard of taste\n\n\"All sentiment is right; because sentiment has a reference to nothing beyond itself, and is always real, wherever a man is conscious of it.\"\n\n\"Beauty is no quality in things themselves: It exists merely in the mind which contemplates them; and each mind perceives a different beauty.\"\n\n\"A man in a fever would not insist on his palate as able to decide concerning flavours; nor would one, affected with the jaundice, pretend to give a verdict with regard to colours. In each creature, there is a sound and a defective state; and the former alone can be supposed to afford us a true standard of taste and sentiment. If, in the sound state of the organ, there be an entire or a considerable uniformity of sentiment among men, we may thence derive an idea of the perfect beauty; in like manner as the appearance of objects in day-light, to the eye of a man in health, is denominated their true and real colour, even while colour is allowed to be merely a phantasm of the senses.\"\n\n\"Strong sense, united to delicate sentiment, improved by practice, perfected by comparison, and cleared of all prejudice, can alone entitle critics to this valuable character; and the joint verdict of such, wherever they are to be found, is the true standard of taste and beauty.\"\n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/debugging":{"title":"debugging","content":"\nremoving technical faults\nisolaing and remove technical faults\na human process\n- requires creativity/disipline/knowledge\n- deepr understanding of code\n\ndebuggers are tools to help debugging\n\n## 1 common approaches\n- temporarily add output of diagnostic info -\u003e \"printf\" debugging\n- permanently include calls to logging system -\u003e route to terminal, log files etc\n\n## 2 debugging machine code\n- cpu runs code instruction by instruction\n\t- thus debugger can intervene between instructions\n\t- most cpus help debugger interrupt and resume programs\n- cpu reached current code via a sequence of calls\n\t- called **stack trace** , aka back frame, stack frame etc\n- may reach point where it cannot continue\n\t- e.g., integer division by zero, program execution must stop\n\t- stack trace of stopped program can be analysed\n\n## 3 Imperative languages\nThese are languages that are executed in a step-wise, sequentail manner using the [imperative programming](notes/imperative-programming-language.md) paradigm\n  \n- debug symbols\n\t- e.g., method named, variable named\n- source code context\n\t- line numbers\n\t- variable name\n\t- function method names\n\n## 4 doing debugging\n### 4.1 stepping skipping running\n- step into --\u003e steps one statement and steps into function calls\n- step over --\u003e a step that treats function calls as statement\n- step out --\u003e return to the instruction after the function call you're in\n- continue  --\u003e go back to running code continuously\n\n### 4.2 controlling debugger execution\nCan run normally --\u003e debugger will run when program crashes\n\nBreakpoint --\u003e debugger will stop program when/if that line is reached\n- conditional breakpoints only suspend if a condition is true\n\nWatch point --\u003e program is suspended when some data changes (e.g., variables)\n\n## 5 debugging non imperative languages\ne.g, spreadsheet (Dataflow programming)\n- no breakpoints\n- must step through _iterations of computations_\n\ne.g., Equation\n- break into smaller parts\n- try 'compile' it in multiple ways\n\ne.g., Data base query (declarative programming)\n- -reexpressign the query and comaring can be useful\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/decentralized-autonomous-organization":{"title":"decentralized-autonomous-organization","content":"\nIn general terms, DAOs are member-owned communities without centralized leadership. A commitment to share value with a community.\n\nthey seek to \n- provide members with a voice through governance\n- flatten hirarchy and create fluid workstreams\n- allocate reources to achieve a core mission\n\nA Telegram group with 10 members and 1 ETH is a DAO.\n\nA DeFi protocol with $1B+ of assets governed on-chain by 10,000+ token holders is a DAO.\n\nE.g., [The DAO](https://en.wikipedia.org/wiki/The_DAO_(organization))\n\n# Social DAOs\ne.g.,\n- seed club\n- FWB\n- kramos\n\n# Sources\n- https://coopahtroopa.mirror.xyz/_EDyn4cs9tDoOxNGZLfKL7JjLo5rGkkEfRa_a-6VEWw","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/demultiplexor":{"title":"demultiplexor","content":"\n\n# Demultiplexor\n- Mutli way swtich where the address determines which output recieves the input\n\n![2 bit address diagram and truth table](https://i.imgur.com/XQteI3j.png)","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/dependencies":{"title":"dependencies-among-attributes","content":"\n# Functional Depenencies (FDs)\nIf for any given value of attribute A there is _exactly one_ associated value of attribute B, then A _functionally determines_ B (loosely)\n\nThis is the theoretical basis for [normalisation](notes/normalisation.md), and uniqueness property of PK (A is unique with respect to B)\n\n- one to one\n- Written as: A --\u003e B\n- Equivalently, \"B is functionally dependent on A\"\n- Within a single relation only\n- every attribute functionally dependent of primary key (PK)\n \n## Example 1\n- consdier a specific student ID e.g., 123346\n- this student ID is alwasys associated witha single studnet name (e.g., jane smith)\n- even it the students name changes, that student ID will still be asociated with the name of only that on student\n- *The value of student id determines the value of student name*\n\n## Other examples\n- student ID --\u003e student name (but not vice versa)\n- car registration --\u003e car owner (but not vice versa)\n\t- rego --\u003e VIN\n\t- VIN --\u003e rego\n- student ID --\u003e name, semester address, mobile number\n- car rego --\u003e owener name\n- IRD number + year --\u003e tax payable \n- product ID + order no --\u003e quantity ordered\n\n## Anti examples\n- student ID  + name --\u003e birth date (overkill, partial dependency)\n- home address --\u003e student name\n- name --\u003e birth date\n\ne.g.,\n![](https://i.imgur.com/J0FzURg.png)\n![](https://i.imgur.com/EMSOMmC.png)\n\n\n## Using Functional dependencies\nTo determine them:\n- need detailed knowledge of thebusiness rules\n- examine existing data sets\n\t- not always practical when these are large or unknown\n\nCan be represented using funcitonal dependency diagrams (FDDs)\n\nBottom up approach\n- ERD is \"top-down\"\n- FD best used as a design validation tool\n\n## Types of functional dependencies\n### Dependencies on more that one attribute\nnon primary attributes that are dependent on two or more attributes\nalways arise with composite PKs\ne.g., \n![](https://i.imgur.com/d4fUeRD.png)\n\n### Partial Dependency\nSubset of left hand side determines right hand side\n\"extra attributes\"\n\ne.g.,\n![](https://i.imgur.com/clpV0eU.png)\n\n\n### Transitive dependency\ne.g., \n- part num determines supplier number\n- supplier number determines supplier name\n- part number determines supplier name\n\nBUT 3 is already implied by 1 \u0026 2 --\u003e redundant supplier names\n![](https://i.imgur.com/VZbxVff.png)\n![](https://i.imgur.com/df0D7Lc.png)\n\n### Multivalued dependencies (MVDs)\nif for any given value of attribute A there is a _set_ of associated values of attribute S, the a _Multidetermines_ S (loosely)\n\n- one to many\n- written: A ↠ S\n- equivalently, \"S is multiply dependent on A\"\n- Generalistion of FDs: all FDs are MVDs, but not vice versa\n- A is still unique with respect to S\n\n![](https://i.imgur.com/938t9Kd.png)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/design-heuristics":{"title":"design-heuristics","content":"\n- [show-system-status](notes/show-system-status.md)\n- [familiar-metaphors-and-language](notes/familiar-metaphors-and-language.md)\n- [consistency-and-standards](notes/consistency-and-standards.md)\n- [user-freedom-and-control](notes/user-freedom-and-control.md)\n- [error-prevention](notes/error-prevention.md)\n- [recognition-over-recall](notes/recognition-over-recall.md)\n- [flexibility-and-efficiency](notes/flexibility-and-efficiency.md)\n- [aesthetic-and-minimalist-design](notes/aesthetic-and-minimalist-design.md)\n- [help-and-documentation](notes/help-and-documentation.md)\n- [recognise-and-recover-from-errors](notes/recognise-and-recover-from-errors.md)\n\n[anti-design-heristics](notes/anti-design-heristics.md)\n[dark-patterns](notes/dark-patterns.md)","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/designing-studies":{"title":"designing-studies","content":"\nNeed to be more specific than \"Do you like my interface\". Need to avoid experimenter bias\n\n# Terms\n- **Comparison:** What is good\n\t- \"Yark stick\"\n- **Baserate:** how often does Y occur\n\t- requires measurin Y\n- **Correlation:** Do X and Y co-vary\n\t- Requires measuring X and Y\n- **Causes:** Does X cause Y\n\t- Requires measuring X and Y and manipulating X\n- **Manipulations:** Indepenedent variables\n- **Measures:** Dependent variables\n\t- e.g., task completion time, recall, accuracy, emotional response\n- **Precision:** Internal Validity\n\t- remove confounding factors\n\t- large sample size\n- **Generlisability:** External Validity\n\t- does this apply in the real world\n\n# Strategies for fairer comparisons\nTwo main things differ between prototype and Production: Fidelity (how \"polished the design is\", Approach (the actual design)\n\n- insert your new approach into the production setting\n- recreate the production approach in you new setting\n- scale down so youre just looking at a piece of a larger system\n- when expertise is relevant, train people up\n\n## Bad example\n![iphone keyboard study](https://i.imgur.com/Gmski8F.png)\n\nmanipulation: input style\nmeasure: words per minute\nexternal validity: not so much\n\nbenefits and drawbacks\n- not a fair example: novices vs experts\n- are the results significant\n\n## Good example\nmanipulation: input style\nmeasure: words per minute and error rate\n\n![speed](https://i.imgur.com/RvBVWt2.png)\n![errors](https://i.imgur.com/GwYZOIA.png)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/designing-studies-video":{"title":"designing-studies-video","content":"\n[designing-studies](notes/designing-studies.md)","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/developer":{"title":"developer","content":"\n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/digital-data":{"title":"digital-data","content":"\n# What is data\n- A fact — a piece of information\n\t- corresponds to discreete facts about phenomena from which we gain information abou the world\n- The concept of a *value* is fundamental to data\n\t- e.g., 25, $356.00, April, \"this is a sentence\", colours etc\n- Vaues are abstract, they are interpretations of data\n\t- There are many way of storing the same data\n\t- e.g., 12, twelve, XII, 1100, · ··, ·----··---\n\n# How computers represent data\n- In *Binary*\n- Stored in one of two states, true/false, 1/0, on/off, voltage/no voltage\n- Each instance of a state is called a *bit*. (binary digit)\n- *Values* are represented as a sequence of bits.\n\t- e.g., 1000001\n\t- The computer doesn't \"know\" what any given sequence means, **you** know.\n\t- could be 65, A, or anything **You** want it to mean\n\n# Bits, Nibbles, Bytes\n-  The smallest unit of storage is a buit (0 or 1)\n- (for convenience) bit are grouped into larger units.\n\t- a nibble is 4 bits\n\t- a byte is 8 bits\n- For convenience bytes are given addresses, not nibbles or bits. (they are too small to work with most of the time)\n\n# Memory\nData is stored in [memory](notes/memory.md)\n\n# A Word of memory\n- The word is the number of bits the cpu uses internally, varies between manufacturers and CPUs.\n- Now its usually 64 bits\n- [amount of bits for different devices](https://i.imgur.com/nHrz1zX.png)\n\n# Characters\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/direct-manipulation-video":{"title":"direct-manipulation-video","content":"\ne.g., better measuring cup\n\nford qquote about faster horse\n\nfour insights\n- both transit and cookware simply asking doesn't work\n- find out by going into the field\n- bring protoypes with you\n- listen to peoples own designs\n\ntwo steps each has success or failure\n- action --\u003e gulf of execution\n- evaluating the outcome --\u003e gulf of evaluation\n\n6 questions\n- determine the function\n- tell what actions\n- determine actual action\n- perform the actions\n- tell what state\n- mapping from system state and interpretation\n\nto reduce gulfs\n- visibility (perciebves affordances or signifiers)\n- feedback \n- consistency (standards)\n- non-destructive operations (undo/redo)\n- discoverability (operations discovers by exploration)\n- reliability\n\ne.g., vending machine example \n\n\n# Command line vs GUI\n\ne.g., moving a file\ngui - have continuous feedback\ncmd - have to know syntax, almost no feedback\n\ndirect manipulation\n- immdediate feedback\n- continuous represntations of objects\n- leverage metaphor (take advangates of pre-existing knowledge)\n\nsuccessful  indirection. cmd provides generalisation\n\n\neye to the future: gestures\n- solutions to menu creep?\n- even more direct?\n\n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/divide-and-conquer":{"title":"divide-and-conquer","content":"\nDivide an conquer algorithms have three parts:\n\n1. pre ⇒ break apartinto two or more smaller problems whose size add up to at most n\n2. Rec ⇒ solve those problems recursively\n3. post ⇒ combine solutions into a solution of the original problem\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/dns":{"title":"dns","content":"\nrecord has four fields\n- name\n- value\n- type\n- ttl\n\nmeaning of name an value are dependent on type\n\nTypes\n- A\n\t- name - hostname\n\t- value - ipv4 address for the hostname\n\t- hostname to ipv4 mapping\n- AAAA\n\t- same as A but ipv6\n- NS\n\t- name - domain (e.g., otago.ac.nz)\n\t- value  - hostname of authoritave DNS server that knows how to get the IP address for hosts in the domain\n\t- used to route DNS queries further along the query chain\n- CNAME\n\t- value - canonical hostname for the alias hostname Name\n\t- can provide querying the cananical name for a hostname\n- MX\n\t- value - canonical name of a mail server that has an alias hostname name\n\t- allows the hostnames of mail servers to have simple aliases\n\t- allows a company to have the same aliased name for its mail server and for one of its other servers (e.g., web server)\n\t- ","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/docker-containers":{"title":"docker-containers","content":"\nlink:https://www.youtube.com/watch?v=eGz9DS-aIeY\n\nwhere virtual machines virtualise hardware, docker virtualises OSs. Each of the containers uses the same underlying kernel. This is why its so fast. It is also why you cant run a windows OS and a Linux OS at the same time - because they use different kernels.\n\nCrontrol groups control how much OS resources each container can use.\n\nVM:\n- hardware\n\t- hypervisor\n\t\t- windows\n\t\t- ubuntu\n\t\t- debian\n\t\t- etc\n\nDocker\n- hardware\n\t- ubuntu\n\t\t- docker\n\t\t\t- debian\n\t\t\t- ubuntu\n\t\t\t- windows\n\t\t\t- etc\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/documentation":{"title":"documentation","content":"\n## 1 Who, what where\n- Audience\n\t- users\n\t- other devs\n\t- your team members\n\t- anyone trying to understand you software\n\t- your future self\n- Locations\n\t- source code\n\t- project repo\n\t- emebedding in program\n\t- hosted separately\n- User expectations\n\t- evolving towards software that _facilitates experimentation_\n\t\t- No help docs =\u003e everything is self-explanatory\n\t- high usability\n\t- users familar with many abstractions\n\t\t- e.g., touchscreens, menus, links\n- API's\n\t- for devs writing code to interact with your code\n\t- typically coupled with docs\n\t- entirely technical audience --\u003e tool generated docs are okay\n\t- not self explanatory\n\t- used by devs unfamiliar with code base\n- Project Docs\n\t- meaningful commit msgs\n\t- extra mangement with e.g., github\n\t\t- issue tracking\n\t\t- ensures relevant material is cross linked where possible\n\t\t- can easily refer to source code\n- Source code docs\n\t- header comments\n\t\t- software licencing\n\t\t- support devs\n\t\t- indicate code ownership\n\t- in code comments on fields methods etc\n\t\t- keep in sync with code changes\n\t- descriptive variable/class/other names\n\t\n## 2 Built in language support\n- basic\n\t- syntax for code comments\n\t- indicate that the compiler should ingnore\n\t- also more advanced like python \"doc strings\"\n- Structured comments and docs\n\t- machine parseable comments\n\t\t- e.g., javadocs, perl plain old docs\n\t\t- creates a doc website\n\t\t- uses annotations e.g., @author, @returns, @param\n- Literate programming\n\t- donald knuth suggestions (1984)\n\t\t- source code should be primarily natural language documentation\n\t\t- executable code snippetrs are included within the description\n\t\t- tools are used to:\n\t\t\t- tangle the code snippets\n\t\t\t- weave out the documentation\n\t- Modern implementations\n\t\t- jupyter notebooks\n\t\t- swift playgrounds\n\t\t- r markdown\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/domain-driven-design":{"title":"domain-driven-design","content":"\n\u003eA method of designing software by designing models of the domain and creating software which conforms to those models\n\nUbiquitous language -\u003e The language a team agrees on to describe ideas in the problem domain\n- This laguage becomes more and more refined as it is used\n- This reduces misunderstandings\n\nDiagram:\n```mermaid\n\tflowchart LR\n\tsubgraph Tactical Design Tools\n\t\tsubgraph Service\n\t\t\tdirection TB\n\t\t\tB(Project)\n\t\t\tC(Layers)\n\t\t\tD(Modules)\n\t\t\tE(Design Patters)\n\t\t\tF(OOP)\n\t\t\tG(Classes)\n\t\t\tH(Objects)\n\t\t\tI(Exe, jar, zip)\n\t\tend\n\tend\n```\n\n``` mermaid\n\tflowchart LR\n\tsubgraph  Strategic Design Tools\n\t\tdirection LR\n\t\tDomain--\u003eSub-Domain1--\u003eService1\n\t\tDomain--\u003eSub-Domain2--\u003eService2\n\t\tDomain--\u003eSub-Domain3--\u003eService3\n\tend\n\n```\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/dynamic-linear-datatype":{"title":"dynamic-linear-datatype","content":"\nBoth are Dynamic linear data types (interface) \n\nAn abstraction of a collection of data organised \"in a line\" which supprts addition of new elements and the removal of (some) old elements\n- representation\n\t- array (preffered because of memory management)\n\t- linked list (seems more natural)\n\t- and others\n\n# Stack\nLIFO Last in first out\n\nCan be used using javas `ArrayDeque` `push` and `pop` methods\n\n# Queue\nFIFO First in first out\n\nCan be used using javas `ArrayDeque` `add` and `remove` methods\n\ne.g., [priority-queue](notes/priority-queue.md)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/dynamic-programming":{"title":"dynamic-programming","content":"\nA method of designing algorithms, where a higher amount of space is used, in order to gain reduction in time. This usually done by *remembering previous calculations*. Typically these algorithms are done *bottom-up* i.e., by computing the \"base case\" first. \n\nRecursive algorithms can often be converted to counter-controlled for/while loops by:\n- initialising memory for answers\n- working from the bottom up\n- returning the answer\n\n```java\npublic long fibDP (int n) {\n\tlong[] f = new long[n+1];\n\tf[0] = 1; f[1] = 0;\n\tfor(int i = 2; i \u003c= n; i++){\n\t\tf[i] = f[i-1] + f[i-2];\n\t}\n\treturn f[n];\n}\n```\nA similar effect can be achieved using *memoization* (caching)\n\n# DP vs memoization\nA DP algorithm will typically compute *all* simpler versions of the problem from the bottom up. When this is neccessary then DP will be faster. However if only a small proportion of the simpler cases are actually needed it may be better to use memoization. Sometimes we can reduct the storage need for DP too. e.g., in the following fibonacci example\n\n```java\npublic long fibDP (int n) {\n\tint a = 1, b = 1, c = 1;\n\tfor(int i = 2; i \u003c= n; i++){\n\t\tc = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}\n```\n\n**Note:** Divide and conquer algorithms cannot be sped up by DP as Divide and Conquers splits into chunks with *no overlap*. This means there is nothing to remember by remembering previous calculations.\n\n# Route Counting Example\n\n![](https://i.imgur.com/AKl2fY5.png)\n\nCompute the number of routes from A to Z travelling only east or south.\n\nNumber of routes to Z is the sum of the number of routes to Z's western and northern neighbors. This is true for all nodes except for the edges.\n\nThe ideas to to fill the grid with numbers, where each node is the sum of its preceding neighbors. \n\n```java\npublic long count(int rows,int cols){\n\tlong[][] counts = new long[rows][cols];\n\t//init edges to 1\n\tfor (rows){\n\t\tfor (cols){\n\t\t\tcounts[r][c] = counts[r-1][c] + counts[r][c-1];\n\t\t}\n\t}\n\treturn counts[rows-1][cols-1];\n}\n```\n\n- since we can copute all the values in one row just from the preceding row, we could reduce the extra space requirement from rows x cols to just cols\n\n# Fibonacci numbers example\n\n$f_{0}= f_{1}= 1, f_{n}=f_{n-1}+ f_{n-2}\\ for\\  n \u003e 1$\n\nthe obvious recursive implementation requires exponential time becuase the recursive sub-problems\n- compute $f_n-1$, and\n- compute $f_n-2$\noverlap (the first generates an instance of the second in the next recurive call)\n\nDP says \"since you know you're goinf to need the values later, remember them as you compute them\", and (technically), does one more thing. \"while youre at it, since you need to know all the values, you might as well compute from simplest to most complex (bottom up)\"\n\nconvert recursive algorithms to counter controlled for or while loops.\n\n```java\npublic long fibDP (int n) {\n\tlong[] f = new long[n+1];\n\tf[0] = 1; f[1] = 0;\n\tfor(int i = 2; i \u003c= n; i++){\n\t\tf[i] = f[i-1] + f[i-2];\n\t}\n\treturn f[n];\n}\n```\n\n- initialise memorrt to store the answers for simpler problems\n- work from bottom up\n- return answer\n\n```java\nstatic HashMap\u003cInteger, Long\u003e fib = new HashMap\u003c\u003e();\npublic static long fibMEM(int n) {\n\tif(n \u003c= 1) return 1;\n\tif(!fib.containsKey(n)) {\n\t\tfib.put(n, fibMEM(n-1) + fibMEM(n-2));\n\t}\n\treturn fib.get(n);\n}\n```\n- this technique is called memoization (or caching)\n- whenever you compute a result store it somewhere before returning it\n- look it up(if you can) when needed\n- supported automatically in some languages (e.g., Python's @functools.cache, and any symbolic programming language)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/entity-relationship-diagrams":{"title":"entity-relationship-diagrams","content":"\n![](https://i.imgur.com/SIgTzZ5.png)\n\ncardinality\nidentifying vs non identifying relationship\n\nlabels are important - but not always needed\n\nassociative entity =\u003e changes many to many relationship with additional relationship\n\n# subtypes\n![](https://i.imgur.com/5sgPCxO.png)\n![](https://i.imgur.com/Q0jMI3b.png)\n\nuses:\n- model mutual exclusivity\n- better for modelling not for implementation\n\n# parallel relationship\n![](https://i.imgur.com/UJXPI1l.png)\n\ncould model as separate relationships via staff subtypes\nnot very common\n\n![](https://i.imgur.com/niEL1Y2.png)\n\nalso an example of recursive many-to-many relationships\n\n# recursive relationship\nlabels are critical\nusually 1:M can be 1:1 or M:M\n![](https://i.imgur.com/CaEgEkp.png)\n\n# dealing with data history\n![](https://i.imgur.com/cohxggK.png)\n\ncould be many to many relationships:![](https://i.imgur.com/g4ynsh2.png)\n\nso associative relationship: ![](https://i.imgur.com/NXxsJRl.png)\n\nwhat do we require:\n- for the current point in time\n- an histroical record how ⇒ must be selecetive to not use up to much space\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/error-prevention":{"title":"error-prevention","content":"\n### 2.1 Bad input\n\n![](https://i.imgur.com/54tVH7B.png)\n\ncorrect human errors\nauto completion\n\n### 2.2 helpful constraints\n\n![](https://i.imgur.com/n4HT5L9.png)\n\n### 2.3 Suggestions and autocorrection\n\n![](https://i.imgur.com/c2l9MWy.png)\n\nheavily abused by industry\n- they can influence suggestions\n\n### 2.4 Forgiving formatting\n\n![](https://i.imgur.com/ldZUMer.png)\n\n- reduce errors\n- \n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/eth-governance":{"title":"eth-governance","content":"\nnote: may be out of date after the merge\n\n- governance are the systems that allow decisions to be made\n\t- e.g., shareholders vote on proposals for change, elected officials enact legislation that attempts to represent their constituents desires, board of directors have the final say in decision making\n- decentralised governance\n\t- no one person owns or controls ethereum, this makes traditional organizational governance an incompatible solution\n- eth governance\n\t- the process by which protocol changes are made\n\t\t- not related to how people and applications use the protocol because eth is permissionless – anyone can participate in on chain activities\n\t- the governance systems need to ensure that changes to the protocol are secure and widely supported by the community\n\t- on/off chain\n\t\t- on: proposed changes to the protocol are decided by stakeholders (holders of a governance token) and voting happens \"on the blockchain\" – sometimes changes are already written and are automatically implemented if a vote is successful\n\t\t- off: decisions are made through an informal process of social discussion, which , if approved, would be implemented in code\n\t- eth is off chain – but many things built on eth (e.g., DAOs) use on chain governance\n- who is involved (stakeholders)\n\t- ether holders\n\t- application users\n\t- application tooling devs\n\t- node operators\n\t- EIP authors – propose changes to the eth protocol\n\t- miners/validators\n\t- protocol developers\n- EIP – eth improvement protocol\n\t- anyone can create\n- process for change\n\t- propose a core EIP\n\t- present EIP to devs\n\t\t- rejected/modified/considered for dev\n\t- EIP is developed\n\t- EIP included in network upgrade (coordination required)\n\t- upgrade activated (tested on a testnet first)\n- handling diagreements\n\t- discussion in public forum – hopefully, one side concedes or a medium is reached\n\t- however can result in a chain split\n- fork: when major technical upgrades or changes need to be made to the network\n\t-  DAO fork\n\t\t-  low turnout\n\t\t-  many weren't aware\n\t\t-  only represented ETH holders, not other participants\n\t-  some didn't want to fork because it wasn't a fault in the system\n\t-  community has adopted a policy of non-intervention in the case of contract bugs or lost funds, to retain credible neutrality\n\t-  \n\nfurther reading\n-   [Notes on Blockchain Governance](https://vitalik.ca/general/2017/12/17/voting.html) - _Vitalik Buterin_\n-   [Governance on Ethereum](https://docs.ethhub.io/ethereum-basics/governance/) – _ETHHub_\n-   [How does Ethereum Governance work?](https://cryptotesters.com/blog/ethereum-governance) – _Cryptotesters_\n-   [How Ethereum governance works](https://medium.com/coinmonks/how-ethereum-governance-works-71856426b63a) – _Micah Zoltu_\n-   [What is an Ethereum core developer?](https://hudsonjameson.com/2020-06-22-what-is-an-ethereum-core-developer/) - _Hudson Jameson_\n-   [Governance, Part 2: Plutocracy Is Still Bad](https://vitalik.ca/general/2018/03/28/plutocracy.html) - _Vitalik Buterin_\n-   [Moving beyond coin voting governance](https://vitalik.ca/general/2021/08/16/voting3.html) - _Vitalik Buterin_","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/ethereum":{"title":"ethereum","content":"\nethereum whitepaper \n- a new version of blockchain which has better internal scripting\n- the state of ethereum is made up account objects. each acc has:\n\t- nonce\n\t- balance\n\t- contract code\n\t- storage\n- There are two types of accounts\n\t- external: \n\t\t- controlled by private keys\n\t\t- no code\n\t\t- can send \"messages\" as a transaction\n\t- contract: controled by contract code\n\t\t- executes code when it recieves a message\n\t\t\t- read/write from storage\n\t\t\t- send messages\n\t\t\t- create contracts\n\t\t\t- etc\n- messages - similar to bitcoin transactions but:\t\n\t- can be created by contract and externall accounts (not only external)\n\t- can contain data\n\t- contract accounts can return responses when they recieve a message\n\t\t- ∴ can act as functions\n- transaction - refers to signed package that stores a message to be sent from an external account\n\t- they contain\n\t\t- recipient of message\n\t\t- signature of sender\n\t\t- amout of ether and data to send\n\t\t- STARTGAS - limit to number of steps of code\n\t\t- GASPRICE - fee to pay miner per step\n- applications\n\t- identiy and reputation systems\n\t- decentralised file storage\n\t- decentralised autonomous organisations [DAO](notes/decentralized-autonomous-organization.md)\n\t- savings wallets\n\t- crop insurance\n\t- decentralised data feed\n\t- smart multi-signature escrow\n\t- cloud computing\n\t- p2p gambling\n\t- on-chain decentralised marketplaces\n\n# Storage\nThe state of ethereum is not an abstract concept as it is in [[bitcoin]]\n\nEthereum is a transaction based state machine. \n\nActivities such as transactions, contracts, and minig all change the state of the ethereum blockchain.\n\ne.g., an accout balance (stored in the state trie) which changes every time a transac\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/ethics-essay":{"title":"","content":"# Misinformation and the Wellington Protests\nJet Hughes 9474308\n\n# Intro\nAs members of society, we must consider the ethical implications of our actions and inactions. This extends to our private lives, and our work. As members of the IT profession, we have an obligation to adhere to certain standards. These have been collated and formalised into the ACM Code of Ethics [^0]. This Code \"expresses the conscience of the profession\", putting human well-being as the main focus. Although it provides a guideline for us to follow, it is not specific to everyone and should merely act as a foundation for individuals, businesses, and governments to build upon. \n\nThe recent outbreak of misinformation and censorship, culminating in Aotearoa with the convoy and the Wellington protest in February and March this year, provides an interesting avenue through which we can analyse the spread of information through online channels, and the impact of the computing profession. Many businesses in the computing sector were key components of the event. For example, Facebook, Gab and Telegram, as well as stuff.co.nz and other news outlets. These organisations have an inherent obligation to consider how their platforms are being used to encourage or discourage the spread of information, regardless of its source and credibility. \n\nI do not have the knowledge or experience to make an informed decision about what should be allowed on large platforms such as Spotify, Facebook, and YouTube. However, I am able to give my opinion about how misinformation, censorship, and freedom of expression should be balanced. This essay will examine the point of view of the protesters at Wellington and contrast it with Stuff's Fire and Fury in an attempt to learn more about how to balance censorship and freedom of expression in an online world. \n\n# 1 - River of Filth\nThroughout history, we can observe countless instances of delayed acceptance of medical discoveries. Even the process of resuscitation through mouth-to-mouth breathing and chest compressions was initially rejected by the public and discouraged [^1]. Anti-Vaccination movements existed long before the Covid-19 pandemic. Ever since the first vaccinations, REF people have felt uncomfortable. Shorty before Covid-19 struck, Anti Vaccination supporters protested against the MMR and Measles vaccines. However, following the announcement of the Covid-19 vaccine, these groups gained more followers and started to spread their views, which eventually led to the convoy and the Wellington protests [^2]. They documented their journey in the video titled River of Filth. The video starts with news and articles where the NZ government stated that the vaccine would not be mandatory. Next, they depict the government's betrayal of this promise, forcing 40% of the NZ workforce to be vaccinated. They then showed footage of the convoy, various protests along the way, and the camp out at Wellington parliament. The video then finishes with a message condemning the government and mainstream media, and praising the protesters and their efforts. After 23 days the protesters were forcefully and violently removed more than 100 police, 87 protesters were arrested, and 50 vehicles towed [^3][^4]. The protesters were mostly protesting the NZ government Covid-19 response, including mask mandates, vaccine mandates and lockdowns[^2]. However, various anti-establishment and/or anti-mainstream media groups were also present, many of which were calling for trials and executions. \n\nThis protest is part of a worldwide trend, an \"epidemic of misinformation\" [^5]. The protests spawned from online campaigns and pre-existing fringe groups who found a common cause [^6]. Online platforms such as Facebook, Instagram, TikTok, Gab and Telegram facilitated the formation and propagation of these groups and various other protests [^6]. They enabled the protesters to reach a large audience, spread their agenda and influence the public. One of the most prominent organisations, Voices for Freedom (VFF) were banned from Facebook, and were able to successfully migrate to other, more lenient platforms such as Gab and Telegram [^7]. They deployed techniques similar to fascist strategies, such as \"flooding the zone\" and trying to \"swarm social media\". They asked for assistance from long-standing members of the anti-vax community who gave advice such as giving the people \"an alternative narrative\", a strategy used to refute the Flu and MMR vaccines. \n\nThe role of the IT sector in the Wellington protests is clearly a significant one. Without the platforms mentioned, the protest could have likely never happened. However, the eradication of these platforms is not a solution. What we can do, however, is try to balance and regulate the spread of misinformation on these platforms. But we must be careful in doing so, as people have a right to free speech. How can we balance censorship and freedom of expression on platform such as these? \n\n# 2 - Fire and Fury\nThe documentary Fire and Fury created by a team of journalists from Stuff.co.nz, investigating the Wellington protests, what caused them, and some of the key people behind the protests. It showed the progress of the movement leading up to the occupation [^7]. The documentary received mixed reviews and a very low score of 3.9/10 from IMDB [^8]. An in-house review by stuff praised it as \"journalism at the peak of its powers\" [^9], while others have said it \"veers into the absurd\" [^9]. Of course, each of these third parties have biases of their own which must be taken into account. Everyone online is able to present themselves however they like, and masquerade as something they are not. It is incredibly difficult to separate the good from the bad. \n\nThe stuff article praising the documentary [^9] says the team behind it \"interviewed the right people\", \"spoke to a vast audience\", and \"told us 'what lies behind the cloud'\". However, those critical of it [^10][^11] suggest it fails to consider the viewpoint of those it depicts, and that is itself state-funded propaganda and \"is part of the very problem the makers purport to deplore\" [^12]. These critics also assert that \"the makers set out with a preconceived objective\" [^12], and that there was no attempt to understand what drove the protesters and consider both sides of the story. They say the documentary failed to ask an important question: \"why so many people no longer trust the media\". They say the mainstream media \"have lost sight of what was previously their primary objective which, was to reflect society back to itself and report, as neutrally as possible, on matters of interest and concern to the communities they purported to serve\" [^12].\n\nEach of these two documentaries, Fire and Fury and River of Filth, depict a different perspective of the Wellington Protests. There are many differences in the production of each of the pieces. Firstly, the stuff documentary had significant funding, took significant time and effort to complete, and was backed by a large team of successful journalists [^10]. Conversely, the River of Filth had very little funding, and was made by a very small team. Despite this, both videos demonstrate the power of misinformation in our digital age.\n\nI am not qualified to suggest what constitutes good journalism, however as a computer science student, I can consider the impact that our work as IT professionals has on the issue. \n\n# 3 - The spread of information\nWe live in an digital age. Vast amounts of Information is widely accessible to everyone. This is made possible by various websites and applications. Although the benefits of these technologies are great, they come with great responsibility. Not only do they provide a platform for individuals to access information, they also enable the spread of potentially harmful, false, and misleading information.\n\nThe spread of information has evolved. Articles show to users are carefully ranked by algorithms built into social media platforms such as Facebook [^13], and Twitter [^14]. Rather than show you each post in chronological order, algorithms consider the amount of engagement posts are getting, and show more popular posts higher up in viewers feeds, thus making them reach a larger audience. This helps to improve the experience of the viewers, as the posts they see will be of higher interest. However, by promoting content that receives a large amount of engagement, these algorithms have a tendency to promote controversial content. This is because controversial content creates a stronger emotional response in a viewer [^15]. Unfortunately, the algorithms are unable to determine whether engagement is from people sharing something because they dislike it or because they like it. Furthermore, there are many groups with the intent of creating hordes of fake accounts to spread a particular agenda and create controversy. This has been termed - \"Coordinated Inauthentic Behaviour\" within Facebook [^13].\n\nSome social media sites such as Reddit and YouTube have employed some interesting, and sometimes effective, techniques to combat these issues.  The main ones being YouTube's dislike button and Reddit Karma system [^17]. On Reddit, this allows users to condemn posts that they believe are harmful, wrong, or contain misinformation. However, users can just as easily downvote posts simply because they disagree. YouTube however, recently removed the dislike count from videos but kept the dislike button. This was to combat a few issues, including hate campaigns against a particular channel is which groups would spam a channel with dislikes with the intent of damaging the channel [^18]. The YouTube community was outraged at this decision. Many users stated they relied on the dislike count to discern the authenticity and usefullness of a video before wasting time watching it.\n\n# 4 - What can we do about it?\nSo what can we do, as IT professionals, to improve the online environemnt wit regard to the spread of information? The ACM code of ethics outlines a set of principles that should act as a baseline for our actions. The ACM code of ethics was \"designed to inspire and guide the ethical conduct of all computing professionals\" and act as a \"basis for remediation when violations occur\". The Code is a set of principles with the public good as the primary consideration, each with a set of guidelines to help professionals put the principles into practice. The Code is an attempt to apply fundamental ethical principles to the computing profession.\n\nHow can we apply this Code to the issue of misinformation, censorship, and freedom of expression. This is a very difficult and nuanced topic. I personally think that freedom of speech is a very important part of our lives and that it should be held in the highest regard. However, it is not possible to grant entirely free speech to everyone while completely prohibiting misinformation. We must find a trade-off between free speech and censorship of misinformation. As Mark Zuckerberg mention on episode 1863 of the Joe Rogan Experience podcast [^13], when identifying which channels should be censored, we have to choose between more false positives or more false negatives. It takes a substantial effort to fact-check and verify articles. For this reason, sites such as Facebook, make use of AI algorithms to flag potentially unwanted content [^13]. This has some inherent issues: Namely, how do these algorithms decide what is harmful? What data is it trained on? Who chose what to train the algorithms on?  Why should they be the ones to decide what is right and wrong? In the interview with Joe Rogan, Zuckerberg stated that for important and controversial cases, posts are reviewed by third parties which analyse and fact check these articles. This is still not a perfect solution. The decision about what is censored is still made by a select group of people. Maybe this is the best option, I cannot say for sure that it is not.\n\nWhen the Voices for Freedom group grew sufficiently large, Facebook made the decision to ban them. Subsequently, they switched to using Telegram [^20] messenger and the Gab [^19] social network as their main platforms. These sites value free speech and individual liberty above all else. These sites have become a haven for the far-right and other fringe groups, many of which have been banned from mainstream sites such as Facebook and Twitter [^21][^22]. This is concerning because It is concentrating the misinformation spreaders, trolls, and conspiracy theorists in one large echo-chamber.\n\nWhile it is not feasible to fully eliminate harmful media, there are ways in which we can protect our society against it. Firstly, we should place greater priority on educating people about misinformation, disinformation, and other harmful media, and suggest ways in which individuals can protect themselves. We should encourage people to do proper research and come to their own conclusions about controversial subjects. Unfortunately, this is very difficult when media, both mainstream and social, is so saturated with bad information and malignant organisations.\n\n# Conclusion\nIn conclusion the anti-vax, anti-establishment protests in Wellington are a symptom of a larger problem within the online world. We live in an age where information is widely available and consumed by a large proportion of the world. This information is not always truthful, and is often intentionally misleading and/or harmful. Groups such as Voices for Freedom and Counterspin Media at the forefront of the Wellington protests are able to utilise these platforms, to further their agenda and reach a larger audience, regardless of the accuracy and truthfulness of their information. As IT professionals, our work plays an important role in this environment, and we have an obligation to consider the ethical implication of our actions. As stated in the ACM Code of Ethics, the public good, and human lives should be the primary factor informing our decisions. However, despite our best efforts, it is not possible to fully eradicate harmful misinformation, disinformation, and conspiracy theories without forfeiting our right to free speech.\n\n\n# References\n[^0]:https://www.acm.org/code-of-ethics\n[^1]: https://www.alcor.org/library/persons-apparently-dead/\n[^2]: https://en.wikipedia.org/wiki/2022_Wellington_protest\n[^3]: https://www.stuff.co.nz/dominion-post/news/wellington/127928119/protesters-disperse-after-major-police-operation-ends-parliament-occupation\n[^4]:  https://www.nzherald.co.nz/nz/wellington-protest-police-wont-stop-until-occupation-cleared-out-says-former-frontline-cop/RMVTC7A6FYGTJCHLNM36QDWDZM/\n[^5]: https://www.theguardian.com/world/2021/aug/30/even-as-new-zealand-battles-covid-trust-in-government-bucks-global-trend\n[^6]:https://89initiative.com/the-role-of-social-media-in-protests-mobilising-or-polarising/\n[^7]:https://interactives.stuff.co.nz/2022/08/circuit/fire-and-fury-disinformation-in-new-zealand/\n[^8]: https://www.imdb.com/title/tt21914900/\n[^9]:https://www.stuff.co.nz/opinion/129689450/fire-and-fury-documentary-shows-journalism-at-the-peak-of-its-powers\n[^10]:https://theplatform.kiwi/opinions/fire-and-fury-is-often-funny-unintentionally\n[^11]: https://www.thedailyexaminer.co.nz/state-funded-fire-and-fury-documentary-unbalanced-hyperbole/\n[^12]: https://karldufresne.blogspot.com/2022/08/a-few-thoughts-on-stuffs-fire-and-fury.html\n[^13]:https://open.spotify.com/episode/51gxrAActH18RGhKNza598?si=c97b379af53445b9\n[^14]:https://blog.hootsuite.com/twitter-algorithm/\n[^15]:https://www.warc.com/newsandopinion/news/consumers-respond-to-emotional-content/en-gb/38426\n[^16]:https://msafaksari.com/2022/02/28/fake-and-troll-accounts-on-social-media/\n[^17]: https://www.reddithelp.com/hc/en-us/articles/204511829-What-is-karma-\n[^18]:https://www.makeuseof.com/the-real-reason-why-youtube-hid-dislikes/\n[^19]: https://gab.com\n[^20]: https://telegram.org\n[^21]: https://www.theguardian.com/media/2016/nov/17/gab-alt-right-social-media-twitter\n[^22]: https://web.archive.org/web/20181031003944/https://www.bloomberg.com/news/articles/2018-10-30/gab-an-online-haven-for-white-supremacists-plots-its-future","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/ethics-in-cs":{"title":"ethics-in-cs","content":"\n## 1 Case studies\n\n1. [[notes/facial-recognition-in-US-riots-2021-01-06]]\n2. [[notes/anti-govt-protest-china]]\n3. [[notes/how-is-safe-enough-for-autonomous-vehicles]]\n\n### 1.1 Differences 1 vs 2\nGovt vs vigilante\n\nmy judgements contain additionl context\n\te.g., pro-democratic vs anti\n\t\nworld contains vast differences\n\thow systems of laws work\n\textent of civil liberties afforded to individuals\n\n### 1.2 Discussion\nWhen developing a technology you dont know what is could be used for\n\n## 2 Ethical handling of data\n- Data moves very quickly due to computerised systems\n- privacy act 2020\n- its unethical to ignore potential security problems\n\t- df\n\n## 3 Ethical handling of bias and errors, e.g., in AI\n- large datasets oftenb incdlude bias and errors\n\t- to AI trained on these datasets with also be biased\n\t- e.g., facial recognition trining overrepresenting white males\n- ML algorithgms are often opqaue\n\t- its not possible to understand how decisions are reached\n\t- makes asessing suitability of AI for a use case difficult\n- explainable AI\n- attacks e.g., 'trapdoors' within ML training data \n\n## 4 False or misleading claims\n- pressure to release can lead to false claims\n\t- are features fully tested\n- need to assess risks of bias\n- e.g., AWS uptime information\n\t- rumoured that service status colour is n management decision\n\t- \n\n## 5 Your responsibility\n- dont stay silent\n\n## 6 Professional reponsibilities\n- comp science per se lacks profressional standards\n- there are some prefessional bodies which encoede responsibilities\n\t- ACM coc\n\t- IEEE coc\n\t- neither are specific to NZ\n- Within NZ must consider treaty obligations\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/evaluating-designs":{"title":"evaluating-designs","content":"\n#unfinished \n\nWhy to evaluate using 'outside' people:\n- how do we know if a [prototye](notes/prototyping.md) is good\n- designer/developers are not 'fresh' -\u003e they already have experience with the product\n- designer/developers don't know what real users will do\n\n# Issues to consider\n- Reliability/precision\n\t- how accurate is your study?\n\t- Is is reproducible -\u003e if it was repeated, would you get the same result\n- Generalizability\n\t- Is your sample representative\n- Realism\n\t- Would observed behaviour also occur in the wild\n- Comparison\n\t- Shows how different options were recieved\n\t- rather than a \"people liked it\" study\n- work involved/efficiency\n\t- How cost efficient are your methods\n\n# Factors to consider when choosing an evaluation method\n- Stage in the cycle at which the evaluation is carried out -\u003e (design / implementation)\n- Style of evaluation -\u003e (lab / field)\n- Level of subjectivity or objectivity\n- Type of measurement -\u003e (qualitative / quantitative)\n- Information provided -\u003e (high-level / low-level)\n- Immediacy of response -\u003e (real-time / recollection of events)\n- Level of interference implied -\u003e (intrusiveness)\n- Resources required -\u003e (equipment, time, money, subjects, expertise, context) \n\n# Styles of evaluation\n## Laboratory Studies \n- 1st step: Designer evaluates his/her UI\n- Specialised equipment for testing available\n- Undisturbed (can be a good or bad thing) \n- Allows for well controlled experiments\n- Substitute for dangerous or remote real-world locations\n- Variations in manipulations possible / alternatives\n\n## Field Studies\n- Within the actual user’s working environment\n- Observe the system in action\n- Disturbance / interruptions (+/-)\n- Long-term studies possible\n- Bias: presence of observer and equipment\n- Needs support / disturbs real workflow\n\n# Quantitative vs Qualitative methods\n## Quantitative Measures\n- Usually numeric\n- E.g. # of errors, time to complete a certain task, questionnaire with scales\n- Can be (easily) analysed using statistical techniques\n- Rather objective\n- Most useful in comparing alternative designs\n- Test hypotheses\n- Confirm designs\n\n## Qualitative Measures\n- Non-numeric\n- E.g. survey, interview, informal observation, heuristic evaluation\n- Difficult to analyse, demands interpretation\n- Rather subjective \n- User’s overall reaction and understanding of design\n- Generate hypotheses\n- Find flaws\n\n# Stage in cycle\n## Design Stage\n- Only concept (even if very detailed) exists\n- More experts, less users involved\n- Greatest pay-off: early error detection saves a lot of development money\n- Rather qualitative measures (exceptions: detail alternatives; fundamental questions, ...)\n\n## Implementation\n- Artefact exists, sth. concrete to be tested\n- More users, less experts involved\n- Assures quality of product before or after deployment; bug detection\n- Rather quantitative measures (exceptions: overall satisfaction, appeal, ...)\n\n# Methods\n## Usability studies\n- Bringing people in to test Product\n\t- Usage setting is not ecologically valid - usage in real world can be different\n\t- can have tester bias - testers are not the same as real users\n\t- cant compare interfaces\n\t- requires physical contact\n## Surveys and focus groups\n+ quicly get feedback from large number of responses\n+ auto tally ressults\n+ easy to compare different products\n- responder bias\n- Not accurate representation of real product\n* e.g., [](https://i.imgur.com/midv8VU.png)\n\n* Focus groups\n\t* gathering groups of people to discuss an interface\n\t* group setting can help or hinder\n\t\n## Feedback from experts\n- Peer critique\n- Dogfooding\n\t- Using tools yourself\n- [heuristic-evaluation](notes/heuristic-evaluation.md)\n\t- structured feedback\n\n## Comparative experiments\n- in lab, field, online\n- short or long duration\n- which option is better?\n- what matters most?\n- can see real usage\n- more actionable\n\n## Participant observation\n- observe what people do in the actual evironment\n- usually more long term\n\t- find things not present in short term studies\n- [observation](notes/participant-observation.md)\n\n## Simulation and formal models\n- more mathmatical quantitative \n- useful if you have a theory to test\n- often used for input techniques\n- can test multiple alternatives quickly\n- typically simulation is used in conjugtion with monte carlo optimisation\n\n# Query techniques\n- [interviewing](notes/interviewing.md)\n- questionnaires\n\t- less flexible\n\t- larger samples possible\n\t- design of questionnaire is for expert only\n\t- use of standard (proven) questionnaires recommended\n\t- types of questions: \n\t\t- general (age, gender)\n\t\t- open ended \n\t\t- scalar (e.g., likert-like scales)\n\t\t- multiple choice\n\t\t- ranking\n\n# Users\n- users can come up with great ideas\n\t- lead user -\u003e need specific soluton that does not exist -\u003e often make up their own solution\n\t- extreme user -\u003e use existing solution for it's intended purpose to an extreme degree \n\t- typical user -\u003e \n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/extreme-programming":{"title":"extreme-programming","content":"\ntake current industry practices to the extreme\n- focus of proven industry practices\n- combine them innovatively to get better results\n\n# 1 Values and principles\ncommunication, simplicity, feedback, courage.\n- Planning -\u003e based on user stories \n- Testing -\u003e thorough testing at every step \n- Pair programming -\u003e watch, inspect, and trade off \n- Simple designs -\u003e based on agile modelling principles \n- Refactoring -\u003e redo and clean up as you go \n- Collective code ownership -\u003e egoless development, anyone can review and improve code \n- Continuous integration -\u003e grow the software continuously\n- On-site customer -\u003e get sign-off as you go \n- System metaphor -\u003e what should the final system look like? Small releases given to users frequently \n- Forty-hour work week -\u003e don’t overload the developers \n- Coding standards -\u003e follow industry standards for code\n\n# 2 Three ring project approach\n\n![](https://i.imgur.com/Rl5Wuwm.png)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/facial-recognition-in-US-riots-2021-01-06":{"title":"facial-recognition-in-US-riots-2021-01-06","content":"\ncapital riots occured on 2021-01-06\n\nthere was video from the riots which contained faces\n- facial recognition acquired a pic of each person\n- faces were uploaded to a website\n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/familiar-metaphors-and-language":{"title":"familiar-metaphors-and-language","content":"\n![](https://i.imgur.com/sdNv98E.png)\n![](https://i.imgur.com/IbIBK5t.png)\n\nimitating familiar real life\n\nCategories\n- good\n\t- ![](https://i.imgur.com/7wRRBii.png)\n- bad\n\t- ![](https://i.imgur.com/vDKOuOo.png)\n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/file-based-storage":{"title":"file-based-storage","content":"\ndoesn't scale well\n\n- demlimited text e.g., CSV TSV\n\t- easy to create and process\n\t- portable\n\t- lowest common denominator\n- structured text e.g., JSON, XML, YAML\n\t- many tools for querying and transforming data\n\t- portable also\n- Serialiased data Structures (*usually* binary)\n\t- more compact\n\t- easy to do\n\t- single user only\n\t- no automatic failure recovery\n\t- no querying\n\t- versioning issues\n\t- no standards\n\t- less portable\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/finite-state-machine":{"title":"finite-state-machine","content":"\nA finite state machine is a program which has a number of states called nodes with transition edges between them. You then move the state of the program to a particular state by navigating through the edges.\n\nThis can be implemented as a large switch block. However, this results code which is not suited for readability. It may be useful to define the program using some higher order structure, and create it programmatically via [2 1 Using code to create code](notes/12-automation#2%201%20Using%20code%20to%20create%20code)\n\nFor example something like a phone machine could be implemented as a finite state machine\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/flexibility-and-efficiency":{"title":"flexibility-and-efficiency","content":"\n### 4.1 Choices\n\n![](https://i.imgur.com/lUBB7EN.png#invert)\n![](https://i.imgur.com/1OaTaPg.png#invert)\n![](https://i.imgur.com/8KaFDme.png#invert)\n\nsomething with immediate effect can use switch\n![](https://i.imgur.com/COR8E7w.png#invert)\n\n![](https://i.imgur.com/EQbB1Ep.png#invert)\n![](https://i.imgur.com/QhFssbP.png#invert)\n![](https://i.imgur.com/PG2Iu9a.png#invert)\n\ngood defaults\n\n![](https://i.imgur.com/pj5Ztij.png)\n\n4.2 shortcuts and advanced options\n\n![](https://i.imgur.com/0OG7qRx.png)\n\nambient information\n\n![](https://i.imgur.com/s2zyIws.png)\n\nproactivity\n\n![](https://i.imgur.com/gmDLWMO.png)\n![](https://i.imgur.com/Izu8bQX.png)\n![](https://i.imgur.com/hiGeXW3.png)\n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/food-manufacturing":{"title":"food-manufacturing","content":"\nLink between agricultural producer and consumers. Process raw food into finished goods read for grocer/wholesaler\n\n| Industry segment                                              | Employment | Establishments |\n|---------------------------------------------------------------|------------|----------------|\n| Total                                                         | 100.0      | 100.0          |\n| Animal slaughtering and processing                            | 34.5       | 14.3           |\n| Bakeries and tortilla manufacturing                           | 18.7       | 40.0           |\n| Fruit and vegetable preserving and special food manufacturing | 11.9       | 6.6            |\n| Dairy product manufacturing                                   | 8.8        | 6.2            |\n| Sugar and confectionary product manufacturing                 | 4.8        | 7.1            |\n| Grain and oilseed milling                                     | 4.2        | 3.3            |\n| Animal food manufacturing                                     | 3.5        | 7.0            |\n| Seafood product preperation and packaging                     | 2.5        | 3.0            |\n| Other food manufacturing                                      | 11.0       | 12.5           |\n\n| Occupation|\n|-|\n| Number|\n| All occupations|\n| Management, business, and financial occupations|\n| Service occupations|\n| Sales and related occupations|\n| Office and administrative support occupations|\n| Installation, maintenance, and repair occupations|\n| \u0026nbsp; Industrial machinery installation, repair, and maintenance workers|\n| Production occupations|\n| First-line supervisors/managers of production and operating workers|\n| Team assemblers|\n| Bakers|\n| Butchers and meat cutters|\n| Meat, poultry, and fish cutters and trimmers|\n| Slaughterers and meat packers|\n| Food batchmakers|\n| Food cooking machine operators and tenders|\n| Crushing, grinding, polishing, mixing, and blending workers|\n| Inspectors, testers, sorters, samplers, and weighers|\n| Packaging and filling machine operators and tenders|\n| Helpers—Production workers|\n| Transportation and material moving occupations|\n| Driver/sales workers and truck drivers|\n| Industrial truck and tractor operators|\n| Cleaners of vehicles and equipment|\n| Laborers and freight, stock, and material movers, hand|\n| Packers and packagers, hand|\n| NOTE: Columns may not add to total due to omission of occupations with small employment.|","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/front-end-project":{"title":"front-end-project","content":"\n[spec](https://cosc203.cspages.otago.ac.nz/assignments/a1/)\n\n\nLinks to sites:\n- https://jethughes.github.io/nzbirds/\n- https://cosc-203.cspages.otago.ac.nz/assignment-01/\n\nLinks to repos:\n- https://github.com/JetHughes/nzbirds\n- https://altitude.otago.ac.nz/cosc-203/assignment-01\n\n\n| Features                                                         | marks | x  |\n|------------------------------------------------------------------|-------| -- |\n| Display: all photos by default                                   | 2     | x  |\n| Display: each bird’s name in both Māori and English              | 2     | x  |\n| Display: each bird’s conservation status in both text and colour | 2     | x  |\n| Display: credit for each photo                                   | 1     | x  |\n| Form: search filtering                                           | 3     | x  |\n| Form: category filtering                                         | 3     | x  |\n| Form: Handle special characters (diacritics)                     | 1     | x  |\n| Correctness: pass the W3C Validator                              | 1     | x  |\n| Correctness: correct use of form and semantic elements           | 1     | x  |\n| Style: Responsive design                                         | 1     |   |\n| Style: looks nice                                                | 1     | x  |\n| Extra feature(s) bonus marks                                     |       |    |\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/full-assignment":{"title":"Milestone 3","content":"\n# Brain Storming\n## Concept 1 - Snowboard trick generator. \nThis will be a mobile app that snowboarders can use to automatically generate random tricks. This app will be useful because snowboarders (riders) often get tunnel vision on a certain style of tricks or even a single trick. Using a algorithm to generate tricks provides a way for them to escape this focus. It can also be used when playing a game of SNOW, which is similar to a game of SKATE.\n\n## Initial Ideas\n- customisable trick generator\n\t- trick lists --\u003e users can create lists for the generator to choose a trick from\n\t\t- some built in lists\n\t\t- share lists with friends\n\t- options\n\t\t- trick types\n\t\t\t- jump\n\t\t\t- rail\n\t\t\t- pipe\n\t\t\t- butters\n\t\t- flips\n\t\t- spins\n\t\t- grabs\n\t\t- spin direction\n\t\t- bring back or not\n\t\t- stance\n\t\t\t- regular\n\t\t\t- goofy\n- daily trick\n\t- same for all users?\n\t- auto notification\n\t- schedule\n\t\t- weekly\n\t\t- custom\n\t\t- auto when at an altitude\n- App widget with daily trick? \n- search for tricks\n\t- options similar to generator\n\t- save tricks to a list for generator\n- link with other users\n\t- methods\n\t\t- qr code\n\t\t- url/link\n\t\t- contact\n\t\t- social media\n\t- people\n\t\t- friends\n\t\t- coach\n\t\t- parents\n\t- features\n\t\t- daily/sheduled trick group\n\t\t\t- how would this work with altitude detector\n\t\t- share trick lists\n\t\t- community section for trick lists\n\t\t\t- like spotify playlists\n\t\t- users can share tutorials\n- Ease of use - (hard to use with gloves)\n\t- voice controls\n\t- gesture controls\n- goals tracking\n\t- goal lists\n\t- daily/weekly/yearly goals\n\t- trick generator can choose a trick from goals\n\t- share (or keep private) with coach and friends\n\t- trick tutorials\n\n## Final Choices\nCore features:\n- customisable generator\n\t- all options no trick lists\n- daily trick\n\t- Notification\n\t- able to set a schedule or have it go when at an altitude\n- links with friends\n\t- Do same tricks\n\t- link with QR code or url\n\nThe first core feature of the app is the customisable trick generator. It should be very easy and quick to use. This presents an interesting problem as while snowboarding, users are wearing large mittens, and the air can be very cold for hands. It would be ideal if it could be used while wearing mittens. \n\nThe second core feature of the app is the Daily Trick. This means that users get a notification with a random trick from the trick generator. This feature could allows users to get the benefit of the trick generator without having to open the app on the mountain. However, the issue here is that most people don't snowboard everyday. To get around this, I could allow the users to schedule days on which to recieve a daily trick, or I could alert them whenever they are on a mountain by monitoring their altitude. Of course the second option has some privacy issues that will need to be considered.\n\nThe third core feature of the app is the link with friends. This is a core feature because snowboarders will typically rider with a group of friends. Being able to join a 'trick group' means these groups can do the same trick and 'compete' against each other.\n\n## Existing Apps\nSimilar Apps I found:\n\n- For skateboarding: \n\t- [getatrick.com](https://getatrick.com)\n\t- skate gen mobile app\n\t- Skate Tricks\n\t- Skateboard tricks\n\t- Skate Dice\n- Freestyle Generator for inline skating, tramp and skiing\n- Scooter trick generator\n\nI was able to find only 7 apps with similar functionality to what I am planning. Of these none 5 were for skateboarding 2 for other sports and zero for snowboarding. \n\nThese 7 apps all had varying degreee of complexity. Some were just simple customizable trick generators, while others were fully fledged coaching and goal tracking apps with community features and other extras. Although I am not planning to make large complicated app, I can still draw from them for guidance as most of them did have a trick generator. \n\n### Skate Dice\nSkate dice was one of the most intresting the apps I found. It had a very unique approach using a \"shake the phone\" gesture to \"roll\" the dice. However it has a paywall for premium features such as more tricks, settings, and a \"tricktionary\".  From what I was able to use I think is was the most simple and intuitive apps. It also had an aesthetic that fit the culture of the sport. All these features combined made it very enjoyable to use. \n\nTakeaways:\n- Keep design simple\n- Maybe incorporate some gestures\n- Consider using an aesthetic wich matches the culture/sport\n\n![](https://i.imgur.com/IqOErnh.png)\n\n\n### Skate tricks\nThis app is a much more fully featured solution. It is oriented towards learning skateboarding, and keeping track of you progress while doing it. It also has a built in trick generator, and game of skate. One of the most unique features it had that the other apps didn't was a trick of the day. This is one of the core features I want to include in my app. Another interesting feature it had was a page informing the user about injury prevention.\n\n# Personas and Scenarios\n## Inital Ideas\n- kyle the casual (primary maybe secondary)\n\t- age 23\n\t- skill advanced\n\t- focus: tricks\n- aaron the coach (seconday maybe primary)\n\t- age 30\n\t- skill used to be pro, now advanced\n\t- focus teaching tricks\n- logan the learner (seconday persona)\n\t- age 16\n\t- skill intermediate\n\t- focus not sure yet, beginning to experiement with tricks\n- mac the professional (seconday persona)\n\t- age 20\n\t- skill pro\n\t- focus tricks, uses the app occaionaly with friends\n- karen the parent (negative persona)\n\t- age 45\n\t- skill intermediate\n\t- focus, groomed runs, some backcountry\n- phil the powder hound (supplementary persona)\n\t- age 40\n\t- skill advanced (not with tricks just in general)\n\t- focus off piste/backcountry, sometimes goes into park with friends/kids\n\n## Primary: Casual Kyle\n\n![](https://i.imgur.com/116a3bj.png)\n\n- Age: 23\n- Gender: Male\n- Skill Level: Advanced (Not proffessional)\n- Focus: Terrian Park\n\n### Goals\n#### Experience goals\n- wants a quick easy, no hassle, minimal effort experience. \n- does not want to appear to be a \"nerd\" or \"try hard\"\n\n#### End goals\n- wants to find new interesting tricks that he may not have thought of himself\n- wants to progress his level of snowboarding\n- wants to show off new cool tricks to his friends\n\n#### Life goals\n- wants to be a \"cool snowboarder\"\n- wants to have as much fun as possible\n\n### Behaviour\n#### Activities\n- He is a snowboader. He rides at a least a few days every week\n- has a day job, barely enough money for season pass, rides up the mountain, and equipment\n- mostly rides in the terrain park\n\n#### Attitudes\n- Likes using social apps\n\n#### Aptidudes/skills\n- has advanced knowledge of the snowboarding tricks, grabs, and variations\n- considers himself an advanced snowboarder\n- rides all the advanced features in the park.\n- can do at least a 540\n- can do a good frontboard, maybe some 270s\n- has fun in the pipe but not his favourite thing\n\n#### Motivations\n- wants to find new interesting tricks that he may not have thought of himself, to improve his skills by expanding his \"set\" of tricks.\n\n#### Scenario\nKyle wakes up in the morning at 6:45 to go snowboarding with his friends. He sees he has a notification from the trick generator app. The trick for today is a switch back lip. Kyle is excited to try the trick. Kyles friends have also seen the daily trick on their phones. When they meet up on the mountain they all learn the trick and have fun. After they have all done a switch back lip. They decide they want to try another trick. Kyle his phone out of his pocket, opens the app, which loads almost instantly, and generates a trick with only one tap.\n\n## Secondary: Logan the learner\t\n\n![](https://i.imgur.com/EIKju2f.png)\n\n- Age:13\n- Skill: intermediate\n- Focus not sure yet, beginning to experiement with tricks\n\n### Goals\n#### Experience goals\n- wants a quick easy, no hassle, minimal effort experience. \n- feels excited when using the app\n- also feels a little nervous about trying something new\n\n#### End goals\n- wants to find new tricks that he can learn with his friends, since he doesn't know many\n- wants to stay motivated to learn a new trick each day/week\n\n#### Life goals\n- Wants to have fun on the weekend\n- Wants to get excersise\n\n### Behaviour\n#### Activities\n- Snowboarder\n- lives in a town near a skifield where it is common to snowboard.\n- rides a few times a fortnight, with friends and/or family. maybe in a school program (like they have in wanaka schools)\n\n#### Attitudes\n- Likes using technology\n\n#### Aptidudes/skills\n- has been riding mostly on the groomed runs, is now getting good enough to try the terrian park.\n- has been doing some 180s maybe on sidehits.\n\n#### Motivations\n- wants to find new tricks that he can learn with his friends, since he doesn't know many\n\n#### Scenario\nLogan is snowboarding on the mountain with a group of his friends. Logan and his friends decide to go into the terrian park and try some tricks. None of his friends know what tricks to try. Logan takes his phone out of his pocket and without removing his gloves, unlocks it with face ID, and looks at the widget which is showing random trick. Logan then puts his phone back in his pocket, tells his friends the trick, and all him and his friends have fun racing to do the trick first.\n\n# Low-Fi Prototypes\n## Inital Designs\n### Navigation\nThe first thing I wanted to was get a clear picture of how each screen should interact with the others. Identified three main screens: Home, Friends, and Schedule. I also identified some supplementary screens: Trick options, other settings, and welcome, and some more optional screens: Trick lists, trick dictionary. \n\nI also listed some things that each screen should contain\n![500](Attachments/lofi-prototypes/navigation.JPG)\n\n### General protoypes\nNext I started to get down down general ideas about all of the screens. The main goal of this step for was to figure out the general flow of the app, and to get a general idea of how each screen should look.\n\nThis first two pages I was experimenting mostly with the home screen. I tried three different layouts: Top tabs, Bottom tabs, and floating bottom buttons. I also started to explore ways for the user to navigate from the home screen to the trick options screen, and the schedule screen.\n\n![600](Attachments/lofi-prototypes/general-1.JPG)\n![600](Attachments/lofi-prototypes/general-4.JPG)\n\nThe second page I explored a some variations on the floating button design. And begin  experimenting with the navigation and layout of the friends screen.\n\n![600](Attachments/lofi-prototypes/general-2.JPG)\n\nOn the third page I kept experimenting with the friends page. \n\n![600](Attachments/lofi-prototypes/general-3.JPG)\n\n## In depth prototypes\n### Home screen\nI wanted to keep the layout mostly based on googles material design. This will help with four design heuristics: Familiar metaphors and language, consistency and standards, recognition over recall, and minimalist design.  \n\nI started with creating an partly new design that combined the floating buttons, and the swipe feature for trick options. I decided against this as within material design it is not reccomended to have multiple floating buttons. I decided instead to use bottom tabs as they are the most logical, and familiar design for users. \n\nI also decided against the swipe feature to show tricks, and opted instead for a button which opened another screen.\n\nI also tried out some other designs features a black background and round buttons.\n![500](Attachments/lofi-prototypes/home-2.jpg) ![600](Attachments/lofi-prototypes/home-3.jpg)![600](Attachments/lofi-prototypes/home-1.JPG)\n\n### Other settings\n![600](Attachments/lofi-prototypes/other-settings-1.JPG)\n\n### Trick Options\nFor the trick Options I considered a few three main designs: the swipe/scroll, the modal, and the full screen.\n![800](Attachments/lofi-prototypes/trick-options-1.JPG)\n\n### Welcome\n![600](Attachments/lofi-prototypes/welcome-1.JPG)\n\n### Schedule\n![600](Attachments/lofi-prototypes/schedule-1.JPG)\n\n## Refinement\nFirstly I converted the lo-fi prototypes into Adobe XD designs.\n\n![](https://i.imgur.com/syq2HfK.png)\n\nI decided I wanted to make some chagnes to the design here so I saved this as version 1.\n\n### Schedule changes\n\nI wanted to chagne the way the schedule/altude options worked. My first rough redesign was this:\n![](https://i.imgur.com/CeYtNuP.png)\n\nI thought I could remove the separation and combine the two screens. But this didn't work so well.  However, I think the ability to switch between meters and feet was good as this improves **user control and freedom**. Also the use of the spinner for time and altitude selection will be familiar to most users. This improves use of **consistency and standards**, and **recognitiona over recall**\n\nI then decided to try a \"switch\" type design, where the user is forced to chooose between the schedule and the altitude. \n\n![](https://i.imgur.com/564G5o9.png)\n\nI think think this works much better as it **shows the system status** clearly. And has a less cluttered more **miniml, aesthetic design**. I kept the weekday selection on both screens as the might only want use the altitude system on certain days. This improves, **user control and freedom**.\n\nI also thought it might not be super what the funcitons of the two options were, especially the altitude option. So decided to add a closable info card with some information. This improves **help and documentation**\n\n![](https://i.imgur.com/KEeEbNm.png)\n\nI thought the info symbol might have looked like a button so I changed it:\n\n![](https://i.imgur.com/BIyh7Fr.png)\n\nI also changed the alignment of the weekday selection buttons. And the altitude selector\n\n![](https://i.imgur.com/QzAfEaD.png)\n\n\n### Trick options Changes\nI decied to change the way this worked. Instead of have the save cancel buttons I wanted the settings change to have immediate effect, so the user didn't have to save. This was the first redesign:\n\n![](https://i.imgur.com/0SMHkUX.png)\n![](https://i.imgur.com/aX0NUZd.png)\n\n\nThis is largely the same, except I added a head with back button and remove the bottom save and cancel buttons. Next I changed the dropdown for each of the trick types to individual screens with the commonly used right chevron icon.\n\n![](https://i.imgur.com/0amkHJG.png)\n\n### \"Color\" scheme changes\n\nAfter I had mostly finished the Layout. I changed the look to match the snowboarding \"aesthetic\", by making the app primarily black\n\n![](https://i.imgur.com/QgPjM5S.png)\n\n### More layout changes\nI decided to add the home row navigation back to the trick options screens to improve **user control and freedom**\n![](https://i.imgur.com/474XINO.png)\n\n# Hi-Fi Prototypes\n# ","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/furps":{"title":"furps","content":"\nThe furps framwork defines a robust way of defining and categorising requirements and constraints. Requirements are split into the following five categories:\n\n- F: featurs\n- U: Usability\n- R: Reliability\n- P: Performance\n- S: Supportability\n\nThere is an extended set  called furps + adds which adds:\n\n- design\n- implementation\n- interface\n- physical\n\nFor example:\n\n![](https://i.imgur.com/SLMcUtd.png)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/gifts":{"title":"gifts","content":"\n\n1. All gifts should contain an element of surprise \n2. Respect the gifting Holy Trinity: \n\t1. NICE \n\t2. MADE \n\t3. THOUGHTFUL \n3. Made gifts should not be bigger than one's hand\n4. Dating and/or Monogramming a gift gives it extra power \n5. Know what flowers your girl likes. \n6. Take your time with books. \n7. A Postcard COUNTS! \n8. TWO DAYS \n9. She will tell you. \n10. Buy small gifts when you travel. \n11. Expensive, not Costly\n12. For KIDS: You pick the store, The kid picks the gift. \n\nGift receiving: Send a thank you note \\\nThe point of gift giving: Make people feel loved (even if you don't love them)\n\n# Christmas\n- Mum\n\t- Knife\n\t- Wok cookbook\n\t- Wok\n- Dad\n\t- Vinyl?\n- Eli\n\t- \n- Leeto\n- Pearl\n\t- mountain equipment","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/git":{"title":"git","content":"\n- Git is a tool to track changes to sets of file\n- It is the most commonly used [[notes/02-version-control-system]]\n\n## 1 Team git protocols\n\nyou can develop a team protocol for Git use\n\ne.g.,\n\n- agree to commit often\n- know what branches are being used and why\n- consider pair programming / live sharing\n- try not to touch lots of files without signalling why\n- agree who's going to edit files that maight not auto merge\n\n## 2 web based repo access control\n\n- owner of repo chooses who can push to project\n\t- maintainer -\u003e cant remove data\n\t- developer -\u003e cant manage team\n\t- reporter -\u003e cant change codebase\n\t- guest -\u003e can view\n\n### 2.1 open source collaboration\n\nyou want contributions from everyone\n\nbut you dont want to manage user-level control\n\n-\u003e pull/merge requests\n\nunknown users can fork then add a feature/bug then do a merge request which can be reviewed\n\n## 3 git repos\n\n[[cheatsheets/git-cheat-sheet|Repositories]] maintain code history\ncan be conceptualised as a graph\n\n```mermaid\n\tgraph RL\n\tA[HEAD]--\u003e1[MASTER]--\u003eB((ab348b))--\u003eC((hf33h3))\n\tC--\u003eD((3hh39h))\n\tC-.Merge.-\u003eE((n3383b))\n\t3[Branch]--\u003eE\n\tD--\u003eH((kfj383))\n\tE--\u003eG((gj4jf4))\n\tG--\u003eH\n\tH--\u003eI((fjfj39))\n\tI--\u003e2[Inital Commit]\t\n```\n```mermaid\n\tgitGraph:\n\tcheckout master\n\tcommit\n\tcommit\n\tbranch newbranch\n\tcheckout newbranch\n\tcommit\n\tcommit\n\tcheckout master\n\tcommit\n\tmerge newbranch\n\tcommit\n\tcommit\n```\n\n- nodes are commits -\u003e immutable snapshots of the tracked files\n- edges record how nodes emerged over time\n\t- arrows can be read as \"is derived from\"\n\ngit is a [[notes/02-version-control-system#4 3 Distributed Centralised]]\n\n- every team members has their own local copy of the repo\n- git repos are often syned with a server: github, gitlab,etc\n\n## 4 levels of complexity/Abstraction\n\n```mermaid\n\tgraph TD\n\tw(github gitlab from web browser)--\u003eb(graphical ide's e.g., vscode)--\u003ec(command line git)--\u003ed(low level git plumbing commands)--\u003ee(direct manipulation of records within repo's .git directory)\n\t\n```\n\n## 5 Limitations/pain points\n\n- not designed for broad usability\n\t- bottom up design stems from its implementaion,\n\t- rather than top down design from user interface\n\t- thus, command naming and syntax can be unintuitive\n- git is not suited to handling large data files\n\t- git scans whole files to generate hash codes\n\t- can use git lfs (large file support) to get around this\n- flexibility of git can lead to high cognitive load\n\t- e.g., many ways to get others' commits to your repo\n- binary files e.g., JPEG images are treated as whole\n\t- no differencing, no content merging\n- some text files may not have stable line structure\n\t- e.g., XML data can be reordered wihout changing so:\n\t\t- git can auto merge when this is destructive\n\t\t- git may get confused and force you to merge\n\t- e.g., node package-lock.json\n\t- you can turn of auto-merge if you are working with files that may be problematic\n\n## 6 advantages\n\n- git repos' data structures are well designed\n\t- clear in structure yet flexible and efficient\n- few dependencies\n\t- widely available\n\t- free and open source\n- community support around use of git is great\n\t- eforts to get researches to use version control;\n\t- github helped open source software flourish by making it easy for citizens to contribute to projects\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/governance":{"title":"governance","content":"\nA structure through which a participant or user of a system agrees to use the system\n\nThere are three key elements of governance: Rulers, Rules and Participants. The rulers set the rules based on the participants goals and needs. \n\nGovernance types:\n- Standard (e.g., corporations, non-profits, partnerships \u0026c)\n\t- Direct (each user takes part in the governance model by directly affecting every decision. Votes determine the actions)\n\t- Representative (user vote to choose a representative who makes decisions on their behalf)\n- Blockchain (managing the ever changing state of the blockchain's needs nand demands)\n\t- Off-chain/On-Chain\n\t\t- off-chain/soft- similar to institutions - a group of individuals trusted by the community form a group which is responsible for the blockchain's governance and well-being\n\t\t- on (self governing) - users within the cshain, directly vote on decisions to be made, changes are then made automatically depending on the outcome - this all happens intra-protocol \n\t- Governance of the infrastructure/governance by the infrastructure\n\n# Block chain governance\nFour central parties\n- Core developers\n- Node operatoes\n- Token holders\n- Blockchain team\n\n## On chain governance\nusers within the chain directly vote on decisions to be made, changes are then made automatically depending on the outcome - this all happens intra-protocol \n\nsome say this method is dangerous [^1] because it uses a one-vote-per-person system, and therefore is vulnerable to the [sybil-problem](notes/sybil-problem.md). To counteract this some use a one-vote-per-coin system via [proof-of-stake](proof-of-stake). However this means that people/orgs with more coin have more weight in their votes — this is at best a plutocracy\n\nblockchains are experimental and are evolving rapidly. There already exists good models for governing hard technical projects: the Linux Foundation and the IETF. demoracies are not suited for fast, robust, change — they waste a lot of time and effort on campaigns, etc.\n\n## Governance of open vs closed blockchains\nopen chains are usually governed using on or off chain governance. \n\nclosed chains completely controlled by the governing authority. they are in charge of development, they have complete control over the blockchain, and decides who can participate.\n\npublic permissioned blockchains \n\n[^1]: https://hackernoon.com/blockchains-should-not-be-democracies-14379e0e23ad\n\n## Examples\n- [eth-governance](notes/eth-governance.md)","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/graphs":{"title":"graphs","content":"\nRepresents a set of things with relationships between them.\n\n- a set of *vertices*\n- some *edges* between them\n- edges on some graphs have *weights*\n- edges on some graphs are *directed*\n\nSome graphs are named e.g, ![Q3](https://i.imgur.com/Mfd1Vzm.png)\n\n# Implementation\nshould:\n- be static\n- say if two vertices are connected in $O(1)$\n- say what the neighbors of a vertice are in $O(1)$\n\n## Hashset\narray wwith element to each verttex, and each element of the array is a *TreeSet* of its neighbors. \n\ngraph is built up by specifying size, then edges.\n\n```java\nadd edge(int v, int w){\n\tneighbors[v].add(w);\n\tneighbors[w].add(v);\n}\n```\n\nwe could also define a vertex class and use a `HashSet\\\u003cvertex\u003e`\n\nThere are many options\n\n# Traversals\n## Breadth first traversal\n![](https://i.imgur.com/iQ3TMCb.png)\nStating from v, initialise an empty queue a, and add a marker to each vertex (or make a set of seen vertices).\n\n1. add the start vertex to a queue and mark it as seen \n2. while the queue is not empty\n3. visit the first ellemnet of a qeue removing ti\n4. do someting with it (line 3.5)\n5. unseen neighbors neighbors are added to the queue marking them as seen\n6. repeat\n\n## Depth first\ninit empty *stack*, s, and add a marker to each vertex (or make a set of seen vertices)\n![](https://i.imgur.com/x916lrw.png)\n\n1. add the start vertex to a stack and mark it as seen \n2. while the stack is not empty\n3. visit the first ellemnet of a qeue removing ti\n4. do someting with it (line 3.5)\n5. unseen neighbors neighbors are added to the stack marking them as seen\n6. repeat\n\n## Cost of traversal\nwe measure complexity both in terms of veritces V and edges E.\n\nfor each vertex\n-  it occurs in some neghbor list ofot he first time at which point it is added to the list, and marked as seen\n- then at soome point it is removed\n- so $O(1)$ per vertice so $O(V)$\n\nfor each edge:\n- edge arise implicityly in the neihbor list\n- each one appreas twice, once per endpoint\n- when one appreas is causes a constant amount of work\n- also $O(1)$ per edge so  $O(E)$\n\nso $O(V + E)$\n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/grouping":{"title":"grouping","content":"\nGestaltkriterien “Gestalt Principles\ufffd\ufffd? - Law of Proximity\n\nOur brain is trying to help us understand the world. For example we look for eye contact. Our brain is looking with our eyes for contrast, parrallel lines, etc. Criteria that help us understand the world. \n\nThe Gestalt priciples have identified how our functions. One of these is the law of proximity. Things that a close to each other are grouped together by our brain. \n\n![grouping example](https://i.imgur.com/m8lTltN.png)\n![grouping ui](https://i.imgur.com/EMeV5Gg.png)\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/hash-map":{"title":"hash-map","content":"\nIn compsci a map is a comprised of a [set](notes/set.md) of keys and values. (`\u003cK, V\u003e`). For example `\u003cString, Integer\u003e`\n\nSo sets are a prerequisite for maps\n\nA hash set is just a hash map where the key is the values hash code. \n\n# Operations\nThe fundamental map operations are:\n- `Put(k, v)` --\u003e Add the this key-value pair to the map. If the present: update the key\n- `Get(k)` --\u003e returns the value associated with `` is present\n- `Remove(k)` --\u003e Removes the key `k`\n\n[BST](notes/binary-search-tree.md) can provide us with a set or map implementation whre the cost of each operation is $O(lg\\ n)$ . But his requires an underlying order on keys, which might not be needed.\n\n# Hash functions\na *hash function* takes objects from a class as input and produces a value from a fixed finite set of values (in Java, an `int`). \n\nThis sounds hard, but for commonly used classes (e.g., strings) there are already good has functions. Good enough is usually good enough. IDE can usually suggest something that is good enough. A hashcode function will usually come with an equals function to distinguish between collions and actual equal values\n\n## Collisions: Chaining/open addressing\n- array elements are called buckets\n- each bucket is a *list* of key-value pairs\n- when a mapping is added, \n\t- if empty add it (creating a new list if required)\n\t- otherwise check to see if there is a collision or an actual equality with each item of the list\n\t\t- If there is an equality -\u003e change its value\n\t\t- otherwise just add it to the list\n- get and removing are handled similarly\n\nwe need to keep the load factor (how full the map is) small so that the chains dont't get to long \n\n# Probing\nChaining (lists of k-v pairs in each bucket) breaks locailty of reference within the array and may not be suitable for high-performance implementations. \n\nIt works in java because objects are stored as references anyway, you need to look elsewhere in memory anyway. \n\nSo the advantage of probing is negated. \n\nIn C you know how many bytes of memory a k v pair will occupy. So you can store them as a continuous block of memory. Now you can take advatage of the locality of reference and the speed it provides. \n\nTo do this the contents of bucket should not be a list. they should be null, or a single kv pair.\n\neach kv pair has a *home spot* it would like to go to: this is the modulo remainder from last lecture. we can use [linear-probing](notes/linear-probing.md) to ensure the kv remains close to its home spot.\n\n# basic implementation\n```java\nV[] map = new V[53];\n\npublic V put(K key, V value){\n\tV old = map[k.id() % v.length];\n\tmap[k.id() % v.length] = value;\n\treturn old; //to match java map interface\n}\n\npublic V get(K key){\n\treturn map[k.id() % v.length];\n}\n\npublic V remove(K key){\n\tV old = map[k.id() % v.length];\n\tmap[k.id() % v.length] = null;\n\treturn old;\n}\n\n```","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/hci-ethics":{"title":"hci-ethics","content":"\n# Ethics\nsteve mann example - too far?\n\nhypocratic oath - do no harm\n\nshould there be one like this in computing?\n\nshould self driving cars protect the driver or pedestrians.\n\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/heap":{"title":"heap","content":"\nA tree where:\n\n1. every elements should be greater than ites children\n2. the structure should be filled from top to bottom and left to right\n\n\nTo remove an element\n\n- remove from the top, replace with the last element\n- to fix the first condition swap the top element with the highest of its children until fixed\n\n\nTo Add an element\n\n- add to the next position\n- If its larger than its parent then swap them\n\n\nHow deep is the tree?\n\n- each layer is twice as deep and the preceding one\n- layer k can hold $2^k$ elements\n- to store n elements we use k layers where $k = lg n$\n- so we need ϴ(lg n) layers\n- So any algorithm that 'walk along a branch' in while or in part will have Ο(n) complexity (assuming constant time work at each node)\n\n# 1 Overview\n[[notes/heap]]\n\n# 2 Operations\n## 2.1 Add element\nAssumptions\n- access first vacant position\n- set (or find) the value $H.q$ stored in any (occupied) position $q$\n- access parent of any given position\n- identify when we're at the root\n(all in constant time)\n\nOutcome: Change $H$ by adding x to it, while maintaining the heap conditions\n\n```\np \u003c- first vacancy, H.p \u003c- x\nwhile p is not the root and H.parent(p) \u003c H.p do\n\tswap H.parent(p) and H.p\n\tp \u003c- parent(p)\nend while\n\n```\n\n## 2.2 Remove the maximum\nOutcome: Change H by removing its maximum (i.e., root) value wile maintaining the heap conditions\n\n```\nv \u003c- H.root\nset H.root to be the value stored in the last occupied position\np \u003c- root\n\nwhile p has children\n\tif the largest value, H.c of a child of p is greater than H.p then\n\t\tswap H.c and H.p, p \u003c-c\n\telse\n\t\tBreak\n\tend if\nend while\n\nreturn v\n\n```\n\n\n## 2.3 Complexity\nIn addition, we move along a branch from an added element up to the root, fixing violations as we go\n\nIn removal, we move from the root down through some branch until all violations are fixed (can only occur if node has children)\n\nSo both loops do most Ο(lg n)\n\n## 2.4 Storage\n![](https://i.imgur.com/04qVrGQ.png#invert)\n\n - Array\n- root at position 0 and children at 1 and 2\n- children of 1 to in 3 and 4, children of 2 go in 5 and 6\n\n- first vacant pos --\u003e heap[n]\n- value at pos q --\u003e heap[q]\n- get parent of q --\u003e parent(q) = (q-1)/2\n- get children of q --\u003e (2 * q) ± 2\n- identify if q is root --\u003e q == 0\n\n## 2.5 Implementation\n\nUse java.util.PriorityQueue\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/heapsort":{"title":"heaps-and-heapsort","content":"\n\n# 3 Heap Sort\nIn place and ϴ(n lg n)\n\n![works in place](https://i.imgur.com/EbqSl4Y.png)\n\n\n- start with array\n- using itself as a heap, add the elements one at a time until all been added\n- Then remove them one at a time - the largest elements gets removed first and the place where is needs to be put gets freed from the map\n\n# 4 Heap sort vs Merge sort\nheap --\u003e in place, ϴ(n lg n)\nmerge --\u003e not in place, Ο(n lg n)\n\nMerge is preferred because\n\n- MS can take advantage of partially sorted data (hence ϴ() vs Ο())\n- MS memory accesses are good fast\n- overwrites allow for optimizations that swaps do not\n\nextra memory cost of merge sort is negligible\n\n∴ Merge sort is faster\n","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/help-and-documentation":{"title":"help-and-documentation","content":"\n- guide the way and show steps\n- online help\n\t- transition from built in help to links to online help\n\t- sometimes users dont have an internet connection\n\t- e.g., chrons app used all the data\n- help clearly and transparently\n\t- e.g., privacy and terms/conditions","lastmodified":"2022-12-19T01:23:07.371075074Z","tags":null},"/notes/heuristic-evaluation":{"title":"heuristic-evaluation","content":"\n\u003e\"Heuristics are strategies derived from previous experiences with similar problems\"\njacob nielsen and rolf molich\n\n- help find usability problems\n- small set of 3-5 evaluators examine UI\n- independently check for compliance with usability principles\n- different evaluators will find different problems\n- evaluators only communicate afterwaards\n- findings are aggregated at the end\n\n![example heuristic report](https://i.imgur.com/DfmaHlI.png)\n\n# when?\n- as part of need finding -\u003e use experts to critique existing solutions\n- before user testing -\u003e identify minor issues before user testing\n- before redesigning -\u003e learn what works and what should change\n- when you know there are problems but you need evidence -\u003e \"provide you with ammunition for design\"\n- before release -\u003e smooth off rough edges\n\n# What\n## Process\n### Phases\n1. pre evaluation training ⇒ give evaluators needed domain knowledge and information on the scenario\n2. evaluation ⇒ individuals evaluate then aggregate result\n\t1. first as individuals\n\t2. then sit all together and aggregate\n3. Severity rating ⇒ determine how severe each problem is (priority). Can do first individually and then as a group\n4. Debriefing ⇒ review with design team\n\n### Individual\ndont look search for heuristics individually\njust go through the app (like a user). If we find issues, we assign them to categories\n\nstep through design several times\n- examine details, flow, an architecture\n- consult list of usability principles\n- … and anything else that comes to mind\n\nwhich principles\n- Nielsen's heuristics\n- category specific heuristics\n\t- e.g., design goals, competitive analysis, existing designs\n\t\nuse violations for redesign/fix problems\n\nmultiple evaluators because no one finds everything\nsome will always find more than others (Rule of thumb 5 evaluators find ~75% of problems)\n\n### Severity rating\n- independently estimate after viewing\n- allocate resources to fix problems\n- estimate need for more usability tests\n\n0. not problem\n1. cosmetic problem\n2. minor usability problem\n3. major\n4. catastrophe\n\n### Debreifing\n- with evaluators observers and dev team\n- discuss general characteristics of UI\n- suggest potential imporvements\n- dev team estimate effort to fix\n- brainstorm solutions\n\n# Nielsen's ten heuristics\n[design-heuristics](notes/design-heuristics.md)\n- visibility of system status\n- match between system and world\n- user control and freedom\n- consistency and standards\n- error prevention\n- recognition rather than recall\n- flexibility and efficiency of use\n- aesthetic and minimalist design\n- help users recognize, diagnose, and recover from errors\n- help and documentation\n\n# Heuristic evaluation vs user testting\n\nheuristics        | user testing\n----------------- | --------------\nfaster            | slower\n1-2 hrs each      | \nresults pre-interpreted | \n^ done by experts | \nless accurate     | more acurate\ndoes not take into account actual users | can find issues that experts might not have\n\nvalue to alternate methods\n^ find dfferent issues\n\n![](https://i.imgur.com/YgGkBqg.png)\n\n# Extra tips how to individual\n- at least two passes each \n\t- first get get feel for flow\n\t- second to focus on specific elements\n- if a system is \"walk up and use\" or evaluators are already domain expers ⇒ no assistance is needed\n\t- otherwire might supply evaluators with scenarios\n- each evaluators should list issues separately\n- risk of repeating problematic aspect\n- may not be possible to fix all problems\n- where problems may be found\n\t- single location in UI\n\t- two or more locations that need to be compared\n\t- problem with overall structure\n\t- something is missing\n\t- ambiguous with early prototypes\n\t- sometimes ....\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/hi-fi-development":{"title":"hi-fi-development","content":"\nFirstly I converted the lo-fi prototypes into Adobe XD designs.\n\n![](https://i.imgur.com/syq2HfK.png)\n\nI decided I wanted to make some chagnes to the design here so I saved this as version 1.\n\n## Schedule changes\n\nI wanted to chagne the way the schedule/altude options worked. My first rough redesign was this:\n![](https://i.imgur.com/CeYtNuP.png)\n\nI thought I could remove the separation and combine the two screens. But this didn't work so well.  However, I think the ability to switch between meters and feet was good as this improves **user control and freedom**. Also the use of the spinner for time and altitude selection will be familiar to most users. This improves use of **consistency and standards**, and **recognitiona over recall**\n\nI then decided to try a \"switch\" type design, where the user is forced to chooose between the schedule and the altitude. \n\n![](https://i.imgur.com/564G5o9.png)\n\nI think think this works much better as it **shows the system status** clearly. And has a less cluttered more **miniml, aesthetic design**. I kept the weekday selection on both screens as the might only want use the altitude system on certain days. This improves, **user control and freedom**.\n\nI also thought it might not be super what the funcitons of the two options were, especially the altitude option. So decided to add a closable info card with some information. This improves **help and documentation**\n\n![](https://i.imgur.com/KEeEbNm.png)\n\nI thought the info symbol might have looked like a button so I changed it:\n\n![](https://i.imgur.com/BIyh7Fr.png)\n\nI also changed the alignment of the weekday selection buttons. And the altitude selector\n\n![](https://i.imgur.com/QzAfEaD.png)\n\n\n## Trick options Changes\nI decied to change the way this worked. Instead of have the save cancel buttons I wanted the settings change to have immediate effect, so the user didn't have to save. This was the first redesign:\n\n![](https://i.imgur.com/0SMHkUX.png)\n![](https://i.imgur.com/aX0NUZd.png)\n\n\nThis is largely the same, except I added a head with back button and remove the bottom save and cancel buttons. Next I changed the dropdown for each of the trick types to individual screens with the commonly used right chevron icon.\n\n![](https://i.imgur.com/0amkHJG.png)\n\n## \"Color\" scheme changes\n\nAfter I had mostly finished the Layout. I changed the look to match the snowboarding \"aesthetic\", by making the app primarily black\n\n![](https://i.imgur.com/QgPjM5S.png)\n\n## More layout changes\nI decided to add the home row navigation back to the trick options screens to improve **user control and freedom**\n![](https://i.imgur.com/474XINO.png)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/holochain":{"title":"holochain\"","content":"\nlink: https://www.holochain.org/\n\nOpen source framework for creating p2p apps.\n\nPossible downsides of peer to peer apps\n- not great with synchronisation\n- large app size\n- requires wifi or cell coverage\n\n\n# Whitepaper\n\nlink: https://github.com/holochain/holochain-proto/blob/whitepaper/holochain.pdf\n\nHashing algorithms and public key encryption provided a frameork for distributed systems using hash-chains. There are two main uses of these: agent centric systems like [[git]] and data-centric systems like [[ethereum]] and [[bitcoin]].\n\nHolochain aims to fix scalability issues of blockchain by addressing the data-centric assumptions of the blockchain approach. \n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/how-is-safe-enough-for-autonomous-vehicles":{"title":"how-is-safe-enough-for-autonomous-vehicles","content":"\n- How safe is safe enough?\n\t- its impossible to be perfect\n\t- discalimer about driving assistant in teslas\n\nNot driving youself massively reduces reaction time\n\nAllow user to set ethical bias of their vehicles AI\n\n![](https://i.imgur.com/eY5CeL6.png)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/html":{"title":"html","content":"\n# Structure\nElement: `\u003cdiv id=\"element\" disabled\u003eHello!\u003c/div\u003e\n\nExample:\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n    \u003ctitle\u003eBoy\u003c/title\u003e\n    \u003cmeta charset=\"UTF-8\" /\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003ch1\u003e\n    Hello World! 😃\n\u003c/h1\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\n# Elements\n\n## Multimedia\n### Vector Graphics\n``` html\n\u003cimg\n src=\"star.svg\"\n alt=“a star vector graphic”\n height=\"87\"\n width=\"100\" /\u003e\n ```\n \n ```html\n\u003csvg width=\"300\" height=\"200\"\u003e\n \t\u003crect width=\"100%\" height=\"100%\" fill=\"green\" /\u003e\n\u003c/svg\u003e \n ```\n\n### Videos\n``` html\n\u003cvideo src=\"rabbit320.webm\" controls\u003e\n \u003cp\u003eYour browser doesn't support HTML5 video. Here\nis a \u003ca href=\"rabbit320.webm\"\u003elink to the video\u003c/a\u003e\ninstead.\u003c/p\u003e\n\u003c/video\u003e\n```\n\n### Audio\n```html\n\u003caudio controls\u003e\n \u003csource src=\"viper.mp3\" type=\"audio/mp3\"\u003e\n \u003csource src=\"viper.ogg\" type=\"audio/ogg\"\u003e\n \u003cp\u003eYour browser doesn't support HTML5 audio. Here\nis a \u003ca href=\"viper.mp3\"\u003elink to the audio\u003c/a\u003e\ninstead.\u003c/p\u003e\n\u003c/audio\u003e\n```\n\n### iframe\nEmbedding other webpages\n``` html\n\u003ciframe style=\"border-radius:12px\" src=\"https://open.spotify.com/embed/track/\n5wdo9394EgfGIqoLsMAPzx?utm_source=generator\" width=\"100%\" height=\"380\"\nframeBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media;\nfullscreen; picture-in-picture\"\u003e\u003c/iframe\u003e\n```\n\n## Table\n```html\n\u003ctable\u003e\n \u003ctr\u003e\n\t \u003cth\u003eData 1\u003c/th\u003e\n\t \u003cth style=\"background-color: yellow\"\u003eData 2\u003c/th\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n\t \u003ctd\u003eCalcutta\u003c/td\u003e\n\t \u003ctd style=\"background-color: yellow\"\u003eOrange\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n\t \u003ctd\u003eRobots\u003c/td\u003e\n\t \u003ctd style=\"background-color: yellow\"\u003eJazz\u003c/td\u003e\n \u003c/tr\u003e\n\u003c/table\u003e\n```","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/hyperledger":{"title":"hyperledger","content":"\nhttps://www.hyperledger.org/use/fabric\n\nOne of the projects within hyperledger.\n\nFrom their website\n\u003e\"Hyperledger Fabric is intended as a foundation for developing applications or solutions with a modular architecture. Hyperledger Fabric allows components, such as consensus and membership services, to be plug-and-play. Its modular and versatile design satisfies a broad range of industry use cases. It offers a unique approach to consensus that enables performance at scale while preserving privacy.\"\n\n# Iroha\nUses YAC consensus\n\nTorii \u003e MST Processor \u003e Peer Comms Service \u003e Ordering Gate \u003e Ordering Service \u003e Verified Proposal Creator \u003e Block Creator \u003e Block Consensus [[YAC]] \u003e Synchronizer \u003e Blockstore \u003e WSV","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/hypotheticals":{"title":"","content":"title: \"hypotheticals\"\naliases: \ntags: \n\n---\n\n# Is it immoral to keep free will from people if you had the power to grant it.\n\nThis is really two questions. Firstly, is free will a good thing? Secondly, if it is a good thing — is withholding it immoral? Before I answer these questions, Is deciding things for other people moral or immoral? There's no way to know what people want, and I don't think you have the right to decide for them. Thus, from a deontological perspective, I think each person wants different things and it would be immoral no matter what decision you make. The questions remains however, of whether it is immoral to not do a moral thing. I think that depends of the effort of the moral action and the amount of \"goodness\" that the actions creates. For example, it would not be immoral to not volunteer to pick up trash for 3 weeks nor to not pick trash on your walk home. But if you could remove all trash by clicking your fingers, it would be immoral to not do so. Thus the answer to your hypothetical, from a consequentialist perspective, depends on where you draw the line. In this hypothetical, since there is no effort required, the answer depends only on whether granting free will to everyone is a moral thing. I'm gonig to assume by 'content' you mean neither happy nor unhappy. I think that granting people free will would create an equal amount of sadness and happiness and the net effect would be zero. So from a consequentialist perspective it is neither moral nor immoral. However, if free will wasn't a thing, humans might as well not exist. Therefore, by granting free will you are giving meaning to the entire human race — which must be a moral thing. ","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/idea":{"title":"","content":"#info203 \n\n1. Snowboard coaching app\n\t1. goals\n\t2. daily/manual/weekly trick generator\n\t3. \n2. Album of the day generator\n\t1. from besteveralbums.com\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/imperative-programming-language":{"title":"imperative-programming","content":"[wikipedia article](https://en.wikipedia.org/wiki/Imperative_programming)\n\nImperative programming is a paradigm in which code specifiec a series of *commands* which a computer executes to change a programs *state*\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/independent-learning":{"title":"independent-learning","content":"\n# Topics\n- [Networks](notes/networks.md)\n\n# Stand Alone Notes\n- [propagation-of-ideas](notes/propagation-of-ideas.md)\n- [model-view-controller-pattern](notes/model-view-controller-pattern.md)\n- [.NET](notes/dotnet.md)\n- [programatic-evolution](notes/programatic-evolution.md)\n- [behaviour-driven-development](notes/behaviour-driven-development.md)\n- [brutalist-architecture](notes/brutalist-architecture.md)","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/induction":{"title":"induction","content":"\n# Induction\n## 1 PECS\nPhases of argument by induction\n\n- Preparation -\u003e most important\n- Execution -\u003e becomes routine if prep is good\n- Checking -\u003e second most important\n- Satisfaction\n\n### 1.1 Preparation\n- isolate the property that you are trying to verify and the parameter, n, associated with is\n\t- e.g., min possible size of set of rank k is $2^n$\n- Confirm by hand that for small values of the parameter, the property is true\n- Use previous cases as assumptions\n- Pause and reflect\n- If you understand what's going on -\u003e proceed to execution\n\n### 1.2 Execution\nTechnical and prescribed (once you're an expert you can take some liberties)\n\nFour parts\n- statement\n- verificatio of base case\n- inductive step\n- conclusion\n\ne.g., \n- we will prove that, for every non-negative integer $n$, *insert property here*\n- For $n = 0$, *The property* is true because *explicit verification of this case*\n- for any $n \u003e 0$, assuming *the property*  is true for $n-1$ (or, for all $k \u003c n$), *the property* is true at $n$ because *explain why we can take a step up*\n- Therefore, by induction, *the property* is true for all n.\n\n### 1.3 Checking\nBasically debugging without a compiler to find errors\n- have you forgotten anything? e.g., the base case\n- Does the inductive step work fro  0 to 1? or are they irregular\n- Make sure that you are only assuming the result for things less than $n$\n- ideally show someone and try to convince them (dont let them be polite)\n- if necessary go back to execution or preparation\n\n### 1.4 Satisfaction\nCommence satisfaction.\nConfidence +100. 😆\n\n## 2 Examples\n### 2.1 Union Find - min size for set of rank k\n\n- Initially every element is its own representative and every element has rank 0;\n- when we do a union operation, the the two reps have different ranks, the ranks stay the same\n- when we do a union operation, if the two reps have the same rank, then the rank increases\n\nminimum (and only) size of a rank 0 rep is 1\n\nto get a rank 1 representative, we form a union of either a rank 0 and a rank 1 set or two rank 0 sets\nfor the minimum possible size, it must be the second case, and the two rank 0 sets must be each of minimum size 1, so this gives minimum size for a rank 1 set of 2\n\nTo get a rank 2 rep, we form a union of either rank 2 and rank 0 or 1 set, or two rank 1 sets\nFor the minimum possible size, it must be the second cae, and the two rank 1 sets must each be of minimum size 2, so this gives minimum size for a rank 2 set of 4\n\nTo get a rank $n$ rep, we form a union of either rank $n$ and rank $k$ set for some $k\u003cn$ or two rank $n-1$ sets.\nFor the minimum possible size, it must be the second cae, and the two rank $n-1$ sets must each be of minimum size, which we are **assuming** $2^(n-1)$, so this gives minimum size for a rank $n$ set of\n\n\u003e $2^{n-1} + 2^{n-1} = 2\\times2^{n-1} = 2^n$\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/info-201":{"title":"info-201","content":"\n- [coursework tiddlywiki](https://isgb.otago.ac.nz/infosci/INFO201/labs_release/raw/master/output/info201_labs.html#)\n- [assignments tiddlywiki](https://isgb.otago.ac.nz/info201/shared/assignments_release/raw/master/output/info201_assignments.html)\n\n# Outline\n- [version control system](notes/version-control-systems.md)\n- [stakeholders](notes/stakeholders.md)\n- [business-analyst](notes/business-analyst.md)\n- [developer](notes/developer.md)\n- [models](notes/models.md)\n- [systems-development-life-cycle](notes/systems-development-life-cycle.md)\n- [agile-development](notes/agile-development.md)\n- [scrum](notes/scrum.md)\n- [predictive-adaptive-spectrum](notes/predictive-adaptive-spectrum.md)\n- [domain-driven-design](notes/domain-driven-design.md)\n- [behaviour-driven-development](notes/behaviour-driven-development.md)\n- [requirements](notes/requirements.md)\n- [requirements-document](notes/requirements-document.md)\n- [requirements-guidelines](notes/requirements-guidelines.md)\n- [requirements-engineering](notes/requirements-engineering.md)\n- [requirements-elicitation](notes/requirements-elicitation.md)\n- [approaches-to-systems-development](notes/approaches-to-systems-development.md)\n- [business-functions](notes/business-functions.md)\n- [business-process](notes/business-process.md)\n- [business-process-model](notes/business-process-model.md)\n- [business-process-model-and-notation](notes/business-process-model-and-notation.md)\n- [unified-modelling-language](notes/unified-modelling-language.md)\n\t- [sequence-diagrams](notes/sequence-diagrams.md)\n\t- [use-case-diagrams](notes/use-case-diagrams.md)\n\t- [what-are-uml-diagrams](notes/what-are-uml-diagrams.md)\n\t- [use-case-diagrams](notes/use-case-diagrams.md)\n\t- [entity-relationship-diagrams](notes/entity-relationship-diagrams.md)\n\t- [class-diagrams](notes/class-diagrams.md)\n- [modelling behaviour](notes/modelling-behaviour.md)\n- [conceptual-vs-ipmlementation-models](notes/conceptual-vs-ipmlementation-models.md)\n- [redundancy-and-anomalies](notes/redundancy-and-anomalies.md)\n- [dependencies](notes/dependencies.md)\n- [normalisation](notes/normalisation.md)\n- [round-trip-engineering](notes/round-trip-engineering.md)\n- [uml-java-forward-engineering](notes/uml-java-forward-engineering.md)\n- [data-access](notes/data-access.md)\n- [data-access-object](notes/data-access-object.md)\n- [java-database-connectibity](notes/java-database-connectibity.md)\n- [SQL](notes/SQL.md)\n\n# Lectures\n- [02-version-control-system](notes/02-version-control-system.md)\n- [04-requirements](notes/04-requirements)\n- [06-business-functions-and-use-cases](notes/06-business-functions-and-use-cases.md)\n- [07-business-process-modelling](notes/07-business-process-modelling.md)\n- [08-business-patterns](notes/08-business-patterns.md)\n- [09-data-modelling-and-normalisation](notes/09-data-modelling-and-normalisation.md)\n- [10-oop-concepts-and-uml](notes/10-oop-concepts-and-uml.md)\n- [11-class-diagrams](notes/11-class-diagrams.md)\n- [12-modelling-behaviour](notes/12-modelling-behaviour.md)\n- [13-UML-sequence-diagrams](notes/13-UML-sequence-diagrams.md)\n- \n- [15-from-models-to-code-and-back](notes/15-from-models-to-code-and-back.md)\n- [16-reverse engineering](notes/16-reverse%20engineering.md)\n- [17-data-access](notes/17-data-access.md) \n- [18-advanced-sql-1](notes/18-advanced-sql-1.md)\n- [19-advanced-sql-2](notes/19-advanced-sql-2.md)\n- [20-data-integrity](notes/20-data-integrity.md)\n- [21-software-architecture-and-templates](notes/21-software-architecture-and-templates.md)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/info-203":{"title":"info-203","content":"links:[_index](_index.md)\n- [mobile-app-ass-03](notes/mobile-app-ass-03.md)\n\n# Assignments\n## Mobile App\n- [pdf](https://blackboard.otago.ac.nz/bbcswebdav/pid-2827493-dt-content-rid-18385743_1/courses/INFO203_S1DNIE_2022/Assignment3.pdf)\n- [idea](notes/idea.md)\n- [brainstorming](notes/brainstorming.md)\n- [personas-final](notes/personas-final.md)\n- [mood-board](notes/mood-board) \n\n# Outline\n- [big-picture](notes/big-picture.md)\n- [birth-of-hci](notes/birth-of-hci.md)\n- [user-experience](notes/user-experience.md)\n- [usbability](notes/usbability.md)\n- [prototyping](notes/prototyping.md)\n- [evaluating-designs](notes/evaluating-designs.md)\n- [Design Heuristics](notes/design-heuristics.md)\n\t- [help-and-documentation](notes/help-and-documentation.md)\n\t- [error-prevention](notes/error-prevention.md)\n\t- [flexibility-and-efficiency](notes/flexibility-and-efficiency.md)\n\t- [aesthetic-and-minimalist-design](notes/aesthetic-and-minimalist-design.md)\n\t- [consistency-and-standards](notes/consistency-and-standards.md)\n\t- [recognition-over-recall](notes/recognition-over-recall.md)\n\t- [user-freedom-and-control](notes/user-freedom-and-control.md)\n\t- [familiar-metaphors-and-language](notes/familiar-metaphors-and-language.md)\n\t- [show-system-status](notes/show-system-status.md)\n\t- [recognise-and-recover-from-errors](notes/recognise-and-recover-from-errors.md)\n\t- [anti-design-heristics](notes/anti-design-heristics.md)\n- [needfinding](notes/needfinding.md)\n- [participant-observation](notes/participant-observation.md)\n- [interviewing](notes/interviewing.md)\n- [storyboards](notes/storyboards.md)\n- [personas-and-scenarios](notes/personas-and-scenarios.md)\n- [mental-models](notes/mental-models.md)\n- [representation-and-distributing-cognition](notes/representation-and-distributing-cognition.md)\n- [visual-design](notes/visual-design.md)\n\t- [typography](notes/typography.md)\n\t- [layout](notes/layout.md)\n\t\t- [closure](notes/law-of-closure.md)\n\t\t- [grouping](notes/grouping.md)\n\t\t- [similarity](notes/law-of-similarity.md)\n\t- [color](notes/color.md)\n\t- [reading-and-navigating](notes/reading-and-navigating.md)\n- [hci-ethics](notes/hci-ethics.md)\n- [designing-studies](notes/designing-studies.md)\n- [assigning-participants](notes/assigning-participants.md)\n\n# Videos\n- [heuristic-evaluation](notes/heuristic-evaluation.md)\n- [storyboards-mockups-paper-prototypes](notes/storyboards-mockups-paper-prototypes.md)\n- [wizard-of-oz](notes/wizard-of-oz.md)\n- [video-prototyping](notes/video-prototyping.md)\n- [direct-manipulation-video](notes/direct-manipulation-video.md)\n- [mental-models-video](notes/mental-models-video.md)\n- [visual-design-video](notes/visual-design-video.md)\n- [designing-studies-video](notes/designing-studies-video.md)\n- [assigning-participants-video](notes/assigning-participants-video.md)\n- [running-in-person-experiments](notes/running-in-person-experiments.md)\n- [running-web-experiments](notes/running-web-experiments.md)\n- [analyzing-experiments](notes/analyzing-experiments.md)\n\n# Lectures\n- [04-evaluation-methods-birth-of-hci](notes/04-evaluation-methods-birth-of-hci.md)\n- [07-heuristic-evaluation-cont](notes/07-heuristic-evaluation-cont.md)\n- [08-personas-and-scenarios](notes/08-personas-and-scenarios.md)\n- [09-paper-prototypes-wiz-of-oz-video-prototypes](notes/09-paper-prototypes-wiz-of-oz-video-prototypes.md)\n- [10-design-heuristics-1](notes/10-design-heuristics-1.md)\n- [11-design-heuristics-2](notes/11-design-heuristics-2.md)\n- [12-design-heuristics-3](notes/12-design-heuristics-3.md)\n- [13-design-heuristics-4](notes/13-design-heuristics-4.md)\n- [14-direct-manipulation-and-mental-models](notes/14-direct-manipulation-and-mental-models.md)\n- [15-mental-models-representation-matters-distributing-cognition](notes/15-mental-models-representation-matters-distributing-cognition.md)\n- [16-distributing-cognition-and-visual-design-typography](notes/16-distributing-cognition-and-visual-design-typography.md)\n- [17-grids-grouping-alignment-reading-and-navigation](notes/17-grids-grouping-alignment-reading-and-navigation.md)\n- [18-ethics-in-hci](notes/18-ethics-in-hci.md)\n- [22-trends-in-hci](notes/22-trends-in-hci.md)\n- [24-trends-in-hci-2](notes/24-trends-in-hci-2.md)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/information-security":{"title":"information-security","content":"\nInformation security is the science of protecting information assets. These include data, systems, equipment, and infrastructure. \n\n\u003e[!Definition]\n\u003e \"The preservation of confidentiality, integrity and availability of information; in addition, other properties such as authenticity, accountability, non-repudiation and reliability can also be involved.” \n\u003e (ISO27000 Information Security Management Systems – Overview and Vocabulary)\n\nThere is a continuous need for IS as the environement around it is rapidly changing.\n\nInformation systems have 6 main components\n- data\n- people\n- hardware\n- software\n- network\n- procedures\n\nIS can be split into three main components, called the [cia-triad](notes/cia-triad.md). The components are:\n- Confidentiality\n- Availability\n- Integrity\n\nPeople often use the [mccumber-cube](notes/mccumber-cube.md) to think about the security of their system and identify potential vulnerabilities. \n\nIt is impossible to create a \"perfectly secure system\". There exists a [access-security-tradeoff](notes/access-security-tradeoff.md)","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/inital-ui-designs":{"title":"","content":"[mobile-app-ass-03](notes/mobile-app-ass-03.md)\n\nCore features\n- Customisable Generator\n- Daily Trick\n- Link with friends\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/initial-ideas-mind-map":{"title":"","content":"# map\n- customisable trick generator\n\t- trick lists --\u003e users can create lists for the generator to choose a trick from\n\t\t- some built in lists\n\t\t- share lists with friends\n\t- options\n\t\t- trick types\n\t\t\t- jump\n\t\t\t- rail\n\t\t\t- pipe\n\t\t\t- butters\n\t\t- flips\n\t\t- spins\n\t\t- grabs\n\t\t- spin direction\n\t\t- bring back or not\n\t\t- stance\n\t\t\t- regular\n\t\t\t- goofy\n- daily trick\n\t- same for all users?\n\t- auto notification\n\t- schedule\n\t\t- weekly\n\t\t- custom\n\t\t- auto when at an altitude\n- App widget with daily trick? \n- search for tricks\n\t- options similar to generator\n\t- save tricks to a list for generator\n- link with other users\n\t- methods\n\t\t- qr code\n\t\t- url/link\n\t\t- contact\n\t\t- social media\n\t- people\n\t\t- friends\n\t\t- coach\n\t\t- parents\n\t- features\n\t\t- daily/sheduled trick group\n\t\t\t- how would this work with altitude detector\n\t\t- share trick lists\n\t\t- community section for trick lists\n\t\t\t- like spotify playlists\n\t\t- users can share tutorials\n- Ease of use - (hard to use with gloves)\n\t- voice controls\n\t- gesture controls\n- goals tracking\n\t- goal lists\n\t- daily/weekly/yearly goals\n\t- trick generator can choose a trick from goals\n\t- share (or keep private) with coach and friends\n\t- trick tutorials\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/integrated-development-environments":{"title":"integrated-development-environments","content":"\n# 1 Types\n\n## 1.1 Source code editors\n- editor applications to help software development\n- provide features that help editing code\n\t- auto indent, bracket matching, syntax hl, auto completion, rapid navigation\n\t- run/test code\n\n## 1.2 Integrated dev env\n- allow you to remain within one application when carrying out software development work\n\t- can edit source files\n\t- can compile source files\n\t- can run debugger\n\t- integrates version management\n- some attach tools to running applications\n\n# 2 Features\n\n## 2.1 Snippets\nThese are are often included in laguage extensions. These snippets are templates for often repeated chunks of text.\n\nFor example a snippet to create a latex slide\n\n```\n\"dframe\": {\n\t\"prefix\": \"BDF\"\n\t\"body\": \"\\\\begin{dframe}{$1}\\n \\\\1 $2\\n\\\\end{dframe}\n\t\"description\": \"New dframe\" },\n}\n```\n\n## 2.2 LSP - syntax highlighting\n- allows IDE's to communicate with a \"language enging\"\n- ides dont need \n\n- shift from syntac to semantics\n- e.g.,\n\t- vs code chck file on opening\n\t\t- lsp reports type mismatches\n\t- rich editor functionality\n\t\t- autocompletion with appropriate context\n\t\t- information displayed on mouse hover\n\t\t- jumping to definitions on mouse hover\n\t\t- safe refactoring -\u003e better than blind search and replace\n\t\t- diagnosticso -\u003e e.g., display results of unit tests within editor\n\n## 2.3 Navigation\n- within files\n\t- bracket matching\n\t- block folding\n- multi file\n\t- multiple files at the same time\n\t- rapidly jump between files\n\t- search across all files\n- collaboration e.g., live sharing \n\n# 3 Modern IDEs\n- microsoft\n\t- vscode -\u003e free open source, highly popular\n\t- visual studio -\u003e integrates mobile and cloud development\n- java enivronments\n\t- eclipse - early leader in java, supports other languages\n\t- netbeans -\u003e also includes web dev tooling\n- jetbrains -\u003e IntelliJ IDEA, pycharm, phpstorm\n- google's android studio -\u003e official android IDE\n- apple's Xcode -\u003e free, macOS/iOS focus\n\n# 4 Early programming\n- dedicated machines\n\t- punched card programmer: separate machine from computer than reads cards\n- punched cards recore code and or data in binary\n\t- grid of positions, each representing a binary digit (bit)\n\t- each position in punches out, or not\n- analgogue electronic devices where you phsyicall wire things up\n\t- gaining interest now for use in machine learning\n\n## 4.1 Bootstrapping\n- already built tools can be used to builder better tools for building better tools etc.\n- e.g., first assembler was made in maching code. But after that they could use the assember to make a better assembler\n\n## 4.2 Early dev environments\n- command line based\n\t- text based terminals\n\t- command shell is the running application\n- Can use terminal to drive interactive languages\n\t- can edit, store software code\n\t- can compile cose and run resulting executables\n- it is still practical to do software development this way\n\t- vim etc\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/interpreter":{"title":"interpreter","content":"\n# What are they/what do they do\n- \"Interactive\" tool to run *high level interpreted*  languages. \n\t- pythonm ruby, shell, R, js, PHP\n- The interpreter program runs on CPU and executes program line by ine\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/interviewing":{"title":"interviewing","content":"\n## 1 Use Cases\n- [evaluating-designs](notes/evaluating-designs.md)\n- [requirements-elicitation](notes/requirements-elicitation.md)\n- [needfinding](notes/needfinding.md)\n\n## 2 Overview\n- direct and stuctured\n- semi structured\n- usually top down\n- effective for high level interface evaluation\n- need careful planning, experts, difficult to analyse\n- not a controlled experiment technique\n\n## 3 Conducting an interview\n### 3.1 Choosing participants\n- some is better than none\n- get pople who are representive of users\n\t- users of existing similar system\n\t- non-users -\u003e why people arent using a system\n\t- e.g., lecture support system\n\t\t- teachers\n\t\t- students\n\t\t- staff\n\t\t- admins\n\t\t- parents\n\t\t- freshman\n\t\t- phd\n\t\t- international domestic\n\t\t- stronger and weaker\n\t\t\n#### 3.1.1 Recruiting\n- Craiglist (in US)\n- your network\n- cheaper for less speciales users\n- if you can convince people you are imporving the world they might volunteer\n- if they think is is for profict they will expect to be paid\n- if you cant pay -\u003e you cant use a token of appreciation\n\n### 3.2 Process\n- introduce yourself explaint he purpose\n- the interview is about them, not you?\n- begin with open, unbiased questions-\u003e then follow up\n- ask the questions, and let them answer\n- have breaks and give them time\n- have a clear separation between the general introduction, the actual interview, and post inteview discussions\n\n### 3.3 Questions to avoid:\n- leading questions\n- what would they do / like / want in a hypothetical scenario\n- how often they do things\n- how much they like things on an absolute scale\n- avoid binary questions\n\n## 4 Pros/cons\n+ free and open answers\n+ sense of active contribution\n+ oppportunity for follow up\n- time consuming and resource intensive\n- dependent of commication skills of analyst\n- location/schedule can make this impractical\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/into-the-wild":{"title":"into-the-wild","content":"\n\nhappiness is only real when shared. \n\nhenry david [083-henry-david-thoreau](notes/083-henry-david-thoreau.md)\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/isolated-scenarios":{"title":"isolated scenarios","content":"# Adding a new member\nWithin an existing closed BC with 10 participants. say we wanted to add another participant as a validator node. they run the node software on a machine. this node is fully priviledged. they new member had to go through a screening and sign a legal contract to ensure they are not a bad actor. this node recieves a copy of the blockchain so far, and begins participating in the consensus algorithm and submitting transactions. their contract is added to the blockchain as their first transaction (maybe. or it can be stored somewhere else). \n\n- Existing members vote to add new member\n- on or off chain vote?\n- store record of vote outcome on-chain\n- consider special cases\n\t- details of vote cutoff time\n\t- parameters of vote change during vote\n- hyperledger\n\t- The purpose of add peer command is to write into ledger the fact of peer addition into the peer network. After a transaction with AddPeer has been committed, consensus and synchronization components will start using it.\n\t- transaction to remove peer requires the node making the transaction to have the can-remove-peer permission\n\t- can nodes with this perssion remove peers at will?\n\t- not 1:1 nodes:accounts\n\t- with HL Burrow you can use Solidity smart-contracts on Iroha\n\t- iroha would either have to be off-chain voting then a trusted peer (or initial) would add them\n\t- or: will need to look into HL Burrow but there might a way to have an on-chain smart contract voting system which automatically adds them depending on the vote\n\t\t- I could think about how to implement such a smart contract\n\n# Remove Member\nWhat happens if one participant turned bad and the other wanted to remove them from the group. Ssay we havea grup of 10 participants in a closed blockchain system using a CFT consensus algorithm Then they can be voted out so that their vote is desregarded and so they cant view or access data on the chain. what if they require access to decuments stored on-chain which they dont have local copies of. I guess they wuld have access to a stored copy of the blockchain on their node. But then would this chain be considered valid by oters. they dont store the actual document on the blockchain – only a timestamped hash to prove they had that doc at this particular time. participats should keep local copies of documents. Can participants kick out the initiating authority? You would have some mechanism to ensure that they cant be kicked out. firstly there would have to be a vote to kick them out. unless they aren't actually needed. who are the people that look at the documents that are stored on the chain to check them. Some third party collectively employed by the group? the govt? maybe its required for each participant to sometimes go and check if other participants are being truthful.\n\nRemoving member in hyperledger iroha: \n\n\n# Accidental Transactions\nThe new participant makes a mistake and puts the entire document instead of just a hash. this document is sensitive and contains data that should be kept private. \n - automatically perform some checks to ensure the data lodged during a transaction is always just a hash.\n - is this the responsibility of the participant or the network to prevent. should be participant but that doesn't mean there shouldn't be some checks that the network can do \n - do we want to store data other than hashed documents.\n - if the document is lodged on the BC can the consortium agree to remove it by doing basically a hard fork\n\t - what happens to the other side of the fork? just stops. \n - i guess thats a lot easier in a closed BC than an open one\n\nIf someone uploads a document by accident that is sensitive, then the chain hard forks to remove it from the history, is it still publicly available (to the members of chain) or is the old fork erased. bu then what if someone stored a local copy (which they do). maybe the local copy is stored encrypted and the owner of the document has the key to unlock it.\n\n# Discovery of Security Vulnerability\nwhat if someone found a security vulnerability in the code. would they exploit it? how to change the code. would there be a different process to normal code changes for something critical like this. within the blockchain wallets/accounts are linked to a real world identity. but i guess the person who found the vulnerability could easily (note the \"person\" is a member of an organisation who has access to the code) tell someone else who is not identifiable and have them exploit the vulnerability. how do organisations decide who has access to the code. if the person does not decide to try to exploit it, they have to bring it to the attention of others or try to fix it themselves. ","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/japanese":{"title":"japanese","content":"\n# My plan\n\n\n# Misc Notes\n- [[japanese-words]]\n- [[nope-threshold]]\n- [[stages of learning]]\n\n\n# Grammar\n![](https://i.imgur.com/uB2CLf6.png)\n\nsort of SOV e.g., I sushi eat. (english is SVO i eat sushi)\n\nin english the order of words tells us who did what\n\nin japanese sentences are made up of _particles_. each one indicates how the word before it relates to other words in the sentence, usually to the verb — which is usually last. the order of the words can vary because the particles tell us who did what not the word order\n\n\n\n\n# Sound system\n24 consonant sounds, 5 vowel sounds (english: 24 and 14)\n\nlanguage formed using either consonant vowel pair (except the \"n\" sound).\n\nhas pitch accent: distinguish similar spelled words. \n\npitches follow rules:\n- first and second mora have different pitches,\n- cant return from low to high\n\n# Writing system\nintriduced from china in the 4th or 5th century. evolved into its own system. \n\nthree types or writing\n- **hiragana** (46 chars + 2 diacritical marks)\n\t- used to denote sounds, and for functional words and inflectional ending (also some content words)\n\t- each one symbolises with a vowel or a consonant combinied with a vowel.\n- **katakana** a syllabary used or loan or onomaopoeic words and scientific words\n- **kanji** (from china), used for meaning and sound traditionally\n\n![|300](https://i.imgur.com/xtWqFBK.png)\n![|500](https://i.imgur.com/1YgwdZr.png)\n![](https://i.imgur.com/X0adoZu.png)\n\n[[kanji]]\n\n\n# Resources\n\n- http://plus.ajatt.com/nutshell/\n- http://guidetojapanese.org/learn/grammar\n- https://app.memrise.com/course/29267/genki-i/\n- https://www.reddit.com/r/LearnJapanese/comments/4vhe30/6_months_later_how_i_learned_to_learn_japanese/\n- https://www.reddit.com/r/LearnJapanese/wiki/index/startersguide/\n- https://www.reddit.com/r/LearnJapanese/wiki/index/resources\n- https://github.com/EngJpDiscordExchange/Awesome-Japanese/blob/master/readme.md\n- https://realkana.com\n- https://docs.google.com/document/d/10bRzVblKVOsQJjTc2PIi1Gbj_LrsJCkMkh0SutXCZdI/edit#\n- http://japanese-lesson.com/resources/pdf/characters/hiragana_chart.pdf\n- http://japanese-lesson.com/resources/pdf/characters/hiragana_writing_practice_sheets.pdf\n- http://japanese-lesson.com/resources/pdf/characters/katakana_chart.pdf\n- http://japanese-lesson.com/resources/pdf/characters/katakana_writing_practice_sheets.pdf\n- https://pomax.github.io/nrGrammar/\n- https://github.com/EngJpDiscordExchange/Awesome-Japanese/blob/master/readme.md\n- https://luckytoilet.wordpress.com/2017/07/12/the-power-law-distribution-and-the-harsh-reality-of-language-learning/\n- https://www.reddit.com/r/languagelearning/comments/fc8sot/the_nope_threshold_some_thoughts_on_what_words_to/\n- https://www.sinosplice.com/life/archives/2016/08/25/what-80-comprehension-feels-like\n- https://www.kanshudo.com/howto/pitch\n- https://www.kanshudo.com/grammar/pronunciation\n- https://files.tofugu.com/articles/japanese/2016-04-05-hiragana-chart/hiragana-mnemonics-chart.jpg\n- https://cotoacademy.com/learning-hiragana-hiragana-chart-practice-sheets-apps-online-quiz/\n- https://8020japanese.com/japanese-sentence-structure/\n- https://ankiweb.net/shared/info/278530045","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/japanese-words":{"title":"japanese-words","content":"\nmora: syllable\nyabai: sick!\n\n![](https://i.imgur.com/52SnhHt.png)\n\n\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/java-database-connectibity":{"title":"java-database-connectibity","content":"- ![jdbc slide](https://i.imgur.com/Dy79jcM.png)\n- ![jdbs slide what is does](https://i.imgur.com/NAr95En.png)\n- ![jdb issues](https://i.imgur.com/WR7qUae.png)\n- ![alternatives](https://i.imgur.com/rYhiX8o.png)\n- ![jdbi](https://i.imgur.com/OcNKIfH.png)\n\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/javascript":{"title":"javascript","content":"\nAn dynamically typed interpreted scripting language to dynamically control websites.\n\n# HTML DOM\n(Document object model)\n- JS can access and alter [html](notes/html.md) elements\n- When a page loads it creates the DOM as a tree of objects\n\n# Using js\nAdd inline, external or internal (script tags) js\n\nloading\n- defer makes scripts run only after all scripts are loaded\n- async scripts run as soon as they are loaded (no order guaranteed)\n\n# Events\nTriggered by various things that happen on a webpage\n\nYou can add an event listener to an element, which will trigger a function when that event occurs\n\n# Cookies\nUsed to store data on client machines\n\nAllows server to \"remember users\"\n\n# Limitations\n- Cannot access client files\n- Cannot establish a connection to any server except the one it came from (apart from re-directing to a new site)\n- no multithreading\n- cannot read history\n- cannot open invisible windows\n\n# Async\nAllows running long tasks in background while browser remains responsive\n\nprocess\n- Call function - returns a promise immediately\n- When function is finished - we are notified and promise become a value\n\ncallback: function passed to another function\n\npromise: object which represents the status of a function\n- pending\n- fulfilled -\u003e .then\n- rejected -\u003e .catch\n- settled (fulfilled or rejected)\n\nawait: keyword within as async function which makes code wait at a point for a task to finish\n\n## Fetch\nUsed to request data from a server to update the page. ","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/kanji":{"title":"kanji","content":"\n# Reading kanji\n\neach character has two readings: japanese (onyomi) and chinese (kunyomi). \n\nkanji that appear togeteher are usually read with onyomi\n\nkanji by themselves are read with kunyomi\n\nsome chars can have more than one onyomi or kunyomi\n\nkunyomi is also used in adjectives and verbs as well as stand alone chars. they often also have a string of kana (called okurigana) that come attached to it.\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/karl-marx":{"title":"karl-marx","content":"\n# Marx\n\"religion is the opiate of the masses\".\n\nlived in the era after the enlightenment. Dividends of these ideas are being paid. Trade is more available. There is ever increasing demand. Small crafter gave way to manufacturers. Power is given to these people. Max's thinks this is bad.\n\nMarx liked hegels dialectic:\n- thesis\n- antithesis\n- synthesis\n\napplied this to the economic history of the world. \n\n\"the history of all hitherto existing society is the history of class struggles\"\n\nalways two classes of people, rulers, and the exploited. rulers - thesis, exploited - anithesis, then revolution - synthesis. \n\ne.g.,\n- slavery vs slave master\n- peasants vs others\n\nmanufacturers - burgoise. others - politerate\n\nwe are the exploited class of this time period. rulers could be the big financial institutions\n\njust because you dont feel exploited doesn't mean you aren't. \n\nwhy would anyone be satisfied with this arrangement? why should be accept that revolution is necessary.\n\nrulers try to maximise their time in power. video games, movies, etc. distactin us from the world. \n\nultimate method of distraction is religion\n\n\n\n\"religion is the opiate of the masses\".\n\n\n\nmeant to mitigate the pain of being exploited. it is the ultimate fanstasy world. creates acceptance in the people. wverything is all \"gods will\". good for personal happiness, not good for society. \n\nthe structure of the religion of a time period mirrors the current econmic tactic of coercion by the ruling class. \n\ne.g., \n- heirachical structure of feudal system matches the religion of the time - catholism. \n- capitalism - liberty. religion abandons heirachical structure.\n\ntell the people \"the rich go to hell\".\n\nindividual moral progress is an illusion. the only thing that matters is the moral progress of society toward an end goal - the ideal society. \n\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/law-of-closure":{"title":"law-of-closure","content":"\nAnother law is the law of closure. Where our brain tries to \"autocomplete\" things\n![closure example](https://i.imgur.com/1bcanTN.png)\n![closure UI IBM](https://i.imgur.com/MW9r7PR.png)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/law-of-similarity":{"title":"law-of-similarity","content":"\nAnother law is the law of similarty. Things with similar appearance are grouped by our brains. \n![similarity example](https://i.imgur.com/lVlE1z8.png)\n![similarity UI](https://i.imgur.com/8BhtgTa.png)\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/layout":{"title":"layout","content":"\nTechniques such as, [similarity](notes/law-of-similarity.md), [grouping](notes/grouping.md) and (to a lesser extent) [closure](notes/law-of-closure.md), can be used to organise and groupu our interfaces. Often the grouping and layout is done before the rest of the design.\n\nExamples:\n![find dialogue](https://i.imgur.com/RfkC6Fq.png)\n![otago uni homepage](https://i.imgur.com/FjF8c98.png)\n![tobias poster](https://i.imgur.com/P1m9XH8.png)\n\nThis is relatively easy. However, when done badly it can quickly confuse the user.\n\n**Summary**\n- alignment guides the eye and reduces clutter\n- avoid slight misalignments that undermine your ability to beacon organisation\n- we automatically notice patterns and deviations\n- when you deviate do so strategically\n- use visual proximity and scale to convey semantic information\n\n# Examples\n![scott klemmer example](https://i.imgur.com/hGc8dZm.png)\n![youtube and ny times](https://i.imgur.com/5bztsrO.png)\n![apple finder and tobias poster](https://i.imgur.com/wgsiKb6.png)\n![google, ny times, craiglist, webby awards, before and after blurring](https://i.imgur.com/wnKoBEk.png)\n![scott klemmer examples 2](https://i.imgur.com/sGmAjLv.png)\n![scott klemmer examples 3](https://i.imgur.com/wD65fJu.png)\n![amazon](https://i.imgur.com/1L6IGAi.png)\n\n# Jan Tschichold and Bauhaus\nThere was a sudden change from the right images to the left. This was partly due to advances in technology. This change was made by the Bauhaus group/school which became a way of thinking. Their ideas were inspired by architecture. The style was simple, functional, well grouped. These elements are also present in their visual design. \n\n![typography old v new](https://i.imgur.com/nbEzVeP.png)\n![bauhaus bulding](https://i.imgur.com/MlP9Lra.png)\n![penguin books](https://i.imgur.com/jOCvCkw.png)\n![magazine](https://i.imgur.com/LXsRpCb.png)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/libraries":{"title":"libraries","content":"\n\n# what is a software library\n\n- collections of potentailly useful code. \n- implement comon fuunctionality so you dont have to \n- e.g., \n\t- music processign\n\t- game engines\n\t- etc.\n\n- languages may include standard libraries\n- *standard library* is one that is always available within a language\n\t- e.g., Java standard library\n- these make up only a small part of the broader available library functionality\n\n\n# Pros and cons of libraries\n\n- utf-8 conversion tables and collation schemes\n\t- e.g., for comparing equality of e.g., 'M�?ori' and 'Maori'.\n\t- this equality depends on the 'collation' scheme that is being used\n\t- conversion tables and collations are need for all known languages\n\t- it is good to not have to rewite these for each piece of software\n\t- just use a library\n\n- library code quality\n\t- well written libraries can propogate great benefits\n\t- econoomies of scale from reusilng good implementations\n\t\t- somebody needs to pay for the develp ment of the library\n\t\t- needs to be maintained\n\t- There is a downside -  code homogeneity\n\t\t- all programs using the same library carry the same security bugs\n\t- if you dont know the librar;y in detail you may not be able to fully utilise it\n\n- deep experience libraries\n\t- intel creates libraries that utilise their CPUs the best\n\t- they dont have to wait for library to be made that fully utilises their hardware\n\t- \n\n# understand trasitive dependencies in libraries\nhttps://xkcd.com/2347/\n\nlibraries rely on other libraries. These are called transitive dependencies. \n\nSoftware bill of materials enumerate what you depend on.\nwhen one of the libraries you use is updates, you may need to update to .\n\n# how they are provided\n- provided within language\n- some OSs provide large amounts of functionality\n\t- e.g., apple ecosystem\n\t\t- co dev of language and OS\n\t- microsoft windows ecosystem\n\t\t- .net\n\n# your obligations from using libraries\n\nmulitple different ways to interact with libraries\n- tight integration compiler builds library code into yours\n\t- only uses parts of library that you included in your app\n\t- but upgrading library requires rebuilding the app\n- library is packed alongside you app\n\t- may bloat youu app: includes unused library parts\n- licencing of the library\n\t- legal obligations\n\n# considerations when writing libraries\n- must consider general use cases\n- proper documentation\n- future maintenance\n\t- include abstractions to facilitate incremental updates\n- version numbering is important for compatibility\n\t- minor changes wont affect existing code\n\t- major changes will affect existing code\n\n# features of Java standard libraries\n- very large\n- e.g., two flavours of I/O\n\t- traditional\n\t- async i.e., non-blocking (NIO)\n- written in java\n\t- portable across OSs\n\t- thin layer of OS specific code\n\t- this helped it to \n\t\n# FYI \"Boost\"ing C++ library support\n\nboost is a rich set of libraries for C++\n\n\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/linear-probing":{"title":"linear-probing","content":"\n[animation demo](https://echo360.net.au/lesson/0e13f645-a91f-46c6-89d9-e3c31097b960/classroom#sortDirection=desc)\n\nA method of collision resolution for [hash-maps](notes/hash-map.md). In this scheme, each cell of the map contains a single key-value pair. If there is collision a key to be added maps to a cell that is already filled, to moves to the next cell *linearly* .\n\nIn C you know how many bytes of memory a k v pair will occupy. So you can store them as a continuous block of memory. Now you can take advatage of the locality of reference and the speed it provides. \n\nRules:\n- if a kv's home is already full, we move it into the next spot (wrapping to the beginning when we reach the end) in the array.\n- the load factor is capped and the array is resized when the cap is exceeded\n\n# Costs\nFrequency of collisions and time to find a new space are proportional to the *load factor* (percetage of occupied slots).\n- **Insertion:** $O(1)$ ⇒ proportional to the number of filled blocks we search before we find an empty one.  As long as the load factor is not to high this is on average \n- **Search:** $O(1)$ ⇒ Proportional to the number of cells we search before finding the one we want or an empty cell\n- **Resize**: $\\theta(n)$ amortised[^1] to $O(1)$ ⇒ Need to copy all elements to array of about[^2] double the size.\n\n# Deletion\nwe cant just empty cells as this will break search. We could:\n1. we could replace it by a \"tombstone\" marker. This counts as \"full\" for search and load purposes, but empty for insertion.\n2. we search foward from the element we're removing until we find something that belongs in that location or earlier - swap it back into this location and repeat until an empty cell is found.\n\n[^1]: Since we are able to do about n operation before we need to resize, we can spread this cost among those operation.\n[^2]: By not doubling exactly, the modulo remainder is \"scrambled\" a bit thus reducing collions.\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/linker":{"title":"linker","content":"\n\n- Linkers facilitate use of code in multiple languages, e.g. \n\t- use C for programming speed of developer; \n\t- use Assembly language for running speed of code \n\t- But these days: often hard to beat optimising compilers! \n- Linkers effect interaction with libraries in two ways: \n\t- Static linking: build libraries’ code into your application \n\t- Dynamic linking: library connected in at load or run-time \n- Linkers facilitate interaction with OS\n\n## Static linking \n- Statically linked libraries are built into executable \n\t- We’ve previously discussed the dependency problems: \n\t\t- Every executable carries the weight of the library code \n\t\t- Also, bug fixing requires rebuilding the whole program \n- However, static linking is straightforward \n\t- e.g., nothing much OS-specific about static linking \n\t\t- Library calls are just function calls within userspace \n- Alternative is for linking not to finish at compile-time \n\t- Linker could add code to link at runtime \n\t- More commonly, linker tells OS more linking needed later \n\n## Dynamic linking \n- Dynamic linking is common on modern OSs, e.g., \n\t- DLLs on Windows: Dynamic Link Libraries \n\t- SOs on Linux, Solaris: Shared Objects \n\t- DyLibs on macOS: Dynamically loaded modules \n- One copy of dynamic library shared by all executables \n\t- efficiently uses memory: load into RAM once; share to all \n- Fixing bugs / security flaws is streamlined: \n\t- just upgrade the single copy of the library \n\t- all processes will adopt fixed library (when they next start) \n\n## Managing dynamic libraries \n- Dynamic libraries may have different ownership \n\t- Some dynamic libraries will be part of the OS distribution \n\t- Others installed along with apps that need those libraries \n- Can track installable library use with reference counters \n\t- Software installer checks whether library is already present: \n\t\t- if not, install library, set reference count to one \n\t\t- if so, increase reference count by one \n\t- Uninstaller decreases reference count: deletes if at zero \n\t- But your reference counting needs to be reliable \n\t\t- ... unlike early Windows OSs: so called ‘DLL hell’\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/loader":{"title":"loader","content":"\nAn executable file e.g., greet has to be **loaded and run** by your [OS](notes/operating-system.md). Depending on your OS and your harwdare this might need to be done differently\n\n## C program example\n[400](https://i.imgur.com/1PlLlQ5.png) [400](https://i.imgur.com/bBQp3TH.png)\n\n## OS Program loaders\nThere identify the types of file that is being executed. E.g., a  #! at the beginning of a file tells the OS which interpreter to run that file through. Otherwise it will look into the binary file, loads any dynamic libraries, and adjusts the executable code to point to shared libraries in RAM. Eventaully the OS will point the CPU at the binary machine code, first creating an OS process to contain code execution so it cannot overwrite memory belonging to another process\n\n## Java Program \"loader\"\nJava was designed to be portable, and minimose effort to port to another OS. Java \"hides\" the OS from you. It can dynamically load classes at runtime, thus avoiding an explicit linking stage. Java class loaders can read .class files. The Top-level ClassLoader is written in native code. It loads internal classes like HashMap. Then ClassLoader subclasses written in java can be loaded.\n\n## Even higher level computing abstractions\n- Java Enterprise edition\n\t- run code is exisintg application server\n\t- most of the time the app framework is running\n\t- your code injects key classes with custom business logic\n- .NET is similar\n- Web application programming\n\t- stacks offer page templating, business rules, databases\n- Cloud native application\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/logic-gates":{"title":"logic-gates","content":"\n\n# Logic Gates\n- NOT\n- AND\n- OR\n- NAND\n- NOR\n- XOR/EOR","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/low-fidelity-prototypes":{"title":"low-fidelity-prototypes","content":"\n# Inital Designs\n## Navigation\nThe first thing I wanted to was get a clear picture of how each screen should interact with the others. Identified three main screens: Home, Friends, and Schedule. I also identified some supplementary screens: Trick options, other settings, and welcome, and some more optional screens: Trick lists, trick dictionary. \n\nI also listed some things that each screen should contain\n![](https://i.imgur.com/GeFsI1N.png)\n\n## General protoypes\nNext I started to get down down general ideas about all of the screens. The main goal of this step for was to figure out the general flow of the app, and to get a general idea of how each screen should look.\n\nThis first two pages I was experimenting mostly with the home screen. I tried three different layouts: Top tabs, Bottom tabs, and floating bottom buttons. I also started to explore ways for the user to navigate from the home screen to the trick options screen, and the schedule screen.\n\n![](https://i.imgur.com/opwrdE6.png)\n![](https://i.imgur.com/p4WFba9.png)\n\nThe second page I explored a some variations on the floating button design. And begin  experimenting with the navigation and layout of the friends screen.\n\n![](https://i.imgur.com/vrW0wOS.png)\n\nOn the third page I kept experimenting with the friends page. \n\n![](https://i.imgur.com/ey0yJTT.png)\n\n# In depth prototypes\n## Home screen\nI wanted to keep the layout mostly based on googles material design. This will help with four design heuristics: Familiar metaphors and language, consistency and standards, recognition over recall, and minimalist design.  \n\nI started with creating an partly new design that combined the floating buttons, and the swipe feature for trick options. I decided against this as within material design it is not reccomended to have multiple floating buttons. I decided instead to use bottom tabs as they are the most logical, and familiar design for users. \n\nI also decided against the swipe feature to show tricks, and opted instead for a button which opened another screen.\n\nI also tried out some other designs features a black background and round buttons.\n![](https://i.imgur.com/DbOlh7s.png)\n\n![](https://i.imgur.com/CbEtGUq.png)\n![](https://i.imgur.com/D4PaDJL.png)\n\n\n## Other settings\n![](https://i.imgur.com/5QPmErT.png)\n\n## Trick Options\nFor the trick Options I considered a few three main designs: the swipe/scroll, the modal, and the full screen.\n![](https://i.imgur.com/sovj0Q5.png)\n\n\n## Welcome\n![](https://i.imgur.com/YXarRMG.png)\n\n## Schedule\n![](https://i.imgur.com/zygYzAH.png)\n\n# Version 1\nAfter getting a general Idea of the basic layout of the app, I compiled my favourite versions of each screen into one design. This allowed to informally evaluate the design and find things to change.\n\n![600](https://i.imgur.com/KlcfDxK.png) ![600](https://i.imgur.com/hDfqduV.png)\n\n# Version 2\nThe first Thing I want to change is the schedule/altitude screen. I thought I could remove the separation and combine the two screens. But this didn't work so well.  However, I think the ability to switch between meters and feet was good as this improves **user control and freedom**. Also the use of the spinner for time and altitude selection will be familiar to most users. This improves use of **consistency and standards**, and **recognitiona over recall**. I also decided to try a \"switch\" type design, where the user is forced to chooose between the schedule and the altitude. \n\nI think think this works much better as it **shows the system status** clearly. And has a less cluttered more **miniml, aesthetic design**. I kept the weekday selection on both screens as the might only want use the altitude system on certain days. This improves, **user control and freedom**.\n\nI also thought it might not be super clear what the functions of the two options were, especially the altitude option. So decided to add a closable info card with some information. This improves **help and documentation**\n\nI also wanted to change the way the trick options worked. Instead of have the save cancel buttons I wanted the settings change to have immediate effect, so the user didn't have to save. These changes are in the second row of the first page of version 2. The actual options themselves are largely the same, except I added a header with a back button and removed the bottom save and cancel buttons. Next I changed the dropdown for each of the trick types to individual screens with the commonly used right chevron icon.\n\nI also added the bottom navigation bar back to the trick options screens to improve **user control and freedom**\n\n![600](https://i.imgur.com/Tph3x0V.png) ![600](https://i.imgur.com/rcK33u8.png)\n\n# Version 3\nAfter I had mostly finished the Layout. I changed the look to match the snowboarding \"aesthetic\", by making the app primarily black. However I dont think this design was as easy to use as the normal light design.\n![600](https://i.imgur.com/VRoFhvQ.png)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/management-of-file-systems":{"title":"management-of-file-systems","content":"\nA file is a collection of related data. They can be thought of as artifacts of the dialogue between the user and the OS\n\n# Attributes\nThe attributes of a file are stored in an index node (inode) which held in a directory. These attributes include: name, owner, type, location, size, permissions, more.\n\n# System Calls\nThere are two main systems calls for file interaction: write and read.\n\n# File Access patterns\nThere are two main types of access: **Sequential** and **Direct** access. \n\nIn sequential access, a file pointer specifies a record within the file. The pointer can then be moved forward (read or write) or backwards (rewind).\n\nIn direct access, a file is viewed as a numbered sequence of records. Operations can be done on any record in any order.\n\n# Directory structure\n\n\n# Disk allocation methods","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/mary-woolstonecraft":{"title":"mary-woolstonecraft","content":"\nKnown as the \"original feminist\"\n\nLived during the renaissance with other such as [voltaire](notes/voltaire.md) and burke. She was born into a conservative household, with a drunk wifebeater for a dad. She often tried to protect her mother from him. This founded her need to protect other women. \n\nShe became a personal tutor for a family with four young girls. Each of them grew up to be successful woman. \n\nAt the time of her birth women were had almost slaves. Even the most progressive thinkers of the time had very misogynistic views. For example Rosseau said: \n\n\u003e \"the whole education of women ought ot be relative to men, to please them, to be useful to them, to make themselves loved and honoured by them, to educate them when young, to care for them when grown, to counsel them to console them, and to make life agreeable and sweet to them, these are the duties of women at all times, and should be taught to them from their infancy\"\n\nThis sounds a lot like slavery.  Women are percieved as mentally and physically inferior to men. It was this kind of thinking that Woolstonecraft was trying to abolish. She said:\n\n\u003e \"strengthen the female mind by enlarging it, and there will be an end to blind obedience, but as blind obedience is ever sought for by power, tyrants and sensualists are in the right when they endevour to keep women in the dark, because the former only wants slaves and the latter a plaything\"\n\nHere she is saying the system that oppresses women is like a tyrant. She was the first to consider the idea that equality should be for both men *and* women (wow), thus starting the pursuit of true equality.\n\nThe current cultural conventions are constantly changing. These changes usually occur is bursts as revolutions. Some progressive thinker points out a glaring injustice, then change occurs.\n\nWoolstonecraft dared to question the cultural conventions of her time. This leads to the questions: What social conventtions exists today, that we aren't questioning? Who is the tyrant now? How are we being conditioned? It is inevitable that future generations will look back at us as barbarians, in the same way we view earlier generations.\n\nAcknowlegding how arbitrary our current norms are is freeing.","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/math-202":{"title":"math-202","content":"- [site](https://www.maths.otago.ac.nz/?resOLAF)\n- [syllabus](https://www.maths.otago.ac.nz/webdata/resources/math202/2022_S2_Course_Information/Syllabus.pdf?m=1657334628)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/mccumber-cube":{"title":"mccumber-cube","content":"\nThe mccumber cube is  way of thinking about how to protect information\n\n![slide](https://i.imgur.com/5Ls2yUp.png)\n\nIt is a map that can be used to find \"holes\" within systems.","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/media":{"title":"media","content":"\n# Books\n- 2022\n\t- The diamond age\n\t- [The Story of Man](notes/the-story-of-man.md)\n\t- [The Art of War](notes/the-art-of-war.md)\n\t- [The Friar and the Cipher](notes/The-Friar-and-the-Cipher)\n\t- The Island of sea women, lisa see\n\t- Reminiscences of a stock operator\n\t- Out of the flames, lawrence and nancy goldstone\n\t- Talking to strangers, malcolm gladwell\n\t- The overstory, richard powers\n\t- Ligeia, edgar allan poe\n\t- The stranger, albert camus\n\t- What if?, randall monroe\n\t- The age of reason - jean paul Sartre\n\t- Jane Eyre, charlotte bronte\n\t- a midsummer nights dream, shakespeare\n\t- the amazing maurice and his educated rodents, terry pratchet\n\t- the ocean at the end of the lane\n- current\n\t- cryptonomicon, neal stephenson\n\t- the curious case of the dog in the night time\n\t- thinking fast and slow\n\t- the second sex, simone de beauvoir\n- future\n\t- actual air david berman\n\t- woman in the dunes\n\t- sophies world\n\t- on the trail of genghis khan\n\n# Podcasts\n- [philosophize-this](notes/philosophize-this.md)\n- Sean Carroll's mindscapes\n\n# Films\n- before 10/22\n\t- eyes wide shut\n\t- the talented mr ripley\n\t- donnie darko\n\t- audition\n\t- whiplash\n\t- eternal sunshine\n\t- treasure planet\n\t- requiem for a dream\n\t- suspiria 1977\n\t- good time\n\t- enemy\n\t- the batman 2022\n\t- the shining\n\t- perfect blue\n\t- naussica\n\t- the lighthouse\n\t- nightcrawler\n\t- good, bad, ugly\n\t- akira\n\t- clockwork orange\n\t- psycho\n\t- everything eveywhere\n\t- american psycho\n- 10/22\n\t- in the mood for love\n\t- greener grass\n\t- brown bunny\n\t- drive my car\n\t- shiva baby\n\t- martyrs\n\t- suspiria 2018\n\t- the red shoes\n\t- le samourai\n\t- meek's cutoff\n\t- Titane\n\t- onibaba\n- 11/22\n\t- wendy and lucy\n\t- the passion of joan of arc\n\t- ikiru\n\t- raw\n\t- in brudges\n\t- in the loop\n\t- nobody\n\t- raw\n\t- the thin blue line\n- 12/22\n\t- Cure\n\t\t- Bertrand Russell wrote, “One should as a rule respect public opinion in so far as is necessary to avoid starvation and to keep out of prison, but anything that goes beyond this is voluntary submission to an unnecessary tyranny, and is likely to interfere with happiness in all kinds of ways.”\n\t- raise the red lantern\n\t- ","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/meet-and-greet":{"title":"meet and greet","content":"\ninfor about each company in a note\n- some interesting things\n- recent articles about them\n- try to bring these up\n\nwhen talking abt urself\n- only say whats relevant to the comany\n- i study x and y. i have done z projects and this is why they are relevant to you, so \n\nask for the rep of the company who is relevant to your field (only at large companies)\n\nwhat to research\n- news articles\n- visit websites\n- find what they are doing\n- find things that match with your hobbies\n- who they sponser. their ads\n\t- e.g., anz cricket\n- SoT job descriptions\n\nintroductions\n- hi i have a random question i was working on x project ...\n- how are you.. normal conversation\n- ask them what they do at the company\n\t- find common ground\n- go with the flow\n\nquestions\n- ask them to elaborate on tech and projects\n- tell me more vs what is this\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/memoization":{"title":"memoization","content":"\nA method of designing algorithms which is similar to dynamic programming in that previously calculated answers are stored in memory\n\n- initialising memory for answers\n- work from top down\n- whenever a result is computed store it in memory\n- look up computed values (if you can) when needed\n\n```java\nstatic HashMap\u003cInteger, Long\u003e fib = new HashMap\u003c\u003e();\npublic static long fibMEM(int n) {\n\tif(n \u003c= 1) return 1;\n\tif(!fib.containsKey(n)) {\n\t\tfib.put(n, fibMEM(n-1) + fibMEM(n-2));\n\t}\n\treturn fib.get(n);\n}\n```\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/memory":{"title":"memory","content":"\nComputer memory is a series of switches (similar to the switchboard in a house). Each switch is identified by a number and is either on or off. \n\n(High level) Programming languages allow us to name some of the locations using variables. this is easier than remembering the number of each \"switch\"\n\nThese switches are mostly located in RAM. But there are also switches within the CPU called registers\n\n# SRAM\nStatic ram is:\n- made from flip flops.\n- mostly used in the cpu cache or anywhere where only a small amout of memory is needed. \n- comparatively expensive to DRAM\n\n# DRAM\nDynamic ram is:\n- made from capacitors\n- used where a large amount of memory is needed\n- slower than SRAM\n- inexpensive\n\n# Non volatile memory\nThis is often called ROM (read only memory)\n- can also be called PROM, EPROM, EEPROM, FLASH (floating-gate flash cells not transistors )\n\n# Registers\n- Registers are memory cells with names within the CPU. \n- They hold data instructions or CPU status.\n\n## Special purpose registers\n- program counter\n\t- stores address of current instruction\n- accumulator\n\t- source of one of the operands\n\t- destination of the result\n- status flags\n\t- individaul bits store information about results of operations\n\t\t- result of last instruction was negative, zero, or postive\n\t\t- carry from most recent arithmetic operation\n\t\t- overflow occurred during the last instruction\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/mental-models":{"title":"mental-models","content":"\n- mental models are created by experience, metaphors, and analogical reasoning\n- these models are developed further through interaction with the system\n- designers (wrongly) often expect the users model to be the same as theirs\n\nA mental model mistach leads to:\n- slow performance\n- errors\n- frustration\n\n[participant-observation](notes/participant-observation.md) appretiships (and other techniques such as [evaluating-designs](notes/evaluating-designs.md)) can uncover these mismatches. \n\n## Slips vs mistakes\n\n| Slip       | Mistake                           |\n|:-----------|:----------------------------------|\n| accidental | on purpose (due to model mistach) |\n\n\n## How to create good mental models\n- [Direct Manipulation](notes/direct-manipulation-video.md)\n\t- leveraging real world metphors\n\t- this gives is a good idea of how each object works and how to control it\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/mental-models-video":{"title":"mental-models-video","content":"\nThe users mental model is how the user thinks the interface works.\n\nfor example the fridge with two dials, or the doors.\n\nThe goal is for the design to create the correct mental model in the user. Designers often expect the user to have the same mental model as them, but this is not always the true. The users model is developed through iteraction with the system\n\nThis is why its important to have other people test the system.\n\nA conceptual model mistach can lead to slow performance, erros, and frustration.\n\nMental models arise from experience, metaphor, and analogical reasoning. We can leverage what people have learnt from old interfaces to inform new ones. Our mental models are iconsistent, unstable in time, and often rife with superstition. \n\n# Slips vs Mistakes\n\nA slip is when you have the right model but accidentally do the wrong thing.\n\nA mistake is when you do what you intended, by you have the wrong mental model.\n\nSlips with be prevented by improving ergonomics or visual design.\n\nMistakes can be prevented by providing better feedback and making options more clear.\n\nre using existing designs reduced mistakes. \n\n\n# World in miniature interface\n\nfor example the seat interface\n[](https://i.imgur.com/J8d9Q0N.png)\n\n\u003e \"Is technology is providing an advantage, the correspondance to the real world must break down at some point\" - Jonathan Grudin\n\nWe should minimise the gap between current technology and new technology. \n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/mergesort":{"title":"mergesort","content":"\nMergesort is a [divide-and-conquer](notes/divide-and-conquer.md) algorithm. It works by recursively splitting the array in half then merging the two (sorted) halfs together . It has three main steps. These are:\n\n- pre-processing: split the array into two pieces\n- recurive step: sort each of the pieces \n- post-processing: merge the two pieces\n\ne.g.,\n\n7 5 3 9 1 8 2 5 4 0\n\n7 5 3 9 1 |  8 2 5 4 0\n\n7 5 | 3 9 1 | 8 2 5 | 4 0\n\n5 7 | 1 9 3 | 2 8 5 | 0 4\n\n1 3 5 7 9 | 0 2 4 5 8 \n\n0 1 2 3 4  4 6 7 8 9\n\n# 1 Implementation\n## 1.1 Merge\n\nGiven: a and b are sorted arrays. m is an array whose size is the sum of their sizes\nGet: a sorted array containing the elements of a and b\n\nKeep track of indices, ai, bi, and mi of the active location of a, b, and m.\nFind which of ai or bi is lesser (break ties is favour of a), and copy that value into m at mi, and increment mi and whichever of ai or bi was used.\nOnce ai or bi is out of range, copy the rest of the other array into the remainder of m\n\n```java\npublic static int[] merge (int[] a, int[] b){\n\tint[] m = new int[a.length + b.length]\n\tint ai = 0, bi = 0, mi = 0;\n\n\twhile(ai \u003c a.length \u0026\u0026 bi \u003c b.length) {\n\t\tif(a[ai] \u003c= b[bi]) m[mi++] = a[ai++];\n\t\telse               m[mi++] = b[bi++]\n\t}\n\n\twhile (ai \u003c a.length) m[mi++] = a[ai++];\n\twhile (bi \u003c b.length) m[mi++] = a[bi++];\n\n\treturn m;\n}\n```\n\n\n### 1.1.1 Complexity of merge\n\n$\\theta(n)$  \n\n$n$ is the sum of the lengths of $a$ and $b$ \n\nEach time we loop the parameter $mi$ must increase by one, and this parameter runs from $0$ to $n-1$ \n\nSince the total number of loop bodies executed is $n$ and each loop does a constant amount of work, the total time complexity is $\\theta(n)$  \n\n\n## 1.2 Sort\n\n```java\npublic static void mergeSort(int[] a) { \n\tint blockSize = 1; \n\twhile (blockSize \u003c a.length) { \n\t\tint lo = 0; \n\t\twhile (lo + blockSize \u003c a.length) { \n\t\t\tint hi = lo + 2*blockSize; \n\t\t\tif (hi \u003e a.length) hi = a.length; \n\t\t\tmerge(a, lo, lo + blockSize, hi); \n\t\t\tlo = hi; \n\t\t} \n\t\tblockSize *= 2; \n\t} \n}\n```\n\n\n### 1.2.1 Complexity of Sort\n\n$\\theta(n\\ lg\\ n)$\n\n\u003e In a divide and conquer algorithm where pre and pst processing work are Ο(n) and the division is into parts of size at least n for some contatn c \u003e 0 the total time complexity is Ο(n lg n) and generally ϴ(n log n)\n\n#### 1.2.1.1 Top down\n\nWe can split into the three steps to analyse this.\n\n- Pre has constant time i.e., $\\theta(1)$\n- Post has linear time i.e., $\\theta(n)$\n\nTherefore: $M(n) = \\theta(n) + 2 \\times M(n/2))$ \n\nSubstitue $\\theta(n)$ with $C \\times n$ then\n\n$$\n\\begin{align*}\nM(n) \u0026= C \\times n+2 \\times M(n/2) \\\\\n\u0026= C \\times n+2 \\times (C \\times (n/2) + 2 \\times M(n/4))\\\\\n\u0026= C \\times (2n) + 4 \\times M(n/4) \\\\\n\u0026= C \\times (2n) + 4 \\times (C \\times (n/4)) + 2 \\times M(n/8))\\\\\n\u0026= C \\times (3n) + 8 \\times M(n/8)\\\\ \\\\\n\u0026= C \\times (kn) + 2^k \\times M(n/2^k)\n\\end{align*}\n$$\n\nThis stops (at least) when we reach the base case of $n/2^k=1$ . We could stop earlier and\n\nIf we do a constant amount of work $D$ when we reach the base case we get:\n\n$$\nM(n) = C \\times (kn) + 2^k \\times D\n$$\n\nwhere $k\\leq lg(n)$ so:\n\n$$\nM(n) ≤ C \\times (n lg(n)) + D(n) = ϴ(n\\ lg(n))\n$$\n\n\n\n\n\n#### 1.2.1.2 Bottom Up\n\n- Let n be the number of elements in the array, $a$.\n- The outer while loop (controlled by blockSize, or $b$) is executed $lg(n)$ times since its upper bound is n and b is doubled each time.\n- In the inner loop, the update on lo is to add $2b$ so it is executed $n/(2b)$ times.\n- The inner loop merges two arrays of size b, so each instance does $\\theta(b)$ work.\n- That gives an upper bound on the work done in one instance of the outer loop of the form:\n\n$$\n(n/(2b)) \\times (A \\times b) = (A/2) \\times n\n$$\n\nand a matching lower bound.\n\n\n- Thus, the work done in one instance of the outer loop is $\\theta(n)$ \n- And so, the total complexity is $\\theta(n\\ lg\\ n)$.\n\nThe bottom-up version does exactly the same thing as the top-down version, just in an apparently different order, so this analysis applies to the top-down version as well.\n\n\n# 2 Variations of Mergesort\n\n[unite and conquer](notes/unite-and-conquer.md)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/merkle-tree":{"title":"merkle tree","content":"\nA trie is a tree like data structure that isused to retrieve a string value by traversing down a branch of nodes that store associated references that together lead to the end value that can be returned. \n\nMerkle trees exist to prove consistency of data. They are essentially a tree of hashes. \n\n\u003e _“_**_Merkle tree_** _is a_ [[tree]] _in which every leaf node is labelled with the hash of a data block and every non-leaf node is labelled with the_ [_cryptographic hash_](https://en.wikipedia.org/wiki/Cryptographic_hash_function) _of the labels of its child nodes.”_\n\n![digram|300](https://i.imgur.com/HMzwjgb.png)\n\nThey provide a means to prove the integrity and validity of data. E.g., if you change the value of a data block, the entire path leading to the root hash would also be changed. So, if we hold the value of the root hash, we could verify the consistency of data by rebuilding the trie to get the root hash and compare it to the value we are holding.\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/mobile-app-ass-03":{"title":"mobile-app-ass-03","content":"\n[full-assignment](notes/full-assignment.md)\n\n[pdf](https://blackboard.otago.ac.nz/bbcswebdav/pid-2827493-dt-content-rid-18385743_1/courses/INFO203_S1DNIE_2022/Assignment3.pdf)\n\n[idea](notes/idea.md)\n[initial-ideas-mind-map](notes/initial-ideas-mind-map.md)\n[brainstorming](notes/brainstorming.md)\n[personas-development](notes/personas-development.md)\n[personas-final](notes/personas-final.md)\n[hi-fi-development](notes/hi-fi-development.md)\n\n- [x] brainstorming [brainstorming](notes/brainstorming.md)\n- [x] Personas and scenarios\n\t- [x] Development [personas-development](notes/personas-development.md)\n\t- [x] Primary [Primary Casual Kyle](notes/personas-final.md#Primary%20Casual%20Kyle)\n\t- [x] Secondary [Secondary Logan the learner](notes/personas-final.md#Secondary%20Logan%20the%20learner)\n- [x] Storyboard\n- [x] Low-fi Prototypes [low-fidelity-prototypes](notes/low-fidelity-prototypes.md)\n\t- [x] drawings stage 1\n\t- [x] drawing stage 2\n\t\t- [x] more alternatives for navigation diagram\n\t\t- [x] more intial designs\n\t- [x] document\n\t\t- [x] add references to design heuristics\n- [x] Hi-fi Prototype \n- [ ] Presentation\n\n\n\n\n\n \n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/model-view-controller-pattern":{"title":"model-view-controller-pattern","content":"\n**Model:** An object carrying data\n- handles data logiv\n- interacts with database\n\n**View**: The visualisation of the data that model contains\n- rendered dynamically\n\n**Controller:** Controls the data flow into model object and updates the view whenever data changes. Keeps view and model separate.\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/modelling-behaviour":{"title":"modelling-behaviour","content":"\n[relevant slides](https://blackboard.otago.ac.nz/bbcswebdav/pid-2892846-dt-content-rid-18407618_1/courses/INFO201_S1DNIE_2022/2022/lectures/lecture_12_slides.pdf), [lecture recording](https://echo360.net.au/lesson/3807232c-e251-4818-a098-c61f6a6b455a/classroom#sortDirection=desc), [relevant article](https://thevaluable.dev/anemic-domain-model/)\n\nModelling behaviour is more complex than modelling the structure of OOP systems (e.g., [class-diagrams](notes/class-diagrams.md). There are more diagram types, they are more general, and more complicated.\n\nClass do diagrams specify *some* behaviour (public vs private, method signature and implementations, api (what methods are available), inheritance and behaviour).\n\nModels of system and object behaviour cover these and also lower level sequencing and flow of control, and compartmentalisation into \"subsystems\"\n\n# 1 Inheritance\n## 1.1 Via Specialisation\nInheritance via specialisation is when something is subclass of something else. Subclasses inherit all public members of their parents. They are able to replace or customise inherited existing methods and add their own specialsed methods (including constructors). [example class diagram](https://i.imgur.com/Nul5ECp.png), [example java code](https://i.imgur.com/D7nZ2ON.png)\n\n## 1.2 Via Interface\nAn interface is a class that specifies a set of common behaviour. \n- public methods and constant fields only (no variable fields)\n- effectively an “inheritable\ufffd\ufffd? public API (no implementation) ⇒ Catalogue must implement all Search methods\n- independent of inheritance via specialisation\n- a class can implement multiple interfaces\n\n[example class diagram](https://i.imgur.com/tZX8uQT.png) \n\nin Java: \n- [example java code](https://i.imgur.com/2cXr5CM.png)\n- Examples of built-in Java interfaces: (also see INFO 202) \n- Collection: collections of objects (lists, sets, maps, …) \n- Iterable: collections that can be iterated over \n- Comparable: objects that have a concept of ordering\n\n## 1.3 Public vs Private\n- The public API defines what a class can do \n\t- e.g., read and write data, manage a list of items \n\t- effectively a “promise\ufffd\ufffd? or “contract\ufffd\ufffd? to other classes that use it \n\t- should be as stable as possible \n\n- The private implementation defines how a class behaves \n\t- e.g., data stored in memory vs. CSV files vs. SQL DBMS vs. …, unsorted lists vs. sorted vs. unique vs. … \n\t- can change to improve speed, reduce memory, redesign architecture, take advantage of new language features, …\n\t- shouldn’t be exposed to other classes\n\n### 1.3.1 Why\n- More stable public API: \n\t- doesn’t expose internal implementation details \n\t- can change internals without breaking promised behaviour\n\n- More flexible public API: \n\t- less coding required to switch implementations \n\t- can easily switch internal implementations on the fly (e.g., print receipt vs. save as PDF vs. send as email) \n- Programming to an interface (i.e., public API): \n\t- encapsulate public API into a class or (Java) interface \n\t- subclass or implement this to create specific implementations \n\t- use the top-level class or interface everywhere you would otherwise use the specialised implementations\n\n\n# 2 Behaviour\n## 2.1 Anaemic domain models\nIn an anaemic domain model the **domain objects** also called **Models** contain (mostly) only data, and very little logic.\n\nThe **services** set the properties of the models via getters and setters. This defines the logic of the application\n\n[anaemic example](https://i.imgur.com/PeaBhnX.png)\n\n**Processor objects** are often used in anaemic systems to move data between objects. Also called **services**\n\n[processor example](https://i.imgur.com/jw3Xbc1.png)\n\n\n## 2.2 Rich domain models\nIn a rich domain model logic is contained within  **real domain models**. And the service layer thin and used only for third party services.\n\nThis means that the behaviour of the domain models is encapsulated within them\n\n[rich example](https://i.imgur.com/eHmda7A.png)\n\n\n\n#unfinished \n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/models":{"title":"models","content":"\n\u003e \"A model is an informative representation of an object, person or system\"\n\nSoftware is made up of models. It is not only \"code\"\nModels can be high level (mockups etc) or low level (code)\nModels can be executable (code, ec) or not (diagrams)\n\nModels are used in [domain-driven-design](notes/domain-driven-design.md) and in  [behaviour-driven-development](notes/behaviour-driven-development.md)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/mood-board":{"title":"mood-board","content":"\n# Mood board\n- Black and white maybe an accent color\n- sharp edges\n- capital letters\n- minimal\n- bold\n- dynamic\n- harsh\n- dark background\n- image background?\n\n\n- https://stabmag.com\n\t- ![](https://i.imgur.com/zAt30SM.png)\n- https://www.pleasuremag.com\n\t- ![](https://i.imgur.com/tLJFAp9.png)\n- https://www.snowboarder.com\n\t- ![](https://i.imgur.com/TOY6gHL.png)\n- https://www.thrashermagazine.com\n\t- ![](https://i.imgur.com/KfWhHcC.png)\n- https://ridesnowboards.com/en-nz\n\t- ![](https://i.imgur.com/EPmwnVv.png)\n\t- ![](https://i.imgur.com/4MvjlyZ.png)\n- https://romesnowboards.com\n\t- ![](https://i.imgur.com/w4YTDM2.png)\n- https://www.burton.com/us/en/home\n\t- ![](https://i.imgur.com/ruTBXvQ.png)\n- https://unionbindingcompany.com\n\t- ![](https://i.imgur.com/pRNjDed.png)\n- https://thirtytwo.com\n\t- ![](https://i.imgur.com/GMUsPkq.png)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/movie-list":{"title":"movie-list","content":"\nTop movies\n1. yojimbo\n2. le samourai\n3. akira\n6. rashomon\n11. ikiru\n9. perfect blue\n10. in the mood for love\n12. cure\n5. taxi driver\n8. good the bad the ugly\n4. ghost in the shell\n7. annihilation\n\nTo watch\n- They live \n- Sideways\n- the beguiled\n- woman in the dunes\n- bullitt\n- Windfall\n- salo\n- black swan\n- fistful of dollars\n- magnificent seven\n- godfather\n- paris texas\n- the deer hunter\n- rio bravo\n- schindlers list\n\ntarantinos faves\n- battle royale kinji fukasaku\n- anything else\n- the blade\n- audition mike takashi\n- boogie nights\n- dazed and confused\n- rio bravo\n- dogville\n- fight club\n- friday \n- the host\n- the insider\n- joint security area (jsa)\n- lost in translation\n- the matrix\n- memories of murder\n- police story 3 supercop\n- shaun of the dead\n- speed 1994\n- team america\n- unbreakable 2000\n- brian de palma blowout\n\namerican\n- midnight cowboy\n- easy rider\n- the last movie\n- five easy pieces\n- the king of marvin gardens\n- the last picture show\n- the exocist\n- indiana jones and the temple of doom\n\nhorror\n- halloween\n- the thing\n- the texas chainsaw massacre\n- the evil dead\n- a nightmare on elm street\n- plague dogs\n- salvador dali experimental film un chien andalou\n- threads\n- relic\n- possesion 1981\n- occult 2009\n- last summer\n\naustralian\n- walkabout\n- wake in fright\n- picnic at hanging rock\n- the last wave\n- mad max\n\nindia\n- apu trilogy\n\nrussian\n- the cranes are flying\n- andre rublove\n- war and peace\n\ngermany\n- kings of the road\n- the marriange of maria bron\n- world on a wire\n- geray the wrath of god\n- fitzkoraldo\n\nsweden\n- inmar bergman entire collection\n\nfrance + italy\n- rome open city\n- bicycle thieves\n- e vilatoni\n- lestrada\n- le dolce vita\n- 8 and a half\n- fallini stariacon\n- roma\n- ill sorpasos road trip comedy though italy\n- investigation of a citizen above suspicion\n- the conformist\n- le ventura\n- eclise\n- dollar trilogy\n- once upon a time in the west\n\nfrench\n- o hazard balthazar\n- le circle rouge\n- bob le flember\n- playtime\n- the discreet charm of the bugoise\n- belle de jour\n\nfrench new wave\n- breathless\n- contempt\n- four hundred blows\n- day for night\n- stolen kisses\n- the umbrellas of cherberg\n- the young girls of rochefort\n- donkey skin\n- my night at mauds\n- la collectionneuse\n- claire's knee\n- elevator to the gallows\n- cleo from 5 to 7\n- last year at marienbad\n\nanime\n- grave of the fireflies\n- your name\n\njapanese\n- stray dog\n- kurosawa dreams\n- tokyo story\n- late spring\n- good morning\n\nww2\n- the longest day \n- ivans childhood\n- night and fog\n- to be or not to be \n- the thin red line\n- the pianist\n- army of shadows\n- come and see\n- the selons de samare\n\nThe definitives\n1.  [_2001: A Space Odyssey_ (1968)](https://deepfocusreview.com/definitives/2001-a-space-odyssey/)\n2.  [_28 Days Later_ (2002)](https://deepfocusreview.com/definitives/28-days-later/)\n3.  [_4 Months, 3 Weeks and 2 Days_ (2007)](https://deepfocusreview.com/definitives/4-months-3-weeks-and-2-days/)\n4.  [_The 400 Blows_ (1959)](https://deepfocusreview.com/definitives/the-400-blows/)\n5.  [_8 1/2_ (1963)](https://deepfocusreview.com/definitives/8-12/)\n6.  [_Ace in the Hole_ (1951)](https://deepfocusreview.com/definitives/ace-in-the-hole/)\n7.  [_Adaptation._ (2002)](https://deepfocusreview.com/definitives/adaptation/)\n8.  [_The Adventures of Robin Hood_ (1938)](https://deepfocusreview.com/definitives/the-adventures-of-robin-hood/)\n9.  [_After Hours_ (1985)](https://deepfocusreview.com/definitives/after-hours/)\n10.  [_The Age of Innocence_ (1993)](https://deepfocusreview.com/definitives/the-age-of-innocence/)\n11.  [_Aguirre, the Wrath of God_ (1972)](https://deepfocusreview.com/definitives/aguirre-the-wrath-of-god/)\n12.  [_A.I. Artificial Intelligence_ (2001)](https://deepfocusreview.com/definitives/a-i-artificial-intelligence/)\n13.  [_Alien_ (1979)](https://deepfocusreview.com/definitives/alien/)\n14.  [_Aliens_ (1986)](https://deepfocusreview.com/definitives/aliens/)\n15.  [_Amadeus_ (1984)](https://deepfocusreview.com/definitives/amadeus/)\n16.  [_Amour_ (2012)](https://deepfocusreview.com/definitives/amour/)\n17.  [_Annie Hall_ (1977)](https://deepfocusreview.com/definitives/annie-hall/)\n18.  [_Army of Shadows_ (1969)](https://deepfocusreview.com/definitives/army-of-shadows/)\n19.  [_Bamboozled_ (2000)](https://deepfocusreview.com/definitives/bamboozled/)\n20.  [_Barry Lyndon_ (1975)](https://deepfocusreview.com/definitives/barry-lyndon/)\n21.  [_Barton Fink_ (1991)](https://deepfocusreview.com/definitives/barton-fink/)\n22.  [_Batman Begins_ (2005)](https://deepfocusreview.com/definitives/batman-begins/)\n23.  [_Being There_ (1979)](https://deepfocusreview.com/definitives/being-there/)\n24.  [_The Best Years of Our Lives_ (1946)](https://deepfocusreview.com/definitives/the-best-years-of-our-lives/)\n25.  [_Bicycle Thieves_ (1948)](https://deepfocusreview.com/definitives/bicycle-thieves/)\n26.  [_The Big City_ (1963)](https://deepfocusreview.com/definitives/the-big-city/)\n27.  [_The Big Country_ (1958)](https://deepfocusreview.com/definitives/the-big-country/)\n28.  [_The Big Heat_ (1953)](https://deepfocusreview.com/definitives/the-big-heat/)\n29.  [_Black Legion_ (1937)](https://deepfocusreview.com/definitives/black-legion/)\n30.  [_Black Narcissus_ (1947)](https://deepfocusreview.com/definitives/black-narcissus/)\n31.  [_Blade Runner_ (1982)](https://deepfocusreview.com/definitives/blade-runner/)\n32.  [_Blow Out_ (1981)](https://deepfocusreview.com/definitives/blow-out/)\n33.  [_The Blue Angel_ (1930)](https://deepfocusreview.com/definitives/the-blue-angel/)\n34.  [_Blue Velvet_ (1986)](https://deepfocusreview.com/definitives/blue-velvet/)\n35.  [_Bob le flambeur_ (1956)](https://deepfocusreview.com/definitives/bob-le-flambeur/)\n36.  [_Brazil_ (1985)](https://deepfocusreview.com/definitives/brazil/)\n37.  [_The Bridge on the River Kwai_ (1957)](https://deepfocusreview.com/definitives/the-bridge-on-the-river-kwai/)\n38.  [_Brute Force_ (1947)](https://deepfocusreview.com/definitives/brute-force/)\n39.  [_Caché_ (2005)](https://deepfocusreview.com/definitives/cache/)\n40.  [_Captain Blood_ (1935)](https://deepfocusreview.com/definitives/captain-blood/)\n41.  [_Carrie_ (1976)](https://deepfocusreview.com/definitives/carrie/)\n42.  [_Casablanca_ (1942)](https://deepfocusreview.com/definitives/casablanca/)\n43.  [_Cat People_ (1942)](https://deepfocusreview.com/definitives/cat-people/)\n44.  [_The Celebration_ (1998)](https://deepfocusreview.com/definitives/the-celebration/)\n45.  [_Chinatown_ (1974)](https://deepfocusreview.com/definitives/chinatown/)\n46.  [_Citizen Kane_ (1941)](https://deepfocusreview.com/definitives/citizen-kane/)\n47.  [_City Lights_ (1931)](https://deepfocusreview.com/definitives/city-lights/)\n48.  [_Clueless_ (1995)](https://deepfocusreview.com/definitives/clueless/)\n49.  [_Crimes and Misdemeanors_ (1989)](https://deepfocusreview.com/definitives/crimes-and-misdemeanors/)\n50.  [_The Crying Game_ (1992)](https://deepfocusreview.com/definitives/the-crying-game/)\n51.  [_Cure_ (1997)](https://deepfocusreview.com/definitives/cure/)\n52.  [_The Curse of the Cat People_ (1944)](https://deepfocusreview.com/definitives/the-curse-of-the-cat-people/)\n53.  [_The Dark Knight_ (2008)](https://deepfocusreview.com/definitives/the-dark-knight/)\n54.  [_The Dark Knight Rises_ (2012)](https://deepfocusreview.com/definitives/the-dark-knight-rises/)\n55.  [_Dawn of the Dead_ (1978)](https://deepfocusreview.com/definitives/dawn-of-the-dead/)\n56.  [_Defending Your Life_ (1991)](https://deepfocusreview.com/definitives/defending-your-life/)\n57.  [_Diabolique_ (1955)](https://deepfocusreview.com/definitives/diabolique/)\n58.  [_Die Hard_ (1988)](https://deepfocusreview.com/definitives/die-hard/)\n59.  [_Do the Right Thing_ (1989)](https://deepfocusreview.com/definitives/do-the-right-thing/)\n60.  [_Dog Day Afternoon_ (1975)](https://deepfocusreview.com/definitives/dog-day-afternoon/)\n61.  [_Don’t Look Now_ (1973)](https://deepfocusreview.com/definitives/dont-look-now/)\n62.  [_Double Indemnity_ (1944)](https://deepfocusreview.com/definitives/double-indemnity/)\n63.  [_Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb_ (1964)](https://deepfocusreview.com/definitives/dr-strangelove/)\n64.  [_Drunken Angel_ (1948)](https://deepfocusreview.com/definitives/drunken-angel/)\n65.  [_Duck Soup_ (1933)](https://deepfocusreview.com/definitives/duck-soup/)\n66.  [_El laberinto del fauno_ (2006)](https://deepfocusreview.com/definitives/el-laberinto-del-fauno/)\n67.  [_The English Patient_ (1996)](https://deepfocusreview.com/definitives/the-english-patient/)\n68.  [_Escape from New York_ (1981)](https://deepfocusreview.com/definitives/escape-from-new-york/)\n69.  [_The Exorcist_ (1973)](https://deepfocusreview.com/definitives/the-exorcist/)\n70.  [_Eyes Wide Shut_ (1999)](https://deepfocusreview.com/definitives/eyes-wide-shut/)\n71.  [_Eyes Without a Face_ (1960)](https://deepfocusreview.com/definitives/eyes-without-a-face/)\n72.  [_The Fallen Idol_ (1948)](https://deepfocusreview.com/definitives/the-fallen-idol/)\n73.  [_Fanny and Alexander_ (1982)](https://deepfocusreview.com/definitives/fanny-alexander/)\n74.  [_Farewell My Concubine_ (1993)](https://deepfocusreview.com/definitives/farewell-my-concubine/)\n75.  [_Finding Nemo_ (2003)](https://deepfocusreview.com/definitives/finding-nemo/)\n76.  [_Fitzcarraldo_ (1982)](https://deepfocusreview.com/definitives/fitzcarraldo/)\n77.  [_Five Easy Pieces_ (1970)](https://deepfocusreview.com/definitives/five-easy-pieces/)\n78.  [_The Fly_ (1986)](https://deepfocusreview.com/definitives/the-fly/)\n79.  [_Foreign Correspondent_ (1940)](https://deepfocusreview.com/definitives/foreign-correspondent/)\n80.  [_Frances Ha_ (2013)](https://deepfocusreview.com/definitives/frances-ha/)\n81.  [_Freaks_ (1932)](https://deepfocusreview.com/definitives/freaks/)\n82.  [_Ganja \u0026 Hess_ (1973)](https://deepfocusreview.com/definitives/ganja-hess/)\n83.  [_The Godfather_ (1972)](https://deepfocusreview.com/definitives/the-godfather/)\n84.  [_Gone with the Wind_ (1939)](https://deepfocusreview.com/definitives/gone-with-the-wind/)\n85.  [_Gosford Park_ (2001)](https://deepfocusreview.com/definitives/gosford-park/)\n86.  [_Grand Illusion_ (1937)](https://deepfocusreview.com/definitives/grand-illusion/)\n87.  [_The Great Dictator_ (1940)](https://deepfocusreview.com/definitives/the-great-dictator/)\n88.  [_Grizzly Man_ (2005)](https://deepfocusreview.com/definitives/grizzly-man/)\n89.  [_Halloween_ (1978)](https://deepfocusreview.com/definitives/halloween/)\n90.  [_Happy-Go-Lucky_ (2008)](https://deepfocusreview.com/definitives/happy-go-lucky/)\n91.  [_Harakiri_ (1963)](https://deepfocusreview.com/definitives/harakiri/)\n92.  [_Harold and Maude_ (1971)](https://deepfocusreview.com/definitives/harold-and-maude/)\n93.  [_Heat_ (1995)](https://deepfocusreview.com/definitives/heat/)\n94.  [_High and Low_ (1963)](https://deepfocusreview.com/definitives/high-and-low/)\n95.  [_His Girl Friday_ (1940)](https://deepfocusreview.com/definitives/his-girl-friday/)\n96.  [_A History of Violence_ (2005)](https://deepfocusreview.com/definitives/a-history-of-violence/)\n97.  [_The Hitch-Hiker_ (1953)](https://deepfocusreview.com/definitives/the-hitch-hiker/)\n98.  [_House of Games_ (1987)](https://deepfocusreview.com/definitives/house-of-games/)\n99.  [_The Ice Storm_ (1997)](https://deepfocusreview.com/definitives/the-ice-storm/)\n100.  [_Ikiru_ (1952)](https://deepfocusreview.com/definitives/ikiru/)\n101.  [_The Imaginarium of Doctor Parnassus_ (2009)](https://deepfocusreview.com/definitives/the-imaginarium-of-doctor-parnassus/)\n102.  [_In the Mood for Love_ (2000)](https://deepfocusreview.com/definitives/in-the-mood-for-love/)\n103.  [_The Incredibles_ (2004)](https://deepfocusreview.com/definitives/the-incredibles/)\n104.  [_Indiana Jones and the Last Crusade_ (1989)](https://deepfocusreview.com/definitives/indiana-jones-and-the-last-crusade/)\n105.  [_Indiana Jones and the Temple of Doom_ (1984)](https://deepfocusreview.com/definitives/indiana-jones-and-the-temple-of-doom/)\n106.  [_Inglourious Basterds_ (2009)](https://deepfocusreview.com/definitives/inglourious-basterds/)\n107.  [_Invasion of the Body Snatchers_ (1978)](https://deepfocusreview.com/definitives/invasion-of-the-body-snatchers/)\n108.  [_It Happened One Night_ (1934)](https://deepfocusreview.com/definitives/it-happened-one-night/)\n109.  [_Jaws_ (1975)](https://deepfocusreview.com/definitives/jaws/)\n110.  [_Jeanne Dielman, 23, quai du Commerce, 1080 Bruxelles_ (1975)](https://deepfocusreview.com/definitives/jeanne-dielman-23-quai-du-commerce-1080-bruxelles/)\n111.  [_JFK_ (1991)](https://deepfocusreview.com/definitives/jfk/)\n112.  [_Jurassic Park_ (1993)](https://deepfocusreview.com/definitives/jurassic-park/)\n113.  [_King Kong_ (1933)](https://deepfocusreview.com/definitives/king-kong/)\n114.  [_Knife in the Water_ (1962)](https://deepfocusreview.com/definitives/knife-in-the-water/)\n115.  [_Kwaidan_ (1965)](https://deepfocusreview.com/definitives/kwaidan/)\n116.  [_La noire de…_ (1966)](https://deepfocusreview.com/definitives/la-noire-de/)\n117.  [_La strada_ (1954)](https://deepfocusreview.com/definitives/la-strada/)\n118.  [_The Lady Eve_ (1941)](https://deepfocusreview.com/definitives/the-lady-eve/)\n119.  [_Laura_ (1944)](https://deepfocusreview.com/definitives/laura/)\n120.  [_Lawrence of Arabia_ (1962)](https://deepfocusreview.com/definitives/lawrence-of-arabia/)\n121.  [_Les enfants du paradis_ (1945)](https://deepfocusreview.com/definitives/les-enfants-du-paradis/)\n122.  [_The Life and Death of Colonel Blimp_ (1943)](https://deepfocusreview.com/definitives/the-life-and-death-of-colonel-blimp/)\n123.  [_Little Shop of Horrors_ (1986)](https://deepfocusreview.com/definitives/little-shop-of-horrors/)\n124.  [_Lost in America_ (1985)](https://deepfocusreview.com/definitives/lost-in-america/)\n125.  [_M. Hulot’s Holiday_ (1953)](https://deepfocusreview.com/definitives/m-hulots-holiday/)\n126.  [_A Man Escaped_ (1956)](https://deepfocusreview.com/definitives/a-man-escaped/)\n127.  [_Man of the West_ (1958)](https://deepfocusreview.com/definitives/man-of-the-west/)\n128.  [_The Man Who Wasn’t There_ (2001)](https://deepfocusreview.com/definitives/the-man-who-wasnt-there/)\n129.  [_The Manchurian Candidate_ (1962)](https://deepfocusreview.com/definitives/the-manchurian-candidate/)\n130.  [_A Matter of Life and Death_ (1946)](https://deepfocusreview.com/definitives/a-matter-of-life-and-death/)\n131.  - [_Meek’s Cutoff_ (2010)](https://deepfocusreview.com/definitives/meeks-cutoff/)\n132.  [_Meet John Doe_ (1941)](https://deepfocusreview.com/definitives/meet-john-doe/)\n133.  [_Metropolis_ (1927)](https://deepfocusreview.com/definitives/metropolis/)\n134.  [_Minority Report_ (2002)](https://deepfocusreview.com/definitives/minority-report/)\n135.  [_Mishima: A Life in Four Chapters_ (1985)](https://deepfocusreview.com/definitives/mishima-a-life-in-four-chapters/)\n136.  [_The Mist_ (2007)](https://deepfocusreview.com/definitives/the-mist/)\n137.  [_Modern Times_ (1936)](https://deepfocusreview.com/definitives/modern-times/)\n138.  [_Mon oncle_ (1958)](https://deepfocusreview.com/definitives/mon-oncle/)\n139.  [_Moolaadé_ (2004)](https://deepfocusreview.com/definitives/moolaade/)\n140.  [_Mulholland Dr._ (2001)](https://deepfocusreview.com/definitives/mulholland-dr/)\n141.  [_The Music Room_ (1958)](https://deepfocusreview.com/definitives/the-music-room/)\n142.  [_My Darling Clementine_ (1946)](https://deepfocusreview.com/definitives/my-darling-clementine/)\n143.  [_My Neighbor Totoro_ (1988)](https://deepfocusreview.com/definitives/my-neighbor-totoro/)\n144.  [_The Naked Spur_ (1953)](https://deepfocusreview.com/definitives/the-naked-spur/)\n145.  [_Nashville_ (1975)](https://deepfocusreview.com/definitives/nashville/)\n146.  [_Network_ (1976)](https://deepfocusreview.com/definitives/network/)\n147.  [_Night and the City_ (1950)](https://deepfocusreview.com/definitives/night-and-the-city/)\n148.  [_The Night of the Hunter_ (1955)](https://deepfocusreview.com/definitives/the-night-of-the-hunter/)\n149.  [_Night of the Living Dead_ (1968)](https://deepfocusreview.com/definitives/night-of-the-living-dead/)\n150.  [_Ninotchka_ (1939)](https://deepfocusreview.com/definitives/ninotchka/)\n151.  [_North by Northwest_ (1959)](https://deepfocusreview.com/definitives/north-by-northwest/)\n152.  [_Notorious_ (1946)](https://deepfocusreview.com/definitives/notorious/)\n153.  [_Odd Man Out_ (1947)](https://deepfocusreview.com/definitives/odd-man-out/)\n154.  [_Oldboy_ (2003)](https://deepfocusreview.com/definitives/oldboy/)\n155.  [_Once Upon a Time in the West_ (1968)](https://deepfocusreview.com/definitives/once-upon-a-time-in-the-west/)\n156.  [_Onibaba_ (1964)](https://deepfocusreview.com/definitives/onibaba/)\n157.  [_Our Man in Havana_ (1959)](https://deepfocusreview.com/definitives/our-man-in-havana/)\n158.  [_Pather Panchali_ (1955)](https://deepfocusreview.com/definitives/pather-panchali/)\n159.  [_Paths of Glory_ (1957)](https://deepfocusreview.com/definitives/paths-of-glory/)\n160.  [_Perfume: The Story of a Murderer_ (2006)](https://deepfocusreview.com/definitives/perfume-the-story-of-a-murderer/)\n161.  [_Pickup on South Street_ (1953)](https://deepfocusreview.com/definitives/pickup-on-south-street/)\n162.  [_The Player_ (1992)](https://deepfocusreview.com/definitives/the-player/)\n163.  [_PlayTime_ (1967)](https://deepfocusreview.com/definitives/playtime/)\n164.  [_Portrait of Jennie_ (1948)](https://deepfocusreview.com/definitives/portrait-of-jennie/)\n165.  [_Princess Mononoke_ (1997)](https://deepfocusreview.com/definitives/princess-mononoke/)\n166.  [_Pulp Fiction_ (1994)](https://deepfocusreview.com/definitives/pulp-fiction/)\n167.  [_The Purple Rose of Cairo_ (1985)](https://deepfocusreview.com/definitives/the-purple-rose-of-cairo/)\n168.  [_Raging Bull_ (1980)](https://deepfocusreview.com/definitives/raging-bull/)\n169.  [_Raiders of the Lost Ark_ (1981)](https://deepfocusreview.com/definitives/raiders-of-the-lost-ark/)\n170.  [_Raise the Red Lantern_ (1991)](https://deepfocusreview.com/definitives/raise-the-red-lantern/)\n171.  [_Raising Arizona_ (1987)](https://deepfocusreview.com/definitives/raising-arizona/)\n172.  [_Rashomon_ (1950)](https://deepfocusreview.com/definitives/rashomon/)\n173.  [_Rebel Without a Cause_ (1955)](https://deepfocusreview.com/definitives/rebel-without-a-cause/)\n174.  [_Red River_ (1948)](https://deepfocusreview.com/definitives/red-river/)\n175.  [_The Red Shoes_ (1948)](https://deepfocusreview.com/definitives/the-red-shoes/)\n176.  [_Rembrandt_ (1936)](https://deepfocusreview.com/definitives/rembrandt/)\n177.  [_Rio Bravo_ (1959)](https://deepfocusreview.com/definitives/rio-bravo/)\n178.  [_The Road Warrior_ (1981)](https://deepfocusreview.com/definitives/the-road-warrior/)\n179.  [_RoboCop_ (1987)](https://deepfocusreview.com/definitives/robocop/)\n180.  [_Rosemary’s Baby_ (1968)](https://deepfocusreview.com/definitives/rosemarys-baby/)\n181.  [_The Rules of the Game_ (1939)](https://deepfocusreview.com/definitives/the-rules-of-the-game/)\n182.  [_Sanjuro_ (1962)](https://deepfocusreview.com/definitives/sanjuro/)\n183.  [_Sansho the Bailiff_ (1954)](https://deepfocusreview.com/definitives/sansho-the-bailiff/)\n184.  [_A Scanner Darkly_ (2006)](https://deepfocusreview.com/definitives/a-scanner-darkly/)\n185.  [_The Searchers_ (1956)](https://deepfocusreview.com/definitives/the-searchers/)\n186.  [_Seconds_ (1966)](https://deepfocusreview.com/definitives/seconds/)\n187.  [_A Serious Man_ (2009)](https://deepfocusreview.com/definitives/a-serious-man/)\n188.  [_Seven Samurai_ (1954)](https://deepfocusreview.com/definitives/seven-samurai/)\n189.  [_The Seventh Seal_ (1957)](https://deepfocusreview.com/definitives/the-seventh-seal/)\n190.  [_Sexy Beast_ (2000)](https://deepfocusreview.com/definitives/sexy-beast/)\n191.  [_Shadow of a Doubt_ (1943)](https://deepfocusreview.com/definitives/shadow-of-a-doubt/)\n192.  [_The Shining_ (1980)](https://deepfocusreview.com/definitives/the-shining/)\n193.  [_Shoah_ (1985)](https://deepfocusreview.com/definitives/shoah/)\n194.  [_The Silence of the Lambs_ (1991)](https://deepfocusreview.com/definitives/the-silence-of-the-lambs/)\n195.  [_Singin’ in the Rain_ (1952)](https://deepfocusreview.com/definitives/singin-in-the-rain/)\n196.  [_The Skin I Live In_ (2011)](https://deepfocusreview.com/definitives/the-skin-i-live-in/)\n197.  [_Solaris_ (1972)](https://deepfocusreview.com/definitives/solaris/)\n198.  [_Star Wars: Episode IV – A New Hope_ (1977)](https://deepfocusreview.com/definitives/star-wars-episode-iv-a-new-hope/)\n199.  [_State and Main_ (2000)](https://deepfocusreview.com/definitives/state-and-main/)\n200.  [_Strange Days_ (1995)](https://deepfocusreview.com/definitives/strange-days/)\n201.  [_Sullivan’s Travels_ (1941)](https://deepfocusreview.com/definitives/sullivans-travels/)\n202.  [_Sunset Blvd._ (1950)](https://deepfocusreview.com/definitives/sunset-blvd/)\n203.  [_Sweet Smell of Success_ (1957)](https://deepfocusreview.com/definitives/sweet-smell-of-success/)\n204.  [_The Talented Mr. Ripley_ (1999)](https://deepfocusreview.com/definitives/the-talented-mr-ripley/)\n205.  [_Taxi Driver_ (1976)](https://deepfocusreview.com/definitives/taxi-driver/)\n206.  [_Terrorizers_ (1986)](https://deepfocusreview.com/definitives/terrorizers/)\n207.  [_There Will Be Blood_ (2007)](https://deepfocusreview.com/definitives/there-will-be-blood/)\n208.  [_They Live_ (1988)](https://deepfocusreview.com/definitives/they-live/)\n209.  [_The Thin Blue Line_ (1988)](https://deepfocusreview.com/definitives/the-thin-blue-line/)\n210.  [_The Thin Man_ (1934)](https://deepfocusreview.com/definitives/the-thin-man/)\n211.  [_The Thin Red Line_ (1998)](https://deepfocusreview.com/definitives/the-thin-red-line/)\n212.  [_The Thing_ (1982)](https://deepfocusreview.com/definitives/the-thing/)\n213.  [_The Third Man_ (1949)](https://deepfocusreview.com/definitives/the-third-man/)\n214.  [_To Be or Not to Be_ (1942)](https://deepfocusreview.com/definitives/to-be-or-not-to-be/)\n215.  [_Topsy-Turvy_ (1999)](https://deepfocusreview.com/definitives/topsy-turvy/)\n216.  [_Touch of Evil_ (1958)](https://deepfocusreview.com/definitives/touch-of-evil/)\n217.  [_A Touch of Zen_ (1971)](https://deepfocusreview.com/definitives/a-touch-of-zen/)\n218.  [_Toy Story_ (1995)](https://deepfocusreview.com/definitives/toy-story/)\n219.  [_Trainspotting_ (1996)](https://deepfocusreview.com/definitives/trainspotting/)\n220.  [_The Treasure of the Sierra Madre_ (1948)](https://deepfocusreview.com/definitives/the-treasure-of-the-sierra-madre/)\n221.  [_Trouble in Paradise_ (1932)](https://deepfocusreview.com/definitives/trouble-in-paradise/)\n222.  [_Ugetsu_ (1953)](https://deepfocusreview.com/definitives/ugetsu/)\n223.  [_Umberto D._ (1952)](https://deepfocusreview.com/definitives/umberto-d/)\n224.  [_Unfaithfully Yours_ (1948)](https://deepfocusreview.com/definitives/unfaithfully-yours/)\n225.  [_Unforgiven_ (1992)](https://deepfocusreview.com/definitives/unforgiven/)\n226.  [_The Untouchables_ (1987)](https://deepfocusreview.com/definitives/the-untouchables/)\n227.  [_Vertigo_ (1958)](https://deepfocusreview.com/definitives/vertigo/)\n228.  [_Videodrome_ (1983)](https://deepfocusreview.com/definitives/videodrome/)\n229.  [_Volver_ (2006)](https://deepfocusreview.com/definitives/volver/)\n230.  [_The Wages of Fear_ (1953)](https://deepfocusreview.com/definitives/the-wages-of-fear/)\n231.  [_WALL·E_ (2008)](https://deepfocusreview.com/definitives/walle/)\n232.  [_White Heat_ (1949)](https://deepfocusreview.com/definitives/white-heat/)\n233.  [_White Material_ (2009)](https://deepfocusreview.com/definitives/white-material/)\n234.  [_Who Framed Roger Rabbit_ (1988)](https://deepfocusreview.com/definitives/who-framed-roger-rabbit/)\n235.  [_The Wild Bunch_ (1969)](https://deepfocusreview.com/definitives/the-wild-bunch/)\n236.  [_The Wolf Man_ (1941)](https://deepfocusreview.com/definitives/the-wolf-man/)\n237.  [_Woman in the Dunes_ (1964)](https://deepfocusreview.com/definitives/woman-in-the-dunes/)\n238.  [_Written on the Wind_ (1956)](https://deepfocusreview.com/definitives/written-on-the-wind/)\n239.  [_Yojimbo_ (1961)](https://deepfocusreview.com/definitives/yojimbo/)\n240.  [_Zama_ (2018)](https://deepfocusreview.com/definitives/zama/)\n241.  [_Zodiac_ (2007)](https://deepfocusreview.com/definitives/zodiac/)\n\n\nAFI\n1.  _[Citizen Kane](https://en.wikipedia.org/wiki/Citizen_Kane \"Citizen Kane\")_ (1941)\n2.  _[The Godfather](https://en.wikipedia.org/wiki/The_Godfather \"The Godfather\")_ (1972)\n3.  _[Casablanca](https://en.wikipedia.org/wiki/Casablanca_(film) \"Casablanca (film)\")_ (1942)\n4.  _[Raging Bull](https://en.wikipedia.org/wiki/Raging_Bull \"Raging Bull\")_ (1980)\n5.  _[Singin' in the Rain](https://en.wikipedia.org/wiki/Singin%27_in_the_Rain \"Singin' in the Rain\")_ (1952)\n6.  _[Gone with the Wind](https://en.wikipedia.org/wiki/Gone_with_the_Wind_(film) \"Gone with the Wind (film)\")_ (1939)\n7.  _[Lawrence of Arabia](https://en.wikipedia.org/wiki/Lawrence_of_Arabia_(film) \"Lawrence of Arabia (film)\")_ (1962)\n8.  _[Schindler's List](https://en.wikipedia.org/wiki/Schindler%27s_List \"Schindler's List\")_ (1993)\n9.  _[Vertigo](https://en.wikipedia.org/wiki/Vertigo_(film) \"Vertigo (film)\")_ (1958)\n10.  _[The Wizard of Oz](https://en.wikipedia.org/wiki/The_Wizard_of_Oz_(1939_film) \"The Wizard of Oz (1939 film)\")_ (1939)\n11.  _[City Lights](https://en.wikipedia.org/wiki/City_Lights \"City Lights\")_ (1931)\n12.  _[The Searchers](https://en.wikipedia.org/wiki/The_Searchers \"The Searchers\")_ (1956)\n13.  _[Star Wars](https://en.wikipedia.org/wiki/Star_Wars_(film) \"Star Wars (film)\")_ (1977)\n14.  _[Psycho](https://en.wikipedia.org/wiki/Psycho_(1960_film) \"Psycho (1960 film)\")_ (1960)\n15.  _[2001: A Space Odyssey](https://en.wikipedia.org/wiki/2001:_A_Space_Odyssey_(film) \"2001: A Space Odyssey (film)\")_ (1968)\n16.  _[Sunset Boulevard](https://en.wikipedia.org/wiki/Sunset_Boulevard_(film) \"Sunset Boulevard (film)\")_ (1950)\n17.  _[The Graduate](https://en.wikipedia.org/wiki/The_Graduate \"The Graduate\")_ (1967)\n18.  _[The General](https://en.wikipedia.org/wiki/The_General_(1926_film) \"The General (1926 film)\")_ (1926)\n19.  _[On the Waterfront](https://en.wikipedia.org/wiki/On_the_Waterfront \"On the Waterfront\")_ (1954)\n20.  _[It's a Wonderful Life](https://en.wikipedia.org/wiki/It%27s_a_Wonderful_Life \"It's a Wonderful Life\")_ (1946)\n21.  _[Chinatown](https://en.wikipedia.org/wiki/Chinatown_(1974_film) \"Chinatown (1974 film)\")_ (1974)\n22.  _[Some Like It Hot](https://en.wikipedia.org/wiki/Some_Like_It_Hot \"Some Like It Hot\")_ (1959)\n23.  _[The Grapes of Wrath](https://en.wikipedia.org/wiki/The_Grapes_of_Wrath_(film) \"The Grapes of Wrath (film)\")_ (1940)\n24.  _[E.T. the Extra-Terrestrial](https://en.wikipedia.org/wiki/E.T._the_Extra-Terrestrial \"E.T. the Extra-Terrestrial\")_ (1982)\n25.  _[To Kill a Mockingbird](https://en.wikipedia.org/wiki/To_Kill_a_Mockingbird_(film) \"To Kill a Mockingbird (film)\")_ (1962)\n26.  _[Mr. Smith Goes to Washington](https://en.wikipedia.org/wiki/Mr._Smith_Goes_to_Washington \"Mr. Smith Goes to Washington\")_ (1939)\n27.  _[High Noon](https://en.wikipedia.org/wiki/High_Noon \"High Noon\")_ (1952)\n28.  _[All About Eve](https://en.wikipedia.org/wiki/All_About_Eve \"All About Eve\")_ (1950)\n29.  _[Double Indemnity](https://en.wikipedia.org/wiki/Double_Indemnity \"Double Indemnity\")_ (1944)\n30.  _[Apocalypse Now](https://en.wikipedia.org/wiki/Apocalypse_Now \"Apocalypse Now\")_ (1979)\n31.  _[The Maltese Falcon](https://en.wikipedia.org/wiki/The_Maltese_Falcon_(1941_film) \"The Maltese Falcon (1941 film)\")_ (1941)\n32.  _[The Godfather Part II](https://en.wikipedia.org/wiki/The_Godfather_Part_II \"The Godfather Part II\")_ (1974)\n33.  _[One Flew Over the Cuckoo's Nest](https://en.wikipedia.org/wiki/One_Flew_Over_the_Cuckoo%27s_Nest_(film) \"One Flew Over the Cuckoo's Nest (film)\")_ (1975)\n34.  _[Snow White and the Seven Dwarfs](https://en.wikipedia.org/wiki/Snow_White_and_the_Seven_Dwarfs_(1937_film) \"Snow White and the Seven Dwarfs (1937 film)\")_ (1937)\n35.  _[Annie Hall](https://en.wikipedia.org/wiki/Annie_Hall \"Annie Hall\")_ (1977)\n36.  _[The Bridge on the River Kwai](https://en.wikipedia.org/wiki/The_Bridge_on_the_River_Kwai \"The Bridge on the River Kwai\")_ (1957)\n37.  _[The Best Years of Our Lives](https://en.wikipedia.org/wiki/The_Best_Years_of_Our_Lives \"The Best Years of Our Lives\")_ (1946)\n38.  _[The Treasure of the Sierra Madre](https://en.wikipedia.org/wiki/The_Treasure_of_the_Sierra_Madre_(film) \"The Treasure of the Sierra Madre (film)\")_ (1948)\n39.  _[Dr. Strangelove](https://en.wikipedia.org/wiki/Dr._Strangelove \"Dr. Strangelove\")_ (1964)\n40.  _[The Sound of Music](https://en.wikipedia.org/wiki/The_Sound_of_Music_(film) \"The Sound of Music (film)\")_ (1965)\n41.  _[King Kong](https://en.wikipedia.org/wiki/King_Kong_(1933_film) \"King Kong (1933 film)\")_ (1933)\n42.  _[Bonnie and Clyde](https://en.wikipedia.org/wiki/Bonnie_and_Clyde_(film) \"Bonnie and Clyde (film)\")_ (1967)\n43.  _[Midnight Cowboy](https://en.wikipedia.org/wiki/Midnight_Cowboy \"Midnight Cowboy\")_ (1969)\n44.  _[The Philadelphia Story](https://en.wikipedia.org/wiki/The_Philadelphia_Story_(film) \"The Philadelphia Story (film)\")_ (1940)\n45.  _[Shane](https://en.wikipedia.org/wiki/Shane_(film) \"Shane (film)\")_ (1953)\n46.  _[It Happened One Night](https://en.wikipedia.org/wiki/It_Happened_One_Night \"It Happened One Night\")_ (1934)\n47.  _[A Streetcar Named Desire](https://en.wikipedia.org/wiki/A_Streetcar_Named_Desire_(1951_film) \"A Streetcar Named Desire (1951 film)\")_ (1951)\n48.  _[Rear Window](https://en.wikipedia.org/wiki/Rear_Window \"Rear Window\")_ (1954)\n49.  _[Intolerance](https://en.wikipedia.org/wiki/Intolerance_(film) \"Intolerance (film)\")_ (1916)\n50.  _[The Lord of the Rings: The Fellowship of the Ring](https://en.wikipedia.org/wiki/The_Lord_of_the_Rings:_The_Fellowship_of_the_Ring \"The Lord of the Rings: The Fellowship of the Ring\")_ (2001)\n51.  _[West Side Story](https://en.wikipedia.org/wiki/West_Side_Story_(1961_film) \"West Side Story (1961 film)\")_ (1961)\n52.  _[Taxi Driver](https://en.wikipedia.org/wiki/Taxi_Driver \"Taxi Driver\")_ (1976)\n53.  _[The Deer Hunter](https://en.wikipedia.org/wiki/The_Deer_Hunter \"The Deer Hunter\")_ (1978)\n54.  _[M*A*S*H](https://en.wikipedia.org/wiki/M*A*S*H_(film) \"M*A*S*H (film)\")_ (1970)\n55.  _[North by Northwest](https://en.wikipedia.org/wiki/North_by_Northwest \"North by Northwest\")_ (1959)\n56.  _[Jaws](https://en.wikipedia.org/wiki/Jaws_(film) \"Jaws (film)\")_ (1975)\n57.  _[Rocky](https://en.wikipedia.org/wiki/Rocky \"Rocky\")_ (1976)\n58.  _[The Gold Rush](https://en.wikipedia.org/wiki/The_Gold_Rush \"The Gold Rush\")_ (1925)\n59.  _[Nashville](https://en.wikipedia.org/wiki/Nashville_(film) \"Nashville (film)\")_ (1975)\n60.  _[Duck Soup](https://en.wikipedia.org/wiki/Duck_Soup_(1933_film) \"Duck Soup (1933 film)\")_ (1933)\n61.  _[Sullivan's Travels](https://en.wikipedia.org/wiki/Sullivan%27s_Travels \"Sullivan's Travels\")_ (1941)\n62.  _[American Graffiti](https://en.wikipedia.org/wiki/American_Graffiti \"American Graffiti\")_ (1973)\n63.  _[Cabaret](https://en.wikipedia.org/wiki/Cabaret_(1972_film) \"Cabaret (1972 film)\")_ (1972)\n64.  _[Network](https://en.wikipedia.org/wiki/Network_(1976_film) \"Network (1976 film)\")_ (1976)\n65.  _[The African Queen](https://en.wikipedia.org/wiki/The_African_Queen_(film) \"The African Queen (film)\")_ (1951)\n66.  _[Raiders of the Lost Ark](https://en.wikipedia.org/wiki/Raiders_of_the_Lost_Ark \"Raiders of the Lost Ark\")_ (1981)\n67.  _[Who's Afraid of Virginia Woolf?](https://en.wikipedia.org/wiki/Who%27s_Afraid_of_Virginia_Woolf%3F_(film) \"Who's Afraid of Virginia Woolf? (film)\")_ (1966)\n68.  _[Unforgiven](https://en.wikipedia.org/wiki/Unforgiven \"Unforgiven\")_ (1992)\n69.  _[Tootsie](https://en.wikipedia.org/wiki/Tootsie \"Tootsie\")_ (1982)\n70.  _[A Clockwork Orange](https://en.wikipedia.org/wiki/A_Clockwork_Orange_(film) \"A Clockwork Orange (film)\")_ (1971)\n71.  _[Saving Private Ryan](https://en.wikipedia.org/wiki/Saving_Private_Ryan \"Saving Private Ryan\")_ (1998)\n72.  _[The Shawshank Redemption](https://en.wikipedia.org/wiki/The_Shawshank_Redemption \"The Shawshank Redemption\")_ (1994)\n73.  _[Butch Cassidy and the Sundance Kid](https://en.wikipedia.org/wiki/Butch_Cassidy_and_the_Sundance_Kid \"Butch Cassidy and the Sundance Kid\")_ (1969)\n74.  _[The Silence of the Lambs](https://en.wikipedia.org/wiki/The_Silence_of_the_Lambs_(film) \"The Silence of the Lambs (film)\")_ (1991)\n75.  _[In the Heat of the Night](https://en.wikipedia.org/wiki/In_the_Heat_of_the_Night_(film) \"In the Heat of the Night (film)\")_ (1967)\n76.  _[Forrest Gump](https://en.wikipedia.org/wiki/Forrest_Gump \"Forrest Gump\")_ (1994)\n77.  _[All the President's Men](https://en.wikipedia.org/wiki/All_the_President%27s_Men_(film) \"All the President's Men (film)\")_ (1976)\n78.  _[Modern Times](https://en.wikipedia.org/wiki/Modern_Times_(film) \"Modern Times (film)\")_ (1936)\n79.  _[The Wild Bunch](https://en.wikipedia.org/wiki/The_Wild_Bunch \"The Wild Bunch\")_ (1969)\n80.  _[The Apartment](https://en.wikipedia.org/wiki/The_Apartment \"The Apartment\")_ (1960)\n81.  _[Spartacus](https://en.wikipedia.org/wiki/Spartacus_(film) \"Spartacus (film)\")_ (1960)\n82.  _[Sunrise: A Song of Two Humans](https://en.wikipedia.org/wiki/Sunrise:_A_Song_of_Two_Humans \"Sunrise: A Song of Two Humans\")_ (1927)\n83.  _[Titanic](https://en.wikipedia.org/wiki/Titanic_(1997_film) \"Titanic (1997 film)\")_ (1997)\n84.  _[Easy Rider](https://en.wikipedia.org/wiki/Easy_Rider \"Easy Rider\")_ (1969)\n85.  _[A Night at the Opera](https://en.wikipedia.org/wiki/A_Night_at_the_Opera_(film) \"A Night at the Opera (film)\")_ (1935)\n86.  _[Platoon](https://en.wikipedia.org/wiki/Platoon_(film) \"Platoon (film)\")_ (1986)\n87.  _[12 Angry Men](https://en.wikipedia.org/wiki/12_Angry_Men_(1957_film) \"12 Angry Men (1957 film)\")_ (1957)\n88.  _[Bringing Up Baby](https://en.wikipedia.org/wiki/Bringing_Up_Baby \"Bringing Up Baby\")_ (1938)\n89.  _[The Sixth Sense](https://en.wikipedia.org/wiki/The_Sixth_Sense \"The Sixth Sense\")_ (1999)\n90.  _[Swing Time](https://en.wikipedia.org/wiki/Swing_Time_(film) \"Swing Time (film)\")_ (1936)\n91.  _[Sophie's Choice](https://en.wikipedia.org/wiki/Sophie%27s_Choice_(film) \"Sophie's Choice (film)\")_ (1982)\n92.  _[Goodfellas](https://en.wikipedia.org/wiki/Goodfellas \"Goodfellas\")_ (1990)\n93.  _[The French Connection](https://en.wikipedia.org/wiki/The_French_Connection_(film) \"The French Connection (film)\")_ (1971)\n94.  _[Pulp Fiction](https://en.wikipedia.org/wiki/Pulp_Fiction \"Pulp Fiction\")_ (1994)\n95.  _[The Last Picture Show](https://en.wikipedia.org/wiki/The_Last_Picture_Show \"The Last Picture Show\")_ (1971)\n96.  _[Do the Right Thing](https://en.wikipedia.org/wiki/Do_the_Right_Thing \"Do the Right Thing\")_ (1989)\n97.  _[Blade Runner](https://en.wikipedia.org/wiki/Blade_Runner \"Blade Runner\")_ (1982)\n98.  _[Yankee Doodle Dandy](https://en.wikipedia.org/wiki/Yankee_Doodle_Dandy \"Yankee Doodle Dandy\")_ (1942)\n99.  _[Toy Story](https://en.wikipedia.org/wiki/Toy_Story \"Toy Story\")_ (1995)\n100.  _[Ben-Hur](https://en.wikipedia.org/wiki/Ben-Hur_(1959_film) \"Ben-Hur (1959 film)\")_ (1959)","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/music-theory":{"title":"music-theory","content":"\n# What is it\n\n\"the language behind music\"\n\ntools to understand communicate and interpret music.\n\nunderstands chords notes melodies etc.\n\ntrying to get be \"fluent\"\n\n\n# Notes\n\nvibrations at different freqiencies\n\nonly 12 notes\n\nwhite notes - a-g\n\nblack notes - sharp and flat a-g\n\nmultiples of the frequencies at differnt multiples. each multiple an octave\n\nsemitone - gap between each note e.g., f-f#\n\n## Key/scale\n\ncommon combinations of notes that we know sound good together.\n\nusualyy 7 notes in a key (major and minor)\n\nC major - all white keys\n\nscale - same as key basically. \n\nyou can play a different set of notes (a scale) over the base key. e.g., a blues-e (pentatonic something) solo over e major\n\nroot note - note that we start the scale on\n\nmajor pattern - 2 wholetones 1 semitone 3 whole tones 1 semitone\n\nnumbering notes - each note in a scale is given a number: 1 is the root note, then 2, then 3 etc\n\naccidental - a flat for sharp note\n\n# Chords\n\nmultiple notes at the same time\n\nset emotion - guide the user through story\n\nusually in the same key\n\nmost common - triads - 1 3 5 - play skip play skip play\n\n# Major vs minor\nmajor - happy\nminor - sad\n\nusually\n\nmajor - root 4 3\nmajor - root 3 4\n\nyou can have minor chords in major scales\n\n# Melodies\n\nnotes can be within or not in the current chord\n\nmelodies with the pentatonic (remove 4th and 7th note) something are good\n\n\n\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/myepichacking":{"title":"myepichacking","content":"\n- guy got hacked\n- amazon - apple - gmail - twitter\n- could have been prevented with 2fa on google\n- ultimate goal twitter\n- should have used backups for devices\n- was his fault\n- but also security flaws in apple and amazon\n\t- final four digits shared by amazon are required by apple\n\t- disconnect exposes flaws in tech industry\n\t- foreshadows issues in era of cloud and connected devices\n\t- password based systems are no longer suffice\n\n5pm \n- phone powered down\n- This was irritating, but I wasn’t concerned\n- assumed it was a software glitch\n- phone automatically backs up\n- I was irritated, but not alarmed.\n- the screen went gray, and asked for a four-digit PIN\n- I knew something was very, very wrong.\n- unplugged my router and cable modem, turned off the Mac Mini\n- called AppleCare\n- a call had been placed just a little more than a half an hour before my own.\n- Apple rep didn't bother to tell me about the first call concerning my account\n- only shared this information after I asked about it\n- someone called AppleCare claiming to be me.\n\t- reported that he couldn't get into his Me.com e-mail\n\t- issued a temporary password\n\t- despite the caller’s inability to answer security questions I had set up\n\t- it did this after the hacker supplied only two pieces of information that anyone with an internet connection and a phone can discover.\n- a password reset confirmation arrived in my inbox\n\t- I don’t really use my me.com e-mail, and rarely check i\n\t- hackers immediately sent it to the trash.\n\t- reset my AppleID password\n- Gmail password recovery e-mail\n\t- Google account password had changed\n- reset my Twitter password.\n- used iCloud’s “Find My” tool to remotely wipe my iPhone, iPad, Macbook\n- deleted my Google account\n- the attackers posted a message to my account on Twitter taking credit for the hack.\n- not only had the ability to control my account, but were able to prevent me from regaining access\n- those deletions were just collateral damage\n- I spent an hour and a half talking to AppleCare\n\t- Apple had been looking at the wrong account\n\t- alternate set of questions\n\t- a billing address and the last four digits of my credit card.\n- all you need to access someone’s AppleID is the associated e-mail address, a credit card number, the billing address, and the last four digits of a credit card on file.\n- company spokesperson Natalie Kerris told Wired, \"Apple takes customer privacy seriously and requires multiple forms of verification before resetting an Apple ID password. In this particular case, the customer's data was compromised by a person who had acquired personal information about the customer. In addition, we found that our own internal policies were not followed completely. We are reviewing all of our processes for resetting account passwords to ensure our customers' data is protected.\"\n- Wired tried to verify the hackers' access technique by performing it on a different account. We were successful\n\n- I logged into Tumblr and posted an account of how I thought the takedown occurred\n- one of my hackers @ messaged me - Phobia\n- I agreed not to press charges, and in return he laid out exactly how the hack worked.\n- “didnt guess ur password or use bruteforce. i have my own guide on how to secure emails.”\n\t- why - the hack was simply a grab for my three-character Twitter handle\n\t- take it, and fuck shit up, and watch it burn.\n- My Twitter account linked to my personal website, where they found my Gmail address\n- I didn’t have Google's two-factor authentication turned on, when Phobia entered my Gmail address, he could view the alternate e-mail I had set up for account recovery - ....@me.com - revealed he had an appleID acc, and was vulnerable\n- Google partially obscures that information, starring out many characters, but there were enough characters available\n- “You honestly can get into any email associated with apple,”\n- all he needed was my billing address and the last four digits of my credit card\n- got the billing address by doing a whois search on my personal web domain\n\t- can also look up his or her information on Spokeo, WhitePages, and PeopleSmart.\n- Getting a credit card number is tricker,\n\t- call Amazon and tell them you are the account holder, and want to add a credit card number to the account.\n\t- All you need is the name on the account, an associated e-mail address, and the billing address\n\t- call back, and tell Amazon that you've lost access to your account\n\t- providing a name, billing address, and the new credit card number you gave the company on the prior call\n\t- allow you to add a new e-mail address\n\t- go to the Amazon website, and send a password reset to the new e-mail account.\n\t- allows you to see all the credit cards on file for the account – not the complete numbers, just the last four digits\n\t- Apple only needs those last four digits\n- could have used my e-mail accounts to gain access to my online banking, or financial services. They could have used them to contact other people, and socially engineer them as well.\n\n- should have been regularly backing up my MacBook\n- shouldn't have daisy-chained two such vital accounts – my Google and my iCloud account – together.\n- I shouldn't have used the same e-mail prefix across multiple accounts – mhonan@gmail.com, mhonan@me.com, and mhonan@wired.com.\n- should have had a recovery address that's only used for recovery without being tied to core services\n- mostly, I shouldn’t have used Find My Mac\n- Find My iPhone has been a brilliant Apple service\n- When you perform a remote hard drive wipe on Find my Mac, the system asks you to create a four-digit PIN so that the process can be reversed\n- If someone else performs that wipe – someone who gained access to your iCloud account through malicious means – there’s no way for you to enter that PIN\n- A better way to have this set up would be to require a second method of authentication when Find My Mac is initially set up.\n\n- I’m not even especially angry at Phobia, or his partner in the attack. I’m mostly mad at myself. I’m mad as hell for not backing up my data. I’m sad, and shocked, and feel that I am ultimately to blame for that loss\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/needfinding":{"title":"needfinding","content":"\nhow to start imporving or designing inerface\nhow to identify the gap or use interface issues\n\nneeddfinding tries to identify issues, often through observational studies (qualitative)\n\n\u003e \"the trick [challenge] to finding ideas is to convince yourself that everyone and everything has a story to tell\"\n\u003e \"The other trick if finding out the difference between power and knowledge. You dont start at the top if you want to find a story, you start in the middle. Because its the people in the middle that do the work\"\n\u003e \"self conciousness is the enemy of interestingness\"\n\u003e -malcolm gladwell\n\n## 1 Methods\n- [participant-observation](notes/participant-observation.md)\n\t- Apprenticeship\n\t\t- set a partnership with the people to be observed\n\t\t- be taught the steps in the process\n\t\t- observe the practives\n\t\t- validate what you are observing with those observed as you go along\n\t\t- e.g.,\n\t\t\t- apprenticeship is eVision user \n\t\t\t- task: find in which room INFO203 is\n\t\t\t- problem: I do not have a timetable in eVision like students\n\t\t- allows you to capture the context of use and the issues and needs\n\t\t\t- what do people do now\n\t\t\t- what values and goals do people have\n\t\t\t- how are these particular activities embedded in the larger context\n\t\t\t- similarities and differences across people\n\t\t\t- other types of context that are relevant -\u003e time of day, social context\n\t\t\n- [interviewing](notes/interviewing.md)\n\t- avoid leading questions\n\t- choose sample representative of real users\n\t- often impractical\n\t- can be structured or semi-structured\n\t- effective for high level\n\n- Longitudinal studies\n\t- sporadic use -\u003e when the product is used rarely\n\t- used when you cannot use observational studies\n\t- diaries\n\t\t- scale better than direct observation (less time consuming)\n\t\t- give people a diary to copmlete\n\t\t- structred task\n\t\t- can use journals, camera, voice, video\n\t\t- tailor the recording to the context\n\t\t- may require practice, training, reminding\n\t\t\t- use of ntifications, digital calendars, phone calls\n\t- Experience sampling\n\t\t- use txt, phone calls , calendars, notifications to recieve feeback or actively remind people\n\t\t- choose interval depending on study context\n\n \n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/network":{"title":"network","content":"\n# Overview\nPhysical Media\n- TP cable\n\t- two wired twisted together surrounded by a shield\n\t- signal and ground reference\n\t- short range (100meters)\n\t- phone, DSL, ethernet lan\n- Coaxial\n\t- inner conductor\n\t- insulator\n\t- outer conductor (shield)\n\t- insulator\n\t- plastic cover\n\t- long distance high speed: cable tv ethernet lan\n- fibre optic\n\t- light within glass\n\t- high speed low error\n# Application Layer\n[Application Layer](notes/Application Layer)\n# Transport Layer\n[Transport Layer](notes/Transport Layer)\n# Network Layer\n[Network Layer](notes/Network Layer)\n# Data Link Layer\n[Data Link Layer](notes/Data Link Layer)\n# Physical Layer\n[Physical Layer](notes/Physical Layer)\n# Wireless Layer\n[Wireless Layer](notes/Wireless Layer)\n# Security Layer\n[Security Layer](notes/Security Layer)\n# Other Layer\n[Other Layer](notes/Other Layer)","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/networks":{"title":"networks","content":"\n- [docker-containers](notes/docker-containers.md)\n- [virtual-machines](notes/virtual-machines.md)\n- [SSH](notes/ssh.md)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/nope-threshold":{"title":"nope-threshold","content":"\nthere is a point in point at which consuing content in a ntoher language become feasable — the \"nope threshold\". this varies from person to person. \n\nbefore this point you  should _actively_ study the language. after it, we should focus on engaging with actual content in the language we're learning. \n\n~1000 words make up ~79% of a given text. \n\nit worth starting with _intentional learning like anki_\n\nat a certain point it becomes more useful to spend time listening/reading/watching — _natural acquisition_\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/normalisation":{"title":"normalisation","content":"\nformal process of eliminanting unnecessary redundancy in relations by splitting relations into smaller chunks\n\nbottom up approach\n- functional dependencies ⇒ normalised relations\n- requirements ⇒ conceptual ≫ logical is \"top down\"\n- use normalisation to verify your logical design\n\t- to ensure you haven't missed anything\n\n# 1 Pros and cons\n\n+ frees from anomalies\n+ separates data the belong to different entities\n+ reduces data redundancy\n+ doesn't bias db design infaour of certain queries at the expense of others\n\n- more relations required\n- more complex queries can imply slower performance in some DBMSs\n\n# 2 Normal forms\n- 1NF ⇒ Single valued attributes only\n- 2NF ⇒ all on-key attibutes fully dependent on PK (i.e., no dependencies on part of the PK) (no partial dependencies)\n- 3NF/BCNF ⇒ no non-key transitive dependencies\n- 4NF ⇒ no multivalued dependencies\n- 5NF ⇒ all join dependencies implied by Composite key (CKs)\n- 6NF ⇒ irreducible relations\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/object":{"title":"object","content":"# Objects\nan abastraction of somethin gin a problem domain, reflecting the capabilities of the system to keep information about it interact with it or  both\n\nentities in any of the software nmodelling int implmenation spaces that are enatly defined by their identity state and behaviour\n\nsimilar to an entity but can also incude dynamic behaviour\n\noop is programming and modelling using objects\n\n## Objects as a Model of reality\ntheoreftically objects give us better omodels of reality\n\nricher variaty of data types\n- able to more closely model complexity of real world entities\n- compart with most data bases (numbers, text, datess)\n- objects and their operations (behaviour) are self contained\n- facilitate code reuse\n\n## Basic features of objects\n\nstate\n\nbehaviour\n\n## Classes and instances\nclass : definition of object structure and behaviour\ninstance : object occurence, derived from a particular class\n\n\n## References\npointer dirctly to object _instance_ \n\n\n## encapsulation\ndecouples internal implementation from public API\n- can chagne each independently\n- e.g., performance, differnt algroithms\n- APi stability is important\n\nstate and behaviour separated into pubic and private\n- all fields should be private\n- some methods will also be private\n\n## Inheritance\nusually via specialisation - aka subclass, subtype\n\nsubclasses inherit public state and behaviour from superclass\n- can define additional properties and behaviour\n\nenable polumorphism\n- e.g., Integer and Rational both subcalss Number\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/operating-system":{"title":"operating-system","content":"\n# Userspace\nThis is where applications run. Computer resources are isolated in compute and data\n- cannot access memory belonging to another process\n- cannot directly access hardware\n- cannot occupy all of the CPUs time on one application\n\n# Kernal space\n\"all seeing and all powerful\" The kernel sits below the userspace and manages resource allocation and directly controls harware. Usuallly you dont directly interact with the kernel when developing software. You do interact indirectly with the kernel, it permits your interactions with the environment (input/output from/to files, network, and terminals). The standard library usually insulates you from the OS kernel, may abstract over different OSs, and do operations in an OS-agnostic way.\n\nAmong the Kernels responsibilities are these main tasks\n- File systems\n- Process Management\n- Memory Management\n- IO Systems\n- Device Drivers","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/participant-observation":{"title":"participant-observation","content":"\n## 1 Techniques\n- think-aloud\n- co-operative evaulation\n- paper and pencil protocol\n- audio recording\n- video recording\n- computer logging\n- user notebooks\n- post-talk walkthroughs\n\n## 2 Disadvantages\n- observation bias exists\n- coding schemes\n-  laborioua and difficult\n- experts needed, training needed\n- often a mix of multiple techniques\n- automatic protocol analysis tools available (esp. in usability labs)\n\n## 3 Use Cases\n[needfinding](notes/needfinding.md)\n[evaluating-designs](notes/evaluating-designs.md)\n[requirements-elicitation](notes/requirements-elicitation.md)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/passwords":{"title":"passwords","content":"\n# Passwords\n- not good\n- lots of bad advice\n- we are lazy\n- \"safe\" passwords are difficult to enter on touch screen devices\n- to many accouts\n\n## entropy\n- amount of randomness\n- measure of the number of guesse an attacker would need to brute foarce\n- $E = log_2(A^L)$ \n- A = size of alphabet\n- L = length of password\n- E = entropy in bits\n- 80 bits is \"safe\"\n\t- would take decades\n- 6 digits passoword - 29 bits (took 4 seconds to brute force)\n- + uppercase and numbers - 36 bits","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/personas-and-scenarios":{"title":"personas-and-scenarios","content":"\n# 1 Personas\nThe goals of a personas is their expectation of an end condition\n- not features, functions, taskss, activities\n\nA tool to documnet who the users are.\n- what are they trying to accomplish\n\n![](https://i.imgur.com/EOxfkSs.png)\n\na methodology to identofy and think about our users and how they use the software.\nwe want to:\n- avoid not thinking about the users\n- make sure members of development dont have different ideas of the users\n\n### 1.1.1 Goals\n1. Experience goals\nhow they feel when using the product\ne.g., ⇒ dell users want function but apple users want \"that fancy apple product\"\n\n2. End goals\ntheir motivaations for performing the task / intentded outcome\n\n3. Life goals\nWhy they want to accomplish end goals /long term desires/self-image\n\n\n### 1.1.2 Behavioural variables\n- activities ⇒ what the user does, frequency and volume\n- attitudes ⇒ how the uers thinks about the product domian and knowledge\n- aptitudes ⇒ what education and training the user has\n- motivations\n\t- why the user is engaged in the product domain \n- skills\n\n\n![](https://i.imgur.com/cWh0ex6.png)\n![](https://i.imgur.com/jEpklcL.png)\n\n\n### 1.1.3 Persona types\n- Primary persona ⇒ **Only one per interface**\n- secondary ⇒ mostly satisfied with interface for primary persona\n- supplemental \n\t- completely represent by a combination of \n\t- e.g.,\n\t- customer\n\t\t- buys the product but does not necessarily use it\n\t- served\n\t\t- affected by the use of the product but does not use it (e.g., patient for a hospital software)\n- negative\n\t- person the product is not being made for\n\n# 2 Scenarios\n\n\u003e concise, narrative description of one or more personas using a product to achieve one or more specific goals\n\nHave a good story to tell\n\n![](https://i.imgur.com/TQRKPdi.png)\n![](https://i.imgur.com/YcxfAbX.png)\n![](https://i.imgur.com/r3kTI8W.png)\n\n![](https://i.imgur.com/4EKI6Dm.png)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/personas-development":{"title":"personas-development","content":"\n## Inital Ideas\n- kyle the casual (primary maybe secondary)\n\t- age 23\n\t- skill advanced\n\t- focus: tricks\n- aaron the coach (seconday maybe primary)\n\t- age 30\n\t- skill used to be pro, now advanced\n\t- focus teaching tricks\n- logan the learner (seconday persona)\n\t- age 16\n\t- skill intermediate\n\t- focus not sure yet, beginning to experiement with tricks\n- mac the professional (seconday persona)\n\t- age 20\n\t- skill pro\n\t- focus tricks, uses the app occaionaly with friends\n- karen the parent (negative persona)\n\t- age 45\n\t- skill intermediate\n\t- focus, groomed runs, some backcountry\n- phil the powder hound (supplementary persona)\n\t- age 40\n\t- skill advanced (not with tricks just in general)\n\t- focus off piste/backcountry, sometimes goes into park with friends/kids\n\n# Final choices\n**Primary:** Kyle the casual\n**Secondary:**  Logan the learner","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/personas-final":{"title":"personas-final","content":"\n# Primary: Casual Kyle\n- Age: 23\n- Gender: Male\n- Skill Level: Advanced (Not proffessional)\n- Focus: Terrian Park\n\n## Goals\n### Experience goals\n- wants a quick easy, no hassle, minimal effort experience. \n- does not want to appear to be a \"nerd\" or \"try hard\"\n\n### End goals\n- wants to find new interesting tricks that he may not have thought of himself\n- wants to progress his level of snowboarding\n- wants to show off new cool tricks to his friends\n\n### Life goals\n- wants to be a \"cool snowboarder\"\n- wants to have as much fun as possible\n\n## Behaviour\n### Activities\n- He is a snowboader. He rides at a least a few days every week\n- has a day job, barely enough money for season pass, rides up the mountain, and equipment\n- mostly rides in the terrain park\n\n### Aptidudes/skills\n- has advanced knowledge of the snowboarding tricks, grabs, and variations\n- considers himself an advanced snowboarder\n- rides all the advanced features in the part.\n- can do at least a 540\n- can do a good frontboard, maybe some 270s\n- has fun in the pipe but not his favourite thing\n\n### Motivations\n- wants to find new interesting tricks that he may not have thought of himself, to improve his skills by expanding his \"set\" of tricks.\n\n### Scenario\nKyle wakes up in the morning at 6:45 to go snowboarding with his friends. He sees he has a notification from the trick generator app. The trick for today is a switch back lip. Kyle is excited to try the trick. Kyles friends have also seen the daily trick on their phones. When they meet up on the mountain they all learn the trick and have fun. After they have all done a switch back lip. They decide they want to try another trick. Kyle his phone out of his pocket, opens the app, which loads almost instantly, and generates a trick with only one tap.\n\n# Secondary: Logan the learner\t\n- Age:13\n- Gender: Any\n- Skill: intermediate\n- Focus not sure yet, beginning to experiement with tricks\n\n## Goals\n### Experience goals\n- wants a quick easy, no hassle, minimal effort experience. \n- feels excited when using the app\n- also feels a little nervous about trying something new\n\n### End goals\n- wants to find new tricks that he can learn with his friends, since he doesn't know many\n- wants to stay motivated to learn a new trick each day/week\n\n### Life goals\n- Wants to have fun on the weekend\n- Wants get excersise\n\n## Behaviour\n### Activities\n- Snowboarder\n- lives in a town near a skifield where it is common to snowboard.\n- rides a few times a fortnight, with friends and/or family. maybe in a school program (like they have in wanaka schools)\n\n### Aptidudes/skills\n- has been riding mostly on the groomed runs, is now getting good enough to try the terrian park.\n- has been doing some 180s maybe on sidehits.\n\n### Motivations\n- wants to find new tricks that he can learn with his friends, since he doesn't know many\n\n### Scenario\nLogan is snowboarding on the mountain with a group of his friends. Logan and his friends decide to go into the terrian park and try some tricks. None of his friends know what tricks to try. Logan takes his phone out of his pocket and without removing his gloves, unlocks it with face ID, and looks at the widget which is showing random trick. Logan then puts his phone back in his pocket, tells his friends the trick, and all him and his friends have fun racing to do the trick first.","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/persons-apparently-dead":{"title":"persons-apparently-dead","content":"\ndelayed acceptance of discovery is always a factor in science. \n\ne.g., \n- miroscope invented 1668 - germ theory ignored until 1850\n- 1754 citrus cures scurvy - was not widely used until 50 years later\n- before ww1 penicillin discovered - rediscovered 1928\n- 1902 surturing of blood vessels - not used until 1967\n\nresuscitation. 1774 society for recovery or persons apparently drowned - humane society - royal humane society\n\n- provoked fears about the uncertainty of the state of death\n- buried alive?\n- riot over dissection of hanged man\n- used bellows which sometimes broke lungs\n- these ideas were rejected\n- the proponents of the movement were not all doctors per se, just ordinary citizens\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/philosophize-this":{"title":"philosophize-this","content":"\n# Episodes\n- [040-superstition](notes/040-superstition.md)\n- [054-hume-on-art](notes/054-hume-on-art.md)\n- [065-mary-woolstonecraft](notes/065-mary-woolstonecraft.md)\n- [077-marx-and-kierkegaard-religion](notes/077-marx-and-kierkegaard-religion.md)\n- [078-marx-and-kierkegaard-religion](notes/078-marx-and-kierkegaard-religion.md)\n- [079-kierkegaard-anxiety](notes/079-kierkegaard-anxiety.md)\n- [083-henry-david-thoreau](notes/083-henry-david-thoreau.md)\n- [090-nietzsche-god-is-dead](private/090-nietzsche-god-is-dead.md)\n- [091-nietzsche-wilil-to-power](notes/091-nietzsche-wilil-to-power.md)\n- [092-nietzsche-pt3-thus-spole-zarathustra](notes/092-nietzsche-pt3-thus-spole-zarathustra.md)\n- [093-nietzsche-pt4-love](notes/093-nietzsche-pt4-love.md)\n- [094-a-look-at-suffering](notes/094-a-look-at-suffering.md)\n- [095-are-we-living-in-a-simulation](notes/095-are-we-living-in-a-simulation.md)\n- [[171-the-society-of-the-spectable]]\n- [[]]","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/philosophy":{"title":"philosophy","content":"\n# People\n- [[soren-kiekegaard]]\n- [[karl-marx]]\n- [[henry-david-thoreau]]\n- [mary-woolstonecraft](notes/mary-woolstonecraft.md)\n- [[david-hume]]\n- [[voltaire]]\n- [[bishop-berkely]]\n- [[socrates]]\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/polymesh":{"title":"polymesh","content":"\nLinks\n- https://polymesh.network/permissioned-blockchain\n- https://polymath.network/polymesh-whitepaper\n\nPublic permissioned crypto blockchain\n\nfocused on: condifentialitty, identify, governance, compliance, \n\nuses nominated proof of stake\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/poppys-hottips-for-money":{"title":"money","content":"\n- diversify/split up money\n- do all reasearch on benfits of job before  you start working\n- make sure you dont get fucked and end up with a pension\n- easy ways to get around having money in different countries, and get around exchanges, with credit cards and stuff\n\t- buy a house in ~~~dubai~~~ to rent out (bank in dubai)\n\t- live in nz\n\t- dont send money back to nz, use a international credit card pretty much anywhere\n\t- very simple\n- money is not really money – its something we decided to value\n\t- money in bank does not exists\n\t- a means of exchange\n\nget a job in the healthcare system\n- stable with benefit\n\t- free healthcare\n\t- pension\n\t- salary\n\nonly real way to earn money is to have mutiple sources of income\n- job\n- property\n- investments\n- do something else – \"hustle\"\n\nor live in Jamies opotori commune","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/predictive-adaptive-spectrum":{"title":"predictive-adaptive-spectrum","content":"\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/priority-queue":{"title":"priority-queue","content":"\n- A dynamic linear data type that supports addition and removal on entrie \n- each entry hase a value and a priority (key)\n- removal returns the item with the greatest priority \n\n# Implementation\n1. stores items and priorities in an array. Add at the end ϴ(1), remove by finding the maximum and exchaning with the end element ϴ(n)\n2. stores items and their priorities in an array (or list) in sorted order. now removal is ϴ(1) bu addition in Ο(n)\n\ncan be implemented using a [priority-queue](notes/priority-queue.md)","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/programatic-evolution":{"title":"programatic-evolution","content":" 5 condiditons for evolution\n - self-replication\n - blueprint\n\t - \"genome\"\n\t - stored in us in DNA and RNA\n - inherit blueprint\n - mutation\n - selection \n\n\nwhatever reproduces, reproduces\nwhatever doesn't, doesn't\n\nevolutution converts randomness into order and complexity. Mutatations are required for survival\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/prompts":{"title":"prompts","content":"\n1. What is your interpretation of one of your recent dreams?\n2. What does death teach us about life?\n3. When you look at an elderly person's hands what do you see?\n4. Which disease known to humankind do you hate the most? Explain why.\n5. What was your last dream about?\n6. What seemed unusual on your morning commute today?\n7. Tell me about an old friend you've lost touch with.\n8. What's your earliest holiday memory?\n9. What's your favorite charitable cause and why?\n10. What do you think your life will be like ten years from now?\n11. What actor would you hire to play you in your TV movie biography, and why?\n12. If you died tomorrow, what would you most be remembered for?\n13. Name three people whose lives have been improved by knowing you, and explain why.\n14. If your life was a reality TV show, what would be the hook that would draw viewers in?\n15. When was the last time you cried?\n16. What is the earliest memory you have of a sibling?\n17. What is the earliest photograph of yourself that you have that you remember when it was taken?\n18. What is the longest you've had a \"borrowed\" item but not been able to return it because they moved?\n19. What did you eat as a child that you can't stand now as an adult?\n20. What is one thing that happened today that I really want to remember 10 years from now?\n21. Did I do something today that I can be proud of?\n22. What is one thing that I am grateful for today?\n23. Did something happen to make me sad?\n24. Who is the one relative that I miss the most?\n25. What would I say to them if I could see them again?\n26. Why is it important to be genuine?\n27. Why do you think wars exist in the world?\n28. Why would we say that someone is \"bananas\"?\n29. Why do you think ability to focus is an important quality?\n30. Explain why we say, \"Dead as a door nail\".\n31. How do you feel about using humans in medical research?\n32. What does \"copy cat,” mean to you?\n33. What do you think about quasi ghosts?\n34. What does \"holds water” mean to you?What is your first memory?\n35. How did you meet your first boyfriend or girlfriend?\n36. Describe your typical day, from wake to sleep.\n37. What would be your ideal birthday present, and why?\n38. If you could take home any animal from the zoo, which would it be, and what would you do with it?\n39. Think of a loved one that you have lost. If you could ask this person one question, what would you ask, and what do you think they would say?\n40. Where do you think you will be in five years?\n41. If you were to die today what would like people to say about you?\n42. What is your proudest accomplishment?\n43. If you could be anybody, who would you be?\n44. What is the most important aspect of your life and why?\n45. Where would you travel, if you could go anywhere?\n46. What time period you would like to be born in?\n47. What extinct animal would you bring back, if you could?\n48. What profession would you have chosen, if not your current one?\n49. What book setting would you like to visit, if you could?\n50. Given the chance to give your child only one quality as a person, which would you choose? How about if that choice were unavailable, what would be your second and maybe third choices? Why are these so important to you?\n51. Which superpower would you choose to have if you had the option and why? Conversely, which superhero do you find to be the most overrated and why?\n52. You have one week to do whatever you want, all-expenses-paid, what things would you want to do? Where would you go?\n53. If your best friend came to you depressed and upset like you've never seen before, how would you react?\n54. In what ways do you sometimes wish to act to be a better friend, but don't? Why do you find yourself unable to do these things?\n55. You have one hour to come up with the most interesting television show you can and describe/pitch it.\n56. \"If someone gains, someone else loses.\" How much does this reflect life, and how much does it come up short. Reflecting upon this, how could your attitudes have been different during events in your past?\n57. Would you be a different person today if you had a different childhood? How?\n58. Consider some of the parents others had growing up. What type of person would you be if you had those situations?\n59. What if your life had been harder or easier? How do you think you'd be different?\n60. Am I happy with my job, life, and situation? What parts are good? What parts are bad?\n61. If I could change one thing about my spouse/lover, what would I change?\n62. What is the greatest vacation I have taken and what lessons can I take from it?\n63. If you won a million dollars but had to give it all away, who would you give it to and why?\n64. What was your first pet? Why did you choose this pet?\n65. If you could build a car customized just for you, what would it contain?\n66. What did you want to be when you grew up?\n67. If you had to write your life story, what would the title be? Why?\n68. How do you feel when you see something beautiful? Have you ever seen something so beautiful it makes you cry?\n69. What are you thankful for?\n70. This morning, when I got out of bed, I ….. Before bed tonight, I will….\n71. What do you think about as you are falling asleep?\n72. What is the most beautiful thing you have ever seen?\n73. What is your favorite thing to do outdoors? Why?\n74. What would you write in a letter you could send back in time to yourself as a teen-ager?\n75. What would you write in a letter you could send forward in time to yourself in 10 years?\n76. When did you first realize you would someday be old or someday die?\n77. Describe what it was like to fall in love.\n78. Explain how you chose your career path.\n79. When have you realized you were really wrong in your judgment about someone?\n80. How do you react when you realize you've made a mistake?\n81. What situation has caused you to confront your ethics recently?\n82. If you had to sacrifice one of your senses (taste, touch, smell, sight, hearing), which would you choose and why?\n83. What about a goal makes you most likely to procrastinate?\n84. What would it be like to be in a tornado?\n85. Where would you go to relax and why?\n86. How do you make ice cream?\n87. Why does the ocean have a tide?\n88. Who has more power the government or the people?\n89. Did I recently have an interesting conversation?\n90. What is a scary dream that I remember from my past?\n91. Who is the person that I feel has altered the course of my morals and values, and how did they effect me?\n92. Where do I see myself, so far as my goals, personal development, residence, or job, in five years, and do I have a plan to arrive at this destination?\n93. What is my earliest or happiest memory?\n94. Which amendment to the constitution is the most important to you and why?\n95. Is speech always free? When and where might it not be free?\n96. Put yourself in Anne Frank's place how would you have survived?\n97. If you witnessed a fight at school would you report it? What could the repercussions be if you told the truth?\n98. What was(will be) the first thing that you did(do) when you got your driver's license?\n99. What would you do if you woke up one morning with a tail?\n100. How would you react if you were to find out you would be the first child in space?\n101. Who would you most like to be like if you could change your personality?\n102. If you were born in another time, what time would you choose and why?\n103. Where would you most like to watch the sun come up? Why?\n104. How do you think instant riches would affect your friendships and familial relationships?\n105. How do you think sudden loss of millions would affect your familial relationships and friendships?\n106. How do you imagine humans would move to Mars in the event of world wide catastrophe?\n107. If you were elected President, what do you think would be your most difficult tasks?\n108. Describe something you feel most passionate about to a complete stranger.\n109. Describe your favorite memory about an amusement park or county fair you visited.\n110. When was the last time you lied and why.\n111. What was your closest brush with death.\n112. Where would you want to live if Earth was uninhabitable.\n113. Remember the last time you spoke to a person who later died.\n114. If you were to die tomorrow, what would you want your last words to be?\n115. Write about the last time weather scared you.\n116. Who was the best teacher you ever had, and why?\n117. Describe your favorite sound.\n118. When were you the happiest this year?\n119. What would you do on a snow day?\n120. What are you saving up for?\n121. What caused me to wince today?\n122. Who did I run in to today that I would like to spend more time with?\n123. What tempted me today?\n124. What yes or no questions should I decide by flipping a coin?\n125. What trait did you admire in a relative, friend, classmate, or coworker today?\n126. How do you feel when you stare at the stars?\n127. What would you say to your loved ones if you could tell them absolutely anything?\n128. If you could tell your boss what you really want to do in your job, what would it be?\n129. How are you going to make tomorrow a joyful day?\n130. Recall a place, person or event, what emotion do you remember feeling most strongly?\n131. If you could return in time to a set time to relive it, but not change anything, what would you choose and why?\n132. What is your strongest memory, as a child, of your parents and what were you all doing at the time?\n133. You are given 24 hours to do whatever you would like, money no object. What do you do and why?\n134. You have to invite 5 people to dinner, dead or alive. Who do you invite and why?\n135. What makes your favorite song so special? How do you personally relate to it?\n136. What are some colors you see the most in your every day life?\n137. What is your fondest memory of an animal or pet you once had?\n138. If you could go back and relive one of your past trips, whom from your current entourage would you take with you?\n139. What happens in the latest movie you saw?\n140. Can you picture yourself in the shoes of any of the protagonists?\n141. What is the best gift you've ever given someone? Why? Why do you like/dislike the city where you live?\n142. What's your most treasured memory from high school?\n143. Which friend has had the greatest impact on your life and why?\n144. Which photo of yourself do you hate the most, and why?\n145. Who inspires you the most, and why?\n146. Can you buy happiness?\n147. Imagine you're stuck on the roof of a house that has been carried away by a flood. Which person would you most like to be on the roof with you?\n148. Which would you choose: immense wealth in obscurity or poverty and fame (think \"starving artist\")?\n149. What animal do you identify with most closely?\n150. What is your favorite season and why?\n151. Imagine you are attending your dream concert—what songs would you want to be played? What does the stage look like?\n152. What's your favorite place to escape from life temporarily? A park? A mall?\n153. What's one job you would never want to do?\n154. Has a friend ever broken something or yours? How did you react?\n155. What's the best memory you have from the last year?\n156. How do you feel about politicians openly sharing their religious beliefs?\n157. What characteristics or personality traits are most important to you in a politician?\n158. If you could trade places with a famous person for a day, who would you like to be and why?\n159. If you could learn any new language, which one would you choose and why?\n160. If you had to choose between having a personal chef, a housekeeper, or a personal trainer, which would you pick and why?\n161. What is the weather like today? How do you feel about it?\n162. What season do you like best?\n163. What do you wish you could tell someone, and who do you wish you could tell?\n164. When you close your eyes and think of where you want to live, what comes to the surface? Specifically, what do you want your space to look like? And what do you think that reflects about you?\n165. If you don't believe in reincarnation, forget about that for a minute. What would you like to be reincarnated as? What do you think you WOULD be reincarnated as, if karma had its way with you?\n166. What are things that you wish people knew about you without your having to tell them?\n167. What are a few qualities you dislike in other people, and why?\n168. What music makes you want to get up and dance? Why don't you?\n169. If you need inspiration and put on your favorite CD, which one is it? What is your favorite song on this CD? Why do these lyrics \"speak\" to you? If you met the artist, what would you ask him? If you could be in the front row, where would you see him/her in concert?\n170. If you were in the band, what instrument would you be playing?\n171. When do you think about your regrets the most often?\n172. What is your most prized possession?\n173. What is your favorite lie to tell?\n174. Who do you live for?\n175. What is a secret about you?\n176. What family item has changed your view or ideas about a family member?\n177. Write about your best friend as if they were a stranger.\n178. If you could build a soundtrack to your life, who would be on it?\n179. If you suddenly gained the ability to tell whether someone was lying, would you use it?\n180. How would handle life in an arctic climate?\n181. Describe your perfect career or job. Where would it be? Would you want financial or personal fulfillment? What kind of people would you work with?\n182. Who is your ideal presidential candidate?\n183. What kind of jobs have you had in the past?\n184. What was your major in college? How did you choose it?\n185. Where are you from?\n186. How would you go about 'saving the world'? What do those words mean to you? How long would it take? Where would you start?\n187. If you were to write a book, would it be fiction or non-fiction? What would the subject be? Who is your target audience?\n188. What's the first step you can take to making a difference in the world today? Would you try to feed the hungry, improve the environment, promote peace? How would you start?\n189. In your opinion, is Global Warming real? If so what is causing it? If not why is everyone so hyped up about it?\n190. Write a story about what 1 day in your life would be like if you were a dog.\n191. Describe the ocean to a person who is blind.\n192. Using all of your 5 senses, describe your favorite food.\n193. How would you spend your time if you were wealthy?\n194. Look at yourself in the mirror and describe what you see.\n195. Pretend you are a raindrop falling to earth and describe your fall from the clouds.\n196. What is one of your most personal hopes and dreams?\n197. Would you rather be rich and famous or just rich? Why?\n198. What is your favorite season? What is your best memory of something that happened in that season?\n199. What’s one place that you would like to visit but never will? Why will you never go there?\n200. Describe your favorite painting and what you think the artist was trying to create.\n201. Describe what you hear when you hear nothing.\n202. What's the most difficult part about being you?\n203. What's your favorite part of being you?\n204. If you had to move across the country what belongings would you get rid of?\n205. What was your favorite thing to collect as a child, and why?\n206. What if you ran into a talking animal, what would you ask it? How would you react?\n207. If you saw an alien, what would you do?\n208. What would you do if you won the lottery?\n209. What would you do if you found an injured animal in the street?\n210. What animals frighten you and why?\n211. Where is your favorite place to be and why?\n212. What is your favorite book and what do you like most about it?\n213. What is the best thing and the worst thing that happened to you this week?\n214. If you could travel anywhere in the world for a vacation, where would it be and why?\n215. When you were a child, how did you imagine your adult life? How is it similar or different to what you imagined?\n216. If you found a suitcase full of money in the middle of the street, what would you do?\n217. What is one skill you wish you had and how would that make your life different?\n218. What is the best gift you have ever received from someone and why?\n219. If you were the ruler of the planet, how would you handle space exploration?\n220. If you had a mind-reading ability but could only choose 3 people to read their minds, who would they be?\n221. If there was one person who you had the power of giving immortality to, who would it be and why?\n222. If you found treasure worth millions in your backyard, would you keep it a secret or would you tell the world?\n223. Why do some people choose to dress differently?\n224. What if you lived your life in reverse (being born old, etc.)?\n225. What if trash became more valuable than money?\n226. How would you be different if you had never watched television?\n227. Imagine trading places with the first person you spoke to today.\n228. What do you dream about on a regular basis?\n229. Where do you see yourself in five years?\n230. What would you like to accomplish by the end of the year?\n231. How do others see you?\n232. What would you do if you had all the money in the world?\n233. What would you do to change the country and the world for the better if you were elected president?\n234. Why do you journal?\n235. What do you regret and why?\n236. Make a list of what you would like to do before you die.\n237. Complete this sentence: Love is…\n238. What is the best way to educate the world on lead and how it affects people, just one person at a time?\n239. If I could run out to any restaurant right now with more than enough money where would I go?\n240. Could writing a children's book really affect a child for the rest of their life?\n241. Just a spoonful of what makes the medicine go down?\n242. If you could be a color what would it be? Why?\n243. Tell about a time when someone made you feel welcomed or accepted. What did they do and how did it make you feel?\n244. Tell about a time when someone made you feel bad about yourself. What did they do and how did you react?\n245. Think about the phrase \"random acts of kindness\". What are five things you could do for someone this week just to be kind?\n246. What one thing could you invent that would make your life easier?\n247. What are you most grateful for?\n248. Describe your most important possession.\n249. Why is your best friend your best friend?\n250. What is the biggest goal for your life\n251. What is your most embarrassing moment and why?\n252. Who do you trust the most and why?\n253. Who do you trust the least and why?\n254. What is your greatest fear and how often do you think about it?\n255. What gives you confidence and why?\n256. What is your least favorite chore and why?\n257. What medium would your life best be shown as? A movie? A television series? A cartoon? What genre would a movie about your life fall under? Comedy? Romance?\n258. Who would you choose to portray you in a movie about your life?\n259. What would you do if you could stop time?\n260. What kind of fairytale creature would you be?\n261. What would you do if you could hide in your mother's womb?\n262. What would you do if you knew the answer to pollution of the earth?\n263. What would you do if you met yourself without knowing it was you?\n264. What would you do if you were Mick Jagger for 1 day?\n265. What would you do if you were homeless?\n266. What would you do if you were an undercover agent in heaven?\n267. What would you do if you were living in an environment where nobody could speak?\n268. What would you do if you would stay 25 forever?\n269. What is a long term goal and how can you achieve it?\n270. Who is someone that inspired you to accomplish something you didn't think you could do and how did they encourage you?\n271. Where is your favorite vacation place and why?\n272. If you could travel anywhere in the world, where would you go and what would you do?\n273. What is your ideal pet?\n274. What is a convenience you wouldn't want to do without?\n275. Tell about your favorite vacation experience.\n276. Tell about your worst vacation.\n277. Tell about a story when you got a parking ticket or traffic violation.\n278. What was the first way you earned money?\n279. What is an unusual form of transportation you have used?\n280. Have you ever had an incident because you overslept?\n281. What is an experience you have had when you went fishing or swimming?\n282. Tell about the best restaurant you have ever been to.\n283. What is your favorite game? Why?\n284. Have you ever been in a car wreck? How many? Whose fault was it?\n285. Have you ever swallowed something strange? (a key, pin, marble…)\n286. Do you belong/have you belonged to a club or an organization?\n287. What is a famous place you have seen or want to see?\n288. Do any of your friends or relatives have strange occupations?\n289. Describe an incident that had something to do with water.\n290. Have you ever moved? Tell about one of your moves.\n291. Tell about an article or book you read recently.\n292. What is a joke you played on someone?\n293. Describe a babysitting experience you have had.\n294. Are you competitive? Tell about a competition that you participated in.\n295. Describe something unusual that happened while you were eating in a restaurant.\n296. What is something strange that happened in your neighborhood?\n297. Describe a fair, parade, or festival you have attended.\n298. Describe an incident at a beauty or barber shop.\n299. Tell about a time you slept outdoors.\n300. Do you have pets? Tell a story about one of them.\n301. Tell about a dream that you can remember.\n302. Do you believe in God? Why or why not?\n303. Tell about a time you were given, or gave, flowers.\n304. Tell about a cultural clash/experience you have had with a culture other than your own.\n305. Have you, or your family, ever been effected by war? Describe how.\n306. What is an incident you have had at a movie theater?\n307. Where did you grow up? Describe what it was like?\n308. What is an exciting or crazy trip you have taken?\n309. At what age did you learn to ride a bicycle?\n310. Is there a movie that has brought you to tears? Tell about it.\n311. Tell about a neighbor you had a hard time living next to.\n312. What is the strangest wedding you have ever attended?\n313. What is the worst weather condition you have ever experienced?\n314. What is the best party you have ever been to?\n315. Recall an unusual bus, train, or plane ride.\n316. What is a New Year's Eve you will never forget?\n317. If money wasn't an issue, what kind of house would you have?\n318. Tell about living or visiting a farm or ranch.\n319. If money wasn't an issue, what car(s) would you have?\n320. What foreign countries have you been to? Which ones do you want to go to?\n321. Tell about a trend when you were born.\n322. Have you had an experience that made you feel close to nature?\n323. Which decade of clothing fashion was your favorite and least favorite?\n324. How much was Gas the last time you filled up?\n325. What do you like to do when it is really hot outside?\n326. What is your all-time favorite sports team?\n327. Who is your all-time favorite sports player?\n328. Name someone or an event that guided you in choosing your vocation or work.\n329. What was your first favorite TV show?\n330. Do you actively change your habits and behaviors to help the environment? What kinds of things do you do?\n331. What are some major inventions that happened during your life time?\n332. Tell what you like about one of your hobbies.\n333. What musical instrument(s) do you play or wish you could play?\n334. Tell about a habit that you picked up from a family member or friend.\n335. What about your work can you take pride in?\n336. Tell about the strangest food you have ever eaten.\n337. Do you like commercials? Tell about your favorite commercial.\n338. How are you like one of your brothers or sisters?\n339. Tell about a time when you met someone famous.\n340. Describe a favorite letter you have received.\n341. Describe the first time you ever danced with someone.\n342. What is something that made your mother happy.\n343. How are you and your parents alike.\n344. What is your greatest athletic achievement?\n345. How did your parents meet?\n346. Tell a story that you have had with one of your aunts.\n347. Tell a memory that you have with one of your grandmothers.\n348. Tell a memory that you have with one of your grandfathers.\n349. Name one of the kindest people you have ever met. Why?\n350. Tell about the first time you ever held hands with someone.\n351. Who is one of the most courageous people you have ever met? Why?\n352. What is one of your favorites favorite sayings? Tell how they used it and when.\n353. Describe your father's personality in a short journal entry.\n354. Describe your mother's personality in a short journal entry.\n355. Describe each member of your family one by one. Ad photos and personality descriptions.\n356. What kinds of activities when on at the kitchen table at home when you grew up (eating doesn't count)?\n357. Tell about the kind of kids you hung out with as a kid.\n358. What is your favorite sport? Why?\n359. What is a smell that you remember from growing up?\n360. Tell one of your favorite childhood stories.\n361. What is one unanswered question you would like to ask your parents? Why?\n362. Describe a family vacation.\n363. Tell about one of your father-daughter/son activities.\n364. Describe your best childhood friend.\n365. Tell about one of your mother-daughter/son activities.\n366. Describe your first date.\n367. Who in your family is the biggest character?\n368. Tell a memory you have with one of your uncles.\n369. What is one unanswered question you would like to ask your grandparents? Why?\n370. Tell about a time you got in trouble at school.\n371. What is your favorite family dinner?\n372. What was your favorite family dinner as a child?\n373. Tell about a time when you were grounded.\n374. Who is one of the most interesting people you have ever met?\n375. What state or country what was your father raised in?\n376. What state or country what was your mother raised in?\n377. What state or country what is your father's family from?\n378. What state or country what is your mother's family from?\n379. Where was a special place you always retreated to as a child?\n380. Where is a special place you go to so you can be alone?\n381. Who is a person that influenced your life? How?\n382. How did your family fight the common cold? What was the 'cure'?\n383. Did you grow up with lots of money or very little? How much money (give numbers it makes things interesting)?\n384. Has anyone ever influenced your manners for the better? Who?\n385. What did your family do on Sundays as a child?\n386. Describe your first boyfriend or girlfriend.\n387. Tell about your first kiss.\n388. What is a game or song that your family played or sang while driving?\n389. What did your parents do for fun?\n390. Who was one of your best, or worst, teachers? Describe them.\n391. Tell about something that you and your siblings used to do together.\n392. Tell about something that you and your siblings do together now.\n393. Tell something you like about a friend from the past.\n394. Who is your favorite relative? Least favorite?\n395. Who is a friend you haven't seen for a long time but would like to see.\n396. What was/is something that your mother considered/considers very important?\n397. What was/is something that your father considered/considers very important?\n398. What is something you liked about your childhood?\n399. What kinds of things make/made your father happy?\n400. What is an event that you will never forget from your school days?\n401. Tell about one of your first away-from-home experiences.\n402. Tell about one of the oldest photographs you have.\n403. How are your father and grandfather alike?\n404. How are your mother and grandmother alike?\n405. What are you political views? Are you a liberal? republican? libertarian? … Why?\n406. In your mind, what will the world be like in 50 years?\n407. If you were given a huge amount of money, but had to give it away, who would you give it to?\n408. Tell about the happiest day of your life.\n409. Do you have a favorite time of day? Why?\n410. What is your favorite movie of all time?\n411. What is your favorite place to eat?\n412. What is your favorite holiday? Why?\n413. What would be your perfect day?\n414. If you had more money, what would you alter about your life?\n415. If TV didn't exist, what would you do with your time?\n416. If you could change you name, what would you change it to?\n417. Cost being no factor, what would you do for one month?\n418. Who is your #1 hero? Why?\n419. If you could live anywhere in the world, where would it be?\n420. How are you going to celebrate entering the next century?\n421. As a whole, do you live for tomorrow or today? Explain.\n422. If you had the option of living forever, would you take it?\n423. If you had the option to know the day and time of your death, would you want to know?\n424. What is a place that inspires you?\n425. What age would you consider the prime of life? Why?\n426. Describe a family tradition.\n427. How have credit card affected your life?\n428. What do you really like about where you live?\n429. Are you ever lucky? Tell about it.\n430. If you knew you would loose ever possession you own but one, what would you keep?\n431. What is your perfect weekend?\n432. Describe the perfect vacation.\n433. Tell about how your parents influenced your spiritual beliefs.\n434. How is your life different now from just a year ago?\n435. What is your favorite season? Why?\n436. What is your favorite holiday? Why?\n437. Name a public figure who has inspired you. Why?\n438. How have you adjusted your eating habits to be healthier?\n439. Describe when someone has done something very nice for you.\n440. If you could spend a day with someone famous, who would it be?\n441. Tell about a time you laughed until you cried.\n442. What is a cause that is VERY important to you?\n443. Do you exercise? How has your exercising changed throughout your life?\n444. What do you do to relax?\n445. What have you done that was \"out of character.\"\n446. Tell about a time when you shocked someone.\n447. What is the biggest risk you have ever taken?\n448. What occupation do you think would be fascinating?\n449. What is a principle or ideal that you would like to pass on to the next generation?\n450. Tell about an award you have received.\n451. Tell about a friend you have with a different national background.\n452. What is the proudest moment of your life?\n453. What do you feel is your greatest success?\n454. What is the best decision you have ever made in your life?\n455. What kind of art is your favorite? Why?\n456. What is an experience that you would consider a miracle?\n457. Tell about a characteristic in others you admire?\n458. What is the most courageous thing you have ever done?\n459. What is one of your life goals?\n460. Write out your life mission statement (or at least start)\n461. What was your New Years Resolution this year?\n462. What would you put in a time capsule to be opened by the next generation?\n463. Has religion played a role in your life? How?\n464. Describe a time you helped someone.\n465. What is something about yourself that you dislike?\n466. Tell about something you do well?\n467. Tell about your home. Do you have a favorite room? Why?\n468. What makes a good neighbor?\n469. What do you think the world will be like in 10 years? Twenty? Fifty?\n470. What is your opinion about ghosts?\n471. What is your opinion of someone who has bad manners?\n472. What is your opinion about people who take advantage of others?\n473. What do you think about when you can't fall asleep?\n474. What do you think courage means?\n475. What do you think makes a good friend?\n476. What do you think makes a happy family?\n477. What things do you think are beautiful?\n478. What is your opinion of 3D movies?\n479. What is your opinion about the amount of violence on T.V.?\n480. What is your opinion of people polluting the environment?\n481. What is your opinion of having set rules for people to follow?\n482. What is your opinion of people who are inconsiderate of others?\n483. How would you feel if you were going to be on TV? Why?\n484. What is the best way to treat busybodies?\n485. What is the worst thing parents can do to their children?\n486. What is your most invaluable possession and why?\n487. Where do you see yourself in 5 years?\n488. What is your idea of perfect happiness?\n489. What is your greatest fear?\n490. What historical figure do you most identify with?\n491. What living person do you most admire?\n492. What trait do you most deplore in yourself?\n493. What is your greatest extravagance?\n494. What is your favorite journey?\n495. What do you consider your most overrated virtue?\n496. What do you dislike most about your appearance?\n497. Which living person do you most despise?\n498. What words do you most overuse?\n499. What or who is the greatest love of your life?\n500. Which talent would you most like to have?\n501. What is your current state of mind?\n502. What do you consider your greatest achievement?\n503. If you could choose what to come back as, what would it be?\n504. If you were to die and come back as a person or thing, what do you think it would be?\n505. If you could change one thing about your family, what would it be?\n506. What is your most treasured possession?\n507. What is your favorite occupation?\n508. What is your most marked characteristic?\n509. What is the quality you like most in a woman?\n510. What is the quality you like most in a man?\n511. Who are your favorite writers?\n512. What do you most value in your friends?\n513. Who is your favorite hero of fiction?\n514. What is it that you most dislike?\n515. How loyal are you?\n516. How would you like to die?\n517. What’s the finest education?\n518. What’s your motto? How would you like to be remembered?\n519. What is your idea of a boring evening?\n520. What is something you are optimistic about?\n521. What is something you are pessimistic about?\n522. What is your favorite song and why?\n523. What is the best birthday present you ever received?\n524. What is the best birthday present you could receive?\n525. What is something that makes you feel sad?\n526. What is your favorite book and why?\n527. What is something that really bugs you?\n528. What is something that really makes you angry?\n529. What is the best advice you ever received?\n530. What is your favorite holiday? What makes this holiday special?\n531. What is your favorite day of the week?\n532. What is your favorite month? Why?\n533. What would happen if there were no television? Why would this be good? bad?\n534. What would you do if you saw a friend cheating—report it, confront the friend, nothing—and why?\n535. If you could have been someone in history, who would you have been?\n536. If you could only take 3 people with you on a trip around the world, who would you take and why?\n537. If you could give any gift in the world, what would you give and to whom?\n538. If you could live anywhere in the world, where would it be?\n539. If you received any sum of money as a gift, what would you do with it?\n540. If you could do whatever you wanted to right now, what would you do?\n541. If you were principal of this school, what would you do?\n542. If you were a mouse in your house in the evening, what would you see your family doing?\n543. What rituals do you have or hold?\n544. If you were lost in the woods and it got dark, what would you do?\n545. If it were your job to decide what shows can be on t.v., how would you choose?\n546. If there were no rules, what do you think would happen?\n547. What do you think people say to each other when you're not around?\n548. If you owned a store, what would you do to discourage people from stealing from you?\n549. If you could participate in an Olympic event, which one would you choose and why?\n550. If you could break the Guiness Book of Records it would be for?\n551. If you had to describe yourself as a color, which would you choose?\n552. What do you think should be done to keep people who are under the influence of alcohol off the road?\n553. What do you like most about yourself?\n554. What do you like to do in your free time?\n555. What kind of animal would you like to be and why?\n556. What kind of trophy would you like to win?\n557. What TV or movie star would you like to invite to your birthday party?\n558. What does \"Clothes make the person\" mean to you?\n559. What does \"Have your cake and eat it too\" mean to you?\n560. What does \"The early bird gets the worm\" mean to you?\n561. What do we mean when we say, \"The grass is always greener on the other side of the fence\"?\n562. What does \"You can't take it with you\" mean?\n563. What do we mean when we say, \"You can catch more flies with honey than with vinegar\"?\n564. What do we mean when we say, \"Hitch your wagon to a star\"?\n565. What does \"still waters run deep\" mean to you?\n566. What does \"There are two sides to every coin\" mean to you?\n567. What does Canada mean to you?\n568. What are you afraid of? Why?\n569. What are junk foods?\n570. What are some nutritious foods that you like?\n571. What are some rules you have to follow at home?\n572. What are some examples of prejudice?\n573. What is more important to you, appearance or personality?\n574. What is most important to you in a friend—loyalty, generosity, honesty—why?\n575. What is something that makes you melancholy?\n576. What makes your best friend your best friend?\n577. What makes you feel safe?\n578. What makes you laugh?\n579. What would you invent to make life better?\n580. What would you do to entertain your family without spending any money?\n581. What effects does watching violence have on people?\n582. What effects do cigarette and alcohol advertising have on young people?\n583. What kind of t.v. commercial would you like to make? Describe it.\n584. What kind of pet would you most like to have—monkey, snake, goat—why?\n585. What kind of program do you enjoy most on TV—detective shows, comedies, game shows—and why?\n586. What advice would you give a new student?\n587. What advice would you give to someone who stole something but now feels guilty?\n588. What things are better than going to school? Why?\n589. What talents do you have?\n590. What three words would describe you right now?\n591. What four things are most important in your life?\n592. What color makes you think of happiness?\n593. What has been the most fun activity at school so far?\n594. What quality do you like about yourself—creativity, personality, appearance—why?\n595. What eccentric behaviour in a friend disturbs you the most?\n596. What parts of nature do you like best?\n597. What do you do for exercise?\n598. How do you feel when it's your birthday? Why?\n599. How do you feel on the first day of winter? Why?\n600. How do you feel when you do something wrong?\n601. How do you feel when you do something that is very good?\n602. How do you feel when you play a trick on someone?\n603. How would you feel if a new child moved into your neighbourhood?\n604. How do you think the new child would feel?\n605. How do you feel when you have had a fight with your best friend?\n606. How do you think your friend felt?\n607. How do you feel when you are in bed with the lights out?\n608. How do you feel when you want something very badly and you cannot have it? Why is this so important to have?\n609. How do you feel on a warm sunny day?\n610. How do you feel when you stay with a babysitter?\n611. How do you feel when you're leaving home on vacation?\n612. How do you feel when you sleep at some one's house?\n613. How do you feel during a thunderstorm?\n614. How do you feel on the first day of school?\n615. How do you feel when your parents are upset with you? Why do they become upset with you?\n616. How do you feel on Thanksgiving? What are you thankful for?\n617. How do feel on (any holiday)?\n618. How do you feel when something scares you? What do you do when this happens?\n619. How would you feel if someone told you that you were his or her best friend?\n620. How do you feel about your appearance?\n621. How would you change the world to make it better?\n622. How do you think eating junk food affects you?\n623. How do you have the most fun—alone, with a large group, with a few friends—and why?\n624. Explain how to play your favorite game.\n625. I wish I had a million… Then I would…\n626. I wish I had one… because\n627. I wish I could be like…. This person is special because….\n628. I wish to be a ____ when I grow up. Then I will….\n629. I wish there were a law that said….. This would be a good law because….\n630. I wish I could forget the time I ….. because….\n631. I wish trees could….. because….\n632. I wish I could see…… because…..\n633. I wish I could learn….. because…..\n634. I wish I didn't have to eat…… I don't like this food because…..\n635. I wish everyone would learn to ….. Then everyone would…..\n636. I wish I never……\n637. I wish I had one more chance to….. Then I would…..\n638. I wish there was an electric……\n639. I wish I had enough money to……\n640. I wish everyone loved……\n641. I wish all children would……\n642. I wish everyone had…..\n643. I wish I could touch……\n644. I wish animals could…… If they could, then…..\n645. I wish I looked like…. because……\n646. I wish there were no more…..\n647. I wish I didn't have to…..\n648. I wish I could go to…..\n649. I wish there really was….. If there really was, then…..\n650. I wish I could hear……\n651. I wish I could give……\n652. If all my wishes came true, I would……\n653. Describe a time when you felt vengeful.\n654. Describe your favorite toy. Why do you like it best?\n655. Describe the most ludicrous outfit you can think of.\n656. Describe the best teacher you ever had.\n657. When you are angry, how do you look?\n658. When are you happiest?\n659. When have you felt lonely?\n660. When do you feel proud?\n661. When was the last time you cried and why?\n662. When a friend was in an embarrassing situation, what did you do?\n663. When it might hurt their feelings, how do you feel about telling your friends the truth?\n664. When might it be bad to be honest?\n665. When someone picks on someone else, how do you feel? What do you do?\n666. Once, when you were very frightened, what happened?\n667. Once, when you were embarrassed, what happened?\n668. Once, when your feelings were hurt, what happened?\n669. Which quality best describes your life—exciting, organised, dull—and why?\n670. Which quality do you dislike most about yourself—laziness, selfishness, childishness—and why?\n671. Which place would you most like to visit—Africa, China, Alaska—why?\n672. Which holiday has the most meaning for you-Canada Day, Thanksgiving, Valentines Day—and why?\n673. Which is least important to you—money, power, fame—and why?\n674. Which is most important to you—being popular, accomplishing things, being organised—and why?\n675. Who do you talk to when you have a problem?\n676. Who is your favourite Star Wars character (or other movie/book/t.v. show, etc.)?\n677. Who or what has had a strong influence in your life?\n678. Where would you prefer to be right now—mountains, desert, beach—and why?\n679. Why is it important to be honest?\n680. Why is important to have good manners?\n681. Why do you think some people smoke/drink?\n682. Why is exercise important to someone your age?\n683. Why do you think some people encourage others to smoke/drink?\n684. Why do you think the rules you must follow are good or bad?\n685. Why would it be good to be honest?\n686. Why have men and women usually only done certain types of work?\n687. Why should or shouldn't a man stay home to care for the house and children while his wife goes to work?\n688. Why do you think some people take advantage of others?\n689. Why do you think prejudice exists in the world?\n690. Why would we say that someone is \"passing the buck\"?\n691. Why would a Prime Minister have a sign on his desk which read, \"The buck stops here\"?\n692. Why do you think tact is an important quality?\n693. Why is it not wise to squander your money?\n694. Explain why we say, \"dead as a door nail\".\n695. Do you think there is too much fighting on t.v. Why or why not?\n696. Do you think it is necessary to have alcohol at a party in order to have a good time?\n697. Does it bother you to be around someone who has bad manners?\n698. Should there be a dress code in places such as school, restaurants, and places of business? Why or why not?\n699. Should animals be used for medical research?\n700. Should people be prohibited from smoking in certain places?\n701. Families are important because…\n702. Would you like to be famous? Why or why not? What would you like to be famous for?\n703. If you were a food, what would you be?\n704. Why do people drive on parkways and park on driveways?\n705. What do you think is the greatest invention? Why?\n706. Describe what it means to be a best friend.\n707. What is your earliest childhood memory?\n708. Is there something that you memorized long ago and still remember?\n709. Which way does the toilet paper roll go? Over or under?\n710. What is your favorite season of the year? Why?\n711. How many people are in your whole family? How many are male? Female?\n712. Who controls the TV remote control in your family?\n713. Name your favorite animated movie and tell why you like it.\n714. Which person would you like to see more often than you do now?\n715. If you were an animal, what would you be?\n716. What superpower would you like to have? What would you do with it?\n717. If you had to move to another state, which one would you choose?\n718. What special talent do you have?\n719. What can you do that makes people laugh?\n720. Can you pat your head and rub your stomach at the same time?\n721. Name four items that can always be found in your refrigerator.\n722. Who is the best laundry folder in the family?\n723. If somebody makes a mess, who cleans it up?\n724. When was the last time you sent or received a card from someone?\n725. Which do you prefer, a shower or a bath? Why?\n726. If you were in danger, who would protect you?\n727. What is your grandfather or grandmother's middle name?\n728. Which do you prefer, inside or outside? Why?\n    \nWhat is...\n  \n* What is something you dislike about yourself?\n* What is something you do well?\n* What is your favourite room in your home and why?\n* What is a good neighbour?\n* What is the worst thing parents can do to their children?\n* What is your favourite time of day?\n* What is your idea of a dull evening?\n* What is the best way to treat meddlesome people?\n* What is something you are optimistic about?\n* What is something you are pessimistic about?\n* What is your most indispensable possession and why?\n* What is the meaning of \"He laughs best who laughs last\"?\n* What is your favourite song and why?\n* What is the best birthday present you ever received?\n* What is the best birthday present you could receive?\n* What is something that makes you feel sad?\n* What is your favourite book and why?\n* What is something that really bugs you?\n* What is something that really makes you angry?\n* What is the best advice you ever received?\n* What is your favourite holiday? What makes this holiday special?\n* What is your favourite day of the week?\n* What is your favourite month? Why?\n  \nWhat if...\n  \n* What would happen if you could fly whenever you wanted? When would you use this ability?\n* What would happen if there were no television? Why would this be good? bad?\n* What would happen if everyone lived in space? What type of houses would they live in? What type of clothing would they wear? What type of food would they eat? How would they travel?\n* What if cows gave root beer instead of milk?\n* What if all the streets were rivers? What would be different?\n* What would happen if people never co-operated? Why do you think it is important to co-operate?\n* What would happen if it really did rain cats and dogs?\n* What would happen if animals could talk? What are some of the questions you would like to ask animals?\n* What would happen if you could become invisible whenever you wanted to? What are some of the things you could do that you cannot do now?\n* What would happen if everyone wore the same clothes?\n* What would happen if you threw a piece of trash on the ground? What if everyone did?\n* What if you could walk up walls and across ceilings?\n* What would happen if you loved your neighbour as yourself? What if everyone did?\n* What would happen if you grew taller than trees? How would this change your life?\n* What would happen if children ruled the world?\n* What would happen if there were no cars, buses, trains, boats, or planes? How would this change your life?\n* What if everyone lived under water? Where would people live? What games would children play? What would school be like?\n* What would happen if you found gold in your backyard?\n* What would you do if a bully bothered you on your way home?\n* What would you do if you did very poorly of a test?\n* What would you do if a friend borrows things from you but never returns them?\n* What would you do if You were the teacher and everyone forgot his homework?\n* What would you do if you were in the middle of the lake and your boat began to leak?\n* What would you do if Your friend had a broken leg? How would you cheer him up?\n* What would you do if you saw little bugs in your salad?\n* What would you do if you woke up in another country and no one could understand you?\n* What would you do if you ordered an ice cream cone and you forgot to bring money?\n* What would you do if someone got in front of you when you were in line at the movies?\n* What would you do if your jelly sandwich fell upside down on the floor?\n* What would you do if only one hot dog is left and neither you nor your friend have had one?\n* What would you do if two of your best friends went to the movies without inviting you?\n* What would you do if the surprise party was for you but you weren't surprised?\n* What would you do if you got a present you didn't like?\n* What would you do if you were at home and your homework was at school?\n* What would you do if you dropped the cookie jar and it broke?\n* What would you do if you were invited to two parties on the same day?\n* What would you do if you promised to feed your pet and you didn't?\n* What would you do if someone said you did something wrong and you didn't?\n* What would you do if your new shoes felt fine in the store but now they are hurting?\n* What would you do if someone told you a joke that you don't think is funny?\n* What would you do if an hour before the party you remember you don't have a gift?\n* What would you do if a friend comes to your house and his/her mom doesn't know he's/she's there?\n* What would you do if you had four math problems marked wrong that were right?\n* What would you do if you found in the street?\n* What would you do if you found a magic wand?\n* What would you do if you wanted to be friends with someone who spoke no English?\n* What would you say if someone told you it was all right to steal from a large department store?\n* What would you do if you saw a friend cheating--report it, confront the friend, nothing--and why?\n* If you could have been someone in history, who would you have been?\n* If you could only take 3 people with you on a trip around the world, who would you take and why?\n* If you could give any gift in the world, what would you give and to whom?\n* If you could live anywhere in the world, where would it be?\n* If you received any sum of money as a gift, what would you do with it?\n* If you could do whatever you wanted to right now, what would you do?\n* If you were principal of this school, what would you do?\n* If you were a mouse in your house in the evening, what would you see your family doing?\n* If you were five years older you would...\n* If you were lost in the woods and it got dark, what would you do?\n* If it were your job to decide what shows can be on t.v., how would you choose?\n* If there were no rules, what do you think would happen?\n* If you owned a store, what would you do to discourage people from stealing from you?\n* If you could participate in an Olympic event, which one would you choose and why?\n* If you could break the Guiness Book of Records it would be for?\n* If you had to describe yourself as a colour, which would you choose?\n* If your friend told you of a secret plan to run away from home, what would you do and why?\n  \nWhat do you think...\n  \n* What do you think of 3D movies?\n* What do you think someone your age can do to help reduce the amount of pollution in our environment?\n* What do you think the world needs now?\n* What do you think your friends say to each other when you're not around?\n* What do you think about the amount of violence on T.V.?\n* What do you think about people polluting the environment?\n* What do you think about having set rules for people to follow?\n* What do you think about people who are inconsiderate of others?\n* What do you think should be done to keep people who are under the influence of alcohol off the road?\n* What do you think the world will be like when you are a grown up?\n* What do you think about ghosts?\n* What do you think of someone who has bad manners?\n* What do you think about people who take advantage of others?\n* What do you think about when you can't fall asleep?\n* What do you think courage means?\n* What do you think makes a good friend?\n* What do you think makes a happy family?\n* What pollutants do you think do the most damage and why?\n* What things do you think are beautiful?\n* What do you think about students having to wear school uniforms?\n  \nWhat...misc.\n  \n* What do you like most about yourself?\n* What do you like to do in your free time?\n* What kind of animal would you like to be and why?\n* What kind of trophy would you like to win?\n* What TV or movie star would you like to invite to your birthday party?\n* What does \"Clothes make the person\" mean to you?\n* What does \"Have your cake and eat it too\" mean to you?\n* What does \"The early bird gets the worm\" mean to you?\n* What do we mean when we say, \"The grass is always greener on the other side of the fence\"?\n* What does \"You can't take it with you\" mean?\n* What do we mean when we say, \"You can catch more flies with honey than with vinegar\"?\n* What do we mean when we say, \"Hitch your wagon to a star\"?\n* What does \"still waters run deep\" mean to you?\n* What does \"There are two sides to every coin\" mean to you?\n* What does Canada mean to you?\n* What are you afraid of? Why?\n* What are junk foods?\n* What are some nutritious foods that you like?\n* What are some rules you have to follow at home?\n* What are some examples of prejudice?\n* What is more important to you, appearance or personality?\n* What is most important to you in a friend--loyalty, generosity, honesty--why?\n* What is something that makes you melancholy?\n* What makes your best friend your best friend?\n* What makes you feel safe?\n* What makes you laugh?\n* What would you invent to make life better?\n* What would you do to entertain your family without spending any money?\n* What effects does watching violence have on people?\n* What effects do cigarette and alcohol advertising have on young people?\n* What kind of t.v. commercial would you like to make? Describe it.\n* What kind of pet would you most like to have--monkey, snake, goat--why?\n* What kind of program do you enjoy most on TV--detective shows, comedies, game shows--and why?\n* What advice would you give a new student?\n* What advice would you give to someone who stole something but now feels guilty?\n* What things are better than going to school? Why?\n* What talents do you have?\n* What three words would describe you right now?\n* What four things are most important in your life?\n* What colour makes you think of happiness?\n* What has been the most fun activity at school so far?\n* What quality do you like about yourself--creativity, personality, appearance--why?\n* What eccentric behaviour in a friend disturbs you the most?\n* What parts of nature do you like best?\n* What do you do for exercise?\n* What is the most ludicrous outfit you can think of?\n* What is the funniest dinner you've ever had with your family?\n  \nHow...\n  \n* How do you feel when it's your birthday? Why?\n* How do you feel on the first day of winter? Why?\n* How would you feel if you were going to be on a show? Why?\n* How do you feel when you do something wrong?\n* How do you feel when you do something that is very good?\n* How do you feel when you play a trick on someone?\n* How would you feel if a new child moved into your neighbourhood?\n* How do you think the new child would feel?\n* How do you feel when you have had a fight with your best friend?\n* How do you think your friend felt?\n* How do you feel when you are in bed with the lights out?\n* How do you feel when you want something very badly and you cannot have it? Why is this so important to have?\n* How do you feel on a warm sunny day?\n* How do you feel when you stay with a babysitter?\n* How do you feel when you're leaving home on vacation?\n* How do you feel when you sleep at someone's house?\n* How do you feel during a thunderstorm?\n* How do you feel on the first day of school?\n* How do you feel when your parents are upset with you? Why do they become upset with you?\n* How do you feel on Thanksgiving? What are you thankful for?\n* How do feel on (any holiday)?\n* How do you feel when something scares you? What do you do when this happens?\n* How would you feel if someone told you that you were his or her best friend?\n* How do you feel about your appearance?\n* How would you change the world to make it better?\n* How do you think eating junk food affects you?\n* How do you have the most fun--alone, with a large group, with a few friends--and why?\n* Explain how to play your favorite game.\n* How would you describe your house to someone who has never visited there before?\n  \nI wish...\n  \n* I wish I had a million... Then I would...\n* I wish I had one... because\n* I wish I could be like.... This person is special because....\n* I wish to be a ________ when I grow up. Then I will....\n* I wish there were a law that said..... This would be a good law because....\n* I wish I could forget the time I ..... because....\n* I wish trees could..... because....\n* I wish I could see...... because.....\n* I wish I could learn..... because.....\n* I wish I didn't have to eat...... I don't like this food because.....\n* I wish everyone would learn to ..... Then everyone would.....\n* I wish I never......\n* I wish I had one more chance to..... Then I would.....\n* I wish there was an electric......\n* I wish I had enough money to......\n* I wish everyone loved......\n* I wish all children would......\n* I wish everyone had.....\n* I wish I could touch......\n* I wish animals could...... If they could, then.....\n* I wish I looked like.... because......\n* I wish there were no more.....\n* I wish I didn't have to.....\n* I wish I could go to.....\n* I wish there really was..... If there really was, then.....\n* I wish I could hear......\n* I wish I could give......\n* If all my wishes came true, I would......\n  \nWhen...\n  \n* When you are angry, how do you look?\n* When are you happiest?\n* When have you felt lonely?\n* When do you feel proud?\n* When was the last time you cried and why?\n* When a friend was in an embarrassing situation, what did you do?\n* When it might hurt their feelings, how do you feel about telling your friends the truth?\n* When might it be bad to be honest?\n* When someone picks on someone else, how do you feel? What do you do?\n* Once, when you were very frightened, what happened?\n* Once, when you were embarrassed, what happened?\n* Once, when your feelings were hurt, what happened?\n* Describe a time when you felt vengeful.\n* When you have a problem who do you talk to? Why?\n  \nWhich...\n  \n* Which quality best describes your life--exciting, organised, dull--and why?\n* Which quality do you dislike most about yourself--laziness, selfishness, childishness--and why?\n* Which place would you most like to visit--Africa, China, Alaska--why?\n* Which holiday has the most meaning for you-Canada Day, Thanksgiving, Valentines Day--and why?\n* Which is least important to you--money, power, fame--and why?\n* Which is most important to you--being popular, accomplishing things, being organised--and why?\n* Which is your favourite Star Wars character (or other movie/book/t.v. show, etc.)? Why?\n  \nWhy...\n  \n* Why is it important to be honest?\n* Why is important to have good manners?\n* Why do you think adults smoke/drink?\n* Why is exercise important to someone your age?\n* Why do you think some people encourage others to smoke/drink?\n* Why do you think the rules you must follow are good or bad?\n* Why would it be good to be honest?\n* Why have men and women usually only done certain types of work?\n* Why should or shouldn't a man stay home to care for the house and children while his wife goes to work?\n* Why do you think some people take advantage of others?\n* Why do you think prejudice exists in the world?\n* Why would we say that someone is \"passing the buck\"?\n* Why would a Prime Minister have a sign on his desk which read, \"The buck stops here\"?\n* Why do you think tact is an important quality?\n* Why is it not wise to squander your money?\n* Explain why we say, \"dead as a door nail\".\n* Think of your favourite toy. Why do you like it best?\n* Think of the best teacher you ever had. Why were they a good teacher?\n  \n \nMisc...\n  \n \n* Do you think there is too much fighting on t.v. Why or why not?\n* Do you think it is necessary to have alcohol at a party in order to have a good time?\n* Does it bother you to be around someone who has bad manners?\n* Should there be a dress code in places such as school, restaurants, and places of business? Why or why not?\n* Should animals be used for medical research?\n* Should the Canadian Government financially support Olympic teams?\n* Should people be prohibited from smoking in certain places?\n* Families are important because...\n* Would you like to be famous? Why or why not? What would you like to be famous for?\n* Who or what has had a strong influence in your life?\n* Where would you prefer to be right now--mountains, desert, beach--and why?\n* Should you have to do chores around the house? Why or why not?\n* Should you be required to wear a bike helmet? Why or why not?\n* Should skateboards be allowed on sidewalks?\n* Where do you think we should go on our class fieldtrip this year? Why?\n* Should you have to take tests in school?\n* Should cellphones be allowed in school?\n* Can television (or videogames) influence your behaviour? How?\n* Should schools be year-round?\n* Should junk food be banned from schools?\n* Should students be required to learn a second language?","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/propagation-of-ideas":{"title":"Propagation of Ideas","content":"\nlink:https://ase.tufts.edu/cogstud/dennett/papers/memeimag.htm\n\nThe david and miriam mandel lecture\namerican society for aesthetics\noct 27 1989\n\nHow (or whether) are promotes human evolution or development\n\n# What is a Meme\nRichard Dawkins defines a meme as: a unit of cultural transmission, or a unit of imitation\n\n**Art:** all artifice, all human invention\n\nThe paper compares memes to genes  and explores the way they evolve similar to genes\n\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/prototyping":{"title":"prototyping","content":"\n# Prototyping\nQuickly creating a minimal, functioning approximate version of an idea, which reveals potential issues(feedback) that may be hard to predict(unknown unknows) otherwise\n\n\u003e\"The way to have a good idea is to have lots of ideas\" - Linus Pauling\n\n\u003e \"Prototypes are questions. Ask lots of them\"\n\nRapid Prototyping can be compared to simulated annealing\n\n## 1 Goals\n- minimise time spent\n- maximise information gained\n\t- cost of change increases with time\n- help [stakeholders](stakeholders) understand ideas\n\n## 2 Traits of a good prototype:\n- not fully complete\n- easy to change/create\n- retired/evolved quickly\n\n## 3 Insights gained from prototyping\n- Feel -\u003e Form\n- Implementation -\u003e Function\n- Role -\u003e Overall Experience\n\n![](https://i.imgur.com/DU7fMJz.png)\n![](https://i.imgur.com/aR9yOeI.png)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/public-permissioned-as-CPRs":{"title":"public-permissioned-as-CPRs","content":"\n[link](https://www.linkedin.com/pulse/public-permissioned-blockchains-common-pool-resources-jesus-ruiz/)\n\nnote: written by the CTO of alastria which was supposedly the pioneer of this model\n\nThis paper proposed a new type of blockchain, a Public Permissioned Blockchain. It claims to encompass the pros of both public and private chains with few of their cons. ","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/quadratic-voting":{"title":"quadratic voting\"","content":"\nQuadratic voting is a voting system in which individuals have a certain number of votes that they can distribute among options in any way they choose, but the number of votes required to support an option increases quadratically as the option becomes more popular. This is designed to give each individual more influence on less popular options and to prevent the majority from dominating the voting process.\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/quicksort":{"title":"quicksort","content":"\npre ⇒ select pivot and split the array\n\nrec ⇒ apply quicksort to the partitions\n\npost ⇒ not much\n\ndesigneds when sorting inplace was important\n\nworks best of primitive types as they can be stored in the fastest memory location\n\n- memory access can be localised and the comparisions are direct\n- those advantages are limited when sorting objects of reference type\n- i that case each element of the array is just a reference to where the object really is\n- so there are no local access advantages\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/randomness":{"title":"randomness","content":"\n- a lack of predicability\n- no patterns\n- stochastic (can be analysed but not predcted) vs deterministic\n\nused for\n- one time pad\n- generating key-pairs\n- generating salts for password hashing\n- seeding pesudo random number generators\n\nhumans are not good at randomness\n- e.g., see patterns when there are none\n- e.g., random dot pattern\n- shuffle algorithm\n- gambers fallacy\n\nhow to prove randomness\n- cannot prove\n- but can check for uniformity, bias, distribution etc. \n- difficult with small samples\n- can identify data that is unlikely to be random\n\t- (rngtext, diehard, dieharder etc)\n\n# In computers\ncomputers have the same problem: they are deterministic\n- cannot really produce true random numbers\n- CSPRNGS crypto secure pseudo random number generators\n- hardware entropy generator\n\nentropy pool\n- modern OSs implement an entropy pool that processes can draw on when the need random data\n\t- some systems provide blocking and non-blocking random source devices\n\t\t- blocking: will stop when entropy is exhausted","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/reading-and-navigating":{"title":"reading-and-navigating","content":"\n# Reading and navigating\nInformation scent\n- how to represent things so people can find what they want\n\t- do they realize their options\n\t- can they figue out how to get what they want\nHow to find Poor scent\n- flailing (loss of orientation, reported or observed)\n- low confidence (in what link with will do or where it will go) (measured before and after using a web link)\n- back button (count usage of back button)\n\nLow scent navigation\n- unfamiliar terms\n- suprising categories\n- short links\n- hidden navigation\n- icons provide little information\n\t- generic icons rarely help\n\t- they help when \n\t\t- they facilitate repeat recognition\n\t\t- when you know what something looks like but not what its called\n\t\t- good redundant coding can help\n\nimproving scent\n- multiword links\n\t- specific recognisable terms\n\t- trigger words not \"clever\" terms\n\t- help accessibility\n- speaking block navigation\n\t- subheadings\n\t- explanations\n- design for glanceability\n\t- ![](https://i.imgur.com/pMNYIUB.png)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/reading-papers":{"title":"reading-papers","content":"\nRead a survey paper first\n\n1. Abstract\n2. Intro\n3. Conclusion\n4. Related Works\n\nCheck for good papers using Core rankings. \nMaybe keep a WTF terms note\n\n- scopus\n- core ranking\n- plumx metrics","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/recognise-and-recover-from-errors":{"title":"recognise-and-recover-from-errors","content":"\n\n- make the problem clear\n- e.g., username or password is wrong vs username is wrong\n- provide a solution and inform users (treat the users as adults\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/recognition-over-recall":{"title":"recognition-over-recall","content":"\n### 3.1 avoid codes\n\n![](https://i.imgur.com/B8sJxd6.png)\n\n### 3.2 Recognition with previews or icons\n\n![](https://i.imgur.com/UBmJl6Y.png)\n\n### 3.3 use icons that promote recognition\n\n![](https://i.imgur.com/adjt5nv.png)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/red-black-tree":{"title":"red-black-tree","content":"\n\n\nRed Black trees\nmost used current one. Used in java treemap\n\neach node is either red or black\n\nthe rules are:\n- the root node is black (optional)\n- all null nodes are _considered_ black (convention)\n- A red node may not have a red child\n- Every path from a node to a descendant null node contains the same number of black nodes\n\nThese guarantee that the longest path frm root to null (which could alternate red and black) is at most twice as long as the shortest path (which could be all black)\n\nthe tree is full up to half its height - growing at least as fast as $2^{h/2}$\n\nthe height is logarithmic in the size sinhce th tree must be complete to the depth of half the height\n\nOperations that mnodify the tree require in the worst case $O(lg\\ n)$ recolourings and (on average a constant number) and not more than three rotations\n\n## Strategy\n- do an insertio and color the node red.\n- recolor and rotate nodes to fix violation\n- there are four scenarios\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/redundancy-and-anomalies":{"title":"redundancy-and-anomalies","content":"\n# Redundancy\nwhen values are stored repetitively in database relations\n- usually in poorly designed relations\n- - potential for anomalous data to be stored\ne.g., ![](https://i.imgur.com/8RdSNZt.png)\n\n## How it arises\n- ad hoc database\n\t- flat file\n\t- spreadsheet (no contraints)\n- Poor database design\n\t- poor analysis\n\t- poorly designed ERDs (not thinkiing properly about the relationships)\n- modifications to existing systems\n\t- \"bolting on\" new attributes\n\t- schema evolution over time\n\n# Anomalies\n## Update anomaly\nAn anomaly that occurs follows an UPDATE operation\ne.g., \n![](https://i.imgur.com/fBMd8W3.png)\n\n## Delete anomaly\nAn anomly that occurs following a DELETE operation\ne.g., \n![](https://i.imgur.com/fUGVR98.png)\n![](https://i.imgur.com/yp6KdYg.png)\n\n## Insert anomaly\nAn anomly that occurs following a INSERT operation\ne.g., \n![](https://i.imgur.com/hM1VlGs.png)\n![](https://i.imgur.com/SkdKTLP.png)\nCauses the process of putting johnson in system is delayed\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/reflective-statement":{"title":"","content":"### COSC202 Reflective Statement - Jet Hughes 9474308\n#### Intro\nI was honestly not expecting this paper to be as interesting as it was. The lecture were informative and interesting, and the semester-long project was a joy to work on. My team for this project was great. The member were Myself, Brad, Will, Arlo, and Riley. We communicated using Discord and used Trello for project management. We encountered a few small issues, but nothing catastrophic, and I had some clear favorite parts of the project.\n\n#### Communication\nThe first thing we had to decide as a team was how to communicate. We agreed to use Discord. I created channels for general discussion, notes and resources, and bug discussion. The bugs channel was rarely used, but the other channel, general, was very lively, and the notes and resources channel was very useful. The notes and resources channel had quick links to the lab book, and other resources. It also had a snapshot of the project tasks and the deadline. One additional thing I added to the server that was immensely useful was the git-updates channel. I set up a gitlab-discord integration which send a message to discord every time a push was made to the repo. This integration was very useful because it made it very easy to keep up with the state of ANDIE. If I were to repeat this project, I would definitely do this again.\n\n#### Project/Time Management\nThe first thing we did once communication had been established was to delegate tasks to team members. We each selected a task that we were interested in, and the rest of the tasks were to be assigned at a later date. I think this method worked very well, as each of us was able to do something we thought would be enjoyable, and the workload was very evenly distributed. We quickly realized we would need to use a project management tool. One of the group members suggested Trello, which uses a Kanban board. Since many of us had used it before, we agreed this was a good choice.  I set up a simple Trello board with 3 lists: To-do, doing, and done. Later I added, a list for ongoing tasks like commenting and unit testing, and a list for extra features we wanted to add. We were then able to easily assign team members to tasks, and track their progress with checklists. \n\n#### Main Issues\nOne main issue was that more menial tasks like commenting and creating unit tests were left unattended to. Hiding them away in the \"Ongoing\" task list was not helpful. I think a better way of doing this would have been to add commenting and unit testing to a checklist within each task. I think we should have used checklists within tasks much more in general. My final issues were the (almost) lack of a proper extra feature. Throughout the first half of the second part of the project, almost all of our team was sick. We were able to do the Posterise, negative, and extended filters, relatively quickly. But the Area Select feature created a bottleneck, blocking the drawing and crop features. Luckily, we were able to finish the rest of the features. However, we did not have an extra feature ready. Fortunately, Arlo was able to create the pen drawing feature quickly. Looking back, we should have re-delegated the tasks as soon as we knew the assigned team member was sick. This would have enabled us to avoid the bottleneck and progress faster. I also think we could have found other things to work on while waiting for Area Select [^3].\n\n#### Highlights\nMy first and top highlight was the Posterise Filter. I decided to implement this using the K-Means algorithm. I was interested to see how a k-means could be done in Java. I was able to create a first version relatively using [this](https://stackabuse.com/guide-to-k-means-clustering-with-java/) article as a guide[^1]. I had some trouble long the way, so when I got it somewhat working I had a little-jump-around-the-room celebration. On the final day of the assignment, I realized that the centroids were not actually changing and that it was essentially using random colors. Thankfully, I was able to fix the issue of the centroids not updating. However, I am still not sure if it works as intended. In retrospect, I should have done better testing for this feature. When I saw a picture split into colors, I blindly assumed that it worked, without actually checking that it was working. If I were able to go back, I would first look at the results of other implementations first, and add more testing.\n\nAnother highlight was creating my own convolve operation class[^2]. I made this to solve the problem of negative and extended filters. I think there probably was an easier way of doing this, but I thought this method would also clean up a lot of the repeated code in the filter actions. The creation of this class went a bit smoother than the Posterise filter. I had [this](http://ramok.tech/2018/09/27/convolution-in-java/) article to use as a guide. I was able to significantly simplify their code to suit my need. However, it ran *very* slowly compared to the in-built java ConvoleOp class. I briefly considered changing it to run on the GPU using a library, but thankfully, Riley was able to speed it up by changing the RBG get and set operations.\n\n#### Conclusion\nOverall I think our project was very successful. This was reflected in our mark for part one and (hopefully) part two, and by the fact that the workload was evenly distributed across the team. The main issues were the delays of commenting, the lack of thorough testing. We had a small crunch in the final hours of the project, when we had issues with saving and exporting, but thankfully we were able to get it done.  \n\n[^1]: I just realized I forgot to reference this in the Javadoc.\n[^2]: I still don't know what to call this.\n[^3]: This would have been adding comments and testing.","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/reflective-statement-plan":{"title":"reflective-statement","content":"\n# 202 Reflective statement\n\nIntro\n- What is the project\n- who was the team\n- Overall of:\n\t- Communication\n\t- Time/Project Mangement\n\t- Main Issues\n\t- Main Non-Issues\n\nCommunication\n- Discord\n\t- Notes/resources\n\t- Webhooks\n\nProject/Time Mangement\n- Division of tasks\n- Use of trello\n- Wished for use of issues\n\nMain Issues\n- slow commenting\n- lack of testing\n- sick teamates\n\nNon-Issues\n- K-means\n- Convoluter\n\nConcusion","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/renter-cover-letter":{"title":"","content":"To whom it may concern,\n\nMy name is Jet Hughes and I have a keen interest in renting the apartment you have available at 128 Forth St.\n\nI currently live at 597 George St and have lived there for 6 months. I am looking for a new place to live because I want to move out of my studio room and into a flat with close friends. I find your flat particularly appealing because it is close to the Uni, has a nice view and looks very clean and tidy.\n\nI believe I'd be a wonderful tentant at this property — and here's why. I am employed part-time Company-X and have been working there for 2 years. I am also studying Computer Science at the University of Otago. In my free time, I snowboard, surf, and love hiking. I also enjoy reading, drawing and cooking.\n\nI am quiet and friendly, a good tenant who always pays bills on time. In my application there are references from previous landlords, my snowboard coach, and my current boss.\n\nIf you have any questions, please don't hesitate to call or e-mail me at 027 650 9548 or jethughes0@gmail.com.\n\nThank you very much for considering my rental application. I look forward to hearing from you.\n\nSincerely,\n\nJet Hughes\n\n\n\n\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/representation-and-distributing-cognition":{"title":"representation-and-distributing-cognition","content":"\nuse representation that does not require user to memorise things. \n\n\u003e \"solving a problem simply means representing it so as to make the solution transparent\" - Herbert Simon, The sciences of the Artificial\n\nmemory games make finding pairs hard by introducing rules. This often happens in computers interfaces needlessly difficult to use\n\ndepeding on how you represent a problem, you can make is easy or hard. \n\n# Working memory\nusers have a working memory (2±2 limit). You shouldn't require users to remember anything that you could put on a screen. \n\nIf something takes a lot of time. You wil get distracted, and forget something.\n\n# Naturalness principle\n- experiemental cognition is raised when the properties of the representation match the properties of the thing being represented\n\n# Dist cognition\nwhen interfaces help people disribute cognition it can\n- exourage experimentsation\n- scaffold learning and reuce errors through reduncdancy\n- show (only) differences that matter\n- convert slow calculation into fast perception\n- support chunking, especially by experts\n- increase effieciency\n- facilitate collaboration\n\ngood representation shows only relevant information and enables:\n- comparison\n- exploration\n- problem solving\n\ndeep vs shallow interface\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/requirements":{"title":"requirements","content":"\n# 1 What are they\n\n\u003e “…descriptions of how the system should behave, application domain information, constraints on the system’s operation, or specifications of a system property or attribute.\ufffd\ufffd?  - Kotonya and Sommerville, 2001, p. 6\n\n\u003e “…a statement of need, something that some class of user or other stakeholder wants.\ufffd\ufffd? - Alexander and Stevens, 2002, p. 8\n\nRequirements are something an information system should do, or some constraint it should adhere to\n\nThere two types of requirements. Functional requirements specify what the system should do. And constraints, which limit the way in which the system should do those things.\n\n\n# 2 How are they created\n\nRequirements should be developed using the [requirements-engineering](notes/requirements-engineering.md) process. This process defined a robust way to develop requirements. It has three main steps: discovery, documenting, and maintenance. \n\nRequirements can be defined using the [FURPS](notes/furps) framework. However, this is usually overkill.\n\nRequirements can be communicated through natural language, [models](notes/models.md), [prototyping](notes/prototyping.md), \nor even formal mathematical notation\n\nGood requirements should adhere to  [these](notes/requirements-guidelines.md) guidelines.\n\nEvery development process has a different apporach to guidelines. ... #unfinished\n\n# 3 What causes bad requirements\n\n- domain and/or problem not well understood\n- misnderstandings\n- continually evolving or incomplete/abmiguous/inconsistent/overlapping/unimplementable requirements\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/requirements-document":{"title":"requirements-document","content":"\nThe requirements document is used to keep track of the requirements of a system. It hold information such as: constraints, the environment of the system, information about the domain of the system, and constraints\n\nThe requirements document should include:\n- Information about the services and functions that the system should provide (functional requirement)\n- The constraints under which the system must operate\n- The overall (emergent) properties of the system\n\t- e.g., type of server, amount of memory, etc\n- The system's environment including related systems\n- Application domain information\n- Constraints on the development process\n\t- e.g., [agile-development](notes/agile-development.md)\n","lastmodified":"2022-12-19T01:23:07.375075069Z","tags":null},"/notes/requirements-elicitation":{"title":"requirements-elicitation","content":"\n- A process by which analysts gather information on what the system should do, from as many sources as possible. \n- All methods are effective but some are more efficient than others. \n- Different methods can be combined for more comprehensive fact-finding.\n\n# Characteristics of good Analysts\nImpertinence ⇒ question everything, assume nothing \nImpartiality ⇒ find the best solution to the business problem \nRelax ⇒ constraints assume anything is possible but eliminate the infeasible \nAttention ⇒ to detail be precise, comprehensive, and consistent \nReFraming ⇒ be creative and “think outside the box”\n\n# Stakeholders\n- Internal stakeholders — people within the organisation, e.g., employees, volunteers, ….\n- External stakeholders — people outside the organisation, e.g., suppliers or shipping companies.\n- Operational stakeholders — people who regularly interact with the system, e.g., accountants, factory supervisors, customers, ….\n- Executive stakeholders — people who don’t directly interact, but use the information or have a financial interest, e.g., senior managers, board of directors, regulatory authorities, ….\n\n![stakeholders diagram|300](https://i.imgur.com/W1ivdjH.png)\n\n# Information Gathering\n- Existing Information\n- Interview and discussions\n- Observew and document business process\n- Prototypes\n- Questoinnaires\n- Vendor Solutions\n\n# Validation of Requirements\n- Make sure gathered information is correct. \n- Structured walk-through: \n\t- effective way to implement quality control early in project \n\t- verify and validate system requirements \n\t- review of findings from investigation \n\t- review of models based on findings \n- Project manager responsible for system quality. \n- Schedule review soon after document creation. \n- Review conducted by experienced analyst and stakeholders, presented by analyst.\n\n# Requirements in Agile Methodologies\n\n- Requirements should be decoupled: \n\t- must be as independent as possible \n\t- identify which requirements to implement not when to implement them \n- Every iteration includes a requirements collection and prioritisation activity: \n\t- important requirements are implemented next \n\t- less important requirements held to later iterations, or not implemented at all \n\t- [scrum](notes/scrum.md): product backlog \n\t- [UP](notes/unified-processes.md): inception \u0026 elaboration phases \n\t- [xp](notes/extreme-programming.md): user stories\n\n[interviewing](notes/interviewing.md)\n\n[participant-observation](notes/participant-observation.md)\n\n\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/requirements-engineering":{"title":"requirements-engineering","content":"\n\u003e “…to cover all of the activities involved in discovering, documenting, and maintaining a set of requirements for a computer-based system.�? - Kotonya and Sommerville, 2001, p. 8\n\nRequirements engineering is a robust methodology for the development of requirements. It is made  up of three main steps.\n\n\n# 1 Discovery\n\nThis is where you identify all the requirments of the system. [requirements-elicitation](notes/requirements-elicitation.md) is done here. Many techniques such as [interviewing](notes/interviewing.md), [participant-observation](notes/participant-observation.md), [prototyping](notes/prototyping.md), and more are used here.\n\nThis is also where you should learn about the domain of the system and the stakeholders\n\n# 2 Documenting\nThis is where the requirements are specified and refined, and models and documents are created. All the requirements are compiled into a [requirements document](notes/requirements-document).\n\n# 3 Maintenance\nThis occurs throughout development and is primarly focuses on managing changes in the environment of the system. \n\nIt important to manage what is being discovered and documented. This allows you to keep the client updated and manage scope creep.\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/requirements-guidelines":{"title":"requirements-guidelines","content":"\n- understandable by all stakeholders including the users\n- non prescriptive i.e., should define what, and not how\n- correct as judged by user\n- complete. i.e., there should be nothing missing from each _individual_ requirement nor the _compete set_ requirements\n- consistent. i.e., They should not contradict each toher\n- unambiguous. i.e., There should be only one one possible interpretation\n- also\n\t- precise, concise, cohesive, feasible, relevant, up to date, testable, traceable\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/research-on-the-reciprocal-mechanism-of-hybrid-governance-in-blockchain":{"title":"research-on-the-reciprocal-mechanism-of-hybrid-governance-in-blockchain","content":"\nlink: https://doi.org/10.47363/JESMR/2021(2)121\n\n# Summary\nThis paper investigates the idea of reciprocal blockchain governance. It identifies two major processes of blockchain governance: \n- governance _of_ the BC – where stakeholders, and social market evaluate performance of BC and make improvements. This occurs off-chain\n- governance _by_ the BC –  applying consensus protocols, and node control using BC as a medium. Occurs on chain\n\nThey propose that neither on-chain governance-by-BC nor off-chain governance-of-BC are sufficient and that these methods should be combined and used to inform each other. They note that this method is most effective within a partially decentralised consortium blockchain.\n\n# Extracts\n\n\n\"A significant amount of research and development still remains before hybrid governance is achieved. However, the difficulty surrounding the task of managing rapidly developing technology can be alleviated best by incorporating technological advancements into the governance structure.\"\n\n![Table 2: Comparisons among public blockchain, consortium blockchain and private blockchain|300](https://i.imgur.com/zbeDV82.png)\n\n# Notes\n\nwhat is contingency theory \n\n# Related\n[[Now the Code Runs Itself — On-Chain and Off- Chain Governance-of- Blockchain Technologies]] \n- On-chain governance refers to rules and decision-making processes that have been encoded directly into the underlying infrastructure of a blockchain-based system as the ‘rule of code’, sovereignty asserts itself through off-chain mechanisms during the state of exception. \n- (Reijers et al., 2018)\n\nBlockchain Governance: What We Can Learn from the Economics of Corporate Governance \n - Blockchain governance includes the definition of stakeholders, how the consensus mechanism distributes endogenous bargaining power between those stakeholders, the interaction of exogenous governance mechanisms and institutional frameworks, and the needs for bootstrapping networks. \n - (Allen \u0026 Berg, 2020)\n\nResearch on Mechanism and Method of Blockchain Governance \n- Three content levels of blockchain governance: consensus protocol governance, resource governance and rule governance. Three methods of blockchain governance: onchain governance, off-chain governance and hybrid governance. (Chao, 2020)\n\n[[Defining Blockchain Governance — A Framework for Analysis and Comparison]]\n- A blockchain governance framework that defines the governance of a blockchain as a combination of six dimensions (formation and context, roles, incentives, membership, communication and decision making) and three layers (off-chain community layer, off-chain development layer and on-chain protocol layer). \n- (Pelt et al., 2021)\n\n[[Decision Problems in Blockchain Governance — Old Wine in New Bottles or Walking in Someone Elses Shoes]]\n- This research studied blockchain systems through the lens of six decision problems emerging from blockchain governance: problems of demand management, data management, system architecture design and development, membership, ownership disputes, and transaction reversals. \n- (Ziolkowski et al., 2020)\n\n[[Blockchain Governance—A New Way of Organizing Collaborations]]? \n- The importance of codifiability and verifiability as two transactional characteristics that have an important impact on the efficiency of blockchain governance \n- (Lumineau, Wang, \u0026 Schilke, 2020)\n\nBlockchain Governance and The Role of Trust Service Providers: The TrustedChain Network \n- The essential conditions are confidentiality of transactions and long-term preservation of data to thrive and accomplish complex tasks in an effective and reliable way for blockchain networks. \n- (Atzori, 2017)\n\n[[The Generic Blockchain Ecosystem and its Strategic Implications ]]\n- This paper identified three strategic implications where blockchain is fundamentally different from prior approaches: governance, trust, and openness. \n- (Riasanow, Burckhardt, Soto Setzke, Böhm, \u0026 Krcmar, 2018)\n\n[[Governance in the Blockchain Economy — A Framework and Research Agenda]]\n- It discusses the blockchain economy along dimensions defined in the IT governance literature: decision rights, accountability, and incentives. \n- (Beck et al., 2018)\n\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/round-trip-engineering":{"title":"round-trip-engineering","content":"\nThis is the process of translating models into code, or vice versa. For example, ERDs to SQL, or UML to Java. The main idea is to keep the code and the diagrams sematically equivalent\n\nConverting diagrams to code is more common than the opposite, but both do occur. This is [reverse engineering](notes/uml-java-reverse-engineering.md) \n\nA model driven architecture is when the code is completely derived from diagrams. This tends to be quite difficult. A much easier approach is only using foward engineering to generate skeleton code.\n\n[uml-java-forward-engineering](notes/uml-java-forward-engineering.md) is easier with SQL and ERDs than other types as these don't consider behaviour, so the mapping is more simple than with UML and Java.\n\nAlthough this idea sounds good, it is not practical. The main argument is that code is part of the design anyway - Code is just a detailed form of a model.\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/running-in-person-experiments":{"title":"running-in-person-experiments","content":"\nin person\n- planning\n- execution\n- analyzing\n\nhigher \"bandwitdh\" of engagement\n\n# Make clear goals\n- scope\n- purpose\n\t- what you hope to learn\n- hypothesis\n\t- make a prediction\n- schedule and location\n\t- use an approprate and relevant location\n- participants\n- scenarios\n\n# Plan out steps\n- questions\n- data to be collected\n- set up\n- roles\n\t- e.g., facilitator, recorder\n\n# Create concrete tasks\nwrite them down\n\ne.g., ![example 1](https://i.imgur.com/FLApe7z.png) ![example 2](https://i.imgur.com/vsEOKjt.png)\n\n# Ethical considerations\nparticipants can feel pressured\n\nget informed consent\n\nremind them that your testing the site.. not them\n\npaticipants feel good about finding issues, not bad about not being able to do something\n\n# Experiement details\n- order\n\t- e.g., start simple, shuffle order\n- training\n\t- depends on how th real system will be used\n- DNF\n\t- set a time limit\n\t- maybe provide help if needed\n- pilot\n\t- iron out the kinks in the study design\n\t- can also find very obvious issues that should be addressed so the actual participants aren't \"wasted\"\n\n# capturing results\n- note down critical incidents\n\t- aha moments, stores to share, big problems\n- record video\n\t- lets to grab moments easily and share them\n- screen recording\n\t- depends if you are interested on their expressions or th interface\n- interupptions\n\t- yes/no\n\t- provide help in necessary\n\t- think aloud\n\t\t- need to know what users are thinking not just what they are doing\n\t\t- ask users to talk while performing tasks\n\t\t\t- what they are;\n\t\t\t\t- thinking\n\t\t\t\t- trying to do\n\t\t\t\t- any questions as they work\n\t\t\t\t- reading\n\t\t-  record or take notes\n\t\t- prompt them to keep talking\n\t\t- decide ahead of time about which things to help with\n\t\t\t- keep track of things you  helped with\n\t\t- will thinking alout give the right answers\n\t\t\t- not always\n\t\t\t- avoid specific questions\n\t\t\t- if you ask a question, people with always give an answer even it it has nothing to do with the facts\n\t\t\t- talking while doing the tasks may change how you do the task\n\n# Greeting participants\nwelcome, explain setup, scenarios,\n\n# collecting data\n- process data\n\t- observations (qualittative)\n- bottom line data\n\t- numbers\n\t- i.e., dependent variables\n\n# measuring bottom line usability\nuseful:\n- time requirements\n- success/fail\n\t- define in advance what this is\n- compare speed or # of errors\n\ndont combine with think aloud\n\n# debrief\ntell them what you goals are.\n\nlearn more holistically what they are thinking\n\n\n\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/running-web-experiments":{"title":"running-web-experiments","content":"\nrandomly split traffic to website between two versions.\n\nthen collection metrics about each version\n\nweb makes it easier to try out something new, and test if it is effective.\n\n\nsmall changes can have a significant effect. \n![example changes](https://i.imgur.com/fhmWtbh.png)\n\napplication for more than just websites.\n\nour expectations are often wrong.\nsmall chagnes (e.g., wording on a button) can have large impacts\n\n# Effective principles\n- run experiments 50 50\n\t- novice experimenters run 1% eperiments\n\t- to detect an effect you need to expose a certain number of users to the treatment (baed on power calculations)\n\t- fastest to run 50 50\n- ramp up and auto abort\n\t- start at 0%\n\t- design may be disastrous\n\t\t- bugs, other issues\n\t- slowly increase until 50%\n- pick a meaningful yardstick\n\t- avoid measures things because they are easy to measure\n- run it for long enough\n\t- sometimes first use is not the same as what people are familiar with\n- rules for random assignment\n\t- consistent - same person should see same interface\n\t- durable - truly and compelely random\n\t- independent \n- challenges and opportunities\n\t- larger theories are still hard\n\t\t- i.e., interpretation\n\t- using multiple methods together helps\n\t\t- whole is greater than sum of parts\n\t\t- combine iwth eg. in person studies\n- role on designer in online age\n\t- creating alternatives\n\t- people are often to sure of themselves\n\t- rapid experimentation means the first release is (sometimes)  less important\n\t- fail fast","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/scrum":{"title":"scrum","content":"\nIntense effort involving entire team for defined period of time\nProduct backlog - prioritied list of requirements\nProduct owner - cllient stakeholder who controls backlog\nScrum master - project manager\n\n# 1 Scrum sprint\nA time controlled mini-project to implement part of the system\n\n![](https://i.imgur.com/R3biN9h.png)\n\n# 2 Scrum  practices\nscope of sprint is frozen\n - can reduce\n - cannot expand\ntime period is kept constant\n\ndaily scrum meeting\n- what have you done since last scrum\n- what whill you do by next scrum\n- what kept you or is keeping you from compeleting your work\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/security":{"title":"security","content":"\n# Growing concern\nsince there is more software, dependencies, and they are getting increaingly complex the \"surface area\" of risk is growing.\n\nSpeed of development is more important than security.\n\nSoftware systems involve a large number of components, and this means they are more likely to have bugs.\n\n# Elements of Security\n## Confidentiality\n- Protecting data from being stolen.\n- Usually contered using encryption and/or isolation of processes\n- Encyption is not time proof.\n\t- computational power is increasing\n\n## Integrity\n- Attacks on data may aim to decieve users\n- countered using checksums\n- attacks on code are often *privilege escalation*\n\n## Availability\n- DDoS\n- countered by hosting in multiple countries\n\t- use CDNs (content delivery networks) for data objects\n\n# Dependencies\n- vulnerabilities in [libraries](notes/libraries.md) extend to your code. \n- You should\n\t- determine and examine your software bill of materials (SBOM)\n\t- subscribe to security alerts\n\t- plan to rapidly rebuild and re-release your software\n\t- use tools to scan software for know problems\n- However, still use them when appropriate\n\n# Non-Validation of user input\n- Assume user input is malicious\n- Prevent SQL injection attacks\n- Input from many sources\n\t- user docs\n\t- config files\n\t- env variables\n\n# Injection Attack\n## Example:\n```java\nString query = \"UPDATE pw='NEW_PW' WHERE user='user'\"\n```\n\nmalicious input: Bobbie' OR 1=1 wil change all passwords.\n\nuse SQL prepared statements or secure DB abstraction\n\nbuffer overruns also inject attacker's data:\n- e.g., C array that too short for data copied in from network\n- attacker overruns end of the C aray: maybe injects code.\n\n# resolving problems\n![](https://i.imgur.com/8YBGRPq.png)\n\n# Threat model\n- should character what you  want to protect against\n- writin standalone software to be used by one person\n\t- typially dont have to worry about malicious attacks (on self)\n- software on a multi-user operating system\n\t- do need to think about cross-user data leaks\n\t- all OSs are multi user\n- software that has network availability\n\t- your software can and likely will be attacked\n- targeteted by state-sponsored teams? Good Luck...\n\n# sec in dev\n- - security isn't a single requiremtn you can  tick off\n\t- it needs consideration throughtout the whole system\n\t- it is a cross-cutting concern\n\t- it is hard to retrofit\n- notion of security engineering is useful\n\t- affects design descision fromt the outset\n\t- changes how code is written and reviewed\n\t- add a specific type of testing to include\n\t- needs examination of how users interact with software","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/selenium":{"title":"selenium","content":"\nWebdriver: implements web based tests\n\nIDE: record/playback interactions with web browsers\n\nYou can mix automated and interactive options.\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/sequence-diagrams":{"title":"sequence-diagrams","content":"\n\nequence diagrams document a *sequence* of particpant interactions required to carry out a use case\n- actor \u003c-\u003e object\n\t- actors are outside the system\n\t- objects are otside the system\n\t- via a method call\n\t\t- might get a result\n- object \u003c-\u003e object\n- lifetime of interactions and objects\n\t- when they are created updated destroyed\n- time is a key aspect\n\t- [use-case-diagrams](notes/use-case-diagrams.md) dont have order\n\nThese diagrams are:\n- detailed, low level, bottom up\n- behavioural diagram\n\t- not structural\n- common in industry\n\t- along with class diagrams\n- need to be designed and read alongside corresponding class diagrams\n\t- e.g., class diagrams with inform sequences diagrams and vice versa\n\t- back and forth process\n\n\nGeneral overview example: ![annotated example](https://i.imgur.com/1myG3rU.png)\n- time goes from top to bottom\n\t- however no specific time units\n- can have actors as participants\n\t- but not usually\n\t- existence of actor usualy indicates a sequence is owned by a use case\n- interactions are indicated by messages (solid arrows)\n\t- e.g. actor to main menu\n\t\t- actor clicks a button\n\t\t- menu reacts\n\t\t- etc\n\t- messges are synchronous\n\t\t- i.e., thing sending message must wait for result\n\t- always method calls (or something that equated to a method call)\n- participants are supposed to be instances of classes\n\t- however we are usually more interested in the class name\n- the dashed lines are lifelines\n\t- can also be solid\n\t- basically indicate the existenc of something\n\t- e.g., Thingform gets destroyed, thingfinder and thing remain throughout\n- the rectangles (activation bars) indicate when an a thing is doing somethin \n\t- caused by incoming message\n\t- ended by a return\n\t- these can have sub activations\n\t\t- i.e., nested\n\t- these can be self-activations\n\t- implcit: not all methods return something\n\nrelevant slide:\n![300](https://i.imgur.com/txdVhrV.png)\n\n\n# Messages\n![example](https://i.imgur.com/XedVmng.png)\n- direction\n\t- \u003c- or -\u003e\n\t- easier to under stand if most messages are -\u003e\n\t- however this is not always possible\n\t\t- same object used by multiple other objects\n\t\t- an object calls back to the object that called it\n- can be conditions (guards) ![example](https://i.imgur.com/yWTcD1F.png)\n\t- only sent if condition is true\n\t- able to approximate if-then-else using multiple branches with exclusive conditions\n\t- this is better done in activity diagram\n- looping messages ![example](https://i.imgur.com/tcFZ4bb.png)\n\t- an asterisk idicated looping\n\t\t- repeat message until condition id false\n\t\t- send messge to each object in a collection\n\t- may also be better in activity diagram\n\n# Interaction frames (UML 2.x)\n![example](https://i.imgur.com/V1Jhnd2.png)\n- loop frame\n\t- any kind of loop\n\t- replaces * notation\n- opt frame\n\t- optional or conditional processing\n\t- can replace [] notation\n- alt frame\n\t- if-then-else\n\t- can replace [] notation\n\none thing that can cause complications is \n- when something can a top level loop which is waiting for input.\n- a cancel anytime option\n\n\n# Basic process of creation\n\n- identity participants of a use case (dont always need to use a use-case diagram)\n\t- use use case to create first version of the activity diagram. as you implement the code update the class and activity diagrams\n- identify messges required to carry out use case\n- for each message\n\t- it is always sent\n\t- is it sent conditionally\n\t- is it sent multiple times\n- assemble messages in correct sequence and attach to relevant lifelines/activations\n- add returns where necessary\n\n# Case study ATM\n\nbank is developing a new ATM system for their customers\n\nscope and requirements\n- each customer has one or mor accounts\n- transaction types are\n\t- view balance\n\t- withdraw cash\n\t- deposit funds\n- the customer can cancel at any point before final confirmation\n- customer authenticates by inserting bank card and entering four digit pin\n\nprocess\n- choose account\n- choose amount\n- check customer funds\n- check amount in cash dipenser\n- results\n\t- withdraw amount\n\t- dispense amount\n\t- remind user \n\n![use case diagram |500](https://i.imgur.com/O2mE91J.png)\n\nthis diagam is probably too general for this case\n\n![class model](https://i.imgur.com/3kX68dm.png)\n\nnote navigability of domain\n\nsequence diagram\n\n- ![part 1](https://i.imgur.com/PJJBZav.png)\n- ![part 2](https://i.imgur.com/M3jRM8g.png)\n- ![part 3](https://i.imgur.com/PhCYWsy.png)\n- ![part 4](https://i.imgur.com/L0h4nb8.png)\n\n\n\n\n[full diagram](https://blackboard.otago.ac.nz/bbcswebdav/pid-2894257-dt-content-rid-18429333_1/courses/INFO201_S1DNIE_2022/2022/lectures/lecture_13_atm-withdraw-sequence-full.pdf)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/sequential-circuits":{"title":"sequential-circuits","content":"\n\n[combinatorial-logic-circuits](notes/combinatorial-logic.md) always  produce the same outputs given the same input. Sequential curcuits on the other hand, produce different outputs depending on past history and the inputs. \n\n![combinatorial vs sequential|200](https://i.imgur.com/GbfAZ4c.png)\n\nThere are two main types of sequential circuit\n- Sychronous\n\t- this is when changes of state occur in time with a clock cycle\n\t- changes of input occur between clock pulses\n\t- state changes occur at the clock pulses\n- Asynchronous\n\t- state changes occur as the inputs occur\n\t- event driven\n\n# Main circuits\n## SR latch\nThe set reset latch is the most basic and simple sequential circuit. It is anychronous\n\n![simple sr latch with NOR gate|200](https://i.imgur.com/ay6uk33.png)\n\nThe ouput is remembered and changed basic on previous output. \n- When S (set) is pulsed Q is one and Q̄ is zero\n- When R (reset) is pulsed Q is set to zero and Q̄ is set to one\n\n## D Flip FLop\n\n![D flip flop with NAND gates|200](https://i.imgur.com/XVnK2s6.png)\n\nThe D flip flop is basically an SR connected to a clock. Making it synchronous.\n\nInstead of switching when you set or reset. The outputs change when the clock pulses. Depending on the value of the D(ata) input. \n\n[circuit simulation](https://tinyurl.com/2cafc57y)\n\n## T Flip Flop\n\n![T Flip Flop with NAND and NOR gates|200](https://i.imgur.com/CZd3aYK.png)\n\nThe T flip flop swtiches between the two outputs Q and Q̄ when\n- T(oggle) is held high\n- And the clock is cycled (from off to on to off)\n\n## JK Flip Flop\n\n![JK flip flop diagram|200](https://i.imgur.com/dFZGyMh.png)\n\nThe JK flip flop is a combination of the d flip flop and the t flip flop. \n\n| J | K | Result    |\n|:--|:--|:----------|\n| 0 | 0 | No Change |\n| 0 | 1 | Set       |\n| 1 | 0 | Reset     |\n| 1 | 1 | Toggle    |\n\nIt can be used as a toggle *and* as a d flip flop.\n\n![jk flip flop simulation](https://tinyurl.com/22pvm3sf)\n\n## Synchronous Counter\n\n ![simulation](https://tinyurl.com/25olydjb)\n ![slide|300](https://i.imgur.com/81LS7HL.png)\n\n\n## Video demonstration of some sequential circuits\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/I0-izyq6q5s?start=84\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/set":{"title":"set","content":"\nlinks: [java docs](https://docs.oracle.com/javase/7/docs/api/java/util/Set.html) for set interface\n\n\u003e A collection of items with no repetition allowed\n\nHow do we want to be able to use them? \n- We want to be able to add to them\n- And Remove from them\n- And check if it contains something\n\nThis gives us the methods:\n- `Add(x)`\n- `Remove(x)`\n- `Contains(x)`\n\nBinary search trees are data types that supprts this data type when there is an ordering on the underlying elements\nA [binary search tree](notes/binary-search-tree.md) can be used to implement a set when there is no order. [hash sets and hash maps](notes/hash-map.md) can be used when there is order.\n\n# 1 Implementations\n## 1.1 Basic set\n\nSimplest way to implement a set is using an array.\n\n[Code for basic set](https://blackboard.otago.ac.nz/bbcswebdav/pid-2890167-dt-content-rid-18354837_1/courses/COSC201_S1DNIE_2022/BasicSet.java)\n\n- Contains: Simple linear search\n- Add: Check if it is present, if not add it to the end\n- Remove: Delete the element and replace it with the last element\n\t- This leaves empty elements at the end.\n\t- So we keep track of the size\n\nAll three operations are $O(n)$ as they must all iterate over the entire set\n\n## 1.2 Ordered set\n\nA set with some underlying \"natural\" order. E.g., dictionary order for `string` objects.\n\nWe would also like to be able to do an in order traversal of an ordered set\n\nIf the set is static\n- store using sorted array\n- use binary search to find elements --\u003e $O(lg\\ n)$\n- traverse by incementing a counter --\u003e $O(lg\\ n)$ to init then $O(1)$\n\nBut then:\n- `Add(x)` Insert `x` if its not already present, so we start a search which is fine, but then insertion is $O(n)$ \n- `Remove(x)` find `x` if present, then move eyerthing beyond it back over the top --\u003e $O(n)$\n\nThis is fine if we dont expect to use the dynamic operations a lot. \n\nAnother approach might be to maintain a `main` array and a subsidary `add` and `remove` arrays and only periodically do the updates to the main array. but this gets complicated very quickly\n\nA better way of doing this is using a [binary search tree](notes/binary-search-tree.md) \n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/shell":{"title":"shell","content":"\n- start and stop OS processes\n- used to control OS\n- connect output of one OS process to input of another process -\u003e this is the idea of Unix pipes\n- manage environment variables: pass params to programs\n- parse and evaluate command line instructions from user\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/show-system-status":{"title":"show-system-status","content":"\nThis is the first of neilsens ten usability heuristics. fr\n\n- feedback depends on response time\n\t- \u003c1s just show outcome\n\t- ~1s feedback that activity is underway\n\t- \u003e\u003e1s show fractional progress time \n\n- 0.1 seconds --\u003e feels instantaneusly\n- 1 second --\u003e about the limit for flow to be uinteruippted\n- 10 seeconds --\u003e the limit for keeping users attention\n\nwhen:\n- when action is requried\n- show storage space\n- making changes\n- next steps --\u003e user input required\n- completion --\u003e some task has finished\n\n![](https://i.imgur.com/QzHRh9Z.png)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/smart-contracts":{"title":"smart-contracts","content":"\nCode than can be executed automatically on the blockchain.\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/software-architectures":{"title":"software-architectures","content":"\n\n\\# of pieces?\n- one integrated piece\n- a few distinct components\n- many distict components\n\ndoes it run:\n- on one machine\n- spread across multiple machines\n- in the cloud\n\nthese consdier ations dtermine the structure of the software we create\n\nthese have changed over time. from monolithic to distributed ![changes of distribution](https://i.imgur.com/QAxVwgn.png)\n\n## Monolithic architecture\nsystem includes all relevant code in one executable\n- e.g., UI, business logic, data management\n- self-contained\n- no significant separation of reponsibilities\n\neasy to deploy,  awkward to upgrade.\n- widely spaced \"big bang releases\"\nusually only seen in legacy systems now\n\n## service oriented architecture\nhttps://www.ibm.com/cloud/learn/soa\n\n## Separation of reponsibilities\npartition systems into logically separated parts. e.g., UI, business rules, data access, utilities\n\neasier to upgrade\n\neach part can be deployed ina different location\n\neach part is more cohesive\n- related code all in one place\n-  unrelated code cleanly separated\n- well definec interactions between parts\n- easier to design, devleop and maintain\n\ncan have \"fake data\" etc for development\n\n## Generic (old) info sys architecture\n![front middle back end](https://i.imgur.com/oPPMVfz.png)\n![client server](https://i.imgur.com/46LHAyw.png)\n\nthis is limiting and old. based more of hardware than software.\n\n## modern system example\n![modern system](https://i.imgur.com/uLVaVbQ.png)\n\n## Microservices\neverything is a service\n- APIs that can be called over the internet\n- e.g. product service, customer service\n\nsmall cohesive units of code\n- performs a single function\n- each with their \"own\" data\n\t- not necessarily its own database\n- as autonomous as possible\n- independent and effectively disposable\n\t- very scalable\n\t- auto matic load management\n- can run many redundant instances concurrently\n\n\nA system is a collection of services\n\nmost common implementation architecture for modern distributed information systems and web apps\n\n## serverless computing\ntradtional web app deployment usually still involves one or more identifiable servers\n- includes microservice baed aps\n- server may be virtualised\n- generally require per sserver configuration\n\nserverless eliminates the \"server\" concept\n- just deploy code into the cloud\n- no server config needed\n- a form of *utility computing*\n- e.g., google app engine\n\n## Function as a service\n\nlogical extreme of serverless computing\n\ndeploy individual functions into the cloud\n- no real concept of a \"app\"\n- fits well with microservice acrchitecture\n- very lightwright - fast and scalable\n- application logic only ⇒ dont store any data\n\ncomponentised highly distributed software\n\nideal for on-demand computing\n\ne.g., AWS lambda, google cloud functions, microsoft azure functions etc\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/software-licensing":{"title":"software-licensing","content":"\nWhat does it mean for people to use your software. What responsitilities do you have\n\ncommon perception: open source versus commercial\n\n- cost of aquiring source code\n- avalability of softrwares source code\n- restrictions on use of software source code\n\ncommercial software is often closed source\n- nothing stops paid for software having visible source \n\n# Why add them\n- to choose how you code can be used\n\t- deny open permission for other to reuse you code\n\t- ensure that those using your code credit you\n\t- controlling commercial use\n- protect yourself from legal risks\n\t- licensing will make your intentions specific\n- code with no license: author's copyright holds!\n\t- recall this default discussed in academic integrity policy\n\n# Free\n- Free as in freedom\n\t- reffered to as 'free as in speech'\n\t- often less ambiguous term 'libre' is used\n- Free as in no cost\n\t- also referred to as 'free as in beer'\n\t- less ambiguous term 'gratis'\n- \"Free software\" potentially means either or both\n\n# copyleft\ncopyleft licences add their requirements to derivatives\n\nfirst was GNU general public license (GPL)\n- four freedoms: run, study, share, and modify software\n- using of GPL software requires your softwarw to be GPLed too\n- FYI linux and the GNU Compiler Collection are GPLed\n\nlesser GPL: can be used in closed source\n- but modified LGPL components must be released LGPL\n\n# Creative commons\nallow selection of facets\n- all CC licences include attribution of author -**BY**\n- athors can choose to disallow commercial use -**NC**\n- derivative works allowed unless marked no-derivatives-**ND**\n- derivatives allows? can require (viral) share alike-**SA**\n\nAlso CC0 \"no rights reserved\" release to public domain\n\nCC-licenced content you may have used recently\n- code of track exchange sites licenced by CC BY-SA\n- cosc202 lecture notes are released by CC BY-NC-SA\n\n# use unambiguous open source teminology\navoid  just saying 'free open source software'. potentially unclear what notion of 'free' is in use\n\n- FLOSS - free libre open source software\n\t- clear in covering both types of 'free'\n\nviral licencing - may not be interpreted 'libre' free. The licences impose restrictions on use. even if those restrictions are net beneficial\n\n# software dist. without source code\n- freeware - software is free\n- adware - software is supported by advertising\n- shareware - software requires eventual payment\n- retail software - software required up-front payment\n\nif selling software apply a licence\n- need to think about consumer protection laws\n- likely can get 'cookie-cutter' lcences that you can customise\n- seek legal advice\n\n# dual licensing\nfree, libre, open source can be multiply licenced\n- e.g., FLOSS for non-commercial use\n- but commercially licenced otherwise\n\nopen source approaches have benefits:\n- potentially many eyes on code checking for security flaws\n- avoid lock-in to opaque commercial implementations\n\ncan licence different software components differently\n- e.g., closed source MacOS runs over open source Darwin\n\n# How to add licences into code\nproject should include complete lcence text: add file LICENSE in top-level project directory\n\nsafest to also add short licence comments to every file\n- better survives files being copied to othe projects\n- e.g., should the license file get lost accidentally\n\nGit Hub and simiar bring licencing into the main UI. THey assist lifting licence informatio as searchable metadata. search engines like google iamges can scan for licences\n\n# Incompatibility\nconsider developiing software that combines two FLOSS code based that have differnce code licences. It may be impossible to satisfy both licences simultaneously. In these cases the licences are said to be incompatible.\n\n# software patents\ngenerally 'no'. these create headaches. NZ does not permit them\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/soren-kiekegaard":{"title":"soren-kiekegaard","content":"\nFather of existentialism\n\n\"Anxiety is the dizziness of freedom\"\n\n# Religion\n[078-marx-and-kierkegaard-religion](notes/078-marx-and-kierkegaard-religion.md)\n\nThe function of religion is to organise a commitment to a particular way of life\n\nDisagreed with [marx](karl-marx)'s opinion that \"religion is the opiate of the masses\"\n\nLoss of the individual\n- lost in infinte\n- lost in finite\n\nHe thought the best way to avoid these states was to take a \"leap of faith\" (toward religion), and that the bible was a system for bringing about the highest form of us an an individual\n\n# Anxiety\n[079-kierkegaard-anxiety](notes/079-kierkegaard-anxiety.md)\n\n\"Anxiety is the dizziness of freedom\"\n\n\"The biggest danger, that of losing oneself, can pass off in the world as quietly as if it were nothing; every other loss, an arm, a leg, five dollars, a wife, etc. is bound to be noticed.\"\n\n\"Anxiety may be compared with dizziness he, whose eye happends to look down into the awning abyss becomes dizzy. But what is the reason for this? It is just as much in his own eyes as in the abyss. Anxiety is the dizziness of freedom.\"\n\nPeople can be lost in the finite or in the infinite. When we are balancing between the infinite and the finite we experience this anxiety, which imbues a sense of dread. After dread comes despair. Despair is a sickness of the spirit, and is often unnoticable. \n\nPeople try to \"hide\" from this despair by attaching themself to something \"earthly\". This is similar to Kant idea of outsourcing things from what is enlightenment. \n\nWhen we are experiencing anxiety we are coming closer to our true self.\n\n\"What I really lack is to be clear in my mind what I am to do, not what I must know what matters is to find a purpose, to find a truth that is true for me. to find the idea for which I am willing to live and die. That is what my soul thirst for as the african desert thirst for water\"","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/ssh":{"title":"ssh","content":"\n# What is it\ntelnet was a set of protocols for one xomputer to control another. This was not secure\n\nTelnet then spawned secure shell (SSH). This encytped\n\nThe computer to be controlled needs to be running an SSH server. \n\nTo connect to and control the device with the server we need to install SSH software on the device we will use to connect\n\nto login: ssh username@ip-address then enter password\n\n# Where is it used.\n\nWhile users access a server by TLS or HTTP(S), admins access a server using SSH via the command line. \n\nIt can also be used for automated operations. Usually this will also invole file transfer using SCP for SFTP\n\n\n0 juyt \n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/stages-of-learning":{"title":"stages of learning","content":"\n# Stage one\nDont know anything. cant learn independently. any activity is unbearable. lots of study and memorisation. trying to pass the  [[nope-threshold]].\n\n# Stage two\ncapable of engaging with basic content. transition from 2-3 the epiphany moment: you realize that japanese isn't so difficult. \n\n# Stage three\nimmersion is enjoyable. learning is a byproduct. \n\ni dont (yet) need to get further than this.\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/stakeholders":{"title":"stakeholders","content":"\nPeople with interest in successful implementation\n\nthree primary groups\n- users\n- clients -\u003e pay for and own systems\n- technical staff -\u003e ensure system operation\n\nother classifications\n- Internal stakeholders — people within the organisation, e.g., employees, volunteers, ….\n- External stakeholders — people outside the organisation, e.g., suppliers or shipping companies.\n- Operational stakeholders — people who regularly interact with the system, e.g., accountants, factory supervisors, customers, ….\n- Executive stakeholders — people who don’t directly interact, but use the information or have a financial interest, e.g., senior managers, board of directors, regulatory authorities, ….\n\nAnalyst should id every type of stakeholder during [systems-development-life-cycle](notes/systems-development-life-cycle.md)\n\n### 0.2 users as stakeholders\nhorizontal user roles -\u003e information flow across dept's\n- ?\n\nvertical user roles -\u003einformation needs of staff, middle management, senior execs\n- business users perform day to day operations\n- information users need current information\n- mangement users need summary information\n- executive users need strategic information\n- external users may have access to the systems\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/storyboards":{"title":"storyboards","content":"\nmockup of user scenarios\n\nproblem with sketches\n- hard to capture dynamics of interation over times=\n- captures user interface not user behaviour\n\na good storyboard should tell a story\nshort and concise\nlow fidelity\nnot about pretty picures. ⇒ about communicating ideas\n\nShows:\n- setting\n\t- people\n\t- environment\n\t- task being done\n- sequence\n\t- what steps\n\t- what leads someone to the app\n\t- task task\n- satisfaction\n\t- what is the users motivation\n\t- what does it enable people to accomplish\n\t- what need does the system fill\n\n\n![](https://i.imgur.com/dyZIPH9.png)\n![](https://i.imgur.com/YE27hWp.png)\n![](https://i.imgur.com/uOqAl4o.png)\n\n\n# 1 pros\n+ holistic focus ⇒ helps emphasoze how an interface accopmlishes a task\n+ avoid commitment to a particular UI\n+ helps get all the stakeholders on the same page in terms of the goal\n\n\n# 2 Tips\ntell a story\n![](https://i.imgur.com/NTpXK14.png)\n\n- base it off the scenario\n\nplay with the angle/perspectives\n\n![](https://i.imgur.com/aJ11kgo.png)\n![](https://i.imgur.com/aBSoHwJ.png)\n\nsimplify and develop vocabulary/your own style\n![](https://i.imgur.com/jwDROAW.png)\n\n\nusing tracing and templates\n![](https://i.imgur.com/wwf7ab3.png)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/storyboards-mockups-paper-prototypes":{"title":"storyboards-mockups-paper-prototypes","content":"\nFidelity will increase over time.\n![200](https://i.imgur.com/7qmn859.png)\n\n## Storyboarding\nfocus on the **task**\ncommunicate flow\nnot about pretty pictures\nuse timelimits ≈10 mins\n\n### shows\n- settings\n\t- people \n\t- environment\n\t- task\n- sequence\n\t- steps\n\t- what leads a user to use the app\n\t- what task\n- satisfaction\n\t- why do they use the app\n\t- what do they accomplish\n\t- what needs does the system fill\n\n### Benefits\n- holistic focus\n- avoids commitment to an interface\n- helps get stakeholders onthe same page\n\n### Examples\n![](https://i.imgur.com/9PzIGWg.png)\n\n\n## Paper prototyping\nmockup of UI on computer\n![](https://i.imgur.com/aGq3VKp.png)\n\n\n### tips\n- store materials in one place\n- work quickly\n- complex parts of interfaces can be verbally roleplayed\n- backgrounds can be used to contain protoypes and provide context\n- you can mix and match hardware and software\n- when appropraite include matching OS elements\n\n- get users to add to the design\n- get stakeholders incolved\n\n\n## Digital mockups\n![](https://i.imgur.com/LOSt7gZ.png)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/sybil-problem":{"title":"sybil-problem","content":"[wikipedia article](https://en.wikipedia.org/wiki/Sybil_attack)\n\nThe Sybil attack in computer security (especially in blockchain systems) is an attack wherein a reputation systems is subverted by creating multiple identities.\n\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/system-templates":{"title":"system-templates","content":"\n\u003c% tp.file.cursor(4) %\u003e\n# System templates\nsome standard patterns is system design\n\nespecially with respect to structural requirements\n- database\n- domain classes\n- names of entites/classes may vary but pattern is the same\n\nbroadly similar structures for similar problem domains\n- e.g., retaiol, scheduling, HR\n- main difference mostly is small details\n\n## the heirarchy\n![hierarchy](https://i.imgur.com/uGcao6S.png)\n\nrepresents a chian of \"containment\" relationships\n\nchild and parent entities linked by FK (often composite)\n\nexamples\n- division, department, employee\n- student, programme enrolment, paper enrollment, assessment result\n\n## the associative entity\n![associative entity example](https://i.imgur.com/JQM0LTd.png)\n\nresolution of a many-to-many relationship\n\nassociative entiteis may or may not have additional attributes.\n\n## Headers/lines\n![header line example](https://i.imgur.com/MH7mRRi.png)\n\n![more examples](https://i.imgur.com/aHGKqV7.png)\n\nhead is associative with one or more other entities.\n\nline is associated with only one thing\n\n### parallel header lines\n![parallel header/lines](https://i.imgur.com/CDPLeXG.png)\n![other examples](https://i.imgur.com/rG5Jr49.png)\n\nsecond example has more direct association between sale and shipment.\n\n## general systems\n![Point of sale ERD](https://i.imgur.com/S7YhvAa.png)\ndont always need all of the things\n![booking system ERD](https://i.imgur.com/AOjrHkC.png)\n![inventory system ERD](https://i.imgur.com/vdEjRh7.png)\n\nmany more e.g., payroll, scheduling/timetabling, tracking\n\n![more examples possibly dated](http://www.databaseanswers.org/data_models/index.html)\n\n# summary\ndont always need to create data model from scratch, need to adapt any template to suit your scenario\n\ndont deinveltht the wheel\n\n![revision questions](https://i.imgur.com/LKRU7lh.png)\n\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/systems-development-life-cycle":{"title":"systems-development-life-cycle","content":"\n\nProvides overall framework for managing the systems\nThere are many methodologies to help guide us through this cycle\nEach methodology sits on the [predictive-adaptive-spectrum](notes/predictive-adaptive-spectrum.md)\nA very common methodology at the moment is [agile-development](notes/agile-development.md)\n\n## 1 Phases\n### 1.1 Analysis \n^2d7976\n- Lots of communication with [stakeholders](notes/stakeholders.md)\n- Gather detailed information\n- define system requirements\n- prioritise requirements (what is risky, what brings value to business) -\u003e increase proability of success\n- develop UI dialogs ([prototyping](notes/prototyping.md)' where the user can interact with the system)\n- evaluate requirments\n- review reccomendations with management\n\n## 2 Business process re-engineering\nmethod of organising company\n- streamline processes to be efficient and efffective\n- question basic assumptions\n\nuse ICT to help with BPR \n\nsys analyst may find opportunites to improve processes\n- any project can include components of BPR\n\nsimpler business processes -\u003e simpler requirements -\u003e simpler system\n\n## 3 Requirements\n- [requirements](notes/requirements.md)\n- [requirements-elicitation](notes/requirements-elicitation.md)\n- Something the system should do \n- Some constraint the system should have\n- Can be functional or non functional\n- Good requirements prevent failure\n\n## 4 SDLC Variations\n- different terminology\n- change focus on people\n- change speed of development\n\t- [prototyping](notes/prototyping.md)\n\t- Rapid application development (RAD)\n\n## 5 Failure\nmain goal: Avoid project failure\n- complete fail implies nothing delivered\n- Types of fail\n\t- cost overruns\n\t- sw quality issues\n\t- missed deadlines\n\t- unhappy [stakeholders](notes/stakeholders.md)\n\nSuprisingly very common with large projects\n\nreasons for fail: \n![](https://i.imgur.com/Q091Xtg.png)\n\n\n**coding rarely causes problems**\n\n![](https://i.imgur.com/N36Cd0E.png)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/templates":{"title":"templates","content":"\n- [[templates/Day]]\n- [[templates/note-header]]\n- [[templates/course]]\n- [[templates/post]]\n- [date-day](private/templates/date-day.md)\n- [DailyTemplate](private/templates/DailyTemplate.md)\n- [induction-proof-template](private/templates/induction-proof-template.md)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/terminology":{"title":"terminology","content":"\n**rank:** the number of dimensions in the output of a transformation *or* the number of dimensions in the columce space\n**column space:** the set of all possible outputs Av is the column space of A\n**full rank:** When the rank equals the number of columns\n**null space/kernel:** the space of all vectors that become null following a transformation\n **span:** a set of all linear combination of two vectors\n **linear combination:** an expression constructed from a set of terms by multiplying each term by a constant and adding the results\n ","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/test-driven-development":{"title":"test-driven-development","content":"\ntests are developed before the code\n\nare a spec of what the code should do\n\nfirst they fail ⇒ as you develop, they pass\n\n+ quantifiable progress of code\n\n\u003e tests are not always bug free\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/testing":{"title":"testing","content":"\n- most software will contain bugs\n- bug severity if not always equivalent to bug priority\n- testing is seeking out bugs\n- some test types\n\t- unit tests\n\t- integration tests ⇒ check units work together\n\t- end-to-end tests ⇒ check behaviour of whole program\n\n## 1 Limitations\n- testing every code path is impossible\n\t- halting problem - cant fully analyse code using code\n\t- proved by alan turing in 1936\n\n- good test design focuses on _key cases_ to pass and fail\n- not probe interaction between units\n\t- this should be done by integration testing\n\n- testing may afffect behaviour of code\n\t- testing framework may affect the order of esecution\n\t- testing framework may change execution speed\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/the-art-of-war":{"title":"the-art-of-war","content":"\n# 1 Estimates\n\n\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/the-story-of-man":{"title":"the-story-of-man","content":"\n# African Origins\n\n# The Peopling of the Earth\n\n# Putting down roots\n\n# 4000 BC\n\n# The Invention of the State\n\n\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/think-writing":{"title":"think-writing","content":"\n\n- [[veracity-week01]]\n- [[veracity-week02]]\n- [[veracity-week03]]\n- [[veracity-week04]]\n\n# 12/12\nhttps://doi.org/10.1109/DTPI52967.2021.9540069 [[Parallel Governance for Decentralized Autonomous Organizations enabled by Blockchain and Smart Contracts]]\n\ntrying to call a function of a smart contract. I suspect its not working because the function signature hash is wrong\n\n---\n\n# 13/12\nBattled the smart contract all day yesterday. Might take a break from that and try to do something else\n\nwho generates the keys for a new node?\n\nwhat if a node removes itself\n\nImplemented a test to remove a node. \n\nWhat about forking. do you remove a group of nodes? \n\nhttps://eprints.soton.ac.uk/415083\nhttps://arxiv.org/abs/1910.08547\nhttps://scholar.archive.org/work/uf7vmdzi7na5dazrh2jlhvuhr4/access/wayback/https://www.persistent.com/wp-content/uploads/2017/04/WP-Understanding-Blockchain-Consensus-Models.pdf?pdf=Understanding-Blockchain-Consensus-Models\nhttps://ieeexplore.ieee.org/abstract/document/9947249/\n\nHyperledger consensus algorithm: https://doi.org/10.48550/arXiv.1809.00554\n\n# 14/12\n\nhttps://arxiv.org/abs/2102.10006\n[[An Overview of Forks and Coordination in Blockchain Development]]\n\n# 15/12\n\nhttps://www.holochain.org [[holochain]]\nhttps://blockchaingov.eu focused more on the legal side of things and the sociological issues.\n\nHolochain is interesting. Framework for peer for peer apps. Apps built on holochain connect users devices directly in a p2p network. Data created by each user is digitally signed and stored in their device. The apps defines rules about what valid data looks like. The network of peers makes up the entire Distributed Hash Table (DHT), where each peer has a small, random 'shard' of the DHT. \n\nHow does the blockchain work? How does it achieve consensus? Is it BFT? \n\nHow could we use this for veracity? We could make a holochain app. \n\nhttps://doi.org/10.1016/j.icte.2020.09.002\nhttps://doi.org/10.1016/j.techfore.2020.120465\n\nwww.kaleido.io: blockchain as a service\n\nmeeting\n- removing participant\n\t- security risks (whats stopping them from rejoining)\n\t- remove permanently vs temporarily\n- skeptical of decentralised storage:\n\t- less protections\n\t- tradeoff availablility vs confidentiality\n- maybe dig into holochain \"data rules\" used for validation\n\nI need to have a more skeptical mindset.\n\nWhy cant we use blockchain as a service (blockstream, kaleido, alchemy, aws, IBM). Is it up to me to look into this and decide if we can rule it out?\n\nhttps://doi.org/10.1016/j.icte.2020.09.002 Permissioned blockchain frameworks in the industry: A comparison\n\nQuorum: developed by jp morgan for finance applications. It is a fork of go-ethereum. Add the ability to have private contracts and transactions which are only visible/viewable by participants specifies in the transaction. \n\nR3 Corda: open source permissioned platform. Follow know your customer principle. each node must prove identity. verified by the  _doorman_ node. Network is made up of one or many _notary_ nodes which validate the uniqueness and sequencing of transactions without global broadcasting. two types of consensus: validity and sequencing, \n\n---\n\n# 19/12\n\nStill dont understand fabric vs iroha.\n\nhttps://hyperledger-fabric.readthedocs.io/en/release-2.5/whatis.html\n\nFor business use cases:\n-   Participants must be identified/identifiable\n-   Networks need to be _permissioned_\n-   High transaction throughput performance\n-   Low latency of transaction confirmation\n-   Privacy and confidentiality of transactions and data pertaining to business transactions\n\nFabric has pluggable consensus algorithms: iroha has only YAC\n\nI started reading the bitcoin paper again. In bitcoin they are able to save space by storing hashes of transactions in a merkle tree and stubbing off branches. In Ethereum and other chains with smart contracts and storage, how to they prevent the chain from taking up a lot of space? I also thought that blockchain can act basically as a database and you are able to go back and look at data stored \"on-chain\". Where is this data stored? I'll have to read up about Ethereum again but I suspect the chain must use more storage space, or maybe they clean up old smart contracts? How would that even work?\n\nIn etherum each block hold the entire state of the chain. The state is stored in a tree structure. And for each block only a small part of the tree needs to be changed. So the data can be stored once, and referenced twice using pointers. This is done using a \"patricia tree\". Patricia trees are similar to merkle trees but the allow insertion and deletion of nodes. Also since the entire state is stored on each chain there is no need to store the entire blokchain history. \n\nDid some research on [[merkle tree]]s. Think in bitcoin and ethereum the raw data is also stored somewhere, not only the hashes. But then how does pruning the tree help in bitcoin. Does bitcoin just not store a record of transactions? Does ethereum? I know where blockchain is stored but not what is stored.\n\nhttps://www.makeuseof.com/what-data-stored-bitcoin-blockchain/ From here it seems that within a block the transactions are stored separately from the merkle tree. And the number of transactions in a block cannot take up more than 1MB.\n\nhttps://hackernoon.com/getting-deep-into-ethereum-how-data-is-stored-in-ethereum-e3f669d96033 [[ethereum#storage]]","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/transaction-finality":{"title":"transaction-finality","content":"\n\nhttps://smithandcrown.com/glossary/transaction-finality-probabilisticdeterministic/\n\nGenerally, transaction finality refers to the moment when parties involved in a transaction can consider the transaction to be completed. More specifically, this is the moment when it becomes impossible to revert or alter a transaction that has been added to the [blockchain](https://smithandcrown.com/glossary/blockchain). Transaction finality can be either deterministic or probabilistic.\n\nProbabilistic finality occurs when a transaction’s finality increases as more blocks are added to the blockchain after the transaction. That is, as more blocks are added, the transaction is further referenced in the blockchain and becomes increasingly difficult to revert or alter as a result (see [Double Spend](https://smithandcrown.com/glossary/double-spend)). For most protocols providing probabilistic finality, there is a recommended number of blocks to be added following the transaction until it can be considered complete. For example, it is recommended that one wait until six additional blocks have been added to the [Bitcoin](https://smithandcrown.com/projects/bitcoin) blockchain before considering a transaction to be final. The majority of major cryptoassets offer probabilistic finality.\n\nDeterministic finality occurs when a transaction is immediately considered to be final once it is added to the blockchain. For this to happen, a “leader” must propose a block to be added, and then a specified portion of validators must approve it. Deterministic finality is less common and is only provided by Practical Byzantine Fault Tolerance-based (PBFT) protocols such as Tendermint","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/transistors":{"title":"transistors","content":"\n\n# Transistors\n![simple transistor diagram|100](https://i.imgur.com/oBuNR9m.png)\n\n- B: Base ⇒ A swtich connecting C to E\n\t- open (C is disconnected from E) when supplied 0v\n\t- closed (C is connected to E) by applying +5V\n- C: Collector\n- E: Emitter\n\nPossible to create NAND gate using just transistors ∴ possible to create all logic gates using only transistors [^3]\n\n\n[^3] : They dont actually do it this way (see lab)","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/travel":{"title":"travel","content":"\n# Budget.\n10,000\n\nUtah\npaid for\n\nJapan stage 1\nflights: 2000\naccom: 800\nother: 2000\n\nJapan stage 2\nflights: 2000\nother: 1800\n\ntotal: 8600\n\n# Utah\n\n# Japan\n\nhttps://tokyocheapo.com/travel/a-guide-to-hitchhiking-in-japan/","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/treap":{"title":"treap","content":"\nTreaps\nLink betwen heaps and trees that uses randomisation\n\nI we are added items to a bst in random order then an unbalanced situation would be possible but highly unlikely. \n\na treap (portmanteau of tree and heap) is designed to achieve this even in the elements are not added in random order\n\nwhen we add an element, we give it a random priority. Then after doing normal BST insertion we perform a series of rotations to fix the heap-ordering issues\n\nthe effect is that the elements look as if they were inserted in decending order of priority. SInce the priorities were randomly chosen, that means that at any time we see a BST which  \"thinks\" that is elements were added in random ord\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/tree":{"title":"tree","content":"\nnot so much a data type. More of a data concept of a way in which data can be organised\n\nThe first example we saw was with the chains of representatives in [union-find](notes/union-find.md)\n\nThe type required for the ordered [set](notes/set.md) data type is the binary tree\n\nTrees in general:\n- Consists of *Nodes*\n- One node is distinguished and called the *root*\n- Each node, except the root, has a unique *parent*\n- Any chain that moves from a mnode to its parent , its grandparent etc, eventually reaches the root.\n- The *children* of a nore arll the nodes of which it is the parent\n- Nodes may (and usually do) have additional data associated to them. (does not affect the structure)\n- Nodes with no children are *leaves*\n\nFor example: \n\n- *cat* is the root (root is drawn at the top)\n- the parent of *dog* is cat*,* of *rat* is *emu*\n- some nodes have two children, one has three (*emu* ) and some have none.\n\n![300](https://i.imgur.com/EsrTuFL.png#invert)![300](https://i.imgur.com/bQmzPaU.png#invert)\n\nThe only differnce between these two trees is the *order* of the elements. \n\nWe need to specify whether this makes them different or not. In computer science, order usually *does* mater. These are sometimes called*plane trees*.\n\nSometimes there are fixed slots for the children e.g., \n\n[binary-search-tree](notes/binary-search-tree.md)","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/tree-traversal":{"title":"tree-traversal","content":"\nVisit each node in the tree once. So we need to visit n, all the nodes in L, and all the nodes in R. We can do this in four different ways\n\n- **Preorder:** Root, left, right\n- **Postorder:** Left, right, root\n- **Inorder:**  Left, Root Right (produces ordered list in a [BST](notes/binary-search-tree.md))\n- **Level order:** root, all the roots children, all their children, etc  \n\n[examples](https://i.imgur.com/vsZtkIp.png)\n\nCreating an BST from an array using the [Add Operation](notes/bst-operations.md#Add%20Operation) operation then doing an inorder traversal is effectively a [quicksort](notes/quicksort)\n\n# Code\nUsually traversals ideas used in algorithms, not independent methods\n## Pre order\n```java\nprivate void preorder(Node n, ArrayList\u003cString\u003e r){\n\tif(n==null) return;\n\tr.add(n.key); //add this node the reults\n\tpreorder(n.left, r); //traverse the left subtree\n\tpreorder(r.right, r); //traverse the right subtree\n}\n```\n\n## Post order\n```java\nprivate void postorder(Node n, ArrayList\u003cString\u003e r){\n\tif(n==null) return;\n\tpostorder(n.left, r); //traverse the left subtree\n\tpostorder(r.right, r); //traverse the right subtree\n\tr.add(n.key); //add this node the reults\n}\n```\n\n## In order\n```java\nprivate void inorder(Node n, ArrayList\u003cString\u003e r){\n\tif(n==null) return;\n\tinorder(n.left, r); //traverse the left subtree\n\tr.add(n.key); //add this node the reults\n\tinorder(r.right, r); //traverse the right subtree\n}\n```\n\n## Level order\nOnly traversal that  is not naturally recursive. Maintains a [queue](notes/dynamic-linear-datatype.md) of pending visits. Using a [stack](notes/dynamic-linear-datatype.md) with this methods produces a preorder\n\n```java\npublic Arraylist\u003cString\u003e levelorder() {\n\tArrayList\u003cString\u003e result = new ArrayList\u003c\u003e();\n\tif(isEmpty()) return result;\n\tArrayDeque\u003cNode\u003e q = new ArrayDeque\u003c\u003e();\n\tq.add(root)\n\twhile (!q.isEmpty()) {\n\t\tNode n = q.remove()\n\t\tresult.add(n.key);\n\t\tif(n.left != null) q.add(n.left);\n\t\tif(n.right != null) q.add(n.right);\n\t}\n\treturn result;\n}\n```","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/typography":{"title":"typography","content":"\nmost common fonts\n- gill sans\n- helvetica\n- calibri\n- arial\n- times\n\nthree types of fonts\n- serif\n- sans serif\n- handwritten\n\npoint size\n![100](https://i.imgur.com/9lMGK1g.png)\n\nleading depends on the font and the user setting but usually is 20% of the font\n![100](https://i.imgur.com/eABpxfK.png)\n\nx height depends on the font.\n- smaller x height adds \"elegance\"\n- larger x height isbettwe to low res displays\n![250](https://i.imgur.com/BvPCazi.png)\n\nascenders and descender usually correlates with x height (small x-height \u003e large ascenders and descenders)\n![400](https://i.imgur.com/Iv7FK4F.png)\n\nweight: usually regullar and bold, also light semibold, ultrabold\n![400](https://i.imgur.com/YboKpT7.png)\n\nsans serifs have less line width variation\n![400](https://i.imgur.com/3GkpMf3.png)\n\nsome fonts provide small caps and lowercase numbers\n![](https://i.imgur.com/lEYKFl8.png)\n\n\n\n- serif hypothesis\n\t- serif fonts are easier to read\n\t- preferable for long stretches of text because serifs provide anchors and guide the eye\n\t- not proven\n\nmore info on the top than the botton\n![300](https://i.imgur.com/XEF8nlr.png)\n\nexpectation plays an important role\n![300](https://i.imgur.com/Uu6B2bQ.png)\n\n\n\n## which font to use?\n- depends on context\n- recoomentations\n\t- slides and posters sans serif\n\t- printed text serif\n\t- web sans serif\n\t- sans serif is better in lower resolutions\n\t- combinations: (header sans, text serif)\n\t- comic sans good for dyslexia\n\t- logos should catch the eye\n\n \n![300](https://i.imgur.com/T80gQOA.png)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/uml-java-forward-engineering":{"title":"uml-java-forward-engineering","content":"\nsimilar to ERD to sql. \n\nuse case diagrams - more about system structure and features\n**class diagram - java class\n- doesn't have to be java\n- could be any oop language\nsequence, activity, state etc, may or may not be useful. \nsome code can be automatically generated.\n\ncustom methods cannot be generated automatically. things like getters and setters can be generated automatically.\n\n## Steps\n1. uml class -\u003e java class (in its own file) (dont overdo it) (e.g., librarian)\n\t1. use conceptual vs implementation level diagrams\n2. assign data types to explicit class fields\n3. add fields implied by associations\n\t1. unidir ⇒ field in class at tail of --\u003e\n\t2. bidir ⇒ field in class at both ends \u003c--\u003e\n\t3. multi = 1 ⇒ simple field (e.g., string)\n\t4. multi \u003e 1 ⇒ appropraite collection type (e.g., arraylist, hashmap etc)\n4. field visibilty normally private (should match class diagram)\n5. add constructors if needed\n6. add public getter and setter methods (trivial, can be auto generated)\n7. add remaining public or private methods (includilng implemented interfaces)\n\n## Visibility of fields and methods\n![visibility of fields and methods](https://i.imgur.com/0xM09La.png)\n\n## use case diagrams\n[use-case-diagrams](notes/use-case-diagrams.md)\neach use case represents a feature. often items in a menu. sub cases can be sub menu items (extnd, include, require) (sometimes).\n\nactors *can* correspond to domain classes.\n\none use case might require/use several classes. e.g., UI, processor, or data classes.\n\n## other behavioural diagrams\n**sequence:\n- could be used for looping and branching\n**activity:\n- low level in particular\n- can be used to generate some code\n- would require discipline in diagram conventions\n\t- by this point you are basically writing code in graphical form anyway\n\t- might as well just write the code anyway\n**state: \n- most useful/likely to be use for code\n\t- states machines are tedious\n\t- [finite-state-machine](notes/finite-state-machine.md)\n- often translate to some kind of lookup mechanism\n- fairly easy to generate correspoding code\n- boils down to some kind of index.\n- however these are not used very often\n- once this code is generated is hard to fix manually\n\t- better to just change the diagam and regenerate the code\n\n## subclasses\n![employe diagram example](https://i.imgur.com/EAiVEkt.png)\n![eployee code example](https://i.imgur.com/bighWWJ.png)\n![code continued](https://i.imgur.com/Hxcho66.png)\n\n- this example is contrived\n- salariedemployee and waged employee inherit all public and protected methods of employee (including getters and setters, not including constructors)\n- salariedEmpoyee and waged employee each have thier own computePay method\n\n## Interfaces\n![diagram](https://i.imgur.com/pN660p0.png)\n![code](https://i.imgur.com/iDyoeSE.png)\n\n- generally preffered to subclasses\n- both salaried and waged employees must implement the computePay method\n\n# Domain class model vs ERD structure\n- erd are about long term storage. data persistence\n- domain models are about application process, temporary storage. \n- database and class structures dont need to be the same\n- but you do need to be able to map between them\n\n![domain class model vs erd structure](https://i.imgur.com/feN6a9W.png)\n\n# Example: Library system\ne.g., \n![library example uml diagram](https://i.imgur.com/u4CNXOb.png)\nthe five horizontal items could be meny items. there will be some kind of authorisation for senior librarians. we probably wouldn't make seniour and junior librarian as differnce classes. there is not really any benefit, doing this would be overkill. We should use a single librarian class with `type` field. this field can be used for authorisation. The apply fine use case is an optional sub task. It could be implemented in many ways: checkbox on return form, sub menu item, automatic. shelve item is a differnt, its more of a business process. only thing need in the code it the change the status of the item. \n\n![class diagram](https://i.imgur.com/VjyvYPe.png)\n\n![code part 1 Loan class](https://i.imgur.com/6VoV54C.png)\n![code part 2 Loan class 2](https://i.imgur.com/Q8yptdE.png)\n![code part 2 Loan class 3](https://i.imgur.com/4Xst3ys.png)\n\n\n## Multiplicity\n![](https://i.imgur.com/yJIH7dK.png)\n\nmih multiplicity of - ⇒ can create instances of Loan withou providing any associated LoanItem instances\n\nmin multiplicity 1 ⇒ must provide associated Loan instand when creating a LoanItem instance\n1. create loan and loanItem then use LoanItem.setLoan()\n2. use a custom LoanItem constructor to pass Loan object\n\n![multiplicity code ](https://i.imgur.com/RKa9NBy.png)\n\nunidirectional association are preffered as here we need to link things birdirectionally. this example is contrived, in real life it would not be done this way.\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/uml-java-reverse-engineering":{"title":"uml-java-reverse-engineering","content":"\n\n# Java -\u003e UML reverse engineering\nreverse of [uml-java-forward-engineering](notes/uml-java-forward-engineering.md)\n\n- parse java docs and generate corresponding uml diagrams\n- useful to generate models of existing systems\n- code usually has more detail than can be represented in diagrams\n- automated diagram layout likely to be ugly ⇒ manual clean up\n- some language specific features may not translate\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/uni-notes":{"title":"uni-notes","content":"\n## 2022 S1\n- [cosc-201](notes/cosc-201.md)\n- [cosc-202](notes/cosc-202.md)\n- [info-201](notes/info-201.md)\n- [info-203](notes/info-203.md)\n\n## 2022 s2\n- [cosc-203](notes/cosc-203.md)\n- [cosc-204](notes/cosc-204.md)\n- [comp-210](notes/comp-210.md)\n- [math-202](notes/math-202.md)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/unified-modelling-language":{"title":"unified-modelling-language","content":"\n- [what-are-uml-diagrams](notes/what-are-uml-diagrams.md)\n- [use-case-diagrams](notes/use-case-diagrams.md)\n- [class-diagrams](notes/class-diagrams.md)\n- [entity relationship diagram](notes/entity-relationship-diagrams.md)\n- [activity-diagrams](notes/activity-diagrams.md)\n\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/unified-processes":{"title":"unified-processes","content":"\noop development\nuses UML for modelling\nfour phase life cycle\n- inception\n- elaboration\n- construction\n- transition\n\n![](https://i.imgur.com/wV46UVm.png)\n\n##### best practices\n- develop iteratively\n- define and mange system requirements\n\t- effectively managing changes in requirements\n- use component architectures\n- create visual models (UML)\n- verify quality \n- Control changes\n\n##### Values and principles\nValues:\n- **individuals and interactions** over processes and tools \n- **working software** over comprehensive documentation \n- **customer collaboration** over contract negotiation\n- **responding to change** over following a plan\n\nTwelve modelling principles:\n\n\u003e Build only necessary models that are useful and at the right level of detail\n\n- Software is your primary goal — don’t get distracted by\ndocumentation or models.\n- The next effort is your secondary goal — be aware of next\nstep versions or revisions.\n- Minimise modelling — only build what helps move the project\nforward.\n- Embrace change, change incrementally — take small steps\nthat keep you on track and that can be reversed if necessary.\n- Model with a purpose — to understand and communicate.\n- Build multiple models — look at problems from different\nperspectives.\n- Build high-quality models and get feedback — from [stakeholders](stakeholders), other developers.\n- Focus on content, not representation — always focus on stakeholder needs; informal hand-drawn models are often fine.\n- Communicate and learn from each other.\n- Know your models and how to use them.\n- Adapt to specific project needs.\n- Maximise stakeholder ROI.\n\n![](https://i.imgur.com/feq3EQ3.png)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/union-find":{"title":"union-find","content":"\n## 1 Example\n- We have 12 'objects'\n- *Some* pairs have been connected\n- Nodes with a sequence of edges between them form a group\n\t- e.g., 0 5,   2,   1 4 6 9,   3 8 10 11,    7\n\t- \n![](https://i.imgur.com/9iRxZoh.png)\n\n- Groups with no connecting edges are *disjoint* sets\n\n## 2 Requirements\n- Make(n) - make a set of n vertices with no edges between them\n- Union(x, y) - connect x and y by an edge (merge their two groups)\n    - y becomes the representative node for the whole group\n    - e,g,. Union(2, 1)\n\t\t- now : 0 5    2 1 4 6 9    3 8 10 11    7\n\t\t- the representative node of the new group is 1\n\t\t- the number of groups is always : n - number of union operations between elements of different groups\n- Find(x) Find and return a representative of the group the x belongs to.\n    - If x and y are in the same group then Find(x) == Find(y)\n    - \n\n## 3 Implementation\n### 3.1 UF 1\n\n```java\n\tint[] reps;\n\tpublic void make(int n){\n\t\treps = new int[n];\n\t\tfor(int = 0; i \u003c n; i++) reps[i] = i;\n\t}\n\n\tpublic int find(int x){\n\t\treturn reps[x];\n\t}\n\n\tpublic void union(int x, int y){\n\t\trx = reps[x]\n\t\try = reps[y]\n\t\tfor i = 0 to n-1\n\t\t\tif reps[i] = rx then\n\t\t\t\treps[i] = ry\n\t\t\tend if\n\t\tend for\t\n\t}\n``````\n\n\n Operation   | Cost | reason\n-------------|------| --\n make        | $\\Theta(n)$ | filling n place of an array\n find(x)     | $\\Theta(1)$ | find value in array is constant\n union(x, y) | $\\Theta(n)$ | When x and y's rep are different, the whole array must be examined\n\nTotal possible number of union calls where x and y's rep are different is n-1\nSo the Total possible cost of all union calls is $\\theta(n^2)$ \n\n### 3.2 UF 2\n\n``` java\n\tint[] reps;\n\tpublic void make(int n){\n\t\treps = new int[n];\n\t\tfor(int = 0; i \u003c n; i++) reps[i] = i;\n\t}\n\n\tpublic int find(int x){\n\t\tif(reps[x]==x) return x;\n\t\treturn find(reps[x]);\n\t}\n\n\tpublic void union(int x, int y){\n\t\treps[find(x)] = find(y);\n\t}\n```\n\nOperation   | Cost | reason\n-------------|------| --\n make        | $\\Theta(n)$ | filling n place of an array\n find(x)     | $\\Theta(n)$ | need to look through chain nodes for representative\n union(x, y) | $\\Theta(n)$ | bounded by two calls to find\n\nTotal possible number of union calls where x and y's rep are different is n-1\nSo the Total possible cost of all union calls is $\\theta(n^2)$ \n\n### 3.3 UF 3\n\nFor each rep, let its rank be the length of the longest chain of local reps that reaches it\nWhen union(x,y) make the rep with the larger rank the rep of the other\nIf equal ranks -\u003e make the second the rep of the first\n\n``` java\n\tint[] reps;\n\tint[] rank;\n\tpublic void make(int n){\n\t\treps = new int[n];\n\t\trank = new int[n];\n\t\tfor(int = 0; i \u003c n; i++) reps[i] = i;\n\t}\n\n\tpublic int find(int x){\n\t\tif(reps[x]==x) return x;\n\t\treturn find(reps[x]);\n\t}\n\n\tpublic void union(int x, int y){\t\t\n\t\trootUnion(find(x), find(y))\n\t}\n\n\t//x and y are known to be representatives\n\tprivate void rootUnion(x, y){\n\t\tif(rank[x] \u003e rank[y]){\n\t\t\treps[y] = x;\n\t\t} else if (rank[y] \u003e rank[x]){\n\t\t\treps[x] = y;\n\t\t} else { //rank[x] == rank[y]\n\t\t\treps[x] = y;\n\t\t\trank[y] ++;\n\t\t}\n\t}\n```\n\nOperation   | Cost | reason\n------------|------| --\n make        | $\\Theta(n)$ | filling n place of an array\n find(x)     | $\\Theta(lg\\ n)$ | rank is bounded by $lg\\ n$\n union(x, y) | $\\Theta(lg\\ n)$ | bounded by two calls to find\n\nTotal possible number of union calls where x and y's rep are different is n-1\nSo the Total possible cost of all union calls is $\\theta(n^2)$\n\ntrade off means this requires an extra $\\theta(n)$ space\n\n#### 3.3.1 Min size of set of rank k\n\n- for k = 0 -\u003e size must be at least 1\n- for k = 1 -\u003e size must be at least 2\n\nfor larger k -\u003e the set must have been formed by the union of two sets of rank k-1. So its size must be at least twice the min size of a set of rank k-1\n\n--\u003e min size of set of rank k is $2^k$\n\n\u003ea set of rank k must contain at least $2^k$ elements\n\u003e $\\therefore$ The maximum rank of an element is $\\log_2(n)$  -\u003e $lg(n)$\n\nsince the time for $Find$ is big-$\\theta$ of the rank of the representative found we get $O(lg n)$ bounds for both find and union\n\n^we used $O$ not $\\theta$  because we dont know that the worst case will always occur.\n\nIf could happen that the sequence of Union operations does not create a rank that is as big as i could be\n\n^this is an example of a semi-formal proof by [induction](notes/induction.md)\n\n### 3.4 UF 4\nChange find so it implements path compression to \"flatten\" the chains. When we follow tht path to a nodes representative we \"learn\" the final result\n\npath compression occurs during find when we the chain of links from an element to its representative with a direct link (and do the same along the chain)\n\n```java\n\tif (x != reps[x]) {\n\t\treps[x] = find(reps[x]);\n\t}\n\treturn reps[x];\n```\n\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/unit-testing":{"title":"unit-testing","content":"\n- divide code into units ⇒ test those units\n\n- consider appropriate scale\n\t- depends on type of code project as well as language\n\t- object oriented: classes? methods?\n\t- procedural: functions? modules?\n\n- test each unit independently\n\t- frequently\n\t- often after each commit/push\n\t- can run tests if parallel\n\t- may need to build environment in which tests run\n\n# 1 supports useful principles\ncan support complementary work by team members\nearly discovery of problems\ncan help with documentation and specification\n- unit tests can be a form of executable specification\n- helps team members understand requirements\n\n# 2 Test environment\nconsider code that interacts with a database\n- you cant let that code write to a real database\n- but you want to check that writes were performed\n\ncommon solution is to create a fake database\n- class that mocs database operations\n- can also test error handling by returning error codes\n\nmock up the database with a pretend model that returns fixed results to query\n- be careful not to mock up data base incorrectly\n\ncan be a pre-recorded interaction\n\n# 3 Test life cycle\n- set up test environment\n- run test code\n- check results\n- aggregate results into test summary\n\nsimple test: run method ⇒ check value\ntests may chack that code fails appropriately\n- crash when expected\n- exceptions are generated\n\n# 4 Language support\nlanguage may have bilt in testing support\n- e.g., Go and Rust have command line tools to run tests\n\nExternal tools can often work well too\n- e.g., java code annotations can mark tests\n- java ignores most annotations, but testing tools (JUnit)  can use them\n- annotations are symbols that begin with @ in source code\n\nwe want to distinguish between tests and normal code\n- also should support for sqapping in/out mocking code\n\n# 5 JUnit\ntest classes have a particular filename pattern\n\nannotate test methods with @Test\n\nother annotations\n\n- @BeforeAll and @BeforeEach (and after)\n- @RepeatedTest\n\nJUnit 5 also supports dynamically generated tests\n\n# 6 TestNG\nbased off JUnit and fixes some it it's problems\n\n- provides control over threading\n\t- run tests in parallel\n\t- also tests for parallelism bugs\n\t- multithreaded code i hard to debug\n- data driven testing\n- also\n\t- integration testing\n\t- end to end testing\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/unite-and-conquer":{"title":"unite-and-conquer","content":"\n5 | 8 | 2 | 3 | 4 | 1 | 7 | 6\n\n5 8 | 2 3 | 1 4 | 6 7\n\n2 3 5 8 | 1 4 6 7\n\n1 2 3 4 5 6 7 8\n\n\n```java\n\tpublic static void mergeSort(int[] a) {\n\t\tint blockSize = 1;\n\t\twhile(blockSize \u003c a.length) {\n\t\t\tint lo = 0;\n\t\t\twhile (lo + blockSize \u003c a.length) {\n\t\t\t\tint hi = lo + 2*blockSize;\n\t\t\t\tif (hi \u003e a.length) hi = a.length;\n\t\t\t\tmerge(a, lo, lo + blockSize, hi);\n\t\t\t\tlo = hi;\t\t\t\n\t\t\t}\n\t\t\tblockSize *=2;\t\t\n\t\t}\t\n\t}\n\n```\n\nouter loop is executed lg n times, where n is the length of a\n\ninner loop proceeds  until we find a block that \"runs out of elements\"\n\ninner loop is having 2 x blocksize added each time, to runs most n/2 x blocksize\n\ninside inner is call to merge which is ϴ(blocksize)\n\n\n### 0.1.1 complexity from bottom up\n\n- $n$ is the numbe of elemetns in a\n- outer loop is executed\n\n### 0.1.2 improvments\nsome arrays have sections that are already sorted\n\nyou canm\n\n### 0.1.3 timsort\nused by python java rust etc\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/unix-shell":{"title":"unix-shell","content":"\n- most common command shell (macOS, linux, android, ios)\n- bash is another common shell\n- windows shells:\n\t- cmd.exe (legacy)\n\t- powershell (more powerful than bash)\n\t- many ways to run bash\n\n## 1 Unix shell good/bad\n\n- good\n\t- embodies unix principle: separation of concerns\n\t- minimal -\u003e shell just manages interaction of other small tools\n\t- highly programmable; supports complex automation\n- bad\n\t- has quirkiness that can trip everyone up\n- tradeoffs\n\t- Shell can be perfect to some tasks; terrible for others\n\t- extremely powerful however also difficult to learn to use\n\nshells are in cosc202 as lowest-level, common means for controlling computers during software development\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/usbability":{"title":"usbability","content":"\nThe extent to which a product cn be used by specifies users to achieve specified goals with effectivenesss, efficiency, and satisfaction in a specified context of use.\n\nUsability is how well a product can be used by specific users to achieve goals effectively efficiently and with satisfaction in a specific context\n\n![](https://i.imgur.com/da2LAxG.png)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/use-case-diagrams":{"title":"use-case-diagrams","content":"\n- specifies the participants (actors) and the relationships between them\n- high level view of what a system does (not how) and who uses it\n- represent users perspective of a system\n- used mainly in requirements specification and early system dev\n- effectively a todo list\n\n## 1 pros\n+ informal,flexible, easy to construct\n+ easily understood\n\t+ improve communication between users and developers\n\t+ can be used to confirm requirements\n+ provide overview\n+ link analysis to design\n+ can be used to inform subsequent dev tasks\n\t+ derive test cases\n\t+ prioritise imlementation tasks\n\t+ help clarify new feature requests or bug reports\n\n## 2 Notation\n\n### 2.1 Actor\n- roles that people have when interacting with the system\n- external systems or hardware that are essential to system operation\n\n![](https://i.imgur.com/PtZlwjO.png)\n\n### 2.2 Use case\n- discrete unit of system functionality\n- activity from perpective of an actor\n- can be abstract or focused\n- say nothing about flow or behaviour\n- map to ⇒ menu items, forms, reports, etc\n\n![](https://i.imgur.com/LiSjoef.png)\n\n### 2.3 Association\n- relationship (interaction) between actor and use casel\n- actor can be associated with more than one use case\n- use case can be associated with more than one actor\n \n![](https://i.imgur.com/ySvfY3Y.png)\n\n### 2.4 Specialisation/generalisation\n- actors and use cases can be orgainsed into special/general hierachies\n\t- acotrs can be specialisations of another actor\n\t- same for use cases\n\t- mutually exclusive\n\t- similar to inheritance\n\n![](https://i.imgur.com/cw21m6L.png)\n\n### 2.5 Dependency\n - occur between use cases\n\t - one case extends the behaviour of another\n\t - one case includes the behabiour of another\n\t - one case requires the behaviour of another\n - read in direction of arrow\n - indicate opportunities for reuse of functionality\n\n![](https://i.imgur.com/Liv9gan.png)\n\n#### 2.5.1 Extends dependency\n- use cases can have optional, subordinate tasks\n- useful with specialised actors\n\n![](https://i.imgur.com/f2CNebR.png)\n\n#### 2.5.2 Includes dependency\n- use cases that have mandatory, subordinate tasks\n- does not indicate sequence, only that they must happen\n\n![](https://i.imgur.com/8exIQtK.png)\n\n#### 2.5.3 Requires dependency\n- mandatory, _independent_ tasks, that must be completed first\n- forces sequence\n- use sparingly\n\n![](https://i.imgur.com/ZjAnIry.png)\n\n## 3 development of use case diagrams\norganise related use case diagrams into use case model\n- have have multiple levels of detail\n- group related diagrams into packages\n\n### 3.1 example methods\n- user goal technique ⇒ simple\n- event decompositition technique ⇒ more comprehensive\n\n### 3.2 top down\nidentify actors ⇒ identify use cases ⇒ detail use cases\n\t- who will enter and/or recience information\n\t- what other systems will interact with the system\n- prioritise use cases\n- further develop use case, starting with highest priority\n- structure overall use case model\n\n\u003e **avoid specifying the sequence**\n\n### 3.3 bottom up\ncreate scenario ⇒ generalise scenario ⇒ organise use case model\n\n## 4 Examples\n![](https://i.imgur.com/ZCgEN9I.png)\n![](https://i.imgur.com/LuOYfhy.png)\n![](https://i.imgur.com/1ZOgZR9.png)\n![](https://i.imgur.com/Y9E8ao2.png)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/user-experience":{"title":"user-experience","content":"\n\u003e \"encompasses all aspects of the end users interaction with the company, its services, and its products\" - Jakob Nielsen and Don Normann\n\nMarketing, branding, etc.\n\n![](https://i.imgur.com/oA6p1ZH.png)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/user-freedom-and-control":{"title":"user-freedom-and-control","content":"\nwant to give the user the feeling they can freely explore the app\nand the freedomto control it\n\n- general flow\n- undo/redo\n\ne.g., ![](https://i.imgur.com/zF5LDVx.png)\ne.g., ![](https://i.imgur.com/eqfs1D6.png)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/veracity":{"title":"Veracity","content":"# Abstract\nBlockchain technology falls into two distinct classes: open (permissionless) blockchains such as those underlying bitcoin, Ethereum and Cardano; and closed (permissioned) blockchains such as implemented in the Hyperledger Fabric project. To motivate decentralised participation, open blockchains (presently) require an associated cryptocurrency, which can be a risky distraction. However, closed blockchains are considered by some to be insufficiently decentralised.This summer project aims to prototype a compromise: a closed blockchain system that encodes voting rules about self-governance, so that closed blockchain technology can be used in a more open manner. Experience in programming blockchain systems is not assumed. Depending on the student involved, the project will balance work between design and modelling of the blockchain governance rules, and implementation of such a rule set over an existing closed blockchain system.\n\n# Questions\t\n[answered-questions](notes/answered-questions.md)\n\n- [ ] What happens if a participant is caught being untruthful? \n\t- Can they be automatically kicked out or is a vote required? \n\t- How can we distinguish between mistakes and intentional deceit?\n\t\t- Maybe a reputation system. This way one mistake is not fatal, and a reputation can be restored over time\n- [ ] Should the central/initiating groups retain higher privileges even after other participants have joined?\n- [ ] Do members of a private consortium blockchain enter into a legal agreement?\n\n# Notes\n- [think-writing/log](notes/think-writing.md)\n\t- [[veracity-week01|week1]]\n\t- [[veracity-week02|week2]]\n\t- [[veracity-week03|week3]]\n\t- [[veracity-week04|week4]]\n- [[isolated scenarios|scenarios]]\n- [veracity-chain](notes/veracity-chain.md)\n- [reading-papers](notes/reading-papers.md)\n- [blockchain-terms](notes/blockchain-terms.md)\n\n[412-lectures](notes/412-lectures.md), [hyperledger](hyperledger.md), [governance](notes/governance.md) , [decentralized-autonomous-organization](notes/decentralized-autonomous-organization.md), [DeFi](notes/DeFi.md), [dApps](notes/dApps.md), [sybil-problem](notes/sybil-problem.md), [smart-contracts](smart-contracts.md), [transaction-finality](transaction-finality.md), [consensus](notes/consensus.md), [CPR-governance](notes/CPR-governance.md), [eth-governance](notes/eth-governance.md), [food-manufacturing](notes/food-manufacturing.md), [bitcoin](bitcoin.md), [[YAC]], [[holochain]], [[quadratic voting]]\n\n# Reading\n\n## Blockchain Papers\n**Good**\n- [[a systematic literature review on blockchain governance]]\n- [[A novel framework for policy based on-chain governance of blockchain networks]]\n- [[Application of Blockchain and Internet of Things to Ensure Tamper-Proof Data Availability for Food Safety]]\n- [[Defining Blockchain Governance — A Framework for Analysis and Comparison]]\n\n**Read**\n- [[YAC — BFT Consensus Algorithm for Blockchain]]\n- [[Parallel Governance for Decentralized Autonomous Organizations enabled by Blockchain and Smart Contracts]]\n- [[Vulnerabilities on Hyperledger Fabric]]\n- [[Governance in the Blockchain Economy — A Framework and Research Agenda]]\n- [[Now the Code Runs Itself — On-Chain and Off- Chain Governance-of- Blockchain Technologies]]\n- [[Decision Problems in Blockchain Governance — Old Wine in New Bottles or Walking in Someone Elses Shoes]]\n- [[Fork-free hybrid consensus with flexible Proof-of-Activity]]\n- [[A renewable energy microgrids trading management platform based on permissioned blockchain]]\n- [[research-on-the-reciprocal-mechanism-of-hybrid-governance-in-blockchain]]\n- [[zkCrowd — A Hybrid Blockchain-Based Crowdsourcing Platform]]\n- [[Toward an Interoperability Architecture for Blockchain Autonomous Systems]]\n- [[Blockchain Technology and Decentralized Governance – Is the State Still Necessary]]\n- [[Blockchain Based Wine Supply Chain Traceability System]]\n- [[Enhanced immutability of permissioned blockchain networks by tethering provenance with a public blockchain network]]\n- [[Blockchain Governance Challenges — Beyond Libertarianism]]\n- [[Decentralized Network Governance — Blockchain Technology and the Future of Regulation]]\n- [[A review on blockchain governance]]\n- [[Permissionless and Permissioned, Technology-Focused and Business Needs-Driven — Understanding the Hybrid Opportunity in Blockchain Through a Case Study of Insolar]]  \n- [[The Generic Blockchain Ecosystem and its Strategic Implications]]\n- [[LACChain Framework for Permissioned Public Blockchain Networks – From Blockchain Technology to Blockchain Networks]]\n\n**Papers to read**\n- DOI:[10.2139/ssrn.2811995](http://dx.doi.org/10.2139/ssrn.2811995) Disrupting Governance: The New Institutional Economics of Distributed Ledger Technology\n- https://tezos.com/whitepaper.pdf\n- https://www.ndss-symposium.org/wp-content/uploads/2019/02/ndss2019_02A-2_Zhang_paper.pdf A Treasury System for Cryptocurrencies: Enabling Better Collaborative Intelligence\n\t- Quadratic voting\n- https://ieeexplore.ieee.org/document/8818409 # A Full-Spectrum Blockchain-as-a-Service for Business Collaboration\n- [systematic review Related papers](notes/a%20systematic%20literature%20review%20on%20blockchain%20governance.md#Related)\n- https://doi.org/10.1177/0170840606067250 # Neither Market nor Hierarchy nor Network: The Emergence of Bazaar Governance\n\nFrom search\n- allintitle:(public) (permissioned) (blockchain OR DLT OR \"distributed ledger technology\")\n-  (https://www.igi-global.com/article/designing-the-architecture-of-a-blockchain-platform/259370)\n- New permissioned public blockchain based on master-sub chain architecture (http://www.joca.cn/EN/10.11772/j.issn.1001-9081.2021101790)\n-  Permissioned public blockchain with high performance (https://journal.szu.edu.cn/en/oa/darticle.aspx?type=view\u0026id=202003003)\n-  https://www.researchgate.net/profile/Suna-Kyun/publication/359728024_Design_and_Validation_of_Tertiary_General_Education_System_based_on_Public_Permissioned_Blockchain_and_Smart_Contract/links/624ba62f5e2f8c7a035bb5a0/Design-and-Validation-of-Tertiary-General-Education-System-based-on-Public-Permissioned-Blockchain-and-Smart-Contract.pdf\n- https://policycommons.net/artifacts/2437174/gas-distribution-protocol-for-permissioned-public-ethereum-based-blockchain-networks/3458762/\n\n**Other maybe relevant Papers**\n- https://www.multichain.com/download/MultiChain-White-Paper.pdf\n\n## Blockchain Articles\n**Read**\n- ISO Technical Committees. Blockchain and distributed ledger technologies. ISO TC307 WG5 TS23635 \n- https://101blockchains.com/blockchain-governance/\n- https://coopahtroopa.mirror.xyz/_EDyn4cs9tDoOxNGZLfKL7JjLo5rGkkEfRa_a-6VEWw\n- https://101blockchains.com/permissioned-blockchain/\n- http://eyler.freeservers.com/JeffPers/jefpco55.htm?ref=hackernoon.com\n- https://en.wikipedia.org/wiki/Cyberocracy\n- https://en.wikipedia.org/wiki/Government_by_algorithm\n- https://medium.com/@Vlad_Zamfir/against-on-chain-governance-a4ceacd040ca\n- https://medium.com/@FEhrsam/blockchain-governance-programming-our-future-c3bfe30f2d74\n- https://vitalik.ca/general/2017/12/17/voting.html\n- https://bitcoin.org/bitcoin.pdf\n- https://medium.com/@WayneVaughan/open-vs-closed-blockchains-let-s-end-this-madness-8313e4095ead\n- https://medium.com/good-audience/blockchain-governance-101-eea5201d7992\n- https://www.ibm.com/blockchain-supply-chain\n- https://www.hyperledger.org/wp-content/uploads/2018/08/HL_Whitepaper_IntroductiontoHyperledger.pdf\n- https://www.mobycrypt.com/do-we-need-closed-blockchains/\n- https://developer.oracle.com/learn/technical-articles/permissioned-blockchain\n- https://medium.com/wavesprotocol/what-closed-blockchain-is-for-190534b5951\n- https://www.investopedia.com/news/public-private-permissioned-blockchains-compared/\n- https://www.forbes.com/sites/forbestechcouncil/2019/06/11/public-vs-private-permissioned-ledgers-and-blockchain-standards/?sh=39aaa258550b\n- https://www.linkedin.com/pulse/public-permissioned-blockchains-common-pool-resources-jesus-ruiz/\n- https://smithandcrown.com/glossary/transaction-finality-probabilisticdeterministic/\n- https://www.r3.com/blog/how-public-permissioned-blockchains-are-not-an-oxymoron-2/\n- https://blog.dshr.org/2022/02/ee380-talk.html\n- https://ethereum.org/669c9e2e2027310b6b3cdce6e1c52962/Ethereum_Whitepaper_-_Buterin_2014.pdf\n- https://www.investopedia.com/terms/b/blockchainasaservice-baas.asp\n- https://nodes.com/#blockchain-nodes-types\n- https://medium.com/cryptoapis/utxo-and-account-based-blockchains-d1d3c638524\n- https://medium.com/crypto-24-7/bitcoin-is-finished-863e5370150\n- https://www.hyperledger.org/blog/2017/09/06/abcs-of-open-governance\n- https://www2.deloitte.com/us/en/insights/focus/signals-for-strategists/emergence-of-blockchain-consortia.html\n\n**Docs**\n- https://iroha.readthedocs.io/en/develop/maintenance/add_peer.html\n- \n\n**Might Read**\n- https://stakingfac.medium.com/what-is-nominated-proof-of-stake-889fc22bef8f\n- https://en.wikipedia.org/wiki/Futarchy\n- https://pluralistic.net/2022/02/14/externalities/#dshr\n- https://www.apc.org/en/pubs/network-infrastructures-commons-model-local-participation-governance-and-sustainability\n- https://ec.europa.eu/digital-building-blocks/wikis/display/EBSI/Home\n- substrate based blockchains\n\n**Blockchain Projects**\n- https://ethereum.org/en/governance/\n- https://docs.decred.org/governance/overview/\n- https://time.com/6142810/proof-of-humanity/\n- https://alastria.io/en/what-is-alastria/\n- https://www.lacchain.net\n- https://swarm.city\n\t- https://whitepaper.io/document/140/swarm-whitepaper\n- https://internetcomputer.org/what-is-the-ic\n- https://polymesh.network/permissioned-blockchain\n\t- https://polymath.network/polymesh-whitepaper\n\t- [[polymesh]]\n- kosama\n- edgeware\n- Polkadot\n- www.kaleido.io\n- holochain\n- \n\n## Other Reading\n- https://docs.docker.com/config/containers/container-networking/\n- http://nzfoodmanufacturer.co.nz/alibaba-blockchain-technology-drive-food-safety-quality/\n- https://collegegrad.com/industries/food-manufacturing","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/veracity-chain":{"title":"veracity-chain","content":"I just started this to get some basic structure down.\n\n# Overview\n\n\n# Stakeholders\n- Main Authority e.g., govt\n- Other Participants\n\t- Agriculture\n\t\t- Large Corporations\n\t\t- Small/Family owned\n\t- Food-Manufacturing\n\t- Retail/Marketing\n\t- Shipping?\n\nWho operates the nodes?\n\nDirect: Stakeholders who interact with the blockchain\nIndirect: Stakeholders who are affected by but do not interact with the blockchain\n\nThings to consider:\n- Should small and large business have equal weight in the vote?\n- ~~Will small businesses be able to set up the required infrastructure?~~\n\t- What is the required infrastructure — I think they just use a website/app to upload information\n\n# Process for Change\nCan/Should we use a system similar to EIPs/BIPs?\n\n# Voting Protocol\n\n# Handling Disagreements\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/veracity-week01":{"title":"","content":"# 15/11\n\nwhere to start? pretty overwhelmed with this whole blockchain thing. Not really sure where this project is going. At the moment what I understand is that I'm looking to a more open version of a closed blockchain. One which is initiated by a central authority e.g., the government, who then allows other parties to join. In the example with the organic supply wh- would each company who wanted to verify that their produce is organic, \"join\" a central blockchain. From the beginning of the (supply) chain to the end there are many different companies involved. So would the journey of the item be tracked on a blockchain? Maybe not neccessarily the journey but maybe throughout its route, each thing (or an agreement to provide that thing) that is need to prove an item's \"organicness\" is added to the chain, then when it reaches the end the chain is discarded? Surely that's not right. Does a blockchain necessarily need to represent a *sequence*? Yeah I think so. But a currency like bitcoin is an infinite sequence, whereas an items journey is finite. What does a blockchain used in a supply chain context represent?\n\nFrom the abstract - \"closed blockchains are considered by some to be insufficiently decentralised.This summer project aims to prototype a compromise: a closed blockchain system that encodes voting rules about self-governance, so that closed blockchain technology can be used in a more open manner\"\n\n\"insufficiently decentralised\" - closed blockchain are regulated by a central authority who decides who can join and leave the network. \n\n\"closed blockchain system that encodes voting rules about self-governance\" - this will allow users to come and go at will - to a degree. There must be some limiting factor because otherwise this is just an open blockchain.\n\nI need to lower my expectation for the rate of progess I think. If I can establish a clear goal by the end of the week I will be happy. \n\n---\n\n# 16/11\n\nso is it a closed blockchain with a set number of participants (or a set of requirements for participants?) who can join (what does join mean in this context) and leave at will. How are all the different companies on the same blockchain. How do smart contract fit into all this? Is sequence relevant in a closed blockchain or is it just like a regular but distributed database?\n\nhttps://medium.com/wavesprotocol/what-closed-blockchain-is-for-190534b5951 This article proposes that closed blockchains should be used for implementing business logic rather than just putting data onto them. It gives the example of a trucking system tracking a drivers route and using a smart contract to automatically give them a bonus for taking a shorter route. It would also be able to detect whether a drive tampers with data by comparing it to the \"big data collected during the operation of the company\". \n\nDidn't really answer my above questions and It also seems like all the \"new\" thing proposed by the article have already been done without blockchain technology. However it does seem like the data is not sequential and works just like a regular database. It's stil not super clear though. \n\nhttps://medium.com/@WayneVaughan/open-vs-closed-blockchains-let-s-end-this-madness-8313e4095ead This article from 2015 seeks to clear up the terms used to talk about open and closed blockchains. It's defines closed as:\n\u003e\"A private network that maintains a shared record of transactions. The network is accessible only to those who have permission and transactions can be edited by administrators. Examples: [Hyperledger](http://hyperledger.com/), [Ripple](https://ripple.com/), [Eris](https://erisindustries.com/)\"\n\nhttps://developer.oracle.com/learn/technical-articles/permissioned-blockchain\n- Permissioned — Open, decentralized networks with universal consensus validation; anyone can join the network and possess a copy of the ledger\n\nhttps://www.mobycrypt.com/do-we-need-closed-blockchains/ (badly written) Gives an examle of a closed blockchain IBM food trust which tracks the history (changes, as transactions within blocks?) of the food from beginning to end. The members of the supply chain process are the participants in the blockchain. \n\nSo within a supply chain blockchain, each change in the state of an item is recorded as a \"transaction\" and appended to the blockchain. These transactions are stored indefinitely? Then we can go back and look through the history of that item. How can you view the history of the item. I thought all previous transactions were stored as a hash. I guess we have the key to decrypt it?\n\nFrom the bitcoin whitepaper:\n![](https://i.imgur.com/VutNw5Y.png) Do closed blockchains look the same?\n\nhttps://www.hyperledger.org/wp-content/uploads/2018/08/HL_Whitepaper_IntroductiontoHyperledger.pdf\n- Different services within hyperledger\n\nSo what is the issue with current closed blockchains - \"not sufficiently decentralised\". Is the problem of storing the history of product within a supply chain \"solved\"? Let me try an example. There is a company growing organic oranges. Do I need to research the regulations for organicness? The company growing the oranges adds a block to the blockchain containing information or pointers to information required to verify their authenticity. (what about all the products used for growing the oranges, not sure how all the details work here. I dont think that is in the scope) Then as the shipment travels through the supply chain, each step along the way a new \"transaction\" is added to the chain. These transactions are created by each of the companies handling the shipment. \n\nwhat is the scope of \"the blockchain\". is there one chain per shipment, are all shipments tracked on one blockchain, is it separated by industry. wouldn't shipping companies operate across multiple industries? do they participate in several chains? are there several blockchains interacting (whatever that means)? Can two chains interact? does one shipping company have their own blockchain. \n\nonce a shipment is delivered to a consumer is its history moved to an archive? Is that possible or even necessary on a blockchain?\n\nAnd how is this chain governed. who is the central authority, who decides who can join and leave, how are participants verified as being who they are? \n\n\"a closed blockchain system that encodes voting rules about self-governance\" — so each of the participating parties vote about who can join. Is governance in this sense the same as within an open blockchain? within an open blockchain the goverance includes decisions about update and changes to the code of the blockchain. ==what is governance within a closed blockchain==. Is the code closed source? is development distributed between participating parties, or one central group? ==Why a participant of one of these chain want to fork?== what does that even mean? \n\nwhat are public vs private permissioned blockchains\n\na normal permissioned blockchain is developed and managed by one group. this group governs everything, and decides who can join and leave etc. What i am looking for is a way for a closed blockchain such as this, to be governed by a more decentralised group. This means development is spread across participants, and decisions are voted on by many participants through rules/protocols encoded within the blockchain itself (similar to on-chain governance).\n\nI think I am getting somewhere.\n\nNow what do I do? Still many unanswered questions. I dont understand the scope of a blockchain within a supply chain context.\n\nhttps://www.ibm.com/blockchain-supply-chain There are clearly many different blockchains. So how do these work together? using the example of the organic produce. A large store like paknsave has an agreement with a farm to but their supposed organic produce. paknsave has created a blockchain where suppliers like these can join and provide relevant information about their product, which pak n save can see. \n\nor. the government creates some regulations for organic items, and a blockchain. then suppliers can join the blockchain and add their data to it, and retailers like pak n save (maybe also consumers) can also join and view the relevant information. maybe these regulations are trusted internationally so local growers exporting produce dont have to comply to the regulations of multiple governments. so where do the intermediaries such as shipping companies and various depots fit in. are they also participants in this blockchain\n\n---\n\n# 17/11\n\nSo who runs/starts the blockchain? Initiated by central authority like the govt. Then compies who want to verify that they are an organic producer ask to join the network so they can add the required documents (or pointers to the documents) to the chain. These documents are now viewable by governing authorities (perhaps internationally) and maybe also other particpants. If necessary, various parties involved in the supply chain can also add blocks. \n\nIn the hyderledger whitepaper they described a use case for seafood tracking where-\n\nis all this writing productive, ive actually started using this doc as just a place to write stuff not as actual think writing. is there a better way to take notes? document for each article? \n\npublic vs private blockchains — [blockchain-types](notes/blockchain-types.md). So it sounds like what I am trying to do Is very similar to a public permissioned blockchain.\n\nis a private blockchain even a chain of blocks. Its an immutable, more transparent, distributed ledger. Why cant that be done with a regular database?\n\nPermissioned (public) blockchains allow \"anyone to join the permissioned network after a suitable identity verification process. Some give special and designated permissions to perform only specific activities on a network\"\n\nhttps://sovrin.org example of a public permissioned blockchain. it is a public service utility enabling self-sovereign identity on the internet. it is based on hyperledger indy. interesting but doesn't really help me.\n\nhttps://www.academia.edu/41965099/Public_Permissioned_blockchains_as_Common_Pool_Resources (written by the CTO of alastria) seems like a very relevant article. It describes a public-permissioned blockchain, with decentralised governance. It likens managing a public permissionless blockchain to managing common pool resources. One of the issues with managing CPRs is developing the required trust. However, with blockchain technology, you can encode goverance rules directly into the infrastructure which are immutable, transparent and automatic. this is [On chain governance](notes/governance.md#On%20chain%20governance). This can be used to implement the rules of [CPR-governance](notes/CPR-governance.md) outlined by Ostram.\n\n[transaction-finality](notes/transaction-finality.md)\n\ntwo types of nodes in a permissioned blockchain network:\n- Consensus nodes - responsible for the execution of the consensus algorithm\n- Regular nodes - perform the maintenance of a local copy of the blockchain using the blocks generated from the set of consensus nodes.\n\nalastria uses IBFT consensus algorithm.\n\n---\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/veracity-week02":{"title":"","content":"# 21/11\nOn friday I tried to get haydens hypderledge iroha code from last year to work [here](https://github.com/hmcalister/SWIPL-Notebook-Blockchain-Filehashing) and [here](https://github.com/hmcalister/Hypderledger-Iroha-Multinode-Demo). I was unable to. Each of the blockchain nodes were running in their containers, but I wasn't able to connect to them from a python script running locally. I need to make a plan for this week. \n\n- Try to figure out a way to connect to the nodes from a script \n\t- Maybe from a fifth container?\n- If I am unable to connect to the nodes I might have to start them from scratch\n\t- This would help me to learn the tools also.\n- Try to figure out how the public permissioned blockchain might work in some more detail.\n\n---\n\n# 22/11\n\nYesterday I got one iroha node running by itself in a docker container and was able to make transactions and queries using a python script. This morning I'll try to get a few nodes to interact together. And In the afternoon I will do some reading about CPRs and governance.\n\ndoi: 10.1109/TEM.2020.3003565: Permissionless and Permissioned, Technology-Focused and Business Needs-Driven: Understanding the Hybrid Opportunity in Blockchain Through a Case Study of Insolar. \n- Sidechains? \n- soft vs hard fork\n\t- soft: different states of the same blochain that coexist and are eventually reconnected\n\t- hard: a complete separate copy of a blockchain\n- How will the blockchain be funded? Maybe I need to consider this.\n- Blockchain as a service?\n\t- https://www.investopedia.com/terms/b/blockchainasaservice-baas.asp\n\t- amazon managed blockchain\n\t- microsoft ethereum blockchain-as-a-service\n\t- r3\n\t- paystand\n\t- hyperledger cello\n\t- [IBM Blockchain Platform](https://www.trustradius.com/products/ibm-blockchain-platform/reviews \"IBM Blockchain Platform reviews.\"), [Oracle Blockchain Cloud](https://www.trustradius.com/products/oracle-blockchain-cloud/reviews \"Oracle Blockchain Cloud reviews.\"), [Azure Blockchain Service](https://www.trustradius.com/products/azure-blockchain-service/reviews \"Azure Blockchain Service reviews.\"), [Alchemy](https://www.trustradius.com/products/alchemy/reviews \"Alchemy reviews.\"), [Infura Ethereum API](https://www.trustradius.com/products/infura-ethereum-api/reviews \"Infura Ethereum API reviews.\"), [Kaleido](https://www.trustradius.com/products/kaleido/reviews \"Kaleido reviews.\"), [Amazon Managed Blockchain](https://www.trustradius.com/products/amazon-managed-blockchain/reviews \"Amazon Managed Blockchain reviews.\"), [Crypto APIs](https://www.trustradius.com/products/crypto-apis/reviews \"Crypto APIs reviews.\"), [VMware Blockchain](https://www.trustradius.com/products/vmware-blockchain/reviews \"VMware Blockchain reviews.\"), and [Cryptomat](https://www.trustradius.com/products/cryptomat/reviews \"Cryptomat reviews.\").\n\npermissioned blockchain \"connected\" to permissionless blockchain \n\nhttps://ieeexplore.ieee.org/document/8818409 # A Full-Spectrum Blockchain-as-a-Service for Business Collaboration\n- https://en.wikipedia.org/wiki/Zero-knowledge_proof\n- https://en.wikipedia.org/wiki/Hidden_Markov_model\n\nin a public permissioned blockchain, what is stopping an attacker from registering enough nodes to perform a 51% attack, If we are not using a BFT consensus algorithm?\n\nwhat type of technology is bitcoin (DOI:[10.2139/ssrn.2811995](http://dx.doi.org/10.2139/ssrn.2811995)) makes the case that bitcoin/blockchain technology is not merely a new general purpose technology but a new institutional technology of governance.\n\n\n\"In an important sense the limits of this new technology are the limits of imagination in the same way that once upon a time it was hard to imagine what use computers could be, or to see what things computers could be applied to, before it eventually became clear that the answer was everything. The same pattern unfolded for the internet, and now everything is on the internet. it is not unreasonable to think this same dynamic will play out with blockchain, which is also made of computers and the internet\"\np18 social operating system\n\np20 stigmergic coordination. governance based on a reputation system. reputation can be gained by either making a value contribution or evaluating someone elses conrtibution that is in line with the organisations value system. agents are judged on their actions and their judgements of others actions\n\np21\n\"Blockchain distributed ledger technology is a rare and special general purpose technology because it adds a further category to the suite of Williamson’s (1985) ‘economic institutions of capitalism’—namely, markets, hierarchies and relational contracting—with a new type of economic order: a Decentralized Collaborative Organization.16 A Decentralized Collaborative Organization (DCO) is a selfgoverning organization with the coordination properties of a market, the governance properties of a commons, and the constitutional properties of a nation state. It is an organization, but it is not hierarchical. It has the coordination properties of a market through the token systems that coordinate distributed action, but it is not a market because the predominant activity is production, not exchange. And it has the unanimous constitutional properties of a rule-of-law governed nation state, by complicit agreement of all ‘citizens’ who opt-in to such a DCO, and the automatic execution of the rules of that DCO through smart contract enforcement\"\n\np4\nMany enthusiasts simply promote the blockchain as a more efficient, decentralized and consensus-driven public repository, which can have a number of applications in order to make citizens less dependent on governments, yet within a society that is ultimately founded upon the State authority. Techno-libertarians and crypto-anarchists hold instead a more extremist position. They are generally inclined to consider the State as an illegitimate, unnecessary and irremediably obsolete depository of power, and they openly encourage the use of the new information technology as a liberating force against the very concept of authority. According to this view, we are at a stage in history when individuals can gradually overcome any centralized political institution through distributed consensus and create the conditions for an idealistic society of equals, characterized by flat, rather than hierarchical, structures.\n\n^ this method of note taking does not work. I need to engage more with the material I think. I need to have a specific purpose when reading, instead of just looking at vaguely relevant papers/articles\n\n---\n\n# 23/11\n\n- https://doi.org/10.1016/j.eneco.2022.106375 A renewable energy microgrids trading management platform based on permissioned blockchain\n\t- [blockchain types](https://i.imgur.com/5CDGjeL.png)\n\n- M. Crosby, P. Pattanayak, S. Verma, V. Kalyanaraman **Blockchain technology: beyond bitcoin** (2016)\n- https://doi.org/10.1155/2020/5385207 Application of Blockchain and Internet of Things to Ensure Tamper-Proof Data Availability for Food Safety\n\t- supply chain connect three sectors: agriculture, food-manufacturing, marketing (incl dist).\n\t- three sources of food: crops livestock, seafood\n\t- [similarities and differences between different meat and milk production systems](https://i.imgur.com/g1NnYSl.png)\n\t- food fraud is increasing\n\t- [blockchain types and techs table](https://i.imgur.com/NcCoxiU.png)'\n\t- rfid tracking\n\t- traceability\n\t- ![flow of products and associated data on the blockchain](https://i.imgur.com/qTuzm4e.png)\n\n- https://doi.org/10.1016/j.tre.2020.102025 Evaluating the factors that influence blockchain adoption in the\nfreight logistics industry\n- [http://www.ijpe-online.com/EN/Y2018/V14/I9/2040](http://www.ijpe-online.com/EN/Y2018/V14/I9/2040) Research and Development of Blockchain Security\n- https://dl.acm.org/doi/pdf/10.1145/3190508.3190538 Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains\n- https://www.ibm.com/blogs/blockchain/2018/02/one-nations-move-to-increase-food-safety-with-blockchain/\n- https://www.researchgate.net/publication/321474197_Blockchain_Based_Wine_Supply_Chain_Traceability_System\n- https://ieeexplore.ieee.org/document/8823910 # Ensure Traceability in European Food Supply Chain by Using a Blockchain System\n- http://dx.doi.org/10.21900/iconf.2019.103295 # Processes and challenges for the adoption of blockchain technology in food supply chains: A thematic analysis\n- https://nofima.com/publication/1673512/ # Applications, limitations, costs, and benefits related to the use of blockchain technology in the food industry \n- https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3344839 # Blockchain Meets Genomics: Governance Considerations for Promoting Food Safety and Public Health\n- https://ieeexplore.ieee.org/document/8674550 # Blockchain Inspired RFID-Based Information Architecture for Food Supply Chain\n\nI read will some of these later maybe. I think i need to start focusing on \"design and modelling of the blockchain governance rules, and implementation of such a rule set over an existing closed blockchain system\". Clearly the existing blockchain network is not working yet so I might try to implement that later. I think I should start trying to design some governance rules. \n\nHow are they implemented? Are they like smart contracts? Is it like on-chain governance - how is that implemented? Do I need to know that yet? maybe I could look at some existing blockchains with on-chain governance and see how that works. It would have to be a permissioned blockchain because I think a permissionless blockchain would be radically different. \"Encodes voting rules about self governance\" — What are they voting on? What are they actually governing?\n- Development decisions\n- Allowing new participants to join the network\n\nWho are the members that are allowed to vote? Who are the members of the network. \n\nE.g., three farms producing products want to verify they are organic. There exists a blockchain which was initiated by the government, where they can \"join\" and upload documents (or pointers to documents – maybe using zero knowledge proof?) which prove they are organic. (Do we need to track the actual products using IoT/RFID/etc). Who else is part of the blockchain? Retailers and Food-manufacturing? Then what happens? The farm sends produce to the manufacturers who use it in an organic way and who also upload relevant documents to the blockchain. Next, the product arrives at a retailer who can view the history of the item and market it accordingly. Finally a customer sees it and can and verify that it is organic before they buy it (are they able to view all the documents?).  \n\nWhat do the \"voting rules about self governance\" need to accomplish? Shouldn't the system just work by itself. Its just a database, what do they need to vote on? Allowing new members in?\n\nI GOT HAYDENS FOUR NODES TO WORK!!\n\n---\n\n# 24/11\n\nToday I'll spend the morning to get the SWIPL Iroha network to work. And do more reading/thinking this arvo.\n\nCouldn't figure out swipl kernel. Reinstalling virtualbox, and trying to get VM working again. \n\nIn the meantime. I'm going to try to find some example of \"governance rules\".\n\nstarting with https://ethereum.org/en/governance/. Maybe I should aim to produce a similar documet for a proposed veracity blockchain?\n- [eth-governance](notes/eth-governance.md)\n\nWhat do I need to define so that I can design rules for the governance of my blockchain?\n- How much can I adapt from existing chains? I should probably review the governance of other chains (while developing my own)\n- I need to define:\n\t- Stakeholders\n\t- A process for change\n\t- Handling Disagreements\n\t- Voting protocol\n\nI just started [this](notes/veracity-chain.md) document. I think I am going too much into detail about the external system.\n\nIn ethereum governance rules are the systems that allow the protocol to change. Do the governance rules in our permissioned chain need to cover anything else. So far I've identified two things that the governance need to manage:\n- The process for change of the codebase/protocol\n- The process for admitting a new participant\n\nWhat happens if a participant is caught being untruthful? Can they be automatically kicked out or is a vote required? How can we distinguish between mistakes and intentional deceit?\n\n---\n\n# 25/11\n\nhttps://www.researchgate.net/publication/321474197_Blockchain_Based_Wine_Supply_Chain_Traceability_System\n- [wine supply chain entities](https://i.imgur.com/9D0tsVF.png)\n\t- could be very similar to organic food supply chain\n- The proposed traceability system uses a private blockchain with pre-selected miners and a block is added to the chain if and only if it is verified by the majority number of miners\n\nhttps://www.multichain.com/download/MultiChain-White-Paper.pdf\n\n- https://doi.org/10.1016/j.ipm.2021.102556 # A novel framework for policy based on-chain governance of blockchain networks\n\t- Like other PDCAs, blockchains may require human intervention from different perspectives (fault, configuration, asset, performance, and security management).\n\t- main issue with decntralised governance\n\t\t- consensus of stakeholders\n\t\t- security of governance\n\t\t- centralisation risk\n\t\t- fairness\n\t\t- conflicting interests\n\t\t- effectiveness\n\t\t- complexity\n\t\t- flexible governance\n\t\t- slow response in problem cases\n\t\t- inter proposeal dependencies\n\t- It is a double-edged sword. It allows quicker decision-making but it's risky because the governance system becomes harder to change once instituted.\n\nhttps://arxiv.org/pdf/2105.05460.pdf A SYSTEMATIC LITERATURE REVIEW ON BLOCKCHAIN GOVERNANCE\n- \n\n---\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/veracity-week03":{"title":"","content":"# 28/11\n\nWeek Review. \n- Got four hypderleger iroha nodes working, and connected to them from a python script\n- I wasn't able to get the SWIPL notebook to work. Need to decide how much time to spend on that\n- I Read the ethereum whitepaper. This gave me a much better understanding of how smart contracts work. As well as how a blockchain more advanced than bitcoin works.\n- Some interesting things to note from my reading\n\t- Permissioned blockchain connect to permissionless chain. (Interesting idea, I cant find where i got this from, need to organise better. Might be worth spending some time today to do this)\n\t- Storing proof of documents using. Zero Knowledge Proof, Hidden Markov Model. This as also in a paper I cant find.\n\t- The idea of governance based on a reputation system. Look into stigmergic coordination (http://dx.doi.org/10.2139/ssrn.2811995)\n\t- https://doi.org/10.1155/2020/5385207 was a useful paper. It gave me some of idea of what we might need to store on the chain, and what steps are involved in the supply chain\n- Identified what the governance rules might need to manage. And made a list of some questions I will need to answer.\n- I also got some tips from pradeesh for reading papers and started reading a survey paper.\n\nFinished reading Survey paper. Some key takeaways:\n- need to consider governance of: platform, community, applications and data\n- need to consider governance during \n- need to consider process as well as product mechanisms\n\nI think I should start with an existing example as a base and work on improving/changing it. After that, once I understand what is required, I could think about designing one from the ground up.\n- What exists for me to start from?\n- What the issues with it? What do I need to change?\n\nTomorrow/Wednesday: Find a base\nEOW: Identify Issues\nNext Week or Two: Fix issues and work on implementations as I go\nAfter: Start from ground up. Work on Implementation\n\nIn order to find a base I need to know how a system is governed. This might not be the easiest information to find. I will have to rely on implementation of platform governance using product mechanisms as there are more publicly available. Could I use a combination of different bases. e.g., a DAO for community governance, Ethereum for platform governance, and something else for data. Is that a good way of splitting it up. How can I leverage existing governance of organisations such as the Linux Foundation. \n\n---\n\n# 29/11\nI have decided to start from a base such as ethereum and adapt it to what I need. By doing this I will either create a solution or gain a much better understanding of the problems which would allow me to create my own solution from the ground up.\n\nPossible starting points\n- swarm.city\n- alastria\n- various DAOs\n- ethereum\n- bitcoin\n\nThe governance of a blockchain can be split into four main components: platform, community, apps, data. It is possible that I will choose a different starting point for each component.\n\nHow am I going to choose a base? I need to decide on some criteria. What does it need to accomplish? Are there any vendor solutions that are close to what we want? I think its not as easy as I thought to understand fully the governance of a blockchain project from its website.\n\n- needs to be a permissioned blockchain. I think? maybe not. \n\n[[Enhanced immutability of permissioned blockchain networks by tethering provenance with a public blockchain network]]\n[[LACChain Framework for Permissioned Public Blockchain Networks – From Blockchain Technology to Blockchain Networks]]\n\n---\n\n# 30/11\n\nYesterday\n- looked at swarm city, alastria, etherum, polymesh as bases.\n- Tried to read some papers about public permissioned blockchain. some good. 4 of them most cited were in chinese so I couldn't read them\n- i read about lacchain and the tethering blockchain papers. tethering would allow you do leverage the security that public chains get from have a large number of participants without having to have that many participants\n- started to think about what I am looking for in a base. I realised I still dont really know and that starting from a base might not actually help me to find that out. I need to identify issues with current systems, because to me it seems like I could almost just use an existing p- maybe not. I think I just need to write down a basic overview of what I want, then work out the details later.\n\nMeeting with david\n- I should look into some specific scenarios and how they might play out within existing closed blockchain systems. e.g.,\n\t- kicking out one or more participants\n\t- forking due to not trusting or agreeing with other participants\n\t- what if one participant is a bad actor and the other want to remove them, but the bad actors vote is required\n- The idea of tethering a closed blockchain to a public blockchain is worth exploring further\n- Within the veracity project (or outside it), rather than acting directly as a source of truth, a blockchain should act as a store of records that can then be used by relevant authorities to make decisions – which can then be recorded on the chain\n- maybe consider something related to a reputation system like ebay (talk to andrew), trademe, etc\n- regarding scope: this is something I need to think about. Does it make sense to have a closed blockchain with 100s or 1000s of participants. This is somewhere where we would likely have a small group of validator nodes and many less-priviledged participant nodes\n- my role is this project is exploratory. By considering many small (or big) scenarios, I might eventually find one which breaks the existing architectures and I can then work on a solution for that.\n- I should spend some time to try and get the prolog kernel working\n\t- try rolling back to an earlier version\n- also test the aforementioned scenarios using a small network of ~10 participants\n\n**Scenario 1**\nWhat happens if one participant turned bad and the other wanted to remove them from the group. Ssay we havea grup of 10 participants in a closed blockchain system using a CFT consensus algorithm Then they can be voted out so that their vote is desregarded and so they cant view or access data on the chain. what if they require access to decuments stored on-chain which they dont have local copies of. I guess they wuld have access to a stored copy of the blockchain on their node. But then would this chain be considered valid by oters. they dont store the actual document on the blockchain – only a timestamped hash to prove they had that doc at this particular time. participats should keep local copies of documents. Can participants kick out the initiating authority? You would have some mechanism to ensure that they cant be kicked out. firstly there would have to be a vote to kick them out. unless they aren't actually needed. who are the people that look at the documents to check them. Some third party collectively employed by the group? the govt? maybe its required for each participant to sometimes go and check if other participants are being truthful.\n\n# 01/12\nYesterday\n- had a good chat with david.\n- decided to spend some more time trying to get the prolog kernel to work\n- instead of designing the whole governance system, I'll look how some scenarios might play out within existing closed blockchain systems. Hopefully after ive done a lot of those I will run into some scenarios where the existing system is not good enough and then I can try to improve on it.\n- for example say we have a closed chain with 10 participants, and 4 of them are unhappy with the something about how the blockchain is being run. what happens then? can they just fork? how would that work? etc\n\nToday\n- read some papers\n- think abt some scenarios\n- work on swipl notebook\n\n**Scenario 2**\nWithin an existing closed BC with 10 participants. say we wanted to add another participant as a validator node. they run the node software on a machine. this node is fully priviledged. they new member had to go through a screening and sign a legal contract to ensure they are not a bad actor. this node recieves a copy of the blockchain so far, and begins participating in the consensus algorithm and submitting transactions. their contract is added to the blockchain as their first transaction (maybe. or it can be stored somewhere else). \n\n**Scenario 3**\n The new participant makes a mistake and puts the entire document instead of just a hash. this document is sensitive and contains data that should be kept private. \n - automatically perform some checks to ensure the data lodged during a transaction is always just a hash.\n - is this the responsibility of the participant or the network to prevent. should be participant but that doesn't mean there shouldn't be some checks that the network can do \n - do we want to store data other than hashed documents.\n - if the document is lodged on the BC can the consortium agree to remove it by doing basically a hard fork\n\t - what happens to the other side of the fork? just stops. \n - i guess thats a lot easier in a closed BC than an open one\n\n# 02/12\nYesterday\n- spent about a ½ hr figuring out how to edit the code running in the docker container. then I added more logging and found which line was breaking. `prolog.consult(f.name)`. `prolog` is from the `pyswip` package. so ill try a previous version of that today.\n- considered two scenarios: uploading a document not a hash and adding a member to the chain\n- and read two papers: [Defining Blockchain Governance — A Framework for Analysis and Comparison](notes/Defining%20Blockchain%20Governance%20—%20A%20Framework%20for%20Analysis%20and%20Comparison.md) and [Decision Problems in Blockchain Governance — Old Wine in New Bottles or Walking in Someone Elses Shoes](notes/Decision%20Problems%20in%20Blockchain%20Governance%20—%20Old%20Wine%20in%20New%20Bottles%20or%20Walking%20in%20Someone%20Elses%20Shoes.md)\n\ntoday\n- get kernel to work\n- read more papers\n- tink about more scenarios+\n\nThe SWIPL notebook is working. just need to change the version of pyswip back to 0.2.9. now what code can I work on in the afternoons? \n\n**Scenario 3 cont.**\nIf someone uploads a document by accident that is sensitive, then the chain hard forks to remove it from the history, is it still publicly available (to the members of chain) or is the old fork erased. bu then what if someone stored a local copy (which they do). maybe the local copy is stored encrypted and the owner of the document has the key to unlock it.\n\n**Scenario 4**\nwhat if someone found a security vulnerability in the code. would they exploit it? how to change the code. would there be a different process to normal code changes for something critical like this. within the blockchain wallets/accounts are linked to a real world identity. but i guess the person who found the vulnerability could easily (note the \"person\" is a member of an organisation who has access to the code) tell someone else who is not identifiable and have them exploit the vulnerability. how do organisations decide who has access to the code. if the person does not decide to try to exploit it, they have to bring it to the attention of others or try to fix it themselves. \n\n---\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/veracity-week04":{"title":"","content":"# 5/12\n\nWeek Review\n- Got the prolog notebook to work. \n- Read some interesting papers, tethering to public chain, reciprocal hyribd on/off chain governance\n- thought about some scenarios\n\t- kick out participant\n\t- add new participant\n\t- mistakently add senstitive data to chain\n\t- one participant finds a security bug\n\nThis week\n- try to implement some scenarios with a demo network\n\t- add new participant: off-chain or on-chain voting? Should store some record of vote outcome on-chain\n- consider more scenarios\n- read more papers\n\nMore about adding new member\n- Existing members vote to add new member\n- on or off chain vote?\n- store record of vote outcome on-chain\n- consider special cases\n\t- details of vote cutoff time\n\t- parameters of vote change during vote\n- hyperledger\n\t- The purpose of add peer command is to write into ledger the fact of peer addition into the peer network. After a transaction with AddPeer has been committed, consensus and synchronization components will start using it.\n\t- transaction to remove peer requires the node making the transaction to have the can-remove-peer permission\n\t- can nodes with this perssion remove peers at will?\n\t- not 1:1 nodes:accounts\n\t- with HL Burrow you can use Solidity smart-contracts on Iroha\n\t- iroha would either have to be off-chain voting then a trusted peer (or initial) would add them\n\t- or: will need to look into HL Burrow but there might a way to have an on-chain smart contract voting system which automatically adds them depending on the vote\n\t\t- I could think about how to implement such a smart contract\n\n# 6/12\n\nyesterday\n- didn't get a lot done\n- trying to get notebook to work with pyswip 0.2.10\n- some thoughts about adding a new person to the chain\n\t- looked at how to do it within hyperledger\n\t- one existing peer needs permission to add another peer\n\nwhat about removing a person from the chain?\n- within hyperledger. \n\nshould i be using iroha2 - much better docs, newer version.\n\nhttps://github.com/hyperledger/iroha/blob/iroha2-dev/docs/source/iroha_2_whitepaper.md\n\nIm going to try to add a fifth peer to the four node demo network while its running\n# 7/12\nyesterday\n- tried to get HL iroha to add a node\n- think i got but i need to add some logs to check\n\nwhat i did yesterday didn't work. spend some time this morning to try to get it to work. the docs are not very helpful. might give up on that for now. \n\nbrain is fried. will do some light (ish) reading. \n\n---\n\n# 8/12\nhttps://doi.org/10.1016/j.pmcj.2019.101050\nhttps://doi.org/10.1016/j.im.2021.103444\nhttps://doi.org/10.1016/j.giq.2021.101625 [[Vulnerabilities on Hyperledger Fabric]]\n\nI was able to start a network with three nodes and add a fourth. Next I will try to set up integration with hyperledger burrow so I can use smart contracts.\n\nChanged docker container to use iroha-burrow instead of haydens own docker image. All works so far. installed solidity compiler and started trying to add a smart contract\n\n---\n\n# 9/12\n\nhttps://doi.org/10.3390/admsci12030096\nhttps://doi.org/10.1016/j.cities.2021.103325 [[Blockchain-based smart contracts as new governance tools for the sharing economy]]\n\n---","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/version-control-systems":{"title":"version-control-systems","content":"\nVCSs (version control systems) Are systems to keep track of changes to a set of files\nE.g., [[git]]\n\n## 0.1 Goals\n- allow collaboration\n- track changes\n- restoring previous versions\n- finding out origins of issues\n- backups\n- not restrict workflow\n\n## 0.2 Terms\n[[cheatsheets/git-cheat-sheet]]\n\n## 0.3 Discipline\n- Pull/Push Regularly\n- Use topic/features branches to keep main clean\n- Dont use -f\n\n## 0.4 Types\n### 0.4.1 Centralised VCS\n- Data is stored in one single central location\n- Access is remote\n- Checkout can block other devs\n\n```mermaid\n\tgraph TD\n\tsubgraph Centralised Repo\n\t\tBoris-. commit .-\u003eR((Repository))-- checkout --\u003eBoris\n\t\tR-- checkout --\u003eDoris-. commmit .-\u003eR\n\t\tR-- checkout --\u003eDennis-. commmit .-\u003eR\n\tend\n```\n\n### 0.4.2 Distributed VCS\n\n![](https://i.imgur.com/IVXAaFF.png)\n\n- Data is stored on every access point\n- Good\n\t- more robust -\u003e each dev has a backup\n\t- Don't need internet\n- Bad\n\t- Hard to keep track of \"main\" files\n\n### 0.4.3 Distributed + Centralised\n- Main files are stored on central repo\n- Each user also has their own copy locally\n\n![](https://i.imgur.com/BxC8Tiq.png)\n\n## 0.5 Sensitive information\n- Passwords and other credentials among other things\n- Data should be stored as encrypted blobs\n\t- [BlackBox](https://github.com/StackExchange/blackbox)\n\n## 0.6 Forking\n- Cloning into a new remote repo in your account\n- Allows community to contribute to projects without giving them write access to the original repo\n- Process\n\t- Create a fork of a project\n\t- Make Changes\n\t- Pull request to merge fork back into project\n\t- Admins of project can acccept modify or reject pull request\n\t\n## 0.7 software dev needs file wrangling\nmany copies of a project's source code files needed:\n\n- facilitating different developers private code experiments\n- working on fixing bugs in code\n- developing new features\n- reviewing code changes\n- managing releases of sofware products\n\t- using [[git]]\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/video-prototyping":{"title":"video-prototyping","content":"\n## 1 benefits\n- cheap and fast\n- great communication\n- can serve as spec for devs\n- ties interface design to tasks\n\n## 2 fidelity\nlow-fi 2-5min brainstorm\nmid-fi 1-4 paper prtotypes video\nhi-fi slick +fancy for investors/management\n\n## 3 shows\n- like a storyboard, the whole tasks\n\t- motivvationa and success\n- draw on tasks you've observed\n- illustrate importand tasks\n- help scope minimum viable poduct\n- forces you to make design decisions in a new way\n\n## 4 steps\n- outline (maybe use storyboards)\n- fin to extemporize\n- equiment\n\t- a camera (not fancy needed)\n\t- people\n\t- realistic location\n- focus on the message more than production values\n\n## 5 considerations\n- silent(with title cards) or with audio\n\t- audio can be finicky\n- interface can be anything\n\t- mockups, paper prototypes, code\n- can show success and failure of interfaces an failure\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/virtual-machines":{"title":"virtual-machines","content":"\nlink: https://www.youtube.com/watch?v=wX75Z-4MEoM\n\n\n# What is a virtual Machine\nA computer inside a computer. A computer contains hardware, cpu, ram , storage, etc. To use it we must install an OS. You think that to use another OS, you need another computer. But you can actually but this \"computer\" inside your existing computer.  This is done using a hyper visor\n\n# What is a Hypervisor\nThis is a fancy word for an application you install. A good one to use is called virtualbox. The job of the hypervisor is to control computers inside you computers. These virtual computers \"think\" they are real computers.\n\n## Type 1\nInstalled on the hardware. e.g., VMware. Can be installed on any computer. Typically used in companies on large servers. \n\n## Type 2\nInstalled on a \"host OS\". Vitual machines use \"guest\" OSs.\n\n# Why would you want a hyper visor\n- safe and secure for learning hacking\n- to learn different operating systems\n- to try breaking stuff\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/visual-design":{"title":"visual-design","content":"\ncombine text and graphics. how to represent?\n\n- whitespace for grouping\n- size contrasts for heiarchy\n- variable scale and weight\n- colors\n\n\nthree goals\n- guide\n- pace\n- message\n\nThree tools\n- [typography](notes/typography.md)\n- [layout](notes/layout.md)\n- [color](notes/color.md)\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/visual-design-video":{"title":"visual-design-video","content":"\nwhitespace conveys grouping\n\nsize contrasts indicate heirarchy\n\ntry to make informatio that matters conme through clearly\n\n- guide - convery structure, relative importanct relatiosnhps\n- pace - draw people in, help orient, provide hooks to dive deep\n- mesage - express meaning and style, breathe life into the content.\n\nThree basic tools\n- typography\n- layout\n- colour\n\n\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/voltaire":{"title":"voltaire","content":"\n# Superstition\n[040-superstition](notes/040-superstition.md)\n\nRejected Religion of his time. Believed in cosmological god. \n\n\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/web":{"title":"web","content":"\n# HTML\n[html](notes/html.md)\n# CSS\n[css](notes/css.md)\n# JavaScipt\n[javascript](notes/javascript)\n\n# Back End\n[backend](notes/backend)","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/what-are-uml-diagrams":{"title":"what-are-uml-diagrams","content":"\nA standard set of constructs and notation defined by the object management group for creating [models](notes/models.md)\n\n**specify what not how**\n\n- activity diagrams\n\t- high level for business prcesses workflows\n\t- low level for dtailed business logicP\n- advantages\n\t-  describe workflows\n\t- specify relative processing rder of activites\n\t- simple\n\t- can be shown to stakeholders for checking and confirmation\n\nenables implementation-independent specification of:\n- user/system interactions\n- partitioning of responsibility\n- integration with larger or existing systems\n- data flow and dependency\n- order of operations (algorithms and processes)\n- concurrent operations\n\n## 1 why is is useful\n- helps develop efficient effective correct designs\n- better communication with project stakeholders\n- gives a big picture view of the project system\n- independent of specific programming languages or development processes\n- de facto standard for modelling OO systems\n\n## 2 what it is not\n- visual modelling software\n- a programming languages\n- a software development process, method, or methodology\n\n## 3 Types of diagram\n### 3.1 structural\n\n![](https://i.imgur.com/zS15EFj.png#invert)\n\n### 3.2 behavioural\n\n![](https://i.imgur.com/4lj2QIt.png#invert)\n\n### 3.3 Linked diagrams\neach digram type models a dfiferenct aspect of the system\nmany of the diagrams link to each other\n- e.g., use case, sequence, activity\n- e.g., object, communication\n\ne.g.,\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/wizard-of-oz":{"title":"wizard-of-oz","content":"\n\nmaking interactive app quickly with minimal code\n\nsimulate interactive behaviour with human operators\n\n- make interactive app without much code\n\t- front end interface\n\t- remote wizard controls user interface\n\t- makes sense with is faster/cheaper/easier than making the real thing\n- get feedback from users people\n\t- hi-fi users think its more real\n\t- low-fi: more license to suggest changes\n\n## 1 making wizard protoypes\n- find scenarios to protoypes\n- create UI skeleton\n- develop hooks for wizard input\n- decide where and how the wizard will provide input\n\t- remember not to fake stuff that it not feasible in real life\n- rehearse wizard rile with colleague\n\n## 2 running wizard protoypes\n- practivce with friend\n- recruit users\n\n- two roles:\n\t- facilitator ⇒ pprovides tasks and takes notes\n\t- wizard ⇒ operaties interface\n\n- user feedback\n\t- think aloud\n\t- retrospective\n\t- heuristic evaluation\n\n- debrief users\n\n\n## 3 used throughout development\nuser can do less and less and the prototyp comes closer to realisation\n\n## 4 advatages\n- fast\n- variable\n- more real than papar prototypes\n- finds bugs and pronlems with design\n- places user at center\n- can envision challenging to built application\n- ability to look foward and \"use\" tech that isn't created yet\n\n\n## 5 Disadvatages\n- simulations may misrepresent otherwire imperfect tech\n- mya simulate techs that not not exist (and mnay never)\n- require training and can be inconsistent\n- playing the wizard can be exhausting\n- some features are difficult to simulate\n- may not be appropriate\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/world-planning":{"title":"world-planning","content":"\n- anthropocene\n- capitalocene\n- solarpunk\n- eco-modernism\n- degrowth\n- eco-socialism\n- library economy\n- eco anarchism\n- post civilization\n- indigenous sovereignty\n- permablitzing\n\t- permaculture\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/zkCrowd-A-Hybrid-Blockchain-Based-Crowdsourcing-Platform":{"title":"zkCrowd — A Hybrid Blockchain-Based Crowdsourcing Platform","content":"\n# Summary\n\n# Extracts\n\n# Related\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/notes/zuck":{"title":"zuck","content":"\na friend of yours had a reaction to something so you might be interested in it too.\n\ntry to mute angry reactions\n\n\nalgorithms appeal to human nature - amplify things you are interested in - people are interested in things that upset them - it this too impactful - should we make it so there is no algorithm - just let people share what they share and find what they find and just let stuff exist.\n\n- started this way when there was not technoology to rank stuff\n- when you dont rank stuff the system gets \"gamed\" in other ways\n\t- e.g., most recent at the top\n\t- makes people post a lot\n\t- miss obviously really important stuff\n\t\t- e.g., sibilings getting married etc\n\t\t\t- this would get lots of reactions so this would be ranked higher\n\ncould just limit number of posts\n- rank based on quality of posts etc\n\n\n\nability to control the flow of information\n- company run by human beings that have the ability to to decide what is shown and supressed.\n- this concerns a lot of people\n\n\"empowering people to express themselves\"\n\n- facebook\n\t- not imprint their opion - empower people to share \n\t- bring world closer together\n\t- huge responsibility\n\t- choose what gets aplified - what gets supressed\n\t- help peopple discover what they want\n\t- value that people can believe different things - good to let them express that\n\t- knowledge of people utilising facebook for fake pages to promote political agendas\n\t- coordinated inauthentic behaviour\n\t\t- team of people to find and remove these\n\t\t- \"arms race\" 1:40:10\n\t- \"defend integrity of the community\" 1:40:30\n\t- sometimes they get it wrong\n\t- \"do you want more false positive or more false negative\" 1:42:01 which do you value more\n\t- \"not black and white\" \n\t- temporary waiting period white visibility is supressed white the story if fact checked.","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null},"/shirt-ideas":{"title":"","content":"Skaters just want to be held\n\nNOMFP\n\n","lastmodified":"2022-12-19T01:23:07.379075064Z","tags":null}}