<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cheatsheets on</title><link>https://jethughes.github.io/notes/cheatsheets/</link><description>Recent content in Cheatsheets on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jethughes.github.io/notes/cheatsheets/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://jethughes.github.io/notes/cheatsheets/bash-tricks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/cheatsheets/bash-tricks/</guid><description>#cheatsheet
**Busy waiting
1 2 3 while sleep 0.5; do //do something done</description></item><item><title>git-cheat-sheet</title><link>https://jethughes.github.io/notes/cheatsheets/git-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/cheatsheets/git-cheat-sheet/</guid><description>1 Commands Clone -&amp;gt; create local copy of remote repo Commit -&amp;gt; save changes to local repo Packages logically related collection of changes and save the permanently is repos history Each commit should address single well defined task Commits should be small and regular Should contain a brief, informative, message one line -&amp;gt; &amp;lt;50 (commit needing more than this are likely too large) multi line -&amp;gt; &amp;lt;72 well defined, shared terminology consider what other devs need to know Stash -&amp;gt; temporarily store uncommited changes Push -&amp;gt; Upload changes from local repo to remote Pull -&amp;gt; Download and merge changes from remote repo into local repo (fetch + merge) Merge -&amp;gt; Merge changes from one brach into another merge when: pulling changes from remote into your repo merging from branch into main codebase Can merge any branch into any other branch good idea to regularly rebase specialised persistent branches to keep them in sync with the more general main codebase rebase topic branches before merging into main helps to deal with merge conflicts only branch is broken if you mess up can test for breakage before merging to main Merging is usually automatic sometimes merge algorithm can&amp;rsquo;t resolve conflicting changes to the same code e.</description></item><item><title>latex-cheat-sheet</title><link>https://jethughes.github.io/notes/cheatsheets/latex-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/cheatsheets/latex-cheat-sheet/</guid><description>https://wch.github.io/latexsheet/latexsheet-0.png https://wch.github.io/latexsheet/latexsheet-1.png
$\theta$
$\leq \geq$</description></item><item><title>puml-cheat-sheet</title><link>https://jethughes.github.io/notes/cheatsheets/puml-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/cheatsheets/puml-cheat-sheet/</guid><description> activity diagram docs use case diagram docs</description></item></channel></rss>