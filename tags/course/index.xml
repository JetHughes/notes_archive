<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>course on</title><link>https://jethughes.github.io/notes/tags/course/</link><description>Recent content in course on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jethughes.github.io/notes/tags/course/index.xml" rel="self" type="application/rss+xml"/><item><title>comp-210</title><link>https://jethughes.github.io/notes/notes/comp-210/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/comp-210/</guid><description>Assignments No final exam
assignment 1 assingment 3 myepichacking anatomyofahack Notes information-security mccumber-cube access-security-tradeoff cia-triad cryptography randomness authorisation authentication passwords Lectures 01-information-assurance 02-concepts-and-roles 03-threats-social-engineering-and-failures 04-authentication-authorisation-passwords 05-cryptography 06-hashing-binary-public-key-cryptography 07-cryptography-applications 8-application-security-1 12-pen-testing 13-pen-testing-2 15-policies-standards-practices 16-cloud-security 17-ML-in-IA-1 18-ML-in-IA-2 19-deepfakes 20-SE-in-IA 21-SE-in-IA-2 22-digital-preservation</description></item><item><title>cosc-201</title><link>https://jethughes.github.io/notes/notes/cosc-201/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc-201/</guid><description>Assignments [[notes/assignment-02]] Analysis aymptotic-notation induction analysis-of-recursive-algorithms Paradigms divide-and-conquer unite-and-conquer dynamic-programming memoization Data Structues union-find priority-queue dynamic-linear-datatype Stack Queue heap treap hash-map linear-probing set tree binary-search-tree balancing-binary-search-trees red-black-tree avl-tree bst-operations tree-traversal graphs Algorithms mergesort heapsort [ quicksort] Lectures 07-mergesort-1 08-mergesort-2 09-stacks-queues-heaps 10-heaps-and-heapsort 11-sets-maps-trees 12-binary-search-tree-operations 13-bst-traversals-and-balance 14-balancing-bsts 15-dynamic-programming 16-hasing-maps-sets 17-collision-resolution-probing 18-hash-examples 19-graphs 20-graphs-2 Archive 16-c201-archive</description></item><item><title>cosc-202</title><link>https://jethughes.github.io/notes/notes/cosc-202/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc-202/</guid><description>Assignment reflective-statement-plan reflective-statement Outline consoles-terminals-shells git ethics-in-cs integrated-development-environments branch testing test-driven-development unit-testing debugging imperative programming documentation continuous-integration automation software library application-programming-interface containers linker loaders operating-system software-licensing [ security] Lectures 07-testing 08-debugging 09-documentation 10-continuous-integration-1 11-continuous-integration-2 12-automation 13-code-librarires 14-apis 15-containers 16-compilers 17-linkers-and-loaders 18-build-tools 19-security 20-software-licensing 22-open-source-software</description></item><item><title>cosc-203</title><link>https://jethughes.github.io/notes/notes/cosc-203/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc-203/</guid><description>page labs html validator Assignments front end project back end project ethics essay Labs cosc203-lab16 cosc203-lab17 cosc203-lab18 cosc203-lab19 cosc203-lab20 cosc203-lab24 cosc203-lab25 Notes dns</description></item><item><title>cosc-204</title><link>https://jethughes.github.io/notes/notes/cosc-204/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc-204/</guid><description>page
Notes characters digital-data memory boolean-equations combinatorial-logic logic-gates transistors demultiplexor sequential-circuits bus control-unit CPU ALU computer-architecture 6809-addressing-modes 6809 Lectures 01-bits-and-bytes 02-combinatorial-logic 03-sequential-logic-circuits 04-computer-architecture 05-6809-assembly 06-6809-programming 07-6809-advanced 08-intro-to-c 09-intro-to-c-2 10-intro-to-c-arrays-malloc-free 11-struct-and-union 12-pointers-to-routines 13-OS-intro 14-processes-and-system-calls 15-file-systems 16-device-drivers 17-processes-communication 18-processes-sharing-and-threads 19-cpu-scheduling 20-sync-deadlock 21-memory-management 22-virtual-memory 23-IO-systems 24-protection-of-file-systems Info By completion of this paper students are expected to: - Understand how programs are executed on computer hardware - Demonstrate an ability to read and write assembly language programs - Understand the fundamental principles and structure of an operating system - Be able to construct programs in C and understand its role as a systems programming language - Understand core operating systems algorithms such as process scheduling and resource allocation and management - Be aware of the importance of efficient use of resources from computational, economic, and environmental viewpoints</description></item><item><title>cosc-301</title><link>https://jethughes.github.io/notes/notes/cosc-301/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc-301/</guid><description>https://www.cs.otago.ac.nz/cosc301/schedule.php
Assignments [[01-vm-ipv6]]
Labs [[01-VM-intro]] [[02-basic-interface-management]] [[03-ipv6-bootcamp]] [[04-scripting]] [[05-filesystems]] [[06-installation]] Notes readings http://www.schneier.com/blog/archives/2007/01/ http://www.schneier.com/blog/archives/2006/12/realworld_passw.html https://www.</description></item><item><title>cosc-326</title><link>https://jethughes.github.io/notes/notes/cosc-326/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc-326/</guid><description>Assignments Etudes [[01-dates]] [[02-]] [[03-snowflake]] Notes [[townhall-04]] Info</description></item><item><title>cosc-342</title><link>https://jethughes.github.io/notes/notes/cosc-342/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/cosc-342/</guid><description>Assignments [[342-assignment-01]] Labs [[01a-getting-started]] [[01b-cpp-essentials]] [[02-image-transforms]] Notes Lectures [[01-intro-to-342]] [[02-colour-representation]] [[03-2d-transforms]] [[04-mosaicing]] [[05-feature-description-and-matching]] [[06-homographies]] [[08-visual-tracking-and-matching]] [[09-3d-geometry]] [[10-3d-Cameras]] Info</description></item><item><title>info-201</title><link>https://jethughes.github.io/notes/notes/info-201/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/info-201/</guid><description> coursework tiddlywiki assignments tiddlywiki Outline version control system stakeholders business-analyst developer models systems-development-life-cycle agile-development scrum predictive-adaptive-spectrum domain-driven-design behaviour-driven-development requirements requirements-document requirements-guidelines requirements-engineering requirements-elicitation approaches-to-systems-development business-functions business-process business-process-model business-process-model-and-notation unified-modelling-language sequence-diagrams use-case-diagrams what-are-uml-diagrams use-case-diagrams entity-relationship-diagrams class-diagrams modelling behaviour conceptual-vs-ipmlementation-models redundancy-and-anomalies dependencies normalisation round-trip-engineering uml-java-forward-engineering data-access data-access-object java-database-connectibity SQL Lectures 02-version-control-system 04-requirements 06-business-functions-and-use-cases 07-business-process-modelling 08-business-patterns 09-data-modelling-and-normalisation 10-oop-concepts-and-uml 11-class-diagrams 12-modelling-behaviour 13-UML-sequence-diagrams 15-from-models-to-code-and-back 16-reverse engineering 17-data-access 18-advanced-sql-1 19-advanced-sql-2 20-data-integrity 21-software-architecture-and-templates</description></item><item><title>info-203</title><link>https://jethughes.github.io/notes/notes/info-203/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/info-203/</guid><description>links: _index
mobile-app-ass-03 Assignments Mobile App pdf idea brainstorming personas-final mood-board Outline big-picture birth-of-hci user-experience usbability prototyping evaluating-designs Design Heuristics help-and-documentation error-prevention flexibility-and-efficiency aesthetic-and-minimalist-design consistency-and-standards recognition-over-recall user-freedom-and-control familiar-metaphors-and-language show-system-status recognise-and-recover-from-errors anti-design-heristics needfinding participant-observation interviewing storyboards personas-and-scenarios mental-models representation-and-distributing-cognition visual-design typography layout closure grouping similarity color reading-and-navigating hci-ethics designing-studies assigning-participants Videos heuristic-evaluation storyboards-mockups-paper-prototypes wizard-of-oz video-prototyping direct-manipulation-video mental-models-video visual-design-video designing-studies-video assigning-participants-video running-in-person-experiments running-web-experiments analyzing-experiments Lectures 04-evaluation-methods-birth-of-hci 07-heuristic-evaluation-cont 08-personas-and-scenarios 09-paper-prototypes-wiz-of-oz-video-prototypes 10-design-heuristics-1 11-design-heuristics-2 12-design-heuristics-3 13-design-heuristics-4 14-direct-manipulation-and-mental-models 15-mental-models-representation-matters-distributing-cognition 16-distributing-cognition-and-visual-design-typography 17-grids-grouping-alignment-reading-and-navigation 18-ethics-in-hci 22-trends-in-hci 24-trends-in-hci-2</description></item><item><title>info-305</title><link>https://jethughes.github.io/notes/notes/info-305/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/info-305/</guid><description>Assignments [[01-states]] Labs [[01]] Notes Lectures [[01-intro-to-305]] [[02-intro-pervasive-and-ubiquitious]] [[03-intro-AR-dev]] [[04-lens-studio]] [[05-pervasive-ubiquitious-2]] [[06-challenges-for-ubicomp-and-intro-to-sensors]] [[07-location-sensors]] [[08-proximity sensors]] [[09-location-sensors-3]] [[10-orientation-sensors]] Info</description></item><item><title>math-202</title><link>https://jethughes.github.io/notes/notes/math-202/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/math-202/</guid><description> site syllabus</description></item></channel></rss>