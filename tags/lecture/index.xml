<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lecture on</title><link>https://jethughes.github.io/notes/tags/lecture/</link><description>Recent content in lecture on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jethughes.github.io/notes/tags/lecture/index.xml" rel="self" type="application/rss+xml"/><item><title>02-version-control-system</title><link>https://jethughes.github.io/notes/notes/02-version-control-system/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/02-version-control-system/</guid><description>git
VCS</description></item><item><title>03-agile-methodologies</title><link>https://jethughes.github.io/notes/notes/03-agile-methodologies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/03-agile-methodologies/</guid><description>guilding philosphy to develop info systems in unkown, rapidly changing evnironments
&amp;ldquo;Chaordic&amp;rdquo;
The agile manifesto
1 scrum Development is split into many short (~30 day) &amp;ldquo;sprints&amp;rdquo; of intense focus where the entire team is involved</description></item><item><title>04-evaluation-methods-birth-of-hci</title><link>https://jethughes.github.io/notes/notes/04-evaluation-methods-birth-of-hci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/04-evaluation-methods-birth-of-hci/</guid><description>evaluating-designs birth-of-hci Possible exam questions
Define User Experience! Difference User Experience - Usability Describe applications where the subject’s satisfaction is of less importance than effectiveness and efficiency Compare the advantages and disadvantages of a laboratory based and a field based evaluation of a user interface?</description></item><item><title>04-requirements</title><link>https://jethughes.github.io/notes/notes/04-requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/04-requirements/</guid><description>requirements</description></item><item><title>06-business-functions-and-use-cases</title><link>https://jethughes.github.io/notes/notes/06-business-functions-and-use-cases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/06-business-functions-and-use-cases/</guid><description>approaches-to-systems-development
What are the two main approaches to systems development and how do they differ object oriented - system is a collection of objects tranditional - system is a collectin of processes business-functions</description></item><item><title>07-business-process-modelling</title><link>https://jethughes.github.io/notes/notes/07-business-process-modelling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/07-business-process-modelling/</guid><description> understand core onepts realted to business process mondelling learn about commonly used business process modelling notations understand the elemeents of a UML activity diagram What is a business process business-process business-process-model business-process-model-and-notation unified-modelling-language</description></item><item><title>07-heuristic-evaluation-cont</title><link>https://jethughes.github.io/notes/notes/07-heuristic-evaluation-cont/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/07-heuristic-evaluation-cont/</guid><description>heuristic-evaluation</description></item><item><title>07-mergesort-1</title><link>https://jethughes.github.io/notes/notes/07-mergesort-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/07-mergesort-1/</guid><description>mergesort
quicksort
divide-and-conquer</description></item><item><title>07-testing</title><link>https://jethughes.github.io/notes/notes/07-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/07-testing/</guid><description>testing
test-driven-development
unit-testing
understand that testing is useful for detecting bugs</description></item><item><title>08-business-patterns</title><link>https://jethughes.github.io/notes/notes/08-business-patterns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/08-business-patterns/</guid><description>entity-relationship-diagrams</description></item><item><title>08-debugging</title><link>https://jethughes.github.io/notes/notes/08-debugging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/08-debugging/</guid><description>debugging</description></item><item><title>08-mergesort-2</title><link>https://jethughes.github.io/notes/notes/08-mergesort-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/08-mergesort-2/</guid><description>mergesort</description></item><item><title>08-personas-and-scenarios</title><link>https://jethughes.github.io/notes/notes/08-personas-and-scenarios/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/08-personas-and-scenarios/</guid><description> personas-and-scenarios storyboards</description></item><item><title>09-data-modelling-and-normalisation</title><link>https://jethughes.github.io/notes/notes/09-data-modelling-and-normalisation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/09-data-modelling-and-normalisation/</guid><description>redundancy-and-anomalies dependencies wia functional dependecy::when some attribute has exactly one associated other attribute wia transitive dependency:: A→B, B→C Transitive dependency wia partial dependency:: when a subset of the left determines the rightwia multivalued dependency::when something has a set of associated values of another attribute</description></item><item><title>09-documentation</title><link>https://jethughes.github.io/notes/notes/09-documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/09-documentation/</guid><description>documentation</description></item><item><title>09-paper-prototypes-wiz-of-oz-video-prototypes</title><link>https://jethughes.github.io/notes/notes/09-paper-prototypes-wiz-of-oz-video-prototypes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/09-paper-prototypes-wiz-of-oz-video-prototypes/</guid><description>wizard-of-oz video-prototyping storyboards-mockups-paper-prototypes Paper protoypes brainstorming. e.g., refinement of design and communicating ideas. e.</description></item><item><title>09-stacks-queues-heaps</title><link>https://jethughes.github.io/notes/notes/09-stacks-queues-heaps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/09-stacks-queues-heaps/</guid><description> dynamic-linear-datatype Stack Queue priority-queue heap</description></item><item><title>10-continuous-integration-1</title><link>https://jethughes.github.io/notes/notes/10-continuous-integration-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/10-continuous-integration-1/</guid><description> continuous-integration
explain the term continuous integration describe different purposes for CI indicate how CI jobs are usually triggered understand implications of CI running asynchronously Exlplain how to manage output from CI jobs describe role of stages and jobs within gitlab pipelines indicate how CI specifications are stored</description></item><item><title>10-design-heuristics-1</title><link>https://jethughes.github.io/notes/notes/10-design-heuristics-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/10-design-heuristics-1/</guid><description>1 Wizard of OZ wizard-of-oz simulating machine behavior with human operators
2 Video prototyping video-prototyping
3 Creating and comparing alternatives create multiple ideas in parallel rather than one after the other</description></item><item><title>10-heaps-and-heapsort</title><link>https://jethughes.github.io/notes/notes/10-heaps-and-heapsort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/10-heaps-and-heapsort/</guid><description>heapsort
1 Overview [[notes/heap]]
2 Operations 2.1 Add element Assumptions
access first vacant position set (or find) the value $H.</description></item><item><title>10-oop-concepts-and-uml</title><link>https://jethughes.github.io/notes/notes/10-oop-concepts-and-uml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/10-oop-concepts-and-uml/</guid><description> what is the concept of encapsulation and how is it enforced for objects how does and object refernce differ from a relational foreign key give an example of how difference UML diagram types can be linked when modelling a system object unified-modelling-language</description></item><item><title>11-class-diagrams</title><link>https://jethughes.github.io/notes/notes/11-class-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/11-class-diagrams/</guid><description>class-diagrams</description></item><item><title>11-continuous-integration-2</title><link>https://jethughes.github.io/notes/notes/11-continuous-integration-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/11-continuous-integration-2/</guid><description>Appreciate that GitLab is a complex software Understand where CI jobs scripts get run explain why repository servers can host websites Understand how gitblab dternmimines awhen a CI script failed Describe a way in which CI scripts scan handle secrets Outline uses of local git hook scripts continuous integration</description></item><item><title>11-design-heuristics-2</title><link>https://jethughes.github.io/notes/notes/11-design-heuristics-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/11-design-heuristics-2/</guid><description> Show System Status Familiar Metaphors And Language User Freedom And Control</description></item><item><title>11-sets-maps-trees</title><link>https://jethughes.github.io/notes/notes/11-sets-maps-trees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/11-sets-maps-trees/</guid><description>A set is :: a collection of elements with no repetition allowed A hash-map is :: a set of key value pairs A tree is :: a general concept of a way of organising data.</description></item><item><title>12-automation</title><link>https://jethughes.github.io/notes/notes/12-automation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/12-automation/</guid><description>links: cosc-202-lectures, slides
automation
Garbage notes The use of automatic equipment in a production process. We desire to remove repetive work within software development</description></item><item><title>12-binary-search-tree-operations</title><link>https://jethughes.github.io/notes/notes/12-binary-search-tree-operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/12-binary-search-tree-operations/</guid><description>Recall binary-search-tree
binary search tree operations</description></item><item><title>12-design-heuristics-3</title><link>https://jethughes.github.io/notes/notes/12-design-heuristics-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/12-design-heuristics-3/</guid><description> Consistency And Standards Error Prevention Recognition Over Recall flexibility-and-efficiency Aesthetic and Minimalist Design</description></item><item><title>12-modelling-behaviour</title><link>https://jethughes.github.io/notes/notes/12-modelling-behaviour/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/12-modelling-behaviour/</guid><description>slides
modelling-behaviour
method signatures inheritance of behaviour lower level sequencing and flow of control compartmentalisation into &amp;ldquo;subsystems&amp;rdquo; Compare and contrast the two typical approaches to inheriting behaviour in OO systems.</description></item><item><title>13-bst-traversals-and-balance</title><link>https://jethughes.github.io/notes/notes/13-bst-traversals-and-balance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/13-bst-traversals-and-balance/</guid><description>tree-traversal balancing-binary-search-trees</description></item><item><title>13-code-librarires</title><link>https://jethughes.github.io/notes/notes/13-code-librarires/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/13-code-librarires/</guid><description> software library
Explain what a software library is Describe reasons for/against using libraries Understand transitive dependencies in libraries Appreciate your obligations from using libraries Outline considerations when writing libraries Highlight features of the Java standard libraries</description></item><item><title>13-design-heuristics-4</title><link>https://jethughes.github.io/notes/notes/13-design-heuristics-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/13-design-heuristics-4/</guid><description>aesthetic-and-minimalist-design help-and-documentation recognise-and-recover-from-errors anti-design-heristics dark-patterns</description></item><item><title>13-UML-sequence-diagrams</title><link>https://jethughes.github.io/notes/notes/13-UML-sequence-diagrams/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/13-UML-sequence-diagrams/</guid><description>sequence-diagrams</description></item><item><title>14-apis</title><link>https://jethughes.github.io/notes/notes/14-apis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/14-apis/</guid><description>purpose of apis apis vs code libraries why web technologies assist API development REST apis in cloud mircoservices building APIs maintenance of APIs application-programming-interface</description></item><item><title>14-balancing-bsts</title><link>https://jethughes.github.io/notes/notes/14-balancing-bsts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/14-balancing-bsts/</guid><description> balancing-binary-search-trees
avl-tree red-black-tree treap</description></item><item><title>14-direct-manipulation-and-mental-models</title><link>https://jethughes.github.io/notes/notes/14-direct-manipulation-and-mental-models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/14-direct-manipulation-and-mental-models/</guid><description>Command line vs UI table
Object action models object action model: user selects an object then selects the action to perform on the objct</description></item><item><title>15-containers</title><link>https://jethughes.github.io/notes/notes/15-containers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/15-containers/</guid><description>containers
Describe what software containers are basically lightweight virtual machines Explain why containers are useful Encapsulate a computing environment Outline the role of container registries Store and share images E.</description></item><item><title>15-from-models-to-code-and-back</title><link>https://jethughes.github.io/notes/notes/15-from-models-to-code-and-back/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/15-from-models-to-code-and-back/</guid><description> UML to Java Foward Engineering round-trip-engineering</description></item><item><title>15-mental-models-representation-matters-distributing-cognition</title><link>https://jethughes.github.io/notes/notes/15-mental-models-representation-matters-distributing-cognition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/15-mental-models-representation-matters-distributing-cognition/</guid><description>doors are simple. But they are still done wrong very often. Incorrect labelling can give the user a wrong mental model - widening the &amp;ldquo;gulf of execution&amp;rdquo;.</description></item><item><title>16-compilers</title><link>https://jethughes.github.io/notes/notes/16-compilers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/16-compilers/</guid><description>describe what it is and what is does
compilers vs interpreters
compile stages
why java is atypical of compiled languages</description></item><item><title>16-distributing-cognition-and-visual-design-typography</title><link>https://jethughes.github.io/notes/notes/16-distributing-cognition-and-visual-design-typography/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/16-distributing-cognition-and-visual-design-typography/</guid><description> representation-and-distributing-cognition typography visual-design</description></item><item><title>16-hasing-maps-sets</title><link>https://jethughes.github.io/notes/notes/16-hasing-maps-sets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/16-hasing-maps-sets/</guid><description>Hash functions Collisions Chaining open addressing basic implementation</description></item><item><title>16-reverse engineering</title><link>https://jethughes.github.io/notes/notes/16-reverse-engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/16-reverse-engineering/</guid><description>uml-java-reverse-engineering</description></item><item><title>17-collision-resolution-probing</title><link>https://jethughes.github.io/notes/notes/17-collision-resolution-probing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/17-collision-resolution-probing/</guid><description>linear-probing</description></item><item><title>17-data-access</title><link>https://jethughes.github.io/notes/notes/17-data-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/17-data-access/</guid><description> data-access
file-based-storage database-based-storage data-access-object java-database-connectibity</description></item><item><title>17-dynamic-programming</title><link>https://jethughes.github.io/notes/notes/15-dynamic-programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/15-dynamic-programming/</guid><description/></item><item><title>17-grids-grouping-alignment-reading-and-navigation</title><link>https://jethughes.github.io/notes/notes/17-grids-grouping-alignment-reading-and-navigation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/17-grids-grouping-alignment-reading-and-navigation/</guid><description> layout closure grouping similarity color reading-and-navigating</description></item><item><title>17-linkers-and-loaders</title><link>https://jethughes.github.io/notes/notes/17-linkers-and-loaders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/17-linkers-and-loaders/</guid><description>Appreciate kernel / userspace distinction
Sketch what OS loaders need to achieve
Contrast running Java versus C code</description></item><item><title>18-advanced-SQL</title><link>https://jethughes.github.io/notes/notes/18-advanced-sql-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/18-advanced-sql-1/</guid><description>varchar usually bigger than you think
CRUD insert adds a row select retrieves rows from the table ouput can be &amp;ldquo;saved&amp;rdquo; as a view changes to the underlying table also chagnes the view update modifies rows delete removes rows test as a select statement first SQL DAO programming We want to miniminse load on sql as connecting to database is expensive.</description></item><item><title>18-build-tools</title><link>https://jethughes.github.io/notes/notes/18-build-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/18-build-tools/</guid><description>understnad the purpose of build tools sketch how make&amp;rsquo;s rules (re)build software explain why ant better suits java projects sketch how maven seeks to improve on ant appreciated that there are many build tools build-tools</description></item><item><title>18-ethics-in-hci</title><link>https://jethughes.github.io/notes/notes/18-ethics-in-hci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/18-ethics-in-hci/</guid><description>hci-ethics</description></item><item><title>18-hash-examples</title><link>https://jethughes.github.io/notes/notes/18-hash-examples/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/18-hash-examples/</guid><description/></item><item><title>19-advanced-sql-2</title><link>https://jethughes.github.io/notes/notes/19-advanced-sql-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/19-advanced-sql-2/</guid><description>CASE basically a switch statement
derived valye where calcyulation isnt simple standardising values e.g., booleans: t/f, y/n, 0/1 flipping between row and col orientation (privoting) all students vs all on one students papers Set operators relations are sets of tuples ⇒ we can use set operators</description></item><item><title>19-graphs</title><link>https://jethughes.github.io/notes/notes/19-graphs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/19-graphs/</guid><description>graphs</description></item><item><title>19-security</title><link>https://jethughes.github.io/notes/notes/19-security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/19-security/</guid><description>why cybersecurity is a growing concern sketch confidentiality, integrity, and avalability security appreciate that dependencies cause security risks explain risks from non-validation of user input outline how injection attack works security</description></item><item><title>20-database-3</title><link>https://jethughes.github.io/notes/notes/20-database-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/20-database-3/</guid><description>Data Integrity GIGO
Types of error
ennecessary duplication of data missing information (expecially nulls) referential integrity problems: broken links, &amp;ldquo;orhpan&amp;rdquo; records (foreign keys) data entry errors: typos/keying errors, value in wrong field invalid/nonsensical data, e.</description></item><item><title>20-graphs-2</title><link>https://jethughes.github.io/notes/notes/20-graphs-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/20-graphs-2/</guid><description>Graph drawing is its own problem.
One easy way is to draw the vertices is clockwise order and draw edges between them</description></item><item><title>20-software-licensing</title><link>https://jethughes.github.io/notes/notes/20-software-licensing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/20-software-licensing/</guid><description>pdf
what does it mean for people to use your software. What responsitilities do you have
Understand the default protection of code Contrast ‘libre’ free and ‘gratis’ free Define what makes open source software Contrast copyleft and more permissive licences Appreciate that code can be multi-licensed Understand how to apply a license to code Appreciate licenses can be mutually incompatible software-licensing</description></item><item><title>21-software-architecture-and-templates</title><link>https://jethughes.github.io/notes/notes/21-software-architecture-and-templates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/21-software-architecture-and-templates/</guid><description>software-architectures
system-templates</description></item><item><title>22-trends-in-hci</title><link>https://jethughes.github.io/notes/notes/22-trends-in-hci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/22-trends-in-hci/</guid><description>[slides]( https://blackboard.otago.ac.nz/bbcswebdav/pid-2827522-dt-content-rid-18612267_1/courses/INFO203_S1DNIE_2022/2022/INFO203_Lecture23.pdf how the the methodology of HCI used.)
Theory vs practice. There is a lot of work being done t improve the methodology</description></item><item><title>24-trends-in-hci-2</title><link>https://jethughes.github.io/notes/notes/24-trends-in-hci-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/24-trends-in-hci-2/</guid><description>Dark patterns Designing for elderlies the familiarity of local church in full size was good.
Digital fabrication 3d printing, interfaces which allow you to 3d print etc.</description></item><item><title>analyzing-experiments</title><link>https://jethughes.github.io/notes/notes/analyzing-experiments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/analyzing-experiments/</guid><description>3 questions what does my data look like graphs, plots, differnent summary plots what are the overall numbers aggregate stats e.</description></item><item><title>assigning-participants-video</title><link>https://jethughes.github.io/notes/notes/assigning-participants-video/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/assigning-participants-video/</guid><description>assigning-participants</description></item><item><title>designing-studies-video</title><link>https://jethughes.github.io/notes/notes/designing-studies-video/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/designing-studies-video/</guid><description>designing-studies</description></item><item><title>running-in-person-experiments</title><link>https://jethughes.github.io/notes/notes/running-in-person-experiments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/running-in-person-experiments/</guid><description>in person
planning execution analyzing higher &amp;ldquo;bandwitdh&amp;rdquo; of engagement
Make clear goals scope purpose what you hope to learn hypothesis make a prediction schedule and location use an approprate and relevant location participants scenarios Plan out steps questions data to be collected set up roles e.</description></item><item><title>running-web-experiments</title><link>https://jethughes.github.io/notes/notes/running-web-experiments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/running-web-experiments/</guid><description>randomly split traffic to website between two versions.
then collection metrics about each version
web makes it easier to try out something new, and test if it is effective.</description></item></channel></rss>