<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>datastructure on</title><link>https://jethughes.github.io/notes/tags/datastructure/</link><description>Recent content in datastructure on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jethughes.github.io/notes/tags/datastructure/index.xml" rel="self" type="application/rss+xml"/><item><title>avl-tree</title><link>https://jethughes.github.io/notes/notes/avl-tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/avl-tree/</guid><description>AVL tree most basic and obvious.
each node contains some extra information: the difference between the height of its right and left subtee.</description></item><item><title>binary-search-tree</title><link>https://jethughes.github.io/notes/notes/binary-search-tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/binary-search-tree/</guid><description>code
bst-operations
a collection of nodes with one distinguished node called the root
rules:
the node data contains a key which comes from some ordered type e.</description></item><item><title>dynamic-linear-datatype</title><link>https://jethughes.github.io/notes/notes/dynamic-linear-datatype/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/dynamic-linear-datatype/</guid><description>Both are Dynamic linear data types (interface)
An abstraction of a collection of data organised &amp;ldquo;in a line&amp;rdquo; which supprts addition of new elements and the removal of (some) old elements</description></item><item><title>graphs</title><link>https://jethughes.github.io/notes/notes/graphs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/graphs/</guid><description>Represents a set of things with relationships between them.
a set of vertices some edges between them edges on some graphs have weights edges on some graphs are directed Some graphs are named e.</description></item><item><title>hash-map</title><link>https://jethughes.github.io/notes/notes/hash-map/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/hash-map/</guid><description>In compsci a map is a comprised of a set of keys and values. (&amp;lt;K, V&amp;gt;). For example &amp;lt;String, Integer&amp;gt;</description></item><item><title>heap</title><link>https://jethughes.github.io/notes/notes/heap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/heap/</guid><description>A tree where:
every elements should be greater than ites children the structure should be filled from top to bottom and left to right To remove an element</description></item><item><title>priority-queue</title><link>https://jethughes.github.io/notes/notes/priority-queue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/priority-queue/</guid><description>A dynamic linear data type that supports addition and removal on entrie each entry hase a value and a priority (key) removal returns the item with the greatest priority Implementation stores items and priorities in an array.</description></item><item><title>red-black-tree</title><link>https://jethughes.github.io/notes/notes/red-black-tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/red-black-tree/</guid><description>Red Black trees most used current one. Used in java treemap
each node is either red or black
the rules are:</description></item><item><title>set</title><link>https://jethughes.github.io/notes/notes/set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/set/</guid><description>links: java docs for set interface
A collection of items with no repetition allowed
How do we want to be able to use them?</description></item><item><title>treap</title><link>https://jethughes.github.io/notes/notes/treap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/treap/</guid><description>Treaps Link betwen heaps and trees that uses randomisation
I we are added items to a bst in random order then an unbalanced situation would be possible but highly unlikely.</description></item><item><title>union-find</title><link>https://jethughes.github.io/notes/notes/union-find/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jethughes.github.io/notes/notes/union-find/</guid><description>1 Example We have 12 &amp;lsquo;objects&amp;rsquo; Some pairs have been connected Nodes with a sequence of edges between them form a group e.</description></item></channel></rss>